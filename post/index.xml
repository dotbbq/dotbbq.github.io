<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on UNIXETC</title>
    <link>https://unixetc.com/post/</link>
    <description>UNIXETC (Posts)</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Mon, 02 Mar 2020 00:00:00 +0000</lastBuildDate>
    
    <atom:link href="https://unixetc.com/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>斐讯N1系统信息和UNIXBENCH跑分</title>
      <link>https://unixetc.com/post/phicomm-n1-unixbench-score-and-system-information/</link>
      <pubDate>Mon, 02 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/phicomm-n1-unixbench-score-and-system-information/</guid>
      <description>&lt;h4 id=&#34;系统信息&#34;&gt;系统信息&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;alair@aml:~ $ inxi -F
System:    Host: aml Kernel: 5.5.0-rc6-aml-s9xxx aarch64 bits: 32 Console: tty 0 Distro: Ubuntu 18.04.4 LTS
Machine:   No /sys/class/dmi; using dmidecode: dmidecode is not installed.
CPU:       Quad core ARMv8 rev 4 (v8l) (-MCP-)  (ARM)
           clock speeds: max: 1512 MHz 1: 1512 MHz 2: 1512 MHz 3: 1512 MHz 4: 1512 MHz
Graphics:  Card: Failed to Detect Video Card!
           Display Server: N/A driver: N/A tty size: 254x72 Advanced Data: N/A out of X
Audio:     Card AMLGX driver: AMLGX Sound: ALSA v: k5.5.0-rc6-aml-s9xxx
Network:   Card: Failed to Detect Network Card!
Drives:    HDD Total Size: NA (-)
           ID-1: /dev/mmcblk1 model: N/A size: 7.8GB
Partition: ID-1: / size: 6.3G used: 4.8G (76%) fs: ext4 dev: /dev/mmcblk1p2
           ID-2: /boot size: 244M used: 77M (32%) fs: vfat dev: /dev/mmcblk1p1
           ID-3: /var/log size: 49M used: 2.5M (6%) fs: ext4 dev: /dev/zram0
           ID-4: swap-1 size: 0.91GB used: 0.00GB (0%) fs: swap dev: /dev/zram1
Sensors:   None detected - is lm-sensors installed and configured?
Info:      Processes: 155 Uptime: 2:39 Memory: 306.4/1741.2MB Init: systemd runlevel: 5
           Client: Shell (zsh) inxi: 2.3.56
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;unixbench分数&#34;&gt;Unixbench分数&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;alair@aml:~/unixbench-5.1.2 $ ./Run
make all
make[1]: Entering directory &#39;/home/alair/unixbench-5.1.2&#39;
Checking distribution of files
./pgms  exists
./src  exists
./testdir  exists
./tmp  exists
./results  exists
make[1]: Leaving directory &#39;/home/alair/unixbench-5.1.2&#39;
sh: 1: 3dinfo: not found

   #    #  #    #  #  #    #          #####   ######  #    #   ####   #    #
   #    #  ##   #  #   #  #           #    #  #       ##   #  #    #  #    #
   #    #  # #  #  #    ##            #####   #####   # #  #  #       ######
   #    #  #  # #  #    ##            #    #  #       #  # #  #       #    #
   #    #  #   ##  #   #  #           #    #  #       #   ##  #    #  #    #
    ####   #    #  #  #    #          #####   ######  #    #   ####   #    #

   Version 5.1.2                      Based on the Byte Magazine Unix Benchmark

   Multi-CPU version                  Version 5 revisions by Ian Smith,
                                      Sunnyvale, CA, USA
   December 22, 2007                  johantheghost at yahoo period com

Wide character in print at ./Run line 1510.
Wide character in printf at ./Run line 1541.
Use of uninitialized value in printf at ./Run line 1378.
Use of uninitialized value in printf at ./Run line 1379.
Use of uninitialized value in printf at ./Run line 1378.
Use of uninitialized value in printf at ./Run line 1379.
Use of uninitialized value in printf at ./Run line 1378.
Use of uninitialized value in printf at ./Run line 1379.
Use of uninitialized value in printf at ./Run line 1378.
Use of uninitialized value in printf at ./Run line 1379.
Use of uninitialized value in printf at ./Run line 1588.
Use of uninitialized value in printf at ./Run line 1589.
Use of uninitialized value in printf at ./Run line 1588.
Use of uninitialized value in printf at ./Run line 1589.
Use of uninitialized value in printf at ./Run line 1588.
Use of uninitialized value in printf at ./Run line 1589.
Use of uninitialized value in printf at ./Run line 1588.
Use of uninitialized value in printf at ./Run line 1589.

1 x Dhrystone 2 using register variables  1 2 3 4 5 6 7 8 9 10

1 x Double-Precision Whetstone  1 2 3 4 5 6 7 8 9 10

1 x Execl Throughput  1 2 3

1 x File Copy 1024 bufsize 2000 maxblocks  1 2 3

1 x File Copy 256 bufsize 500 maxblocks  1 2 3

1 x File Copy 4096 bufsize 8000 maxblocks  1 2 3

1 x Pipe Throughput  1 2 3 4 5 6 7 8 9 10

1 x Pipe-based Context Switching  1 2 3 4 5 6 7 8 9 10

1 x Process Creation  1 2 3

1 x System Call Overhead  1 2 3 4 5 6 7 8 9 10

1 x Shell Scripts (1 concurrent)  1 2 3

1 x Shell Scripts (8 concurrent)  1 2 3
Wide character in printf at ./Run line 1483.

4 x Dhrystone 2 using register variables  1 2 3 4 5 6 7 8 9 10

4 x Double-Precision Whetstone  1 2 3 4 5 6 7 8 9 10

4 x Execl Throughput  1 2 3

4 x File Copy 1024 bufsize 2000 maxblocks  1 2 3

4 x File Copy 256 bufsize 500 maxblocks  1 2 3

4 x File Copy 4096 bufsize 8000 maxblocks  1 2 3

4 x Pipe Throughput  1 2 3 4 5 6 7 8 9 10

4 x Pipe-based Context Switching  1 2 3 4 5 6 7 8 9 10

4 x Process Creation  1 2 3

4 x System Call Overhead  1 2 3 4 5 6 7 8 9 10

4 x Shell Scripts (1 concurrent)  1 2 3

4 x Shell Scripts (8 concurrent)  1 2 3
Wide character in printf at ./Run line 1483.

========================================================================
   BYTE UNIX Benchmarks (Version 5.1.2)

   System: aml: GNU/Linux
   OS: GNU/Linux -- 5.5.0-rc6-aml-s9xxx -- #rc1.037 SMP PREEMPT Wed Feb 5 17:28:41 MSK 2020
   Machine: aarch64 (aarch64)
   Language: en_US.utf8 (charmap=&amp;quot;UTF-8&amp;quot;, collate=&amp;quot;UTF-8&amp;quot;)
   CPU 0: ARMv8 Processor rev 4 (v8l) (0.0 bogomips)

   CPU 1: ARMv8 Processor rev 4 (v8l) (0.0 bogomips)

   CPU 2: ARMv8 Processor rev 4 (v8l) (0.0 bogomips)

   CPU 3: ARMv8 Processor rev 4 (v8l) (0.0 bogomips)

   19:35:59 up  2:44,  1 user,  load average: 2.13, 2.07, 2.01; runlevel 5

------------------------------------------------------------------------
Benchmark Run: 一 3月 02 2020 19:35:59 - 20:03:58
4 CPUs in system; running 1 parallel copy of tests

Dhrystone 2 using register variables        6888588.0 lps   (10.0 s, 7 samples)
Double-Precision Whetstone                     1373.9 MWIPS (9.8 s, 7 samples)
Execl Throughput                                877.5 lps   (30.0 s, 2 samples)
File Copy 1024 bufsize 2000 maxblocks        168765.4 KBps  (30.0 s, 2 samples)
File Copy 256 bufsize 500 maxblocks           49199.4 KBps  (30.0 s, 2 samples)
File Copy 4096 bufsize 8000 maxblocks        445012.9 KBps  (30.0 s, 2 samples)
Pipe Throughput                              327924.7 lps   (10.0 s, 7 samples)
Pipe-based Context Switching                  69606.2 lps   (10.0 s, 7 samples)
Process Creation                               2416.8 lps   (30.0 s, 2 samples)
Shell Scripts (1 concurrent)                   2283.5 lpm   (60.0 s, 2 samples)
Shell Scripts (8 concurrent)                    656.5 lpm   (60.0 s, 2 samples)
System Call Overhead                         632162.6 lps   (10.0 s, 7 samples)

System Benchmarks Index Values               BASELINE       RESULT    INDEX
Dhrystone 2 using register variables         116700.0    6888588.0    590.3
Double-Precision Whetstone                       55.0       1373.9    249.8
Execl Throughput                                 43.0        877.5    204.1
File Copy 1024 bufsize 2000 maxblocks          3960.0     168765.4    426.2
File Copy 256 bufsize 500 maxblocks            1655.0      49199.4    297.3
File Copy 4096 bufsize 8000 maxblocks          5800.0     445012.9    767.3
Pipe Throughput                               12440.0     327924.7    263.6
Pipe-based Context Switching                   4000.0      69606.2    174.0
Process Creation                                126.0       2416.8    191.8
Shell Scripts (1 concurrent)                     42.4       2283.5    538.6
Shell Scripts (8 concurrent)                      6.0        656.5   1094.1
System Call Overhead                          15000.0     632162.6    421.4
                                                                   ========
System Benchmarks Index Score                                         369.1

------------------------------------------------------------------------
Benchmark Run: 一 3月 02 2020 20:03:58 - 20:32:08
4 CPUs in system; running 4 parallel copies of tests

Dhrystone 2 using register variables       26826718.3 lps   (10.0 s, 7 samples)
Double-Precision Whetstone                     5449.1 MWIPS (9.8 s, 7 samples)
Execl Throughput                               2965.8 lps   (30.0 s, 2 samples)
File Copy 1024 bufsize 2000 maxblocks        291243.4 KBps  (30.0 s, 2 samples)
File Copy 256 bufsize 500 maxblocks           80902.5 KBps  (30.0 s, 2 samples)
File Copy 4096 bufsize 8000 maxblocks        827300.0 KBps  (30.0 s, 2 samples)
Pipe Throughput                             1252522.5 lps   (10.0 s, 7 samples)
Pipe-based Context Switching                 217969.4 lps   (10.0 s, 7 samples)
Process Creation                               6193.8 lps   (30.0 s, 2 samples)
Shell Scripts (1 concurrent)                   5216.1 lpm   (60.0 s, 2 samples)
Shell Scripts (8 concurrent)                    701.8 lpm   (60.1 s, 2 samples)
System Call Overhead                        2375324.0 lps   (10.0 s, 7 samples)

System Benchmarks Index Values               BASELINE       RESULT    INDEX
Dhrystone 2 using register variables         116700.0   26826718.3   2298.8
Double-Precision Whetstone                       55.0       5449.1    990.7
Execl Throughput                                 43.0       2965.8    689.7
File Copy 1024 bufsize 2000 maxblocks          3960.0     291243.4    735.5
File Copy 256 bufsize 500 maxblocks            1655.0      80902.5    488.8
File Copy 4096 bufsize 8000 maxblocks          5800.0     827300.0   1426.4
Pipe Throughput                               12440.0    1252522.5   1006.9
Pipe-based Context Switching                   4000.0     217969.4    544.9
Process Creation                                126.0       6193.8    491.6
Shell Scripts (1 concurrent)                     42.4       5216.1   1230.2
Shell Scripts (8 concurrent)                      6.0        701.8   1169.6
System Call Overhead                          15000.0    2375324.0   1583.5
                                                                   ========
System Benchmarks Index Score                                         943.1
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>YandexDisk命令行客户端</title>
      <link>https://unixetc.com/post/yandex-disk-console-client-for-linux/</link>
      <pubDate>Sat, 29 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/yandex-disk-console-client-for-linux/</guid>
      <description>&lt;p&gt;Linux的Yandex.Disk控制台客户端使您可以在Yandex.Disk上管理文件，而无需使用&lt;a href=&#34;https://yandex.com/support/disk/cli-clients.html#cli-gui&#34;&gt;窗口界面&lt;/a&gt;或支持&lt;a href=&#34;https://yandex.com/support/disk/webdav.html#concept3&#34;&gt;WebDAV的程序&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;与WebDAV连接相比，使用控制台客户端的优势：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Low system resource requirements.&lt;/li&gt;
&lt;li&gt;Faster file reading and writing speeds.&lt;/li&gt;
&lt;li&gt;Faster syncing with the Yandex.Disk server.&lt;/li&gt;
&lt;li&gt;Manage files offline.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;控制台客户端可以安装在以下操作系统上：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Ubuntu Linux 8.04 及以上版本&lt;/li&gt;
&lt;li&gt;Debian 5 及以上版本&lt;/li&gt;
&lt;li&gt;Fedora 9 及以上版本&lt;/li&gt;
&lt;li&gt;Red Hat Enterprise Linux 6 及以上版本&lt;/li&gt;
&lt;li&gt;CentOS 6 及以上版本&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;安装客户端&#34;&gt;安装客户端&lt;/h3&gt;
&lt;p&gt;要自动安装客户端，请使用命令进行快速软件包安装。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;.deb软件包&lt;/em&gt; 安装示例&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;echo &amp;quot;deb http://repo.yandex.ru/yandex-disk/deb/ stable main&amp;quot; | sudo tee -a /etc/apt/sources.list.d/yandex-disk.list &amp;gt; /dev/null
wget http://repo.yandex.ru/yandex-disk/YANDEX-DISK-KEY.GPG -O- | sudo apt-key add - 
sudo apt-get update
sudo apt-get install -y yandex-disk
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;要手动安装客户端，请从下面的相应链接下载相应版本的软件包。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;包格式&lt;/th&gt;
&lt;th&gt;32位&lt;/th&gt;
&lt;th&gt;64位&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;.deb (Ubuntu, Debian)&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://repo.yandex.ru/yandex-disk/yandex-disk_latest_i386.deb&#34;&gt;yandex-disk_latest_i386&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://repo.yandex.ru/yandex-disk/yandex-disk_latest_amd64.deb&#34;&gt;yandex-disk_latest_amd64&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;.rpm (Fedora, Red Hat Enterprise Linux, CentOS)&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://repo.yandex.ru/yandex-disk/yandex-disk-latest.i386.rpm&#34;&gt;yandex-disk-latest.i386&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://repo.yandex.ru/yandex-disk/yandex-disk-latest.x86_64.rpm&#34;&gt;yandex-disk-latest.x86_64&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;使用dpkg软件包管理器的安装示例&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# dpkg -i yandex-disk_0.1.0.103_i386.deb
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;注意:该存储库自动安装在&lt;code&gt;/etc/apt/sources.list.d/yandex.list&lt;/code&gt;中&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;使用rpm软件包管理器进行安装的示例&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# rpm -ivh yandex-disk-0.1.0.103-1.fedora.i386.rpm
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;注意：该存储库将自动安装到&lt;code&gt;/etc/yum.repos.d/yandex.repo&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;您还可以将包含yandex-disk软件包的存储库添加到可用的软件包管理器存储库列表中，并使用apt-get或yum实用程序安装该软件包。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;使用apt-get安装&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# echo &amp;quot;deb http://repo.yandex.ru/yandex-disk/deb/ stable main&amp;quot; &amp;gt;&amp;gt; /etc/apt/sources.list.d/yandex-disk.list
# apt-get update
# apt-get install yandex-disk
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;使用yum安装&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# nano /etc/yum.repos.d/yandex.repo
# rpm --import http://repo.yandex.ru/yandex-disk/YANDEX-DISK-KEY.GPG
# yum install yandex-disk
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;yandex.repo&lt;/code&gt;内容：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[yandex]
name=Yandex
failovermethod=priority
baseurl=http://repo.yandex.ru/yandex-disk/rpm/stable/$basearch/
enabled=1
metadata_expire=1d
gpgcheck=1
gpgkey=http://repo.yandex.ru/yandex-disk/YANDEX-DISK-KEY.GPG
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;您可能需要将一个打开的GPG密钥导入系统以检查软件包的数字签名。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;为.deb包导入GPG密钥&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;wget -O YANDEX-DISK-KEY.GPG http://repo.yandex.ru/yandex-disk/YANDEX-DISK-KEY.GPG
sudo apt-key add YANDEX-DISK-KEY.GPG
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;*&lt;strong&gt;为.rpm包导入GPG密钥&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo rpm --import http://repo.yandex.ru/yandex-disk/YANDEX-DISK-KEY.GPG
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;设置向导&#34;&gt;设置向导&lt;/h3&gt;
&lt;p&gt;您可以使用&lt;code&gt;setup&lt;/code&gt;命令运行客户端安装程序。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ yandex-disk setup
&lt;/code&gt;&lt;/pre&gt;&lt;ol&gt;
&lt;li&gt;输入存储Yandex.Disk本地副本的目录的名称。如果将名称保留为空白，则会在主目录中创建一个Yandex.Disk文件夹。&lt;/li&gt;
&lt;li&gt;指示是否使用代理服务器（是/否）。&lt;/li&gt;
&lt;li&gt;指示是否在启动时启动客户端（是/否）。&lt;/li&gt;
&lt;li&gt;输入您的Yandex用户名。&lt;/li&gt;
&lt;li&gt;输入您的Yandex密码。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;注意：如果您使用或以前使用过两次身份验证，则需要由“Yandex.Key”移动应用程序生成的一次性密码登录到Yandex.Disk程序。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;设置向导完成后，将在&lt;code&gt;~/.config/yandex-disk&lt;/code&gt;中创建&lt;code&gt;config.cfg&lt;/code&gt;配置文件。&lt;/p&gt;
&lt;h3 id=&#34;使用客户端&#34;&gt;使用客户端&lt;/h3&gt;
&lt;h4 id=&#34;命令&#34;&gt;命令&lt;/h4&gt;
&lt;p&gt;使用以下命令与客户端一起使用：&lt;/p&gt;
&lt;p&gt;. &lt;code&gt;Token&lt;/code&gt; 为您的Yandex用户名（USERNAME）获取授权密钥（OAuth令牌）。输入命令时，您可以输入您的Yandex密码（PASSWORD）以及令牌文件及其目录（FILE）。如果未指定其他选项，将在&lt;code&gt;~/.config/yandex-disk&lt;/code&gt;中创建&lt;code&gt;passwd&lt;/code&gt;文件来存储令牌。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ yandex-disk token [-p, --password=PASSWORD] [OPTION] USERNAME [FILE]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;. &lt;code&gt;Start&lt;/code&gt; 启动守护程序并同步除exclude-dirs排除列表中的所有文件夹之外的所有文件夹。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ yandex-disk start [OPTION]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;. &lt;code&gt;Status&lt;/code&gt; 显示守护程序的状态（同步状态，同步错误，已同步文件列表以及Yandex.Disk上的总空间和可用空间）。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ yandex-disk status [OPTION]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;. &lt;code&gt;Stop&lt;/code&gt; 停止守护程序。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ yandex-disk stop [OPTION]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;. &lt;code&gt;Sync&lt;/code&gt; 同步除exclude-dirs排除列表中的文件夹以外的所有文件夹。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ yandex-disk sync [OPTION]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;. &lt;code&gt;Publish&lt;/code&gt; 获取指向指定文件或文件夹（FILE）的公共链接。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ yandex-disk publish [OPTION] FILE&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;. &lt;code&gt;Unpublish&lt;/code&gt; 取消发布指定的文件或文件夹（FILE）。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ yandex-disk unpublish FILE&lt;/code&gt;&lt;/p&gt;
&lt;h4 id=&#34;其他选项option&#34;&gt;其他选项[OPTION]&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&amp;ndash;config=FILE, -c FILE&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;显示配置文件。默认为&lt;code&gt;~/.config/yandex-disk&lt;/code&gt;下的&lt;code&gt;config.cfg&lt;/code&gt;文件&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;ndash;dir=DIR, -d DIR&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;输入要存储Yandex.Disk本地副本的目录。如果在初始设置过程中未输入名称，则默认情况下将使用&lt;code&gt;~/Yandex.Disk&lt;/code&gt;。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;ndash;auth=FILE, -a FILE&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;输入包含授权数据的文件。默认文件是&lt;code&gt;passwd&lt;/code&gt;，它是使用&lt;code&gt;token&lt;/code&gt;命令或设置向导创建的，并存储在&lt;code&gt;~/.config/yandex-disk&lt;/code&gt;中。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;ndash;exclude-dirs=DIR1,DIR2,&amp;hellip;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;不要同步指定的目录。 为了使这些设置始终适用，必须将这些目录添加到&lt;code&gt;config.cfg&lt;/code&gt;文件中的&lt;code&gt;exclude-dirs&lt;/code&gt;排除列表中。 为了使设置正常工作，排除目录的名称应用逗号而不是空格分隔。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;ndash;read-only&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;禁止更改Yandex.Disk服务器上的文件，并且仅同步本地副本。如果发生同步冲突，则将重命名本地文件。如果还启用了&lt;code&gt;--overwrite&lt;/code&gt;设置，则将覆盖本地文件。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;ndash;overwrite&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;与服务器同步时，要覆盖对Yandex.Disk本地副本所做的更改。与&lt;code&gt;--read-only&lt;/code&gt;选项一起使用。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;ndash;no-daemon, -D&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;启动守护程序而不将管理返回到控制台。要返回管理，必须通过在另一个控制台中启动命令&lt;code&gt;yandex-disk stop&lt;/code&gt;或关闭当前控制台来停止守护程序。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;ndash;help, -h&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;显示帮助。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;ndash;proxy=PARAM&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;配置代理服务器。有效参数：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Auto — 使用系统代理设置（默认使用）。&lt;/li&gt;
&lt;li&gt;no — 不要使用代理服务器。&lt;/li&gt;
&lt;li&gt;protocol,address,port,login,password — 手动设置服务器。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;使用命令的例子&#34;&gt;使用命令的例子&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;$ yandex-disk start -c ~/ydconfig/newconfig.cfg # launch the daemon and sync with specified configuration file 
$ yandex-disk start --exclude-dirs=Foto # do not sync folder &#39;Photo&#39;
$ yandex-disk sync --read-only # sync folders in &#39;read-only&#39; mode
$ yandex-disk publish Photo # get a public link to the folder &#39;Photo&#39;
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;configcfg文件的示例&#34;&gt;&amp;lsquo;config.cfg&amp;rsquo;文件的示例&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;# Path to file with authorization dataauth=&amp;quot;/home/user/ydconfig/my_passwd&amp;quot; 
# Folder for storing the local copy of Yandex.Disk.dir=&amp;quot;/home/user/myDisk&amp;quot;
# Do not sync specified folders.
# exclude-dirs=&amp;quot;exclude/dir1,exclude/dir2,path/to/another/exclude/dir&amp;quot;
# Specify proxy server. Examples:
#proxy=https,127.0.0.1,80
#proxy=https,127.0.0.1,80,login,password
#proxy=https,127.0.0.1,443
#proxy=socks4,my.proxy.local,1080,login,password
#proxy=socks5,my.another.proxy.local,1081
#proxy=auto
#proxy=no
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;faq&#34;&gt;FAQ&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;控制台客户端中有哪些Yandex.Disk功能？&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;使用控制台客户端时，Yandex.Disk的所有主要功能都可用：同步和共享文件和文件夹，以及自定义文件夹同步。&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;自定义文件夹同步在控制台客户端中是否起作用？&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Yes. You can choose not to sync certain folders by entering the command (setting &amp;ndash;exclude-dirs=DIR1,DIR2,&amp;hellip;) or by adding them to the exclude-dirs exclusion list in config.cfg.
是。您可以通过输入命令（设置&amp;ndash;exclude-dirs = DIR1，DIR2，&amp;hellip;）或将其添加到config.cfg中的exclude-dirs排除列表中，选择不同步某些文件夹。&lt;/p&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;控制台客户端是否支持符号链接？&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;是的，它确实。&lt;/p&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;控制台客户端可以用于数据复制吗？&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;是。可以使用&amp;ndash;read-only参数复制数据。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;via &lt;a href=&#34;https://yandex.com/support/disk/cli-clients.html&#34;&gt;https://yandex.com/support/disk/cli-clients.html&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>CentOS安装Hugo</title>
      <link>https://unixetc.com/post/centos-install-hugo-via-repo/</link>
      <pubDate>Tue, 04 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/centos-install-hugo-via-repo/</guid>
      <description>&lt;p&gt;Hugo是由Go语言实现的静态网站生成器。简单、易用、高效、易扩展、快速部署。&lt;/p&gt;
&lt;p&gt;新建&lt;code&gt;hugo.repo&lt;/code&gt;文件，&lt;code&gt;sudo vi /etc/yum.repos.d/hugo.repo&lt;/code&gt;，填入以下内容。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[daftaupe-hugo]
name=Copr repo for hugo owned by daftaupe
baseurl=https://copr-be.cloud.fedoraproject.org/results/daftaupe/hugo/epel-7-$basearch/
type=rpm-md
skip_if_unavailable=True
gpgcheck=1
gpgkey=https://copr-be.cloud.fedoraproject.org/results/daftaupe/hugo/pubkey.gpg
repo_gpgcheck=0
enabled=1
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;保存后更新安装Hugo&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo yum update
sudo yum install hugo -y
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>Gnome美化简介</title>
      <link>https://unixetc.com/post/gnome-landscaping-guide/</link>
      <pubDate>Sun, 08 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/gnome-landscaping-guide/</guid>
      <description>&lt;h3 id=&#34;安装必要软件&#34;&gt;安装必要软件&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;sudo apt install gnome-tweak-tool chrome-gnome-shell
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;安装gnome-shell-extensions&#34;&gt;安装Gnome Shell Extensions&lt;/h3&gt;
&lt;p&gt;使用Firefox浏览&lt;a href=&#34;https://extensions.gnome.org/&#34;&gt;https://extensions.gnome.org/&lt;/a&gt;，第一次访问根据提示安装Firefox插件，如下图:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://i.loli.net/2019/12/08/5CTzZAgmjRhQnoP.png&#34; alt=&#34;Click here to install browser extension&#34;&gt;&lt;/p&gt;
&lt;p&gt;安装完成后，访问&lt;a href=&#34;https://extensions.gnome.org/&#34;&gt;https://extensions.gnome.org/&lt;/a&gt;搜索安装以下三个GnomeShellExtension&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;User Themes  加载用户主题，加载目录为~/.local/share/themes&lt;/li&gt;
&lt;li&gt;Dash to Dock 定制 Dash/Dock&lt;/li&gt;
&lt;li&gt;Gnome Global Application Menu   Gnome全局菜单&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;安装方法如下，进入到扩展详情后，点击标题后的开关，按照提示安装即可&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://i.loli.net/2019/12/08/SMOrIxFGWBuVlbK.png&#34; alt=&#34;install gnome shell extension&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;安装主题&#34;&gt;安装主题&lt;/h3&gt;
&lt;p&gt;访问&lt;a href=&#34;https://www.gnome-look.org/&#34;&gt;https://www.gnome-look.org/&lt;/a&gt;，在GTK3 Themes分类下下载主题，下载后解压拷贝至&lt;code&gt;~/.local/share/themes&lt;/code&gt;下，然后打开gnome-tweak，在外观中即可选择已安装的主题。&lt;/p&gt;
&lt;p&gt;在&lt;code&gt;~/.local/share/&lt;/code&gt;下新建&lt;strong&gt;themes&lt;/strong&gt;、&lt;strong&gt;icons&lt;/strong&gt;和&lt;strong&gt;fonts&lt;/strong&gt;三个目录，分别对应主题、图标、字体，这些资源都可以在&lt;a href=&#34;https://www.gnome-look.org/&#34;&gt;https://www.gnome-look.org/&lt;/a&gt;找得到。&lt;/p&gt;
&lt;p&gt;以下为本人的桌面截图，仅供参考：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://i.loli.net/2019/12/08/2wlakxOTfGcshYu.png&#34; alt=&#34;桌面截图&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>在Linux中安装Windows字体</title>
      <link>https://unixetc.com/post/linux-install-windows-fonts/</link>
      <pubDate>Thu, 21 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/linux-install-windows-fonts/</guid>
      <description>&lt;p&gt;使用的系统为&lt;strong&gt;Ubuntu 19.10&lt;/strong&gt;，Windows系统分区lable为&lt;strong&gt;sys&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;参考如下操作：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;alair@e6440:~$ sudo mkdir /usr/share/fonts/winfonts
[sudo] alair 的密码： 
alair@e6440:~$ sudo cp /media/alair/sys/Windows/Fonts/* /usr/share/fonts/winfonts/  
alair@e6440:~$ sudo rm -rf /usr/share/fonts/winfonts/*.fon
alair@e6440:~$ sudo mkfontscale 
alair@e6440:~$ sudo mkfontdir 
alair@e6440:~$ sudo fc-cache 
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;打完收工！&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Armbian更改软件源</title>
      <link>https://unixetc.com/post/armbian-change-software-source/</link>
      <pubDate>Tue, 05 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/armbian-change-software-source/</guid>
      <description>&lt;p&gt;上一篇文章介绍了&lt;a href=&#34;https://unixetc.com/post/phicomm-n1-install-armbian/&#34;&gt;如何在斐迅N1上安装Armbian&lt;/a&gt;，现在介绍如何更改软件源为国内镜像。&lt;/p&gt;
&lt;p&gt;编辑&lt;code&gt;/etc/apt/sources.list&lt;/code&gt;替换为以下内容：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;deb https://mirrors.tuna.tsinghua.edu.cn/debian/ buster main contrib non-free
# deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ buster main contrib non-free
deb https://mirrors.tuna.tsinghua.edu.cn/debian/ buster-updates main contrib non-free
# deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ buster-updates main contrib non-free
deb https://mirrors.tuna.tsinghua.edu.cn/debian/ buster-backports main contrib non-free
# deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ buster-backports main contrib non-free
deb https://mirrors.tuna.tsinghua.edu.cn/debian-security buster/updates main contrib non-free
# deb-src https://mirrors.tuna.tsinghua.edu.cn/debian-security buster/updates main contrib non-free
deb http://ftp.debian.org/debian jessie-backports main
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;接着编辑&lt;code&gt;/etc/apt/sources.list.d/armbian.list &lt;/code&gt;，替换为以下内容：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;deb http://mirrors.tuna.tsinghua.edu.cn/armbian/ buster main buster-utils buster-desktop
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;保存后，刷新缓存更新系统：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo apt update
sudo apt upgrade -y
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>斐讯N1安装Armbian</title>
      <link>https://unixetc.com/post/phicomm-n1-install-armbian/</link>
      <pubDate>Sun, 03 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/phicomm-n1-install-armbian/</guid>
      <description>&lt;p&gt;最近入手斐讯N1一枚，买的是白色未拆封，到手版本为&lt;strong&gt;V2.19_0307_NS&lt;/strong&gt;，刚好省了降级的麻烦，以下为斐讯N1安装armbian操作过程。&lt;/p&gt;
&lt;h3 id=&#34;开启adb调试模式&#34;&gt;开启adb调试模式&lt;/h3&gt;
&lt;p&gt;将N1通过HDMI连接显示器，将鼠标插到N1的USB口上，开机后用鼠标点击&lt;strong&gt;系统版本:V2.19_0307_NS&lt;/strong&gt;区域，多次点击后会出现提示&amp;quot;开启adb调试模式&amp;rdquo;，即可。&lt;/p&gt;
&lt;p&gt;从此下载&lt;a href=&#34;https://tc5.us/file/18418398-405909486&#34;&gt;minimal_adb_fastboot&lt;/a&gt;，下载后安装。&lt;/p&gt;
&lt;h3 id=&#34;准备刷机u盘&#34;&gt;准备刷机U盘&lt;/h3&gt;
&lt;p&gt;准备一个不小区8G的U盘，下载镜像写入工具&lt;a href=&#34;https://tc5.us/file/18418398-404861253&#34;&gt;balenaEtcher&lt;/a&gt;，下载后安装。&lt;/p&gt;
&lt;p&gt;下载&lt;strong&gt;Armbian&lt;/strong&gt;镜像，在此以&lt;strong&gt;Armbian_5.98_Aml-g12_Debian_buster_dev_5.4.0-rc4_20191025.img.xz&lt;/strong&gt;为例，镜像为debian最新版，不带桌面系统。如果需要其他的可以从&lt;a href=&#34;https://yadi.sk/d/pHxaRAs-tZiei&#34;&gt;此处&lt;/a&gt;自行下载。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://tc5.us/file/18418398-404861253&#34;&gt;Armbian_5.98_Aml-g12_Debian_buster_dev_5.4.0-rc4_20191025.img.xz&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;将下载后的镜像文件用&lt;strong&gt;balenaEtcher&lt;/strong&gt;写入U盘，写入完成后先别拔掉U盘，进入到&lt;strong&gt;BOOT&lt;/strong&gt;分区，找到&lt;strong&gt;uEnv.ini&lt;/strong&gt;文件，将&lt;strong&gt;dtb_name&lt;/strong&gt;行改为如下内容：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;dtb_name=/dtb/amlogic/meson-gxl-s905d-phicomm-n1.dtb&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;然后退出U盘备用。&lt;/p&gt;
&lt;p&gt;如果你的&lt;strong&gt;BOOT&lt;/strong&gt;分区下&lt;code&gt;/dtd/amlogic/&lt;/code&gt;目录中没有&lt;code&gt;meson-gxl-s905d-phicomm-n1.dtb&lt;/code&gt;文件，那么可以点击&lt;a href=&#34;https://tc5.us/file/18418398-405918006&#34;&gt;meson-gxl-s905d-phicomm-n1.dtb&lt;/a&gt;下载放入相应目录即可。&lt;/p&gt;
&lt;h3 id=&#34;从u盘引导armbian&#34;&gt;从U盘引导Armbian&lt;/h3&gt;
&lt;p&gt;将制作好的系统U盘插到靠近HDMI一侧的U口，另外一个U口插入双公头的刷机线连接电脑，将N1通过HDMI连接显示器，并且插好网线然后开机。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://unixetc.com/imgs/n1lianxian.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;开机后可以从显示器上看到盒子的IP地址，电脑上运行&lt;strong&gt;Minimal ADB and Fastboot&lt;/strong&gt;，然后输入&lt;code&gt;adb connect 192.168.1.54&lt;/code&gt;命令连接盒子，连接成功后会有如下提示：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;connected to 192.168.1.54:5555&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;然后输入&lt;code&gt;adb shell reboot update&lt;/code&gt;开始从U盘引导Armbian系统，盒子重启后成功引导armbian，此时可以将&lt;strong&gt;usb刷机线&lt;/strong&gt;拔掉，插入一个外接键盘，开始后面操作。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Armbian&lt;/strong&gt;系统默认账号为&lt;strong&gt;root&lt;/strong&gt;，密码为&lt;strong&gt;1234&lt;/strong&gt;，按照提示输入账号信息进行登录，登录后会有更改默认密码提示，按照提示更改默认密码。&lt;/p&gt;
&lt;p&gt;接下来会有新建账号提示:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Creating a new user account. Press &amp;lt;Ctrl-C&amp;gt; to abort

Please provide a username (eg. your forename):
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;可以按照该提示新建账号，或者按&lt;!-- raw HTML omitted --&gt;Ctrl+c&lt;!-- raw HTML omitted --&gt;终止，继续用&lt;strong&gt;root&lt;/strong&gt;账号登录。&lt;/p&gt;
&lt;h3 id=&#34;将armbian安装到n1中&#34;&gt;将Armbian安装到N1中&lt;/h3&gt;
&lt;p&gt;以上只是从U盘成功引导登录Armbian，接下来我们将Armbian安装到N1内置存储(eMMC)，即可拔掉U盘了。&lt;/p&gt;
&lt;p&gt;如果是通过&lt;strong&gt;root&lt;/strong&gt;登录的话，那么直接运行root目录下&lt;code&gt;install.sh&lt;/code&gt;即可安装，如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; root@aml:~# ./install. sh
 Start script create MBR and filesystem
 /dev/mmcblk1
 Start backup u-boot default
 4＋0 records in
 4＋0 records out
4194304 bytes（4.2mb，4.omib） copied，o.793832s，52.8mb/s Start create MBR and partittion
 start restore u-boot
 442＋0 records in
 442＋0 records out
 442 bytes copied， 0.0123705 s， 35.7 KB/
 8191＋0 records in
 8191＋0 records out
 4193792 bytes （4.2 MB， 4.0 MiB） copied， 0.414592， 10.1 MB/s Done
 Start copy system for eMMC.
 Formatting BOOT partition... mkfs. fat 4.1 （2017-01-24）
 done.
 Cppying BOOT... done.
 Edit init config... done.
 Formatt ing ROOT partition...
 e2fsck1.44.5（15-dec-2018）
 ROOT EMMC: clean， 11/427392 files， 50723/1706240 blocks
 done.
 Copying ROOTFS.
 Copy BIN
 Create DEV
 Copy ETC
 Copy HOME
 Copy LIB
 Create MEDIA
 Create MNT
 Copy OPT
 Create PROC
 Copy ROOT
 Create RUN
 Copy SBIN
 Copy SEL INUX
 Copy SRV
 Create SYS
 Create TMP
 Copy USR
 Copy VAR
 Copy fstab
*****************************
 Complete copy os to eMMC
*****************************
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;提示&lt;strong&gt;Complete copy OS to eMMC&lt;/strong&gt;就表示安装完成，然后输入&lt;code&gt;halt&lt;/code&gt;关机，拔掉U盘后重新加电启动盒子即可。&lt;/p&gt;
&lt;p&gt;如果不是通过root用户登录的话，那么按照如下操作进行安装。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$su
#cd /root/
#./install.sh
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>一加3t和树莓派UNIXBench跑分对比</title>
      <link>https://unixetc.com/post/oneplus3t-and-raspberry-pi-unixbench-score-comparison/</link>
      <pubDate>Sat, 07 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/oneplus3t-and-raspberry-pi-unixbench-score-comparison/</guid>
      <description>&lt;h3 id=&#34;一加3t&#34;&gt;一加3T&lt;/h3&gt;
&lt;p&gt;一加3T运行的是&lt;a href=&#34;https://unixetc.com/post/oneplus-3t-install-ubuntutouch/&#34;&gt;UbuntuTouch&lt;/a&gt;系统&lt;/p&gt;
&lt;h4 id=&#34;一加3t系统信息&#34;&gt;一加3T系统信息&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;phablet@ubuntu-phablet:~$ inxi -F
Resuming in non X mode: xrandr not found. For package install advice run: inxi --recommends
System:    Host: android Kernel: 3.18.31-halium-gca027546546e-01041-g7961eb763e61 aarch64 (32 bit) Desktop: N/A
        Distro: Ubuntu 16.04 xenial
Machine:   No /sys/class/dmi; using dmidecode: dmidecode is not installed.
CPU:       Quad core AArch64 Processor rev 1 (aarch64) (-MCP-) (ARM)
        clock speeds: max: 2188 MHz 1: 1593 MHz 2: 1593 MHz 3: 1593 MHz 4: 1593 MHz
Graphics:  Card: Failed to Detect Video Card!
        Display Server: N/A driver: N/A Resolution: 165x47
Audio:     Card msm8996-tasha-mtp-snd-card driver: msm8996-tasha-m
        Sound: Advanced Linux Sound Architecture v: k3.18.31-halium-gca027546546e-01041-g7961eb763e61
Network:   Card-1: Qualcomm Atheros QCA6174 802.11ac Wireless Network Adapter driver: cnss_wlan_pci
        IF: rename8 state: down mac: c2:ee:fb:e8:e2:ea
        Card-2: Qualcomm Atheros QCA6174 802.11ac Wireless Network Adapter driver: cnss_wlan_pci
        IF: wlp1s0 state: up mac: c0:ee:fb:e8:e2:ea
Drives:    HDD Total Size: 64.0GB (8.3% used) ID-1: /dev/sda model: KLUCG4J1CB size: 57.9GB
        ID-2: /dev/sdb model: KLUCG4J1CB size: 0.0GB ID-3: /dev/sdc model: KLUCG4J1CB size: 0.0GB
        ID-4: /dev/sdd model: KLUCG4J1CB size: 0.1GB ID-5: /dev/sde model: KLUCG4J1CB size: 4.3GB
        ID-6: /dev/sdf model: KLUCG4J1CB size: 1.6GB
Partition: ID-1: / size: 2.9G used: 1.9G (67%) fs: ext4 dev: /dev/loop0
Sensors:   None detected - is lm-sensors installed and configured?
Info:      Processes: 551 Uptime: 1:02 Memory: 1668.1/5736.9MB Init: Upstart runlevel: 2
        Client: Shell (bash) inxi: 2.2.35
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;一加3t-unixbench跑分&#34;&gt;一加3T unixbench跑分&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;========================================================================
BYTE UNIX Benchmarks (Version 5.1.3)

System: ubuntu-phablet: GNU/Linux
OS: GNU/Linux -- 3.18.31-halium-gca027546546e-01041-g7961eb763e61 -- #1 SMP PREEMPT Wed Aug 21 20:33:17 CEST 2019
Machine: aarch64 (aarch64)
Language: en_US.utf8 (charmap=&amp;quot;UTF-8&amp;quot;, collate=&amp;quot;UTF-8&amp;quot;)
11:39:26 up 58 min,  2 users,  load average: 6.59, 7.93, 8.16; runlevel 2

------------------------------------------------------------------------
Benchmark Run: 六 9月 07 2019 11:39:26 - 12:07:49
0 CPUs in system; running 1 parallel copy of tests

Dhrystone 2 using register variables       13089762.3 lps   (10.0 s, 7 samples)
Double-Precision Whetstone                     3000.5 MWIPS (9.8 s, 7 samples)
Execl Throughput                               1381.2 lps   (29.9 s, 2 samples)
File Copy 1024 bufsize 2000 maxblocks        254749.2 KBps  (30.0 s, 2 samples)
File Copy 256 bufsize 500 maxblocks           75714.9 KBps  (30.0 s, 2 samples)
File Copy 4096 bufsize 8000 maxblocks        813273.2 KBps  (30.0 s, 2 samples)
Pipe Throughput                              650583.5 lps   (10.0 s, 7 samples)
Pipe-based Context Switching                  22716.1 lps   (10.0 s, 7 samples)
Process Creation                                835.5 lps   (30.0 s, 2 samples)
Shell Scripts (1 concurrent)                   2556.9 lpm   (60.0 s, 2 samples)
Shell Scripts (8 concurrent)                    938.3 lpm   (60.0 s, 2 samples)
System Call Overhead                         988399.2 lps   (10.0 s, 7 samples)

System Benchmarks Index Values               BASELINE       RESULT    INDEX
Dhrystone 2 using register variables         116700.0   13089762.3   1121.7
Double-Precision Whetstone                       55.0       3000.5    545.5
Execl Throughput                                 43.0       1381.2    321.2
File Copy 1024 bufsize 2000 maxblocks          3960.0     254749.2    643.3
File Copy 256 bufsize 500 maxblocks            1655.0      75714.9    457.5
File Copy 4096 bufsize 8000 maxblocks          5800.0     813273.2   1402.2
Pipe Throughput                               12440.0     650583.5    523.0
Pipe-based Context Switching                   4000.0      22716.1     56.8
Process Creation                                126.0        835.5     66.3
Shell Scripts (1 concurrent)                     42.4       2556.9    603.1
Shell Scripts (8 concurrent)                      6.0        938.3   1563.9
System Call Overhead                          15000.0     988399.2    658.9
                                                                ========
System Benchmarks Index Score                                         463.9



======= Script description and score comparison completed! =======
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;树莓派&#34;&gt;树莓派&lt;/h3&gt;
&lt;p&gt;树莓派运行的是官方Raspbian Buster Lite版&lt;/p&gt;
&lt;h4 id=&#34;树莓派系统信息&#34;&gt;树莓派系统信息&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;pi@raspberrypi:~ $ inxi -F
System:    Host: raspberrypi Kernel: 4.19.66-v7+ armv7l bits: 32 Desktop: N/A Distro: Raspbian GNU/Linux 10 (buster)
Machine:   Type: ARM Device System: Raspberry Pi 2 Model B Rev 1.1 details: BCM2835 rev: a21041 serial: 00000000d81b63a8
CPU:       Topology: Quad Core model: ARMv7 v7l variant: cortex-a7 bits: 32 type: MCP
        Speed: 1000 MHz min/max: 600/1000 MHz Core speeds (MHz): 1: 1000 2: 1000 3: 1000 4: 1000
Graphics:  Device-1: bcm2708-fb driver: bcm2708_fb v: kernel
        Device-2: bcm2835-hdmi driver: N/A
        Display: tty server: N/A driver: N/A tty: 165x47
        Message: No advanced graphics data found on this system.
Audio:     Device-1: bcm2835-audio driver: bcm2835_audio
        Device-2: bcm2835-hdmi driver: N/A
        Sound Server: ALSA v: k4.19.66-v7+
Network:   Device-1: Standard Microsystems SMSC9512/9514 Fast Ethernet Adapter type: USB driver: smsc95xx
        IF: eth0 state: up speed: 100 Mbps duplex: full mac: b8:27:eb:1b:63:a8
        Device-2: Realtek RTL8188EUS 802.11n Wireless Network Adapter type: USB driver: r8188eu
        IF: wlan0 state: down mac: 14:cf:92:1d:84:a0
        Device-3: Realtek RTL8188CUS 802.11n WLAN Adapter type: USB driver: rtl8192cu
        IF: wlan1 state: down mac: e8:4e:06:1c:3e:67
Drives:    Local Storage: total: 29.73 GiB used: 1.35 GiB (4.5%)
        ID-1: /dev/mmcblk0 vendor: TDK model: TF32G size: 29.73 GiB
Partition: ID-1: / size: 29.00 GiB used: 1.31 GiB (4.5%) fs: ext4 dev: /dev/mmcblk0p2
        ID-2: /boot size: 252.0 MiB used: 39.1 MiB (15.5%) fs: vfat dev: /dev/mmcblk0p1
Sensors:   Message: No sensors data was found. Is sensors configured?
Info:      Processes: 129 Uptime: 44m Memory: 1002.1 MiB used: 182.8 MiB (18.2%) gpu: 76.0 MiB Shell: bash inxi: 3.0.32
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;树莓派unixbench跑分&#34;&gt;树莓派unixbench跑分&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;========================================================================
BYTE UNIX Benchmarks (Version 5.1.3)

System: raspberrypi: GNU/Linux
OS: GNU/Linux -- 4.19.66-v7+ -- #1253 SMP Thu Aug 15 11:49:46 BST 2019
Machine: armv7l (unknown)
Language: en_US.utf8 (charmap=&amp;quot;ANSI_X3.4-1968&amp;quot;, collate=&amp;quot;ANSI_X3.4-1968&amp;quot;)
CPU 0: ARMv7 Processor rev 5 (v7l) (0.0 bogomips)

CPU 1: ARMv7 Processor rev 5 (v7l) (0.0 bogomips)

CPU 2: ARMv7 Processor rev 5 (v7l) (0.0 bogomips)

CPU 3: ARMv7 Processor rev 5 (v7l) (0.0 bogomips)

11:06:28 up 5 min,  1 user,  load average: 1.15, 0.40, 0.15; runlevel 5

------------------------------------------------------------------------
Benchmark Run: 六 9月 07 2019 11:06:28 - 11:34:53
4 CPUs in system; running 1 parallel copy of tests

Dhrystone 2 using register variables        3337362.1 lps   (10.0 s, 7 samples)
Double-Precision Whetstone                      753.3 MWIPS (10.0 s, 7 samples)
Execl Throughput                                490.1 lps   (29.9 s, 2 samples)
File Copy 1024 bufsize 2000 maxblocks         73075.5 KBps  (30.0 s, 2 samples)
File Copy 256 bufsize 500 maxblocks           21292.0 KBps  (30.0 s, 2 samples)
File Copy 4096 bufsize 8000 maxblocks        194738.9 KBps  (30.0 s, 2 samples)
Pipe Throughput                              177539.0 lps   (10.0 s, 7 samples)
Pipe-based Context Switching                  26085.6 lps   (10.0 s, 7 samples)
Process Creation                               1112.2 lps   (30.0 s, 2 samples)
Shell Scripts (1 concurrent)                   1167.8 lpm   (60.0 s, 2 samples)
Shell Scripts (8 concurrent)                    327.1 lpm   (60.2 s, 2 samples)
System Call Overhead                         451875.9 lps   (10.0 s, 7 samples)

System Benchmarks Index Values               BASELINE       RESULT    INDEX
Dhrystone 2 using register variables         116700.0    3337362.1    286.0
Double-Precision Whetstone                       55.0        753.3    137.0
Execl Throughput                                 43.0        490.1    114.0
File Copy 1024 bufsize 2000 maxblocks          3960.0      73075.5    184.5
File Copy 256 bufsize 500 maxblocks            1655.0      21292.0    128.7
File Copy 4096 bufsize 8000 maxblocks          5800.0     194738.9    335.8
Pipe Throughput                               12440.0     177539.0    142.7
Pipe-based Context Switching                   4000.0      26085.6     65.2
Process Creation                                126.0       1112.2     88.3
Shell Scripts (1 concurrent)                     42.4       1167.8    275.4
Shell Scripts (8 concurrent)                      6.0        327.1    545.2
System Call Overhead                          15000.0     451875.9    301.3
                                                                ========
System Benchmarks Index Score                                         182.0

------------------------------------------------------------------------
Benchmark Run: 六 9月 07 2019 11:34:53 - 12:04:00
4 CPUs in system; running 4 parallel copies of tests

Dhrystone 2 using register variables       13191650.7 lps   (10.0 s, 7 samples)
Double-Precision Whetstone                     2978.2 MWIPS (10.0 s, 7 samples)
Execl Throughput                               1235.3 lps   (29.9 s, 2 samples)
File Copy 1024 bufsize 2000 maxblocks         85443.5 KBps  (30.0 s, 2 samples)
File Copy 256 bufsize 500 maxblocks           33157.0 KBps  (30.0 s, 2 samples)
File Copy 4096 bufsize 8000 maxblocks        295618.5 KBps  (30.0 s, 2 samples)
Pipe Throughput                              697215.8 lps   (10.0 s, 7 samples)
Pipe-based Context Switching                 106460.7 lps   (10.0 s, 7 samples)
Process Creation                               2599.0 lps   (30.0 s, 2 samples)
Shell Scripts (1 concurrent)                   2615.3 lpm   (60.1 s, 2 samples)
Shell Scripts (8 concurrent)                    352.7 lpm   (60.3 s, 2 samples)
System Call Overhead                        1724986.2 lps   (10.0 s, 7 samples)

System Benchmarks Index Values               BASELINE       RESULT    INDEX
Dhrystone 2 using register variables         116700.0   13191650.7   1130.4
Double-Precision Whetstone                       55.0       2978.2    541.5
Execl Throughput                                 43.0       1235.3    287.3
File Copy 1024 bufsize 2000 maxblocks          3960.0      85443.5    215.8
File Copy 256 bufsize 500 maxblocks            1655.0      33157.0    200.3
File Copy 4096 bufsize 8000 maxblocks          5800.0     295618.5    509.7
Pipe Throughput                               12440.0     697215.8    560.5
Pipe-based Context Switching                   4000.0     106460.7    266.2
Process Creation                                126.0       2599.0    206.3
Shell Scripts (1 concurrent)                     42.4       2615.3    616.8
Shell Scripts (8 concurrent)                      6.0        352.7    587.9
System Call Overhead                          15000.0    1724986.2   1150.0
                                                                ========
System Benchmarks Index Score                                         437.9



======= Script description and score comparison completed! =======
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Vivo Y913精简版线刷包</title>
      <link>https://unixetc.com/post/vivo-y913-simplify-version-brush-pack/</link>
      <pubDate>Fri, 06 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/vivo-y913-simplify-version-brush-pack/</guid>
      <description>&lt;p&gt;刷机所需文件：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://dotbbq.pipipan.com/fs/18418398-396657758&#34;&gt;vivo_Y913_RevA_PD1304CV_A_1.18.4.7z&lt;/a&gt; A版线刷包&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://dotbbq.pipipan.com/fs/18418398-396657769&#34;&gt;vivo_Y913_RevB_PD1304CV_B_2.2.1.7z&lt;/a&gt; B版线刷包&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://dotbbq.pipipan.com/fs/18418398-396656652&#34;&gt;vivo_driver_v2.0.0.3.7z&lt;/a&gt; VIVO手机驱动&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;提示:&lt;strong&gt;解压密码为&lt;/strong&gt;alair&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;如何判断y913版本&#34;&gt;如何判断Y913版本？&lt;/h3&gt;
&lt;p&gt;关机，按住&lt;strong&gt;电源减&lt;/strong&gt;+&lt;strong&gt;电源键&lt;/strong&gt;进入&lt;strong&gt;FASTBOOT MODE&lt;/strong&gt;，Version字段中PD1304CV后为版本号，分为A和B。&lt;/p&gt;
&lt;h3 id=&#34;安装y913驱动&#34;&gt;安装Y913驱动&lt;/h3&gt;
&lt;p&gt;下载驱动软件安装，完成后打开，按照提示安装&lt;strong&gt;adb&lt;/strong&gt;驱动，其他两个可选。&lt;/p&gt;
&lt;h3 id=&#34;y913刷机&#34;&gt;Y913刷机&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;将手机关机，进入&lt;strong&gt;FASTBOOT&lt;/strong&gt;模式连接电脑&lt;/li&gt;
&lt;li&gt;下载对应版本的刷机包，解压后进入&lt;strong&gt;BrushPack&lt;/strong&gt;目录，打开&lt;strong&gt;Fastboot刷机工具&lt;/strong&gt;，将同目录下的&lt;strong&gt;flash_all.bat&lt;/strong&gt;拖放到&lt;strong&gt;Fastboot刷机工具&lt;/strong&gt;窗口，点击&lt;strong&gt;开始刷机&lt;/strong&gt;，按照提示刷机完成后手机自动重启。&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>一加3T安装UbuntuTouch</title>
      <link>https://unixetc.com/post/oneplus-3t-install-ubuntutouch/</link>
      <pubDate>Sun, 01 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/oneplus-3t-install-ubuntutouch/</guid>
      <description>&lt;p&gt;Ubuntu Touch（又称Ubuntu Phone）是Canonical公司与Ubuntu社区所开发的移动设备操作系统，专为触屏行动设备所设计，例如：智能手机和平板电脑。&lt;/p&gt;
&lt;p&gt;现在国外开发者Vince1171放出了Oneplus3/3t的UbuntuTouch适配版，现在我们就安装试试。&lt;/p&gt;
&lt;p&gt;首先下载所需文件：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://tc5.us/file/18418398-416068360&#34;&gt;TWRP Recovery&lt;/a&gt; Recovery&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tc5.us/file/18418398-395414726&#34;&gt; OnePlus_3T_Stable_9.0.3_Firmware_Modem.zip&lt;/a&gt;  OnePlus3T底包&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tc5.us/file/18418398-415954047&#34;&gt;LineageOS&lt;/a&gt; LineageOS ROM&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tc5.us/file/18418398-415952593&#34;&gt;halium-install.sh&lt;/a&gt; 安装脚本&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tc5.us/file/18418398-415952666&#34;&gt;halium-boot.img&lt;/a&gt;引导镜像&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tc5.us/file/18418398-415952924&#34;&gt;system.img&lt;/a&gt; 系统镜像&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tc5.us/file/18418398-416068353&#34;&gt;ubports-touch.rootfs-xenial-armhf.tar.gz&lt;/a&gt; UbuntuTouch系统镜像&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;下载完成后下来开始安装，本地PC环境为LinuxMint(类Ubuntu)，建议以下操作在&lt;strong&gt;root&lt;/strong&gt;权限下操作。&lt;/p&gt;
&lt;h2 id=&#34;安装工具&#34;&gt;安装工具&lt;/h2&gt;
&lt;p&gt;首先安装&lt;code&gt;adb&lt;/code&gt;以及&lt;code&gt;fastboot&lt;/code&gt;工具&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo apt install adb fastboot
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;解锁手机&#34;&gt;解锁手机&lt;/h2&gt;
&lt;p&gt;接下来设置手机，&lt;strong&gt;设置&lt;/strong&gt;-&amp;gt;&lt;strong&gt;关于手机&lt;/strong&gt;，连击&lt;strong&gt;版本号&lt;/strong&gt;打开&lt;strong&gt;开发者选项&lt;/strong&gt;，进入&lt;strong&gt;开发者选项&lt;/strong&gt;打开&lt;strong&gt;OEM解锁&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;然后关闭手机，按住&lt;strong&gt;电源&lt;/strong&gt;+&lt;strong&gt;音量上&lt;/strong&gt;进入fastboot模式，链接手机和电脑。&lt;/p&gt;
&lt;p&gt;在电脑端运行以下命令解锁&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;fastboot oem unlock
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;按照手机提示，选择&lt;strong&gt;YES&lt;/strong&gt;开始解锁，完成后手机重启。&lt;/p&gt;
&lt;h2 id=&#34;安装recovery&#34;&gt;安装Recovery&lt;/h2&gt;
&lt;p&gt;重启手机进入fastboot模式&lt;/p&gt;
&lt;p&gt;接下来通过以下命令安装&lt;strong&gt;Recovery&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;fastboot flash recovery TWRP_recovery.img
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;安装完成后，关闭手机，按&lt;strong&gt;电源&lt;/strong&gt;+&lt;strong&gt;音量减&lt;/strong&gt;进入Recovery&lt;/p&gt;
&lt;h2 id=&#34;安装lineageos&#34;&gt;安装LineageOS&lt;/h2&gt;
&lt;p&gt;通过TWRP Recovery来刷入&lt;strong&gt;LineageOS ROM&lt;/strong&gt;，完成后双清重启再次进入&lt;strong&gt;Recovery&lt;/strong&gt;，通过数据线连接手机，进行后面操作。&lt;/p&gt;
&lt;h2 id=&#34;安装ubuntutouch&#34;&gt;安装UbuntuTouch&lt;/h2&gt;
&lt;p&gt;手机进入&lt;strong&gt;Recovery&lt;/strong&gt;模式，通过数据线连接电脑，然后开始按照以下进行安装。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;root@hpzb14:/media/alair/data# ./halium-install.sh -p ut ubports-touch.rootfs-xenial-armhf.tar.gz system.img 
Debug: Chosen rootfs is ubports-touch.rootfs-xenial-armhf.tar.gz
Debug: Chosen android image is system.img
Debug: Chosen release is ut

I: Writing rootfs into mountable image
I: Writing android image into mountable image
I: Running post installation tasks
enabling Mir ... [done]
enabling SSH ... [done]
Please enter a new password for the user &#39;phablet&#39;:
输入新的 UNIX 密码： 
重新输入新的 UNIX 密码： 
passwd: password updated successfully
I: Unmounting images
I: Shrinking images
e2fsck 1.44.1 (24-Mar-2018)
resize2fs 1.44.1 (24-Mar-2018)
将 .halium-install-imgs.6Kcou/system.img 上的文件系统调整为 120200 个块（每块 4k）。
开始第 2 步（共 32687 步）
正在重定位块            XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
开始第 3 步（共 24 步）
正在扫描inode表          XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
.halium-install-imgs.6Kcou/system.img 上的文件系统现在为 120200 个块（每块 4k）。

I: Pushing rootfs and android image to /data via ADB
.halium-install-imgs.6Kcou/rootfs.img: 1 file pushed. 7.1 MB/s (3221225472 bytes in 433.702s)
.halium-install-imgs.6Kcou/system.img: 1 file pushed. 7.7 MB/s (492339200 bytes in 61.329s)
I: Cleaning up host
I: Cleaning up device
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后继续在&lt;strong&gt;Recovery&lt;/strong&gt;模式下:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;adb shell &#39;touch /data/.writable_image; mkdir /a; mount /data/rootfs.img /a; echo manual | tee /a/etc/init/rsyslog.override; touch /a/.writable_device_image; umount /a; sync&#39;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;以上操作完后，重启手机进入&lt;strong&gt;fastboot模式&lt;/strong&gt;，按照以下安装引导系统程序。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;root@hpzb14:/media/alair/data# fastboot flash boot halium-boot.img 
&amp;lt; waiting for any device &amp;gt;
target reported max download size of 435159040 bytes
sending &#39;boot&#39; (15468 KB)...
OKAY [  0.410s]
writing &#39;boot&#39;...
OKAY [  0.119s]
finished. total time: 0.529s
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;至此安装完成，重启即可进入UbuntuTouch系统。&lt;/p&gt;
&lt;h4 id=&#34;重要提示&#34;&gt;重要提示&lt;/h4&gt;
&lt;p&gt;进入系统后，打开&lt;strong&gt;Terminal&lt;/strong&gt;输入&lt;code&gt;sudo ubports-qa install xenial_-_haliumfixup &amp;amp;&amp;amp; sudo apt install pulseaudio-modules-droid-glue-24&lt;/code&gt;更新音频模块。如果默认软件源速度太慢，可以&lt;a href=&#34;https://unixetc.com/post/ubuntu-touch-change-mirror/&#34;&gt;参考此文&lt;/a&gt;先更换为国内源。&lt;/p&gt;
&lt;h3 id=&#34;ubuntutouch系统截图&#34;&gt;UbuntuTouch系统截图&lt;/h3&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;&lt;a href=&#34;https://github.com/Vince1171/OnePlus3-T-Halium-Prebuild&#34;&gt;https://github.com/Vince1171/OnePlus3-T-Halium-Prebuild&lt;/a&gt;&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>西数Mycloud破解应用安装</title>
      <link>https://unixetc.com/post/wd-mycloud-gen2-enable-apps-installtion/</link>
      <pubDate>Mon, 19 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/wd-mycloud-gen2-enable-apps-installtion/</guid>
      <description>&lt;p&gt;感谢俄罗斯大神&lt;strong&gt;Fox_exe&lt;/strong&gt;提供破解方法以及软件。&lt;/p&gt;
&lt;p&gt;破解方法：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;登录网页版后台&lt;/li&gt;
&lt;li&gt;在URL后输入以下内容：
&lt;code&gt;javascript:APP_INSTALL_FUNCTION=1; APPS_EULA=1; check_app_eula();&lt;/code&gt;
&lt;strong&gt;备用方法&lt;/strong&gt;  按[ctrl] + [shift] + [i], 进入 &amp;ldquo;Console&amp;rdquo; , 输入以下内容按回车键：
&lt;code&gt;APP_INSTALL_FUNCTION=1; APPS_EULA=1; check_app_eula();&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;进入&lt;strong&gt;应用&lt;/strong&gt;页，安装&amp;quot;WD_Crack&amp;rdquo;，&lt;a href=&#34;https://dotbbq.pipipan.com/dir/18418398-35291380-906c51/&#34;&gt;下载地址&lt;/a&gt;。&lt;/li&gt;
&lt;li&gt;刷新页面后就可以安装其他三方app。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;一些三方软件&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;以下为部分软件清单，详细清单请转至&lt;a href=&#34;https://dotbbq.pipipan.com/dir/18418398-35291410-d4d981/&#34;&gt;下载目录&amp;raquo;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;WDMyCloud_AcronisTrueImage_2015.bin
WDMyCloud_Adminer_4.2.5.bin
WDMyCloud_Arcus_2.5325088.bin
WDMyCloud_BitTorrentSync_2.3.8.bin
WDMyCloud_ChrootedDebian_8.0-1.bin
WDMyCloud_CustomAppList_0.5.bin
WDMyCloud_DVBLink_5.50.bin
WDMyCloud_Dropbox_2.00.bin
WDMyCloud_IceCast_1.04.bin
WDMyCloud_Joomla_1.03.bin
WDMyCloud_MediaWiki_1.23.15.bin
WDMyCloud_QuikFynd2_2.0.1.bin
WDMyCloud_Sitebar_3-1.bin
WDMyCloud_SqueezeCenter_1.03.bin
WDMyCloud_Transmission_2.92-2.bin
WDMyCloud_UtilsUpdate-extras_1.0.0.bin
WDMyCloud_UtilsUpdate_17.bin
WDMyCloud_WDFacebook_0.1.bin
WDMyCloud_WDSleepFix_1.0.bin
WDMyCloud_WDTimeline_0.1.bin
WDMyCloud_WordPress_1.03.bin
WDMyCloud_WordPress_4.7.2.bin
WDMyCloud_WordPress_4.7.bin
WDMyCloud_Z-Way-Server_2.22.bin
WDMyCloud_aMule_1.05.bin
WDMyCloud_abFiles_1.55.bin
WDMyCloud_cdc-acm_0.1.bin
WDMyCloud_clamAV_1.12.bin
WDMyCloud_cops_1.0.1.bin
WDMyCloud_git_1.40.bin
WDMyCloud_hamachi_2.1.0.174.bin
WDMyCloud_nzbget_1.23.bin
WDMyCloud_pawfaliki_0.5.2-2.bin
WDMyCloud_phormer_3.3.1-1.bin
WDMyCloud_phpBB_1.03.bin
WDMyCloud_phpMyAdmin_4.0.10.18.bin
WDMyCloud_phpSysInfo_3.2.6-2.bin
WDMyCloud_plexmediaserver_1.16.0.1226.bin&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>如何判断西数MyCloud是第几代</title>
      <link>https://unixetc.com/post/western-digital-my-cloud-version-judgment-method/</link>
      <pubDate>Sat, 17 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/western-digital-my-cloud-version-judgment-method/</guid>
      <description>&lt;p&gt;西数MyCloud共出了两代，那么如何判断呢？&lt;/p&gt;
&lt;h3 id=&#34;看系统版本&#34;&gt;看系统版本&lt;/h3&gt;
&lt;p&gt;第一代的是3.x/4.x，第二代的是2.x&lt;/p&gt;
&lt;h3 id=&#34;看cpu信息&#34;&gt;看CPU信息&lt;/h3&gt;
&lt;p&gt;SSH登录MyCloud后，通过&lt;code&gt;cat /proc/cpuinfo&lt;/code&gt;检查CPU信息&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第一代是&lt;code&gt;Comcerto 2000 EVM&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;第二代是 &lt;code&gt;Marvell Armada 375 (Device Tree) &lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>UbuntuTouch更换国内源</title>
      <link>https://unixetc.com/post/ubuntu-touch-change-mirror/</link>
      <pubDate>Sun, 04 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/ubuntu-touch-change-mirror/</guid>
      <description>&lt;p&gt;在&lt;a href=&#34;https://unixetc.com/post/oneplus-3t-install-ubuntutouch/&#34;&gt;一加3T上安装完UbuntuTouch&lt;/a&gt;后，参考&lt;a href=&#34;https://unixetc.com/post/shell-access-ubuntu-touch-via-ssh/&#34;&gt;此文开启SSH&lt;/a&gt;登录。&lt;/p&gt;
&lt;p&gt;接下来就是更换软件源了，国内推荐USTC和清华大学开源镜像。&lt;/p&gt;
&lt;p&gt;通过&lt;code&gt;vi /etc/apt/sources.list&lt;/code&gt; 编辑软件源,然后在vi中通过以下命令进行替换操作：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;:%s/ports.ubuntu.com/mirrors.tuna.tsinghua.edu.cn/g
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;保存后即可。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>通过SSH访问UbuntuTouch</title>
      <link>https://unixetc.com/post/shell-access-ubuntu-touch-via-ssh/</link>
      <pubDate>Thu, 01 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/shell-access-ubuntu-touch-via-ssh/</guid>
      <description>&lt;p&gt;在&lt;a href=&#34;https://unixetc.com/post/oneplus-3t-install-ubuntutouch/&#34;&gt;一加3T上安装完UbuntuTouch&lt;/a&gt;后，可以通过以下方法开启SSH登录。&lt;/p&gt;
&lt;p&gt;打开终端(Terminal)，输入以下命令开启ssh服务。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo android-gadget-service enable ssh
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后就可以通过&lt;code&gt;ssh phablet@ip&lt;/code&gt;来登录设备。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://unixetc.com/imgs/access_ubuntu_touch_via_ssh.png&#34; alt=&#34;&amp;ldquo;access ubuntutouch via ssh&amp;rdquo;&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>找回windows10照片查看器</title>
      <link>https://unixetc.com/post/retrieve-windows10-photo-viewer/</link>
      <pubDate>Sun, 28 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/retrieve-windows10-photo-viewer/</guid>
      <description>&lt;p&gt;Windows10中可以通过修改注册表的方法找回照片查看器。&lt;/p&gt;
&lt;p&gt;新建&lt;code&gt;ton.reg&lt;/code&gt;注册表文件，内容如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Windows Registry Editor Version 5.00
; Change Extension&#39;s File Type
[HKEY_CURRENT_USER\Software\Classes\.jpg]
@=&amp;quot;PhotoViewer.FileAssoc.Tiff&amp;quot;

; Change Extension&#39;s File Type
[HKEY_CURRENT_USER\Software\Classes\.jpeg]
@=&amp;quot;PhotoViewer.FileAssoc.Tiff&amp;quot;

; Change Extension&#39;s File Type
[HKEY_CURRENT_USER\Software\Classes\.gif]
@=&amp;quot;PhotoViewer.FileAssoc.Tiff&amp;quot;

; Change Extension&#39;s File Type
[HKEY_CURRENT_USER\Software\Classes\.png]
@=&amp;quot;PhotoViewer.FileAssoc.Tiff&amp;quot;

; Change Extension&#39;s File Type
[HKEY_CURRENT_USER\Software\Classes\.bmp]
@=&amp;quot;PhotoViewer.FileAssoc.Tiff&amp;quot;

; Change Extension&#39;s File Type
[HKEY_CURRENT_USER\Software\Classes\.tiff]
@=&amp;quot;PhotoViewer.FileAssoc.Tiff&amp;quot;

; Change Extension&#39;s File Type
[HKEY_CURRENT_USER\Software\Classes\.ico]
@=&amp;quot;PhotoViewer.FileAssoc.Tiff&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;保存后，双击运行即可，然后右键打开方式中即可看到照片查看器。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Debian10中sudo配置</title>
      <link>https://unixetc.com/post/sudo-configuration-in-debian10/</link>
      <pubDate>Wed, 10 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/sudo-configuration-in-debian10/</guid>
      <description>&lt;p&gt;Debian10中&lt;code&gt;/etc/sudoers&lt;/code&gt;中提示了需要通过&lt;code&gt;visudo&lt;/code&gt;来编辑该文件，如下：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This file MUST be edited with the &amp;lsquo;visudo&amp;rsquo; command as root.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;但奇葩的是系统中没有&lt;code&gt;visudo&lt;/code&gt;命令，&lt;code&gt;apt&lt;/code&gt;搜索也搜不到，-_-!&lt;/p&gt;
&lt;p&gt;因此只能通过以下方法来编辑：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#echo &amp;quot;alair  ALL=(ALL:ALL) ALL&amp;quot; &amp;gt;&amp;gt; /etc/sudoers
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;保存后用户&lt;code&gt;alair&lt;/code&gt;就可以使用&lt;code&gt;sudo&lt;/code&gt;命令来进行&lt;strong&gt;root&lt;/strong&gt;权限操作了。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Ubuntu/Widnows双系统时间不一致解决方法</title>
      <link>https://unixetc.com/post/ubuntu-windows-dual-system-time-is-inconsistent/</link>
      <pubDate>Tue, 09 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/ubuntu-windows-dual-system-time-is-inconsistent/</guid>
      <description>&lt;p&gt;安装Ubuntu和Windows双系统的情况下，Ubuntu的时间总会和Windows的时间相差8小时，原因在于widows认为BIOS时间是本地时间，Ubuntu认为BIOS时间是UTC时间，即协调世界时(Universal Time Coordinated)，是由国际无线电咨询委员会规定和推荐,并由国际时间局(BIH)负责保持的以秒为基础的时间标度。&lt;/p&gt;
&lt;p&gt;UTC相当于本初子午线(即经度0度)上的平均太阳时，过去曾用格林威治平均时(GMT)来表示。北京时间比UTC时间早8小时，以1999年1月1日0000UTC为例，UTC时间是零点，北京时间为1999年1月1日早上8点整。所以我们在时间上面相隔了8个小时。这个时候bios的时间和系统的时间当然是不一致，一个代表UTC时间，一个代表CST(＋8时区)，即上海的时间。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;旧版Ubuntu（Ubuntu10左右）：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;编辑&lt;code&gt;/etc/default/rcS&lt;/code&gt; 将&lt;code&gt;UTC=yes&lt;/code&gt;改成&lt;code&gt;UTC=no&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;新版Ubuntu（Ubuntu16.04）：&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;新版Ubuntu使用systemd作为管理系统，时间由timedatectl来管理，以下为修改方法：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$sudo timedatectl set-local-rtc 1
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;重启完成。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>CentOS7安装ffsend快速分享文件</title>
      <link>https://unixetc.com/post/centos7-install-ffsend-to-share-files/</link>
      <pubDate>Thu, 04 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/centos7-install-ffsend-to-share-files/</guid>
      <description>&lt;h3 id=&#34;firefox-send是什么&#34;&gt;Firefox Send是什么？&lt;/h3&gt;
&lt;p&gt;Firefox Send是一个简单、私密的文件分享服务，使用Firefox Send端到端加密分享文件，链接到期即焚。分享更私密，文件到期真正无痕迹。&lt;/p&gt;
&lt;h3 id=&#34;安装ffsend&#34;&gt;安装ffsend&lt;/h3&gt;
&lt;p&gt;ffsend是一款Firefox Send的客户端，支持多种操作系统(Linux、Windows、MacOS&amp;hellip;)&lt;/p&gt;
&lt;p&gt;以下为CentOS7安装ffsend实例：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#wget https://glare.now.sh/timvisee/ffsend/linux-x64-static -o /usr/local/bin/ffsend
#chmod +x /usr/local/bin/ffsend
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;其他版本安装可以参考&lt;a href=&#34;https://github.com/timvisee/ffsend&#34;&gt;ffsend官网&lt;/a&gt;和&lt;a href=&#34;https://github.com/timvisee/ffsend/releases&#34;&gt;ffsend官方下载&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;ffsend使用方法&#34;&gt;ffsend使用方法&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;上传文件&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ffsend upload fenix.apk
Upload complete
https://send.firefox.com/download/4cecb9c1ab628f8e/#m5is-YRSfnBIQ-pBaSds0A
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;高级上传&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;指定下再限制20&lt;/p&gt;
&lt;p&gt;输入密码加密文件&lt;/p&gt;
&lt;p&gt;在上传之前归档文件&lt;/p&gt;
&lt;p&gt;将共享链接复制到剪贴板&lt;/p&gt;
&lt;p&gt;在浏览器中打开共享链接&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code&gt;ffsend upload --downloads 20 --password --archive --copy --open fenix.apk
Password: ******
https://send.firefox.com/download/4cecb9c1ab628f8e/#m5is-YRSfnBIQ-pBaSds0A
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;上传到自定义主机&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ffsend u -h https://example.com/ my-file.txt
https://example.com/#sample-share-url
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;下载文件&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ffsend download https://send.firefox.com/download/4cecb9c1ab628f8e/#m5is-YRSfnBIQ-pBaSds0A
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Linux中转换图片为webp格式</title>
      <link>https://unixetc.com/post/convert-images-to-webp-in-linux/</link>
      <pubDate>Tue, 11 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/convert-images-to-webp-in-linux/</guid>
      <description>&lt;h3 id=&#34;安装webp&#34;&gt;安装WebP&lt;/h3&gt;
&lt;p&gt;Ubuntu中可以使用以下命令安装WebP&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$sudo apt install webp 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;其他Linux系统，可以从&lt;a href=&#34;https://storage.googleapis.com/downloads.webmproject.org/releases/webp/index.html&#34;&gt;这里&lt;/a&gt;下载对应压缩包，如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;wget https://storage.googleapis.com/downloads.webmproject.org/releases/webp/libwebp-1.0.2-linux-x86-64.tar.gz
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;解压后得到以下文件：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$tar zxf libwebp-1.0.2-linux-x86-64.tar.gz
$cd libwebp-1.0.2-linux-x86-64
$cd bin
$ll
total 12M
-rwxr-xr-x 1 100 users 679K Jan 15 12:47 anim_diff
-rwxr-xr-x 1 100 users 923K Jan 15 12:47 anim_dump
-rwxr-xr-x 1 100 users 2.4M Jan 15 12:47 cwebp
-rwxr-xr-x 1 100 users 915K Jan 15 12:47 dwebp
-rwxr-xr-x 1 100 users 2.3M Jan 15 12:47 get_disto
-rwxr-xr-x 1 100 users 703K Jan 15 12:47 gif2webp
-rwxr-xr-x 1 100 users 2.4M Jan 15 12:47 img2webp
-rwxr-xr-x 1 100 users 682K Jan 15 12:47 vwebp
-rwxr-xr-x 1 100 users 359K Jan 15 12:47 webpinfo
-rwxr-xr-x 1 100 users 375K Jan 15 12:47 webpmux
-rwxr-xr-x 1 100 users 347K Jan 15 12:47 webp_quality
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;anim_diff – 动画文件差异对比工具&lt;/li&gt;
&lt;li&gt;anim_dump – 动画文件差异转存工具&lt;/li&gt;
&lt;li&gt;cwebp – webp编码工具&lt;/li&gt;
&lt;li&gt;dwebp – webp解码工具&lt;/li&gt;
&lt;li&gt;gif2webp – 转换gif为webp&lt;/li&gt;
&lt;li&gt;img2webp – 将一系列图片转换为webp动画文件&lt;/li&gt;
&lt;li&gt;vwebp – webp查看软件&lt;/li&gt;
&lt;li&gt;webpinfo – 查看webp图片文件信息&lt;/li&gt;
&lt;li&gt;webpmux – webp复用工具&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;webp转换实例&#34;&gt;WebP转换实例&lt;/h3&gt;
&lt;p&gt;将webp工具目录添加至&lt;strong&gt;PATH&lt;/strong&gt;中，编辑&lt;code&gt;~/.bashrc&lt;/code&gt;添加以下内容：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;export PATH=$PATH:~/libwebp-1.0.2-linux-x86-64/bin
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;cwebp&lt;/strong&gt;语法说明：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cwebp [options] input_file -o output_file.webp
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;以下为转换实例：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cwebp -q 50 -lossless picture.png -o picture_lossless.webp
cwebp -q 70 picture_with_alpha.png -o picture_with_alpha.webp
cwebp -sns 70 -f 50 -size 60000 picture.png -o picture.webp
cwebp -o picture.webp -- ---picture.png&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Termux开启扩展快捷键</title>
      <link>https://unixetc.com/post/termux-extra-keys-row/</link>
      <pubDate>Tue, 11 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/termux-extra-keys-row/</guid>
      <description>&lt;p&gt;打开Termux，从屏幕左边缘向右滑动，打开抽屉菜单，然后长按&lt;strong&gt;KEYBOARD&lt;/strong&gt;，即可打开扩展快捷键。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://unixetc.com/imgs/20190611085423.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Termux编辑软件源</title>
      <link>https://unixetc.com/post/termux-edit-sources.list/</link>
      <pubDate>Mon, 10 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/termux-edit-sources.list/</guid>
      <description>&lt;p&gt;&lt;code&gt;vi /data/data/com.termux/files/usr/etc/apt/sources.list&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;将 &lt;strong&gt;&lt;a href=&#34;https://termux.net&#34;&gt;https://termux.net&lt;/a&gt;&lt;/strong&gt; 替换成 &lt;strong&gt;&lt;a href=&#34;https://mirrors.ustc.edu.cn/termux&#34;&gt;https://mirrors.ustc.edu.cn/termux&lt;/a&gt;&lt;/strong&gt;，保存退出即可。&lt;/p&gt;
&lt;p&gt;你也可以使用 sed 命令进行文本替换：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sed -i &#39;s,https://termux.net,https://mirrors.ustc.edu.cn/termux,&#39; $PREFIX/etc/apt/sources.list
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;更新&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pkg update
pkg upgrade&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Ubuntu中v2ray客户端配置实例</title>
      <link>https://unixetc.com/post/v2ray-client-configuration-example-in-ubuntu/</link>
      <pubDate>Sat, 18 May 2019 09:00:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/v2ray-client-configuration-example-in-ubuntu/</guid>
      <description>&lt;p&gt;首先使用&lt;code&gt;bash &amp;lt;(curl -L -s https://install.direct/go.sh)&lt;/code&gt;来快捷安装v2ray，如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;root@vm:~# bash &amp;lt;(curl -L -s https://install.direct/go.sh)
Installing V2Ray v4.18.0 on x86_64
Downloading V2Ray: https://github.com/v2ray/v2ray-core/releases/download/v4.18.0/v2ray-linux-64.zip
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100   608    0   608    0     0    581      0 --:--:--  0:00:01 --:--:--   581
100 10.5M  100 10.5M    0     0   172k      0  0:01:02  0:01:02 --:--:--  194k
Extracting V2Ray package to /tmp/v2ray.
Archive:  /tmp/v2ray/v2ray.zip
  inflating: /tmp/v2ray/config.json  
   creating: /tmp/v2ray/doc/
  inflating: /tmp/v2ray/doc/readme.md  
  inflating: /tmp/v2ray/geoip.dat    
  inflating: /tmp/v2ray/geosite.dat  
   creating: /tmp/v2ray/systemd/
  inflating: /tmp/v2ray/systemd/v2ray.service  
   creating: /tmp/v2ray/systemv/
  inflating: /tmp/v2ray/systemv/v2ray  
  inflating: /tmp/v2ray/v2ctl        
 extracting: /tmp/v2ray/v2ctl.sig    
  inflating: /tmp/v2ray/v2ray        
 extracting: /tmp/v2ray/v2ray.sig    
  inflating: /tmp/v2ray/vpoint_socks_vmess.json  
  inflating: /tmp/v2ray/vpoint_vmess_freedom.json  
PORT:51332
UUID:7378f6a4-790a-11e9-8f9e-2a86e4085a59
Created symlink /etc/systemd/system/multi-user.target.wants/v2ray.service → /etc/systemd/system/v2ray.service.
V2Ray v4.18.0 is installed.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后编辑&lt;code&gt;/etc/v2ray/config.json&lt;/code&gt;文件，如下设置：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{
  &amp;quot;inbounds&amp;quot;: [{
    &amp;quot;port&amp;quot;: 1080,  // SOCKS 代理端口，在浏览器中需配置代理并指向这个端口
    &amp;quot;listen&amp;quot;: &amp;quot;127.0.0.1&amp;quot;,
    &amp;quot;protocol&amp;quot;: &amp;quot;socks&amp;quot;,
    &amp;quot;settings&amp;quot;: {
      &amp;quot;udp&amp;quot;: true
    }
  }],
  &amp;quot;outbounds&amp;quot;: [{
    &amp;quot;protocol&amp;quot;: &amp;quot;vmess&amp;quot;,
    &amp;quot;settings&amp;quot;: {
      &amp;quot;vnext&amp;quot;: [{
        &amp;quot;address&amp;quot;: &amp;quot;server&amp;quot;, // 服务器地址，请修改为你自己的服务器 ip 或域名
        &amp;quot;port&amp;quot;: 10086,  // 服务器端口
        &amp;quot;users&amp;quot;: [{ &amp;quot;id&amp;quot;: &amp;quot;b831381d-6324-4d53-ad4f-8cda48b30811&amp;quot; }]
      }]
    }
  },{
    &amp;quot;protocol&amp;quot;: &amp;quot;freedom&amp;quot;,
    &amp;quot;tag&amp;quot;: &amp;quot;direct&amp;quot;,
    &amp;quot;settings&amp;quot;: {}
  }],
  &amp;quot;routing&amp;quot;: {
    &amp;quot;domainStrategy&amp;quot;: &amp;quot;IPOnDemand&amp;quot;,
    &amp;quot;rules&amp;quot;: [{
      &amp;quot;type&amp;quot;: &amp;quot;field&amp;quot;,
      &amp;quot;ip&amp;quot;: [&amp;quot;geoip:private&amp;quot;],
      &amp;quot;outboundTag&amp;quot;: &amp;quot;direct&amp;quot;
    }]
  }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;编辑完成后保存，重新启动v2ray&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;root@vm:~# service v2ray stop
root@vm:~# service v2ray start
root@vm:~# service v2ray status
● v2ray.service - V2Ray Service
   Loaded: loaded (/etc/systemd/system/v2ray.service; enabled; vendor preset: en
   Active: active (running) since Sat 2019-05-18 08:58:43 CST; 5s ago
 Main PID: 8025 (v2ray)
    Tasks: 7 (limit: 2311)
   CGroup: /system.slice/v2ray.service
           └─8025 /usr/bin/v2ray/v2ray -config /etc/v2ray/config.json

5月 18 08:58:43 vm systemd[1]: Started V2Ray Service.
5月 18 08:58:43 vm v2ray[8025]: V2Ray 4.18.0 (Po) 20190228
5月 18 08:58:43 vm v2ray[8025]: A unified platform for anti-censorship.
5月 18 08:58:44 vm v2ray[8025]: 2019/05/18 08:58:44 [Warning] v2ray.com/core: V2
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后Firefox设置代理如下：&lt;/p&gt;
&lt;p&gt;设置-常规-网络设置
勾选&lt;strong&gt;手动代理配置&lt;/strong&gt;，在&lt;strong&gt;SOCKS主机&lt;/strong&gt;中填入&lt;code&gt;127.0.0.1&lt;/code&gt;本地IP和&lt;strong&gt;端口&lt;/strong&gt;，协议勾选&lt;strong&gt;SOCKS_v5&lt;/strong&gt;
建议勾选&lt;strong&gt;使用SOCKSv5时代理DNS查询&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://unixetc.com/imgs/3178501606.webp&#34; alt=&#34;20190518090412.webp&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>VMware安装Alpine Linux实例</title>
      <link>https://unixetc.com/post/vmware-installs-alpine-linux-instance/</link>
      <pubDate>Tue, 14 May 2019 12:59:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/vmware-installs-alpine-linux-instance/</guid>
      <description>&lt;h2 id=&#34;alpinelinux介绍&#34;&gt;AlpineLinux介绍&lt;/h2&gt;
&lt;p&gt;Alpine 的意思是“高山的”，比如 Alpine plants高山植物，Alpine skiing高山滑雪、the alpine resort阿尔卑斯山胜地。&lt;/p&gt;
&lt;p&gt;Alpine Linux 网站首页注明“Small！Simple！Secure！Alpine Linux is a security-oriented, lightweight Linux distribution based on musl libc and busybox.”概括了以下特点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;小巧：基于Musl libc和busybox，和busybox一样小巧，最小的Docker镜像只有5MB；&lt;/li&gt;
&lt;li&gt;安全：面向安全的轻量发行版；&lt;/li&gt;
&lt;li&gt;简单：提供APK包管理工具，软件的搜索、安装、删除、升级都非常方便。&lt;/li&gt;
&lt;li&gt;适合容器使用：由于小巧、功能完备，非常适合作为容器的基础镜像。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;准备工作&#34;&gt;准备工作&lt;/h2&gt;
&lt;p&gt;安装&lt;strong&gt;VMware&lt;/strong&gt;虚拟机软件，新建虚拟机，配置如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://unixetc.com/imgs/2143496721.png&#34; alt=&#34;小Q截图-20190514141914.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;下载AlpineLinux镜像文件&lt;strong&gt;alpine-standard-3.9.4-x86_64.iso&lt;/strong&gt;，下载地址: &lt;a href=&#34;https://www.alpinelinux.org/downloads/&#34;&gt;https://www.alpinelinux.org/downloads/&lt;/a&gt;
设置虚拟机光驱挂载镜像文件&lt;strong&gt;alpine-standard-3.9.4-x86_64.iso&lt;/strong&gt;。&lt;/p&gt;
&lt;h2 id=&#34;开始安装alpine-linux&#34;&gt;开始安装Alpine Linux&lt;/h2&gt;
&lt;p&gt;启动虚拟机，开始从光驱引导系统，进入系统后，输入&lt;code&gt;root&lt;/code&gt;登录，然后输入&lt;code&gt;setup-alpine&lt;/code&gt;开始启动安装程序。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://unixetc.com/imgs/533902894.png&#34; alt=&#34;小Q截图-20190514142253.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;下来设置键盘布局(us)、主机名(vm)以及网络配置：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://unixetc.com/imgs/3363240078.png&#34; alt=&#34;小Q截图-20190514142520.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;接着设置时区(timezone)&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://unixetc.com/imgs/4004563438.png&#34; alt=&#34;小Q截图-20190514142650.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://unixetc.com/imgs/3391016607.png&#34; alt=&#34;小Q截图-20190514142733.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后是网络代理和网络时间同步(NTP)设置&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://unixetc.com/imgs/3373348860.png&#34; alt=&#34;小Q截图-20190514142824.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;接下里选择软件源镜像(mirrors)，我选择了兰州大学的镜像：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://unixetc.com/imgs/281887034.png&#34; alt=&#34;小Q截图-20190514142926.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后选择SSH服务程序，设置安装磁盘以及使用方式，完成安装后会提示**Installation is complete. Please reboot.**至此安装完成。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://unixetc.com/imgs/996094300.png&#34; alt=&#34;小Q截图-20190514143121.png&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;安装awesome桌面&#34;&gt;安装Awesome桌面&lt;/h2&gt;
&lt;h3 id=&#34;添加普通用户&#34;&gt;添加普通用户&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;#adduser alair
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://unixetc.com/imgs/3896725846.png&#34; alt=&#34;小Q截图-20190514143635.png&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;启用community-repository&#34;&gt;启用Community Repository&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;vi /etc/apk/repositories&lt;/code&gt;编辑软件源配置，去掉其中Community Repository前面的注释符(#)&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://unixetc.com/imgs/1068991935.png&#34; alt=&#34;小Q截图-20190514143853.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;apk update&amp;amp;&amp;amp;apk upgrade&lt;/code&gt;更新软件。&lt;/p&gt;
&lt;h3 id=&#34;安装awesome&#34;&gt;安装awesome&lt;/h3&gt;
&lt;p&gt;使用以下命令安装awesome、lua、feh和lxterminal&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#apk add awesome lua feh lxterminal
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;其他桌面应用可以按需添加，比如firefox, gnumeric, xchat, gimp, pidgin, geany, vim等。&lt;/p&gt;
&lt;h3 id=&#34;设置xorg服务&#34;&gt;设置Xorg服务&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;#setup-xorg-base
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;启动awesome桌面&#34;&gt;启动Awesome桌面&lt;/h2&gt;
&lt;p&gt;安装&lt;code&gt;sudo&lt;/code&gt;，配置普通用户权限&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#apk add sudo
#visudo
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;添加如下内容&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;alair ALL=(ALL) ALL&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;退出当前root用户，用普通用户登录。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ echo &#39;awesome&#39; &amp;gt;&amp;gt; /home/alair/.xinitrc
$ mkdir /home/alair/.config
$ cp -r /etc/xdg/awesome  /home/alair/.config
$ vi /home/alair/.config/awesome/rc.lua
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;在&lt;code&gt;rc.lua&lt;/code&gt;文件中搜索&lt;strong&gt;terminal&lt;/strong&gt;行，将其中的&lt;code&gt;xterm&lt;/code&gt;替换为&lt;code&gt;lxterminal&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://unixetc.com/imgs/2773853826.png&#34; alt=&#34;小Q截图-20190514145228.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后通过以下命令启动Awesome桌面&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$startx
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://unixetc.com/imgs/3499710974.png&#34; alt=&#34;微信截图_20190514150556.png&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Mplayer和N900镜头</title>
      <link>https://unixetc.com/post/mplayer-and-the-n900-cameras/</link>
      <pubDate>Sat, 04 May 2019 17:05:01 +0000</pubDate>
      
      <guid>https://unixetc.com/post/mplayer-and-the-n900-cameras/</guid>
      <description>&lt;p&gt;诺基亚N900有前后两个镜头，前置640x480(0.3M)后置848*480(0.4M)，这两个镜头都是&lt;strong&gt;V4L2&lt;/strong&gt;设备，分别对应**/dev/video0&lt;strong&gt;和&lt;/strong&gt;/dev/video1**，因此可以方便的通过&lt;strong&gt;mplayer&lt;/strong&gt;或&lt;strong&gt;gstreamer&lt;/strong&gt;；来访问它们。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Video4Linux或V4L是一个视频截取及设备输出API，以及Linux的驱动程序框架，支持很多USB摄像头、电视调谐卡以及其他设备。
V4L2是V4L的第二个版本。Video4Linux2修复了一些设计上的程序错误，最先在2.5.X版的核心中出现。Video4Linux2的驱动程序包含了一个对Video4Linux1应用程序的兼容模式，虽然支持并不完整，并且建议在V4L2模式下使用Video4Linux1设备。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;mplayer访问镜头：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ mplayer tv:// -tv device=/dev/video0   # 后置镜头
$ mplayer tv:// -tv device=/dev/video1   # 前置镜头
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;如果使用前置镜头，建议使用镜像模式&lt;code&gt;-vf mirror&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ mplayer tv:// -tv device=/dev/video1 -vf mirror&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>NokiaN900刷机方法</title>
      <link>https://unixetc.com/post/nokia-n900-installation-firmware/</link>
      <pubDate>Wed, 01 May 2019 12:14:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/nokia-n900-installation-firmware/</guid>
      <description>&lt;p&gt;刷机工具以及固件文件下再地址见文章末尾。&lt;/p&gt;
&lt;p&gt;首先安装刷机工具&lt;strong&gt;maemo flasher&lt;/strong&gt;，然后下载固件，固件分以下两个文件，下载地址&lt;a href=&#34;https://blbl.dev/NokiaN900/index.html&#34;&gt;https://blbl.dev/NokiaN900/index.html&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;emmc(vanilla)&lt;/li&gt;
&lt;li&gt;firmware(combined)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;切记，先刷&lt;code&gt;emmc&lt;/code&gt;再刷&lt;code&gt;firmware&lt;/code&gt;，并且两次刷机中间不可以开机。&lt;/p&gt;
&lt;p&gt;将手机关机，然后按住键盘上的&lt;!-- raw HTML omitted --&gt;u&lt;!-- raw HTML omitted --&gt;键，再用数据线将手机链接电脑，这是手机会显示NOKIA字样界面，并且右上角显示有USB图标，即进入刷机模式。&lt;/p&gt;
&lt;p&gt;首先写入&lt;code&gt;EMMC&lt;/code&gt;文件，命令如下&lt;code&gt;flasher-3.5 -F emmc.bin -f&lt;/code&gt;，以下为linux下操作实例，以供参考&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;alair@zb14:~/下载$ sudo flasher-3.5 -F RX-51_2009SE_10.2010.13-2.VANILLA_PR_EMMC_MR0_ARM.bin -f
[sudo] alair 的密码： 
flasher v2.5.2 (Oct 21 2009)

Image &#39;mmc&#39;, size 255947 kB
    Version RX-51_2009SE_10.2010.13-2.VANILLA
USB device found found at bus 002, device address 012.
Found device RX-51, hardware revision 2204
NOLO version 1.4.14
Version of &#39;sw-release&#39;: RX-51_2009SE_21.2011.38-1_PR_MR0
Booting device into flash mode.
Suitable USB device not found, waiting.
USB device found found at bus 002, device address 013.
Raw data transfer EP found at EP2.
Image(s) flashed successfully in 27.304 s (9373 kB/s)!   
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后断开链接，取出电池，重新将电池放入再次刷机模式链接电脑，下来写入&lt;code&gt;firmware&lt;/code&gt;文件，命令&lt;code&gt;flasher-3.5 -F firmware.bin -f -R&lt;/code&gt;，以下为Linux操作实例，以供参考。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;alair@zb14:~/下载$ sudo flasher-3.5 -F RX-51_2009SE_20.2010.36-2_PR_COMBINED_MR0_ARM.bin -f -R
flasher v2.5.2 (Oct 21 2009)

SW version in image: RX-51_2009SE_20.2010.36-2_PR_MR0
Image &#39;kernel&#39;, size 1705 kB
    Version 2.6.28-20103103+0m5
Image &#39;rootfs&#39;, size 185728 kB
    Version RX-51_2009SE_20.2010.36-2_PR_MR0
Image &#39;cmt-2nd&#39;, size 81408 bytes
    Version BB5_09.36
Image &#39;cmt-algo&#39;, size 519808 bytes
    Version BB5_09.36
Image &#39;cmt-mcusw&#39;, size 5826 kB
    Version rx51_ICPR82_10w08
Image &#39;2nd&#39;, size 14720 bytes
    Valid for RX-51: 2217, 2218, 2219, 2220, 2120
    Version 1.4.14.9+0m5
Image &#39;xloader&#39;, size 14848 bytes
    Valid for RX-51: 2217, 2218, 2219, 2220, 2120
    Version 1.4.14.9+0m5
Image &#39;secondary&#39;, size 109440 bytes
    Valid for RX-51: 2217, 2218, 2219, 2220, 2120
    Version 1.4.14.9+0m5
Image &#39;2nd&#39;, size 14720 bytes
    Valid for RX-51: 2101, 2102, 2103
    Version 1.4.14.9+0m5
Image &#39;xloader&#39;, size 14848 bytes
    Valid for RX-51: 2101, 2102, 2103
    Version 1.4.14.9+0m5
Image &#39;secondary&#39;, size 109440 bytes
    Valid for RX-51: 2101, 2102, 2103
    Version 1.4.14.9+0m5
Image &#39;2nd&#39;, size 14848 bytes
    Valid for RX-51: 2307, 2308, 2309, 2310
    Version 1.4.14.9+0m5
Image &#39;xloader&#39;, size 14848 bytes
    Valid for RX-51: 2307, 2308, 2309, 2310
    Version 1.4.14.9+0m5
Image &#39;secondary&#39;, size 109440 bytes
    Valid for RX-51: 2307, 2308, 2309, 2310
    Version 1.4.14.9+0m5
Image &#39;2nd&#39;, size 14848 bytes
    Valid for RX-51: 2407, 2408, 2409, 2410
    Version 1.4.14.9+0m5
Image &#39;xloader&#39;, size 14848 bytes
    Valid for RX-51: 2407, 2408, 2409, 2410
    Version 1.4.14.9+0m5
Image &#39;secondary&#39;, size 109440 bytes
    Valid for RX-51: 2407, 2408, 2409, 2410
    Version 1.4.14.9+0m5
Image &#39;2nd&#39;, size 14848 bytes
    Valid for RX-51: 2301, 2302, 2303, 2304, 2305, 2306
    Version 1.4.14.9+0m5
Image &#39;xloader&#39;, size 14848 bytes
    Valid for RX-51: 2301, 2302, 2303, 2304, 2305, 2306
    Version 1.4.14.9+0m5
Image &#39;secondary&#39;, size 109440 bytes
    Valid for RX-51: 2301, 2302, 2303, 2304, 2305, 2306
    Version 1.4.14.9+0m5
Image &#39;2nd&#39;, size 14848 bytes
    Valid for RX-51: 2401, 2402, 2403, 2404, 2405, 2406
    Version 1.4.14.9+0m5
Image &#39;xloader&#39;, size 14848 bytes
    Valid for RX-51: 2401, 2402, 2403, 2404, 2405, 2406
    Version 1.4.14.9+0m5
Image &#39;secondary&#39;, size 109440 bytes
    Valid for RX-51: 2401, 2402, 2403, 2404, 2405, 2406
    Version 1.4.14.9+0m5
Image &#39;2nd&#39;, size 14720 bytes
    Valid for RX-51: 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119
    Version 1.4.14.9+0m5
Image &#39;xloader&#39;, size 14848 bytes
    Valid for RX-51: 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119
    Version 1.4.14.9+0m5
Image &#39;secondary&#39;, size 109440 bytes
    Valid for RX-51: 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119
    Version 1.4.14.9+0m5
Image &#39;2nd&#39;, size 14848 bytes
    Valid for RX-51: 2501, 2502, 2503, 2504, 2505, 2506
    Version 1.4.14.9+0m5
Image &#39;xloader&#39;, size 14848 bytes
    Valid for RX-51: 2501, 2502, 2503, 2504, 2505, 2506
    Version 1.4.14.9+0m5
Image &#39;secondary&#39;, size 109440 bytes
    Valid for RX-51: 2501, 2502, 2503, 2504, 2505, 2506
    Version 1.4.14.9+0m5
Image &#39;2nd&#39;, size 14848 bytes
    Valid for RX-51: 2607, 2608, 2609, 2610
    Version 1.4.14.9+0m5
Image &#39;xloader&#39;, size 14848 bytes
    Valid for RX-51: 2607, 2608, 2609, 2610
    Version 1.4.14.9+0m5
Image &#39;secondary&#39;, size 109440 bytes
    Valid for RX-51: 2607, 2608, 2609, 2610
    Version 1.4.14.9+0m5
Image &#39;2nd&#39;, size 14848 bytes
    Valid for RX-51: 2507, 2508, 2509, 2510
    Version 1.4.14.9+0m5
Image &#39;xloader&#39;, size 14848 bytes
    Valid for RX-51: 2507, 2508, 2509, 2510
    Version 1.4.14.9+0m5
Image &#39;secondary&#39;, size 109440 bytes
    Valid for RX-51: 2507, 2508, 2509, 2510
    Version 1.4.14.9+0m5
Image &#39;2nd&#39;, size 14720 bytes
    Valid for RX-51: 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216
    Version 1.4.14.9+0m5
Image &#39;xloader&#39;, size 14848 bytes
    Valid for RX-51: 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216
    Version 1.4.14.9+0m5
Image &#39;secondary&#39;, size 109440 bytes
    Valid for RX-51: 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216
    Version 1.4.14.9+0m5
Image &#39;2nd&#39;, size 14848 bytes
    Valid for RX-51: 2601, 2602, 2603, 2604, 2605, 2606
    Version 1.4.14.9+0m5
Image &#39;xloader&#39;, size 14848 bytes
    Valid for RX-51: 2601, 2602, 2603, 2604, 2605, 2606
    Version 1.4.14.9+0m5
Image &#39;secondary&#39;, size 109440 bytes
    Valid for RX-51: 2601, 2602, 2603, 2604, 2605, 2606
    Version 1.4.14.9+0m5
Suitable USB device not found, waiting.
USB device found found at bus 002, device address 016.
Found device RX-51, hardware revision 2204
NOLO version 1.4.14
Version of &#39;sw-release&#39;: RX-51_2009SE_21.2011.38-1_PR_MR0
Sending xloader image (14 kB)...
100% (14 of 14 kB, avg. 3625 kB/s)
Sending secondary image (106 kB)...
100% (106 of 106 kB, avg. 15267 kB/s)
Flashing bootloader... done.
Sending cmt-2nd image (79 kB)...
100% (79 of 79 kB, avg. 13250 kB/s)
Sending cmt-algo image (507 kB)...
100% (507 of 507 kB, avg. 29860 kB/s)
Sending cmt-mcusw image (5826 kB)...
100% (5826 of 5826 kB, avg. 36645 kB/s)
Flashing cmt-mcusw... done.
Sending kernel image (1705 kB)...
100% (1705 of 1705 kB, avg. 6742 kB/s)
Flashing kernel... done.
Sending and flashing rootfs image (185728 kB)...
100% (185728 of 185728 kB, avg. 16144 kB/s)
Finishing flashing... done
CMT flashed successfully
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;刷机完成后，手机自动重启。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>NokiaN900删除不必要的软件</title>
      <link>https://unixetc.com/post/n900-removes-unnecessary-software-and-games/</link>
      <pubDate>Tue, 30 Apr 2019 13:40:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/n900-removes-unnecessary-software-and-games/</guid>
      <description>&lt;p&gt;NokiaN900自带的软件不少，还有一些游戏，以下为这些软件的删除方式。&lt;/p&gt;
&lt;p&gt;首先，建议安装&lt;code&gt;rootsh&lt;/code&gt;以&lt;a href=&#34;https://unixetc.com/post/nokia-n900-and-ssh/&#34;&gt;获取ROOT权限&lt;/a&gt;，然后在xTermianl进行以下操作。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名称&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;th&gt;删除命令&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Mahjong&lt;/td&gt;
&lt;td&gt;游戏&lt;/td&gt;
&lt;td&gt;apt-get remove -y osso-mahjong&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Chess&lt;/td&gt;
&lt;td&gt;游戏&lt;/td&gt;
&lt;td&gt;apt-get remove -y gnuchess&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Blocks&lt;/td&gt;
&lt;td&gt;游戏&lt;/td&gt;
&lt;td&gt;apt-get remove -y maemoblocks&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Marbles&lt;/td&gt;
&lt;td&gt;游戏&lt;/td&gt;
&lt;td&gt;apt-get remove -y osso-lmarbles&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;AP News&lt;/td&gt;
&lt;td&gt;软件&lt;/td&gt;
&lt;td&gt;apt-get remove -y ap-installer&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Docs To Go&lt;/td&gt;
&lt;td&gt;软件&lt;/td&gt;
&lt;td&gt;apt-get remove -y dtg-installer&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Sketch&lt;/td&gt;
&lt;td&gt;画图&lt;/td&gt;
&lt;td&gt;apt-get remove -y osso-sketch&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Backup&lt;/td&gt;
&lt;td&gt;备份&lt;/td&gt;
&lt;td&gt;apt-get remove -y osso-backup&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;PDF reader&lt;/td&gt;
&lt;td&gt;PDF阅读&lt;/td&gt;
&lt;td&gt;apt-get remove -y osso-pdf-viewer&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;RSS&lt;/td&gt;
&lt;td&gt;RSS订阅&lt;/td&gt;
&lt;td&gt;apt-get remove -y osso-rss-feed-reader&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Notes&lt;/td&gt;
&lt;td&gt;记事本&lt;/td&gt;
&lt;td&gt;apt-get remove -y osso-notes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Amazon&lt;/td&gt;
&lt;td&gt;Amazon安装快捷方式&lt;/td&gt;
&lt;td&gt;rm   /usr/share/maemo-installer-utils/amazon.install        rm /usr/share/applications/hildon/amazon.desktop&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Facebook&lt;/td&gt;
&lt;td&gt;Facebook安装快捷方式&lt;/td&gt;
&lt;td&gt;rm   /usr/share/applications/hildon/facebook.desktop       rm /usr/share/maemo-installer-utils/facebook.install&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Maps&lt;/td&gt;
&lt;td&gt;Nokia地图&lt;/td&gt;
&lt;td&gt;apt-get remove -y nokia-maps*&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Force Weather&lt;/td&gt;
&lt;td&gt;天气预报安装快捷方式&lt;/td&gt;
&lt;td&gt;rm   /usr/share/maemo-installer-utils/foreca.install      rm /usr/share/applications/hildon/foreca.desktop&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;User Guide&lt;/td&gt;
&lt;td&gt;用户手册快捷方式&lt;/td&gt;
&lt;td&gt;rm /usr/share/applications/hildon/user-guide.desktop&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Get started&lt;/td&gt;
&lt;td&gt;开始使用指南&lt;/td&gt;
&lt;td&gt;apt-get remove -y tutorial-home-applet&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Store&lt;/td&gt;
&lt;td&gt;Nokia商店快捷方式&lt;/td&gt;
&lt;td&gt;rm /usr/share/applications/hildon/ovi.desktop&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</description>
    </item>
    
    <item>
      <title>N900安装最新版Nemo</title>
      <link>https://unixetc.com/post/nokia-n900-install-nemo/</link>
      <pubDate>Sun, 28 Apr 2019 15:56:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/nokia-n900-install-nemo/</guid>
      <description>&lt;p&gt;准备&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;安装最新uboot&lt;/li&gt;
&lt;li&gt;一张至少4g以上的TF卡&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;下载地址&lt;a href=&#34;http://releases.nemomobile.org/releases/&#34;&gt;http://releases.nemomobile.org/releases/&lt;/a&gt;
以最新目录为例，下载&lt;a href=&#34;http://releases.nemomobile.org/releases/latest/images/nemo-armv7hl-n900/&#34;&gt;http://releases.nemomobile.org/releases/latest/images/nemo-armv7hl-n900/&lt;/a&gt;里的&lt;strong&gt;nemo-armv7hl-n900-mmcblk0p.raw.bz2&lt;/strong&gt;
解压出raw文件，然后改后缀为img。Windows下用&lt;strong&gt;Win32DiskImager&lt;/strong&gt;将镜像文件写入TF卡。
Linux下可以使用&lt;code&gt;dd&lt;/code&gt;命令直接写入，不需要改后缀名：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;alair@e6440:/media/alair/bak/downloads$ sudo dd if=nemo-armv7hl-n900-mmcblk0p.raw of=/dev/sdc bs=1M
[sudo] alair 的密码： 
记录了3640+1 的读入
记录了3640+1 的写出
3816816641 bytes (3.8 GB, 3.6 GiB) copied, 185.35 s, 20.6 MB/s
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Windwos中用&lt;strong&gt;winscp&lt;/strong&gt;在你的N900的&lt;code&gt;/etc/bootmenu.d/&lt;/code&gt;新建一个&lt;code&gt;40-nemo.item&lt;/code&gt;文件，贴入以下内容：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ITEM_NAME=&amp;quot;Mer-Nemo Mobile&amp;quot;
ITEM_ID=&amp;quot;nemo&amp;quot;
ITEM_DEVICE=&amp;quot;${EXT_CARD}p3&amp;quot;
ITEM_KERNEL=&amp;quot;uImage&amp;quot;
ITEM_FSTYPE=&amp;quot;vfat&amp;quot;
ITEM_CMDLINE=&amp;quot;root=/dev/mmcblk0p1 rootwait ro console=ttyO2,115200n8 console=tty0 omapfb.vram=0:2M,1:2M,2:2M mtdoops.mtddev=2 quiet&amp;quot;
ITEM_OMAPATAG=1
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Linux系统下可以直接&lt;a href=&#34;https://unixetc.com/post/nokia-n900-and-ssh/&#34;&gt;SSH连接N900&lt;/a&gt;进行操作。
然后root运行&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;u-boot-update-bootmenu
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;关机，插入TF卡，然后推开键盘开机，选&lt;strong&gt;Mer-Nemo Mobile&lt;/strong&gt;进入即可。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>再次入手NokiaN900</title>
      <link>https://unixetc.com/post/start-with-nokian900-again/</link>
      <pubDate>Mon, 22 Apr 2019 11:20:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/start-with-nokian900-again/</guid>
      <description>&lt;p&gt;时隔八年，再次入手Nokia N900&lt;/p&gt;
&lt;h3 id=&#34;系统截图&#34;&gt;系统截图&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://unixetc.com/imgs/2343602920.webp&#34; alt=&#34;homepage&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://unixetc.com/imgs/4001251822.webp&#34; alt=&#34;menu&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://unixetc.com/imgs/3223841748.webp&#34; alt=&#34;seting&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;nokia-n900配置&#34;&gt;Nokia N900配置&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;参数&lt;/th&gt;
&lt;th&gt;属性&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;网络&lt;/td&gt;
&lt;td&gt;GSM / HSPA&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2G bands&lt;/td&gt;
&lt;td&gt;GSM 850 / 900 / 1800 / 1900&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3G bands&lt;/td&gt;
&lt;td&gt;HSDPA 900 / 1700 / 2100&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;速率&lt;/td&gt;
&lt;td&gt;HSPA 10.2/2 Mbps&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;GPRS&lt;/td&gt;
&lt;td&gt;Class 32&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;EDGE&lt;/td&gt;
&lt;td&gt;Class 32&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;发布&lt;/td&gt;
&lt;td&gt;2009, August. Released 2009, November&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;状态&lt;/td&gt;
&lt;td&gt;停产&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;外观尺寸&lt;/td&gt;
&lt;td&gt;110.9 x 59.8 x 18 mm, 113 cc   (4.37 x 2.35 x 0.71 in)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;重量&lt;/td&gt;
&lt;td&gt;181 g (6.38 oz)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;键盘&lt;/td&gt;
&lt;td&gt;QWERTY&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;SIM&lt;/td&gt;
&lt;td&gt;Mini-SIM&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;类型&lt;/td&gt;
&lt;td&gt;TFT resistive touchscreen, 65K   colors&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;尺寸&lt;/td&gt;
&lt;td&gt;3.5 inches, 34.9 cm2 (~52.6% screen-to-body ratio)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;分辨率&lt;/td&gt;
&lt;td&gt;800 x   480 pixels, 5:3 ratio (~267 ppi density)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;操作系统&lt;/td&gt;
&lt;td&gt;Maemo 5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;平台&lt;/td&gt;
&lt;td&gt;TI OMAP 3430&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;CPU&lt;/td&gt;
&lt;td&gt;600 MHz Cortex-A8&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;GPU&lt;/td&gt;
&lt;td&gt;PowerVR SGX530&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;外置存储&lt;/td&gt;
&lt;td&gt;microSD, up to 16 GB (dedicated   slot)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;内置存储&lt;/td&gt;
&lt;td&gt;32 GB,   256 MB RAM&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;摄像头&lt;/td&gt;
&lt;td&gt;5 MP, AF&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;特性&lt;/td&gt;
&lt;td&gt;Carl Zeiss optics, Dual-LED   flash&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;视频&lt;/td&gt;
&lt;td&gt;480p@25fps&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;制式&lt;/td&gt;
&lt;td&gt;VGA&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;外放&lt;/td&gt;
&lt;td&gt;Yes, with stereo speakers&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3.5mm接口&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;WLAN&lt;/td&gt;
&lt;td&gt;Wi-Fi 802.11 b/g, DLNA&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;蓝牙&lt;/td&gt;
&lt;td&gt;2.1, A2DP&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;GPS&lt;/td&gt;
&lt;td&gt;Yes, with A-GPS; Ovi Maps&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;红外&lt;/td&gt;
&lt;td&gt;Yes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;广播&lt;/td&gt;
&lt;td&gt;Stereo FM radio (via third party   software); FM transmitter&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;USB&lt;/td&gt;
&lt;td&gt;microUSB 2.0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;传感器&lt;/td&gt;
&lt;td&gt;Accelerometer, proximity&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;浏览器&lt;/td&gt;
&lt;td&gt;xHTML, HTML, Adobe Flash&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;多媒体&lt;/td&gt;
&lt;td&gt;MP3/WMA/WAV/eAAC+   player&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;多媒体&lt;/td&gt;
&lt;td&gt;WMV/RealVideo/MP4/AVI/XviD/DivX   player&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;视频输出&lt;/td&gt;
&lt;td&gt;TV-out&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;文档&lt;/td&gt;
&lt;td&gt;PDF document viewer&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;图片&lt;/td&gt;
&lt;td&gt;Photo editor&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;电池&lt;/td&gt;
&lt;td&gt;Removable Li-Ion 1320 mAh   battery (BL-5J)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;待机&lt;/td&gt;
&lt;td&gt;Up to 278 h (2G) / Up to 250 h   (3G)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;通话时长&lt;/td&gt;
&lt;td&gt;Up to 6 h 30 min (2G) / Up to 4   h 30 min (3G)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;音频播放&lt;/td&gt;
&lt;td&gt;Up to   24 h 30 min&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;颜色&lt;/td&gt;
&lt;td&gt;Black&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;SAR&lt;/td&gt;
&lt;td&gt;0.92 W/kg (head)     0.82   W/kg (body)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;SAR EU&lt;/td&gt;
&lt;td&gt;0.80 W/kg (head)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;价格&lt;/td&gt;
&lt;td&gt;About 160 EUR&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;外放&lt;/td&gt;
&lt;td&gt;Voice 66dB / Noise 66dB / Ring 70dB&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;音频质量&lt;/td&gt;
&lt;td&gt;Noise -93.7dB / Crosstalk -86.9dB&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</description>
    </item>
    
    <item>
      <title>Maemo发布版本历史</title>
      <link>https://unixetc.com/post/maemo-release-history/</link>
      <pubDate>Sun, 21 Apr 2019 21:31:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/maemo-release-history/</guid>
      <description>&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;系统&lt;/th&gt;
&lt;th&gt;版本&lt;/th&gt;
&lt;th&gt;代号&lt;/th&gt;
&lt;th&gt;构建标识&lt;/th&gt;
&lt;th&gt;发布时间&lt;/th&gt;
&lt;th&gt;首发设备&lt;/th&gt;
&lt;th&gt;备注&lt;/th&gt;
&lt;th&gt;支持设备&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;OS2005&lt;/td&gt;
&lt;td&gt;1.1&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;2.2005.45-1&lt;/td&gt;
&lt;td&gt;2005/11/1&lt;/td&gt;
&lt;td&gt;770&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;770&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;OS2005&lt;/td&gt;
&lt;td&gt;1.1&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;3.2005.51-13&lt;/td&gt;
&lt;td&gt;2005/12/1&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;770&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;OS2005&lt;/td&gt;
&lt;td&gt;1.1&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;5.2006.13-7&lt;/td&gt;
&lt;td&gt;2006/4/1&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;770&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;OS2006&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;Mistral&lt;/td&gt;
&lt;td&gt;0.2006.22-21&lt;/td&gt;
&lt;td&gt;2006/5/1&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;770&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;OS2006&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;Mistral&lt;/td&gt;
&lt;td&gt;1.2006.26-8&lt;/td&gt;
&lt;td&gt;2006/5/1&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;770&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;OS2006&lt;/td&gt;
&lt;td&gt;2.1&lt;/td&gt;
&lt;td&gt;Scirocco&lt;/td&gt;
&lt;td&gt;2.2006.39-14&lt;/td&gt;
&lt;td&gt;2006/11/1&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;770&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;OS2006&lt;/td&gt;
&lt;td&gt;2.2&lt;/td&gt;
&lt;td&gt;Gregale&lt;/td&gt;
&lt;td&gt;3.2006.49-2&lt;/td&gt;
&lt;td&gt;2007/1/1&lt;/td&gt;
&lt;td&gt;770&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;770&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;OS2007&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;Bora&lt;/td&gt;
&lt;td&gt;2.2006.51-6&lt;/td&gt;
&lt;td&gt;2007/1/1&lt;/td&gt;
&lt;td&gt;N800&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;770*, N800&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;OS2007&lt;/td&gt;
&lt;td&gt;3.1&lt;/td&gt;
&lt;td&gt;Bora&lt;/td&gt;
&lt;td&gt;3.2007.10-7&lt;/td&gt;
&lt;td&gt;2007/3/1&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;770*, N800&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;OS2007&lt;/td&gt;
&lt;td&gt;3.2&lt;/td&gt;
&lt;td&gt;Bora&lt;/td&gt;
&lt;td&gt;4.2007.26-8&lt;/td&gt;
&lt;td&gt;2007/7/1&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;770*, N800&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;OS2007&lt;/td&gt;
&lt;td&gt;3.2&lt;/td&gt;
&lt;td&gt;Bora&lt;/td&gt;
&lt;td&gt;4.2007.38-2&lt;/td&gt;
&lt;td&gt;2007/10/1&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;770*, N800&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;OS2008&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;Chinook&lt;/td&gt;
&lt;td&gt;1.2007.42-18&lt;/td&gt;
&lt;td&gt;2007/11/1&lt;/td&gt;
&lt;td&gt;N810&lt;/td&gt;
&lt;td&gt;(N810 only)&lt;/td&gt;
&lt;td&gt;N810&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;OS2008&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;Chinook&lt;/td&gt;
&lt;td&gt;1.2007.42-19&lt;/td&gt;
&lt;td&gt;2007/11/1&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;(N810 only)&lt;/td&gt;
&lt;td&gt;N810&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;OS2008&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;Chinook&lt;/td&gt;
&lt;td&gt;1.2007.44-4&lt;/td&gt;
&lt;td&gt;2007/11/1&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;(N800 only)&lt;/td&gt;
&lt;td&gt;N800&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;OS2008&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;Chinook&lt;/td&gt;
&lt;td&gt;2.2007.50-2&lt;/td&gt;
&lt;td&gt;2007/11/1&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;770*, N800, N810&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;OS2008&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;Chinook&lt;/td&gt;
&lt;td&gt;2.2007.51-3&lt;/td&gt;
&lt;td&gt;2008/1/1&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;770*, N800, N810&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;OS2008&lt;/td&gt;
&lt;td&gt;4.1&lt;/td&gt;
&lt;td&gt;Diablo&lt;/td&gt;
&lt;td&gt;4.2008.23-14&lt;/td&gt;
&lt;td&gt;2008/6/1&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;N800, N810&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;OS2008&lt;/td&gt;
&lt;td&gt;4.1&lt;/td&gt;
&lt;td&gt;Diablo&lt;/td&gt;
&lt;td&gt;4.2008.30-2&lt;/td&gt;
&lt;td&gt;2008/8/1&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;N800, N810&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;OS2008&lt;/td&gt;
&lt;td&gt;4.1&lt;/td&gt;
&lt;td&gt;Diablo&lt;/td&gt;
&lt;td&gt;4.2008.36-5&lt;/td&gt;
&lt;td&gt;2008/9/1&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;N800, N810&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;OS2008&lt;/td&gt;
&lt;td&gt;4.1&lt;/td&gt;
&lt;td&gt;Diablo&lt;/td&gt;
&lt;td&gt;5.2008.43-7&lt;/td&gt;
&lt;td&gt;2008/12/1&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;N800, N810&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Maemo 5&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;Fremantle&lt;/td&gt;
&lt;td&gt;1.2009.42-11&lt;/td&gt;
&lt;td&gt;2009/11/1&lt;/td&gt;
&lt;td&gt;N900&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;N900&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Maemo 5&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;Fremantle&lt;/td&gt;
&lt;td&gt;1.2009.44-1&lt;/td&gt;
&lt;td&gt;2010/1/1&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;N900&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Maemo 5&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;Fremantle&lt;/td&gt;
&lt;td&gt;2.2009.51-1&lt;/td&gt;
&lt;td&gt;2010/1/1&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;PR1.1&lt;/td&gt;
&lt;td&gt;N900&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Maemo 5&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;Fremantle&lt;/td&gt;
&lt;td&gt;3.2010.02-8&lt;/td&gt;
&lt;td&gt;2010/2/1&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;PR1.1.1&lt;/td&gt;
&lt;td&gt;N900&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Maemo 5&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;Fremantle&lt;/td&gt;
&lt;td&gt;10.2010.12-9&lt;/td&gt;
&lt;td&gt;2010/5/1&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;PR1.2&lt;/td&gt;
&lt;td&gt;N900&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Maemo 5&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;Fremantle&lt;/td&gt;
&lt;td&gt;10.2010.19-1&lt;/td&gt;
&lt;td&gt;2010/5/1&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;PR1.2&lt;/td&gt;
&lt;td&gt;N900&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Maemo 5&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;Fremantle&lt;/td&gt;
&lt;td&gt;20.2010.36-2&lt;/td&gt;
&lt;td&gt;2010/10/25&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;PR1.3&lt;/td&gt;
&lt;td&gt;N900&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Maemo 5&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;Fremantle&lt;/td&gt;
&lt;td&gt;21.2011.38-1&lt;/td&gt;
&lt;td&gt;2011/10/26&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;PR1.3.1&lt;/td&gt;
&lt;td&gt;N900&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;MeeGo&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;Arlington&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;2010/5/26&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;N900, etc.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;MeeGo&lt;/td&gt;
&lt;td&gt;1.1&lt;/td&gt;
&lt;td&gt;Irvine&lt;/td&gt;
&lt;td&gt;1.1&lt;/td&gt;
&lt;td&gt;2010/10/28&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Aava and Nokia N900&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;MeeGo&lt;/td&gt;
&lt;td&gt;1.2&lt;/td&gt;
&lt;td&gt;Harmattan&lt;/td&gt;
&lt;td&gt;1.2011.34-2&lt;/td&gt;
&lt;td&gt;–&lt;/td&gt;
&lt;td&gt;N950&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;N9, N950&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</description>
    </item>
    
    <item>
      <title>魅族PRO 5安装Ubuntu Touch系统</title>
      <link>https://unixetc.com/post/meizu-pro-5-installs-ubuntu-touch-system/</link>
      <pubDate>Sat, 20 Apr 2019 19:37:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/meizu-pro-5-installs-ubuntu-touch-system/</guid>
      <description>&lt;p&gt;首先，下载以下几个文件:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;魅族PRO 5国行出厂刷机包 &lt;a href=&#34;https://dotbbq.pipipan.com/fs/18418398-367112641&#34;&gt;Download&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;魅族PRO 5国际版刷机包 &lt;a href=&#34;https://dotbbq.pipipan.com/fs/18418398-367112495&#34;&gt;Download&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Fastboot工具 &lt;a href=&#34;https://dotbbq.pipipan.com/fs/18418398-367110371&#34;&gt;Download&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;SuperSU &lt;a href=&#34;https://dotbbq.pipipan.com/fs/18418398-367110383&#34;&gt;Download&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Busybox &lt;a href=&#34;https://dotbbq.pipipan.com/fs/18418398-367110353&#34;&gt;Download&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;RootBrowser &lt;a href=&#34;https://dotbbq.pipipan.com/fs/18418398-367110365&#34;&gt;Download&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;刷出厂版rom&#34;&gt;刷出厂版ROM&lt;/h3&gt;
&lt;p&gt;给魅族PRO 5刷出厂版ROM，请将出厂版ROM的文件名命名为“update.zip”，把它放在手机内置存储根目录，同时按住&lt;strong&gt;音量增加&lt;/strong&gt;和&lt;strong&gt;电源&lt;/strong&gt;，等待数秒，直至手机重启至Recovery模式。手机成功重启至Recovery模式后，手机屏幕将显示以下画面：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://wx3.sinaimg.cn/mw690/02e071fely1g27wse2qkdj20bu05175b.jpg&#34; alt=&#34;请输入图片描述&#34;&gt;&lt;/p&gt;
&lt;p&gt;点击“开始”按钮刷机。&lt;/p&gt;
&lt;h3 id=&#34;打开root权限&#34;&gt;打开Root权限&lt;/h3&gt;
&lt;p&gt;刷机完成后，我们进入刚刚刷入的系统，登录你的Flyme帐户，然后，在“设置-指纹和安全”里开启系统的Root权限。Root权限开启成功后，手机将重启一次。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://wx1.sinaimg.cn/mw690/02e071fely1g27wu9l1ahj20fl0oc11t.jpg&#34; alt=&#34;请输入图片描述&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;安装supersu&#34;&gt;安装SuperSU&lt;/h3&gt;
&lt;p&gt;安装SuperSU并打开，选择“极客”模式并进入，SuperSU将提示你更新二进制文件，以“常规方式”安装即可。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://wx1.sinaimg.cn/mw690/02e071fely1g27ww61kpej20eu0cfgop.jpg&#34; alt=&#34;请输入图片描述&#34;&gt;
在安装二进制文件的过程中，SuperSU将申请Root权限，请同意申请。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://wx1.sinaimg.cn/mw690/02e071fely1g27x1pwdnej20fp06njrs.jpg&#34; alt=&#34;请输入图片描述&#34;&gt;&lt;/p&gt;
&lt;p&gt;更新过二进制文件后，请重启手机。&lt;/p&gt;
&lt;h3 id=&#34;安装busybox&#34;&gt;安装Busybox&lt;/h3&gt;
&lt;p&gt;安装Busybox并打开，点击屏幕右下角的“INSTALL”按钮。
在安装的过程中，Busybox将申请系统的Root权限，请同意申请（此时Root授权将由SuperSU接管）。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://wx4.sinaimg.cn/mw690/02e071fely1g27x3cdwbij20dk0dcdhu.jpg&#34; alt=&#34;请输入图片描述&#34;&gt;&lt;/p&gt;
&lt;p&gt;如果Busybox的安装一切顺利，其安装日志如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://wx4.sinaimg.cn/mw690/02e071fely1g27x69n58yj20fj09ajtv.jpg&#34; alt=&#34;请输入图片描述&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;修改系统标识&#34;&gt;修改系统标识&lt;/h3&gt;
&lt;p&gt;安装并打开RootBrowser，导航至以下目录：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;/dev/block/platform/15570000.ufs/by-name/
找到文件：proinfo，点击文件，选择“Open as…”，选择“Text file”，再选择“RB Text Editor”。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;https://wx3.sinaimg.cn/mw690/02e071fely1g27x8a1zbij20dh0fnjth.jpg&#34; alt=&#34;请输入图片描述&#34;&gt;&lt;/p&gt;
&lt;p&gt;这期间，RootBrowser将申请系统的Root权限，请同意申请。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://wx1.sinaimg.cn/mw690/02e071fely1g27x9bctyfj20dr0dkgnr.jpg&#34; alt=&#34;请输入图片描述&#34;&gt;&lt;/p&gt;
&lt;p&gt;在“proinfo”里找到以下行：
machine_type=M576_mobile_public
将其改为：
machine_type=M576_intl_official
如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://wx3.sinaimg.cn/mw690/02e071fely1g27xahydyrj20gf05y3ze.jpg&#34; alt=&#34;请输入图片描述&#34;&gt;&lt;/p&gt;
&lt;p&gt;改过之后请保存更改，然后退出RootBrowser，重启手机。
手机重启过之后，请再次在RootBrowser里查看proinfo的状态。如果“machine_type=”后的文本为“M576_intl_official”，则说明我们的操作成功了。&lt;/p&gt;
&lt;h3 id=&#34;刷国际版rom&#34;&gt;刷国际版ROM&lt;/h3&gt;
&lt;p&gt;将国际版Flyme的刷机包命名为“update.zip”，将其放置在手机内置存储的根目录。
同时按住手机的音量增加键和电源键，等待数秒，直至手机重启到Recovery。
刷机的步骤和给魅族PRO 5刷出厂版系统一样，在Recovery里点“开始”按钮即可。
刷机完成后，国际版Flyme的桌面如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://wx1.sinaimg.cn/mw690/02e071fely1g27xc9zwswj20er0hx44s.jpg&#34; alt=&#34;请输入图片描述&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;解锁bootloader&#34;&gt;解锁bootloader&lt;/h3&gt;
&lt;p&gt;同时按住手机的音量减小键和电源键，等待数秒，直至其重启到Fastboot模式。
将手机通过数据线连接到计算机（请保证Fastboot驱动已经正确安装），进入Fastboot工具文件夹，在文件资源管理器里按住Shift键的同时单击鼠标右键，选择“在此处打开Powershell窗口”，并在Powershell里执行以下命令：
./fastboot oem unlock
成功解锁后，手机屏幕的右下角将显示“unlocked”字样如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://wx3.sinaimg.cn/mw690/02e071fely1g27xdkqc47j20g004wabs.jpg&#34; alt=&#34;请输入图片描述&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;安装ubuntu-touch&#34;&gt;安装Ubuntu Touch&lt;/h3&gt;
&lt;p&gt;进入&lt;a href=&#34;https://github.com/ubports/ubports-installer&#34;&gt;https://github.com/ubports/ubports-installer&lt;/a&gt;，下载适应版本的UBports Installer安装程序
打开ubports installer，点击“Select device manually”按钮，在机型列表里选择“Meizu PRO 5”。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://wx3.sinaimg.cn/mw690/02e071fely1g27xhwr8lwj20gg08fdgi.jpg&#34; alt=&#34;请输入图片描述&#34;&gt;&lt;/p&gt;
&lt;p&gt;将处于Fastboot模式的手机连接到计算机，手机将被刷机工具识别。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://wx3.sinaimg.cn/mw690/02e071fely1g27xj6vvuaj20g507qq38.jpg&#34; alt=&#34;请输入图片描述&#34;&gt;&lt;/p&gt;
&lt;p&gt;点击“Change options按钮”，“Channel”处选择“15.04/stable”，“Wipe”项勾选。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://unixetc.com/imgs/1206089250.webp&#34; alt=&#34;02e071fely1g27xk2v2u1j20g107sjru.webp&#34;&gt;&lt;/p&gt;
&lt;p&gt;点击“Close”按钮后，再点击“Install”按钮。
接着刷机工具将为你的手机刷入Ubuntu Recovery，Recovery刷入完成后，请根据刷机工具的提示同时按住音量增加键和电源键，直至手机重启至Recovery模式。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://unixetc.com/imgs/2417442005.webp&#34; alt=&#34;02e071fely1g27xkxueiaj20g707taal.webp&#34;&gt;&lt;/p&gt;
&lt;p&gt;手机重启至Recovery模式后，刷机工具将为你的手机下载并刷入Ubuntu Touch，这个过程需要一点时间，请耐心等待，不要关闭刷机工具，也不要断开手机和计算机的连接。
手机刷入Ubuntu Touch完成后，刷机工具将提示如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://unixetc.com/imgs/3310896332.webp&#34; alt=&#34;02e071fely1g27xlyl7i0j20g107ogm9.webp&#34;&gt;&lt;/p&gt;
&lt;p&gt;至此，魅族PRO 5刷入Ubuntu Touch即完成了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://unixetc.com/imgs/2900843031.webp&#34; alt=&#34;3925646014.webp&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>通过SSH Over USB管理树莓派Zero</title>
      <link>https://unixetc.com/post/raspberry-pi-zero-with-ssh-over-usb/</link>
      <pubDate>Fri, 19 Apr 2019 09:46:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/raspberry-pi-zero-with-ssh-over-usb/</guid>
      <description>&lt;p&gt;树莓派Zero因为相对来说太小巧，没有提供初始化的网卡，所以我们除了通过串口连接以外，树莓派Zero也提供了USB直接连接的方式。即通过Ethernet Gadget模式来连接pc，并进行ssh连接。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Ethernet
Gadget模式即USB网卡模式，比较常见的就是我们通过android手机的usb接口对pc进行网络共享的一种手段。一般电脑都会自动识别这种设备，并开启网卡进行共享。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;修改配置文件&#34;&gt;修改配置文件&lt;/h3&gt;
&lt;p&gt;为了进行USB连接，我们需要修改BOOT文件夹下的&lt;strong&gt;config.txt&lt;/strong&gt;与&lt;strong&gt;cmdline.txt&lt;/strong&gt;配置文件。
首先在&lt;strong&gt;config.txt&lt;/strong&gt;最末行处换行添加如下代码，打开usb网卡模式：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;dtoverlay=dwc2
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;其次在&lt;strong&gt;cmdline.txt&lt;/strong&gt;文件中找到&lt;code&gt;rootwait&lt;/code&gt;字段，并在其后面空格添加如下信息，在打开系统时开启USB网卡模式。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;modules-load=dwc2,g_ether
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;在boot分区新建ssh文件，以打开ssh访问功能。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;touch ssh
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;通过usb连接设备&#34;&gt;通过usb连接设备&lt;/h3&gt;
&lt;p&gt;树莓派zero有两个MicroUSB口，一个是电源插口，职司供电的功能，另外一个就是USB接口，它除了供电以外还提供OTG的功能，我们也是通过这个接口来连接PC。
此时我们可以通过以下代码连接树莓派zero：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ssh pi@raspberrypi.local
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;但此时ip段为DHCP模式获取，如果我们希望通过ip来连接，则我们需要给树莓派的usb网卡设置ip。&lt;/p&gt;
&lt;h3 id=&#34;设置usb网卡的ip&#34;&gt;设置USB网卡的IP&lt;/h3&gt;
&lt;p&gt;我们可以通过ifconfig -a来查看我们现在的网卡设备，此时我们可以看到，USB0网卡设备，我们就是通过该设备连接的pc，所以我们需要设置该网卡的ip。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo nano /etc/network/interfaces
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;打开网卡配置界面，在最末行添加如下代码来设置固定IP：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;allow-hotplug usb0
iface usb0 inet static
        address 192.168.7.2
        netmask 255.255.255.0
        network 192.168.7.0
        broadcast 192.168.7.255
        gateway 192.168.7.1
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后重启usb0网卡：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo ifdown usb0
sudo ifup usb0
ifconfig usb0
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;但树莓派此时实际上是从机，我们需要通过设置pc主机的ip来让树莓派0的usb网卡真正运作起来，那么我们对刚才的usb设备设置如下IP：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;IP:  192.168.7.1
掩码: 255.255.255.0
路由: 192.168.7.1&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;此时我们就可以通过ip来进行ssh连接了：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ssh pi@192.168.7.2
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://notenoughtech.com/raspberry-pi/raspberry-pi-zero-ssh-usb/&#34;&gt;https://notenoughtech.com/raspberry-pi/raspberry-pi-zero-ssh-usb/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.csdn.net/talkxin/article/details/53066555&#34;&gt;https://blog.csdn.net/talkxin/article/details/53066555&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>查出VPS流量消耗元凶</title>
      <link>https://unixetc.com/post/find-the-vps-traffic-consumption-culprit/</link>
      <pubDate>Thu, 11 Apr 2019 22:23:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/find-the-vps-traffic-consumption-culprit/</guid>
      <description>&lt;p&gt;上月不知什么原因VPS流量提前消耗完了，然后通知这月10号重新reset，于是只能临时开了一个月的locvps进行过渡。好不容易熬到昨儿，reset后赶紧把数据和站点又搬回来。
今儿偶尔登录vps，突然发现流量消耗咋一直很高，两天不到就消耗了170G，额滴神呐!查看详细使用统计，发现从昨儿reset以来，OUT bps一直维持在19M左右，瞬间脑袋瓜嗡嗡的！&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://unixetc.com/imgs/3715399508.webp&#34; alt=&#34;3119891104.webp&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://unixetc.com/imgs/1518624033.webp&#34; alt=&#34;1516117547.webp&#34;&gt;&lt;/p&gt;
&lt;p&gt;于是赶紧动手找找，看看消耗流量的元凶到底是谁？&lt;/p&gt;
&lt;p&gt;首先，安装&lt;strong&gt;iftop&lt;/strong&gt;来检查网络使用情况。官网在这里&lt;a href=&#34;http://www.ex-parrot.com/~pdw/iftop/&#34;&gt;http://www.ex-parrot.com/~pdw/iftop/&lt;/a&gt;，CentOS安装方法如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;yum install -y flex byacc libpcap ncurses ncurses-devel libpcap-devel #安装需求软件
wget http://www.ex-parrot.com/~pdw/iftop/download/iftop-0.17.tar.gz
tar zxf iftop-0.17.tar.gz
cd iftop-0.17
./configure
make &amp;amp;&amp;amp; make install
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;安装完成后，可以通过iftop来运行，建议加上-P参数，显示使用端口信息，如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://unixetc.com/imgs/594645281.png&#34; alt=&#34;1554992334.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;主界面中左侧为本地端，右侧为远端，中间的&amp;lt;=和=&amp;gt;表示流量方向。
下面的TX：发送流量/RX：接收流量/TOTAL：总流量/Cumm：运行iftop到目前时间的总流量/peak：流量峰值/rates：分别表示过去 2s 10s 40s 的平均流量&lt;/p&gt;
&lt;p&gt;从上图来看，本地IP一直在向一个&lt;strong&gt;140.249.34.53&lt;/strong&gt;发送数据，从peak统计来看，速率在&lt;strong&gt;22.3Mb&lt;/strong&gt;左右，和网站统计相符。
知道端口后，可以通过 &lt;code&gt;netstat -ntlup|grep 端口号&lt;/code&gt;来查看具体进程，没有的话可以通过&lt;code&gt;yum install net-tools&lt;/code&gt;来安装。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://unixetc.com/imgs/4210544047.png&#34; alt=&#34;1554992405.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;我试着查了下这个IP，发现是山东青岛的，再通过IP反查域名，真想才出来了，原来是百度云的相关IP。这才想起来，我安装了BaiduPCS-Go百度网盘客户端，用来对vps数据进行备份，原来搞鬼的是这个东西。找到元凶就好办了，首先把这个IP给禁了&lt;code&gt;iptables -A INPUT -p tcp -s 140.249.34.53 -j DROP&lt;/code&gt;
禁完后，实时流量一下子就降了下来，如下所示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://unixetc.com/imgs/730509471.png&#34; alt=&#34;1554992503.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;而后将BaiduPCS-Go删除，以绝后患！&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>多路由器同局域网组网实例</title>
      <link>https://unixetc.com/post/multiple-routers-and-lan-networking-instances/</link>
      <pubDate>Thu, 24 Jan 2019 11:24:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/multiple-routers-and-lan-networking-instances/</guid>
      <description>&lt;p&gt;装修的时候，家里卧室阳台和客厅均预留网口，共6个，所有的网线都汇集在楼梯下的弱电箱里，但是当时没注意到弱电箱过小，后期装宽带才发现，一堆线占了很多地方，电信的光猫塞进去都不方便。&lt;/p&gt;
&lt;p&gt;出于无奈只能买了个外置机柜，9U的，刚好放到楼梯地下不占地方。于是将光猫、主路由和NAS都塞了进去。&lt;/p&gt;
&lt;p&gt;最终家里的网络布局如下：
&lt;img src=&#34;https://unixetc.com/imgs/2909649507.webp&#34; alt=&#34;网络图&#34;&gt;&lt;/p&gt;
&lt;p&gt;其中，&lt;strong&gt;RB750&lt;/strong&gt;为主路由，IP为&lt;code&gt;192.168.1.11&lt;/code&gt;，是为了和光猫的&lt;code&gt;192.168.1.1&lt;/code&gt;区分开。下挂&lt;strong&gt;R6300&lt;/strong&gt;和&lt;strong&gt;R6200&lt;/strong&gt;俩AP，一个MyCloud NAS，一个小米电视。&lt;/p&gt;
&lt;p&gt;一楼客厅的&lt;strong&gt;R6300v2&lt;/strong&gt;为主AP，采用AP模式链接，IP为&lt;code&gt;192.168.1.2&lt;/code&gt;，刷的梅林固件，下挂俩树莓派。&lt;/p&gt;
&lt;p&gt;二楼书桌上的&lt;strong&gt;R6200v2&lt;/strong&gt;也采用AP模式链接，不过是默认固件，IP为&lt;code&gt;192.168.1.3&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;以上都为超五类网线链接，这样就可以做到全家设备同局域网共享访问，相互间都是1G速率。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>CentOS7安装L2TP VPN</title>
      <link>https://unixetc.com/post/centos7-install-l2tp-vpn/</link>
      <pubDate>Mon, 10 Dec 2018 12:10:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/centos7-install-l2tp-vpn/</guid>
      <description>&lt;h3 id=&#34;centos7安装vpn&#34;&gt;Centos7安装VPN&lt;/h3&gt;
&lt;p&gt;下载安装脚本:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;wget http://cdn.lyq.wiki/vpnscripts/vpninstall
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;执行安装脚本&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;chmod+x vpninstall
./vpninstall
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;安装完成后提示如下:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;IPsec VPN server is now ready for use!
Connect to your new VPN with these details:
Server IP: 181.53.149.126
IPsec PSK: EMc6SpQHaBgZCnvNtLX
Username: vpnuser
Password: FzfpNGofpRdkBj2B
Write these down. You&#39;ll need them to connect!
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;以上为安装完成后提示的帐号信息，其中用户名(username)、密码(passowrd)和IPsec PSK密匙(IPsec PSK)为随即生成。&lt;/p&gt;
&lt;p&gt;如果为了方便，以上帐号信息可以参考以下方法自定义：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[root@hwcsh ~]# vi /etc/ipsec.secrets  #编辑PSK
    %any  %any  : PSK &amp;quot;EMc6SpQHaBgZCnvNtLX&amp;quot;
[root@hwcsh ~]# vi /etc/ppp/chap-secrets  #编辑帐户信息
    &amp;quot;vpnuser&amp;quot; l2tpd &amp;quot;FzfpNGofpRdkBj2B&amp;quot; *
[root@hwcsh ~]#systemctl restart ipsec xl2tpd #重启服务
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;iphone6配置l2tp-vpn&#34;&gt;iPhone6配置L2TP VPN&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;设置&lt;/strong&gt;-&amp;gt;&lt;strong&gt;VPN&lt;/strong&gt;-&amp;gt;&lt;strong&gt;添加VPN配置&lt;/strong&gt;，类型选择&lt;strong&gt;L2TP&lt;/strong&gt;，然后参考下图设置。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://unixetc.com/imgs/2631506123.webp&#34; alt=&#34;iphone_vpn_conf.webp&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>搬瓦工被墙后免费更换IP</title>
      <link>https://unixetc.com/post/bwg-replace-main-ip-after-blocked/</link>
      <pubDate>Mon, 15 Oct 2018 10:15:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/bwg-replace-main-ip-after-blocked/</guid>
      <description>&lt;p&gt;忙了一天没注意看邮件，下午才发现站点宕机，登录&lt;strong&gt;BWG&lt;/strong&gt;后台检查系统运行正常，使用&lt;a href=&#34;http://ping.pe&#34;&gt;Ping.pe&lt;/a&gt;Ping了下才发现，可能IP被墙了。&lt;/p&gt;
&lt;p&gt;查看Ping的结果，发现国外线路都可以浏览，国内线路丢包全是100%，看来凉凉咯！&lt;/p&gt;
&lt;p&gt;于是网上找了下解决方案，发现&lt;strong&gt;BWG&lt;/strong&gt;免费提供更换IP服务，每五周使用一次。&lt;/p&gt;
&lt;p&gt;登录&lt;strong&gt;BWG&lt;/strong&gt;后台，然后浏览&lt;a href=&#34;https://kiwivm.64clouds.com/main-exec.php?mode=blacklistcheck&#34;&gt;https://kiwivm.64clouds.com/main-exec.php?mode=blacklistcheck&lt;/a&gt;，点击&lt;strong&gt;TestMainIP&lt;/strong&gt;进行检查。&lt;/p&gt;
&lt;p&gt;此页面会显示当前服务器IP以及是否被墙。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://unixetc.com/imgs/303996504.png&#34; alt=&#34;ipblock_Imag21539603289.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;如上提示，&lt;strong&gt;IP BLOCKED&lt;/strong&gt;表示已经被封，点击下面的&lt;strong&gt;Replace Main IP&lt;/strong&gt;更换IP，更换IP后再次浏览上面网站，即可显示&lt;strong&gt;IP NOT BLOCKED&lt;/strong&gt;表示未被封锁。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注意：该功能每五周可以使用一次，且行且珍惜！&lt;/strong&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>一加3T售后刷机包</title>
      <link>https://unixetc.com/post/oneplus-3t-after-sale-rom/</link>
      <pubDate>Sat, 13 Oct 2018 10:23:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/oneplus-3t-after-sale-rom/</guid>
      <description>&lt;p&gt;首先下载以下两个文件包：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一加3T9008驱动  &lt;a href=&#34;https://dotbbq.pipipan.com/fs/18418398-314319015&#34;&gt;Download&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;一加3T售后恢复包 &lt;a href=&#34;https://dotbbq.pipipan.com/fs/18418398-314277876&#34;&gt;Download&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;然后，将手机完全关机，按住&lt;strong&gt;音量+&lt;/strong&gt;不放，将手机和电脑连接，此时手机还是黑屏状态，电脑会有设备连接提示音。&lt;/p&gt;
&lt;p&gt;我的电脑-&amp;gt;右键管理-&amp;gt;设备管理器，打开查看，第一次使用会在&lt;strong&gt;其他设备&lt;/strong&gt;下出现&lt;strong&gt;QHSUSB_BULK&lt;/strong&gt;带黄色感叹号的未知设备，右键点击更新驱动，手动选择&lt;strong&gt;刷机驱动包&lt;/strong&gt;里面的驱动目录进行安装，如果不行的话可以使用&lt;strong&gt;360驱动大师&lt;/strong&gt;进行识别安装，安装完成后会出现类似以下的设备驱动:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://unixetc.com/imgs/3798536887.png&#34; alt=&#34;hsusb99008_201539387431.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;其中&lt;strong&gt;Qualcomm HS-USB QDLoader 9008(COM4)&lt;strong&gt;的新设备，就是正常驱动后的手机，俗称&lt;/strong&gt;高通9008&lt;/strong&gt;模式。&lt;/p&gt;
&lt;p&gt;将下载的&lt;strong&gt;一加3T售后恢复包&lt;/strong&gt;解压后，打开其中的&lt;strong&gt;MsmDownloadTool V3.0.exe&lt;/strong&gt;开始刷机&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://unixetc.com/imgs/489731911.png&#34; alt=&#34;9008sjImag211539387935.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;正常识别COM设备后，点击&lt;strong&gt;Start&lt;/strong&gt;开始刷机，完成后自动重启。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>MikroTik RB750Gr3系统升级</title>
      <link>https://unixetc.com/post/rb750gr3-system-upgrade/</link>
      <pubDate>Mon, 01 Oct 2018 11:21:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/rb750gr3-system-upgrade/</guid>
      <description>&lt;h3 id=&#34;自动升级&#34;&gt;自动升级&lt;/h3&gt;
&lt;p&gt;进入路由器管理界面，通过&lt;strong&gt;System&lt;/strong&gt;-&amp;gt;&lt;strong&gt;Auto Upgrade&lt;/strong&gt;功能自动升级。&lt;/p&gt;
&lt;p&gt;或者使用&lt;strong&gt;Winbox&lt;/strong&gt;连接，通过&lt;strong&gt;System&lt;/strong&gt;-&amp;gt;&lt;strong&gt;Auto Upgrade&lt;/strong&gt;功能自动升级&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;自动升级不了的，刷不出最新系统的继续看下面手动升级。&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;手动升级&#34;&gt;手动升级&lt;/h3&gt;
&lt;p&gt;官方系统下载页面&lt;a href=&#34;https://mikrotik.com/download&#34;&gt;https://mikrotik.com/download&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;本次以&lt;strong&gt;RB750gr3&lt;/strong&gt;为例，官方显示了以下四个系统版本&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;5.26 (Legacy)&lt;/li&gt;
&lt;li&gt;6.40.9 (Long-term)&lt;/li&gt;
&lt;li&gt;6.43.2 (Stable)&lt;/li&gt;
&lt;li&gt;6.44beta9 (Testing)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我的&lt;strong&gt;RB750gr3&lt;/strong&gt;当前版本为&lt;strong&gt;6.41&lt;/strong&gt;，通过自动升级刷新不出来最新版本，因此只能手动升级。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;RB750gr3&lt;/strong&gt;为&lt;strong&gt;MMIPS&lt;/strong&gt;构架，从下载页面找到相应的构架。&lt;/p&gt;
&lt;p&gt;其中&lt;strong&gt;MMIPS&lt;/strong&gt;后面就备注着&lt;strong&gt;hEX (RB750Gr3), RBMxx&lt;/strong&gt;点击下载**&lt;a href=&#34;https://download.mikrotik.com/routeros/6.43.2/routeros-mmips-6.43.2.npk&#34;&gt;Main package&lt;/a&gt;**，格式为**.npk**文件。&lt;/p&gt;
&lt;p&gt;通过&lt;strong&gt;Winbox&lt;/strong&gt;连接路由器，将下载的npk文件拖放到&lt;strong&gt;File&lt;/strong&gt;菜单，上传完成后如下所示。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://unixetc.com/imgs/2983593228.png&#34; alt=&#34;File&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后&lt;strong&gt;system&lt;/strong&gt;-&amp;gt;&lt;strong&gt;reboot&lt;/strong&gt;重启系统完成更新，更新后版本号可以通过&lt;strong&gt;Winbox&lt;/strong&gt;标题栏看到。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;提醒&lt;/strong&gt;:Router OS 6.45.6 for RB750gr3系统包国内网盘**&lt;a href=&#34;https://tc5.us/file/18418398-397940220&#34;&gt;下载地址&lt;/a&gt;**&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>网件R6300v2梅林7.9.1</title>
      <link>https://unixetc.com/post/r6300v2-merlin-firmware-x7-9-1/</link>
      <pubDate>Sun, 30 Sep 2018 09:30:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/r6300v2-merlin-firmware-x7-9-1/</guid>
      <description>&lt;p&gt;&lt;strong&gt;【网件系列】包括以下机型：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;R6300V2&lt;/li&gt;
&lt;li&gt;R6400&lt;/li&gt;
&lt;li&gt;R6900/R7000&lt;/li&gt;
&lt;li&gt;R8000&lt;/li&gt;
&lt;li&gt;R8500&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;更新日志&#34;&gt;更新日志&lt;/h3&gt;
&lt;p&gt;** 固件更新日志：2018年09月27日(X7.9.1) ：**&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;升级软件中心核心skipd v1为skipd v3，增强软件中心稳定性。&lt;/li&gt;
&lt;li&gt;同步固件内置软件中心为最新1.4.2&lt;/li&gt;
&lt;li&gt;需要说明的是skipd v1数据库和skipd v3数据库不兼容，从X7.x系列升级X7.9.1可以向上兼容，但是从从X7.9.1降级刷固件，需要格式化jffs分区以重新建立skipd v1 数据库&lt;/li&gt;
&lt;li&gt;由于skipdv3不支持超时脚本、定时脚本，所以Tools - Script里的这两个功能不能使用了。另外因为aliddns插件使用了skipd的定时脚本功能，aliddns将会无法定时更新ip， 之后我将更新aliddns插件修复这一问题。
&lt;strong&gt;2018年05月08日(X7.9) ：&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;例行更新：同步asuswrt-merlin固件380.70_0代码，更新日志见asuswrt-merlin更新日志的380.70部分&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;刷机须知&#34;&gt;刷机须知&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;【网件原厂】刷【koolshare改版固件】：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在原厂固件升级页面下直接上传.chk后缀的过度固件，本帖下方提供；&lt;/li&gt;
&lt;li&gt;在过度固件里恢复一次出厂设置后，刷入.trx后缀的koolshare改版固件（如果chk版本和trx版本一致则不需要，跳到第三步）；&lt;/li&gt;
&lt;li&gt;等待刷机完成后，，在【系统管理】 – 【系统设置】内勾选：Format JFFS partition at next boot（下次重启格式化jffs分区） 和 Enable JFFS custom scripts and configs（开启jffs自定义脚本），点击应用本页面设置，成功应用后重启路由器；&lt;/li&gt;
&lt;li&gt;重启完成后，确保路由器连上网络，然后进入软件中心，首先点击更新按钮，将更新软件中心到最新版本，然后即可安装并使用插件。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;【koolshare改版固件/梅林原版固件】刷【koolshare改版固件】：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在梅林固件升级页面下直接上传.trx后缀的固件，本帖下方提供；&lt;/li&gt;
&lt;li&gt;从X7.x系列升级X7.9，不需要清空配置和格式化jffs分区；&lt;/li&gt;
&lt;li&gt;从X7.x系列升级X7.9.1，不需要清空配置和格式化jffs分区，skipdv1数据库会自动升级为skipdv3；&lt;/li&gt;
&lt;li&gt;从X7.9.1降级为X7.x，不需要清空配置，但需要格式化jffs分区&lt;/li&gt;
&lt;li&gt;从X7.9.1降级为X6.x，需要清空配置并格式化jffs分区&lt;/li&gt;
&lt;li&gt;从X6.x系列升级X7.9/X7.9.1，需要清除路由器配置和格式化jffs分区；&lt;/li&gt;
&lt;li&gt;如果升级后界面有问题，尝试清除浏览器缓存或者强制刷新（ctrl + F5）一次&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;清配置方法1：&lt;/strong&gt; 在路由器【系统管理】- 【恢复/导出/上传设置】- 【原厂默认值】&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;清配置方法2：&lt;/strong&gt; 开机状态，长按reset直到路由自动重启。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;格式化jffs：&lt;/strong&gt; 在【系统管理】- 【系统设置】，勾选Format JFFS partition at next boot，点击应用本页面设置后重启路由器&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;【koolshare改版固件】刷【原厂】：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;格式化jffs分区：进入路由管理界面 -【系统管理】- 【系统设置】，勾选Format JFFS partition at next boot，点击应用本页面设置后重启路由器&lt;/li&gt;
&lt;li&gt;在koolshare改版固件升级页面下直接上传.trx 后缀的用于刷回官方的固件(OFW)&lt;/li&gt;
&lt;li&gt;刷回官方固件后建议再恢复一次出厂设置&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;固件双清方法：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;如果固件出现问题，一时找不到解决办法，可以尝试双清并手动配置，方法如下&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;格式化jffs分区：方法同上；&lt;/li&gt;
&lt;li&gt;恢复出厂设置：进入路由管理界面 -【【系统管理】- 【恢复/导出/上传设置】- 【原厂默认值】，点击原厂默认值一栏的【恢复】按钮；&lt;/li&gt;
&lt;li&gt;建议完成双清后手动配置路由，而不是用以前备份的配置，以避免可能的问题；&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;软件中心重置方法：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;如果软件中心出现问题，可以尝试用格式化jffs分区的方法重置软件中心，格式化后建议重新配置软件中心及插件，而不是用以前备份的jffs分区文件去恢复！&lt;/p&gt;
&lt;h3 id=&#34;相关链接&#34;&gt;相关链接&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;merlin改版固件讨论telegram群：&lt;a href=&#34;https://t.me/xbchat&#34;&gt;https://t.me/xbchat&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;koolshare merlin firmware QQ讨论群：&lt;a href=&#34;https://jq.qq.com/?_wv=1027&amp;amp;k=5ULbuSg&#34;&gt;https://jq.qq.com/?_wv=1027&amp;amp;k=5ULbuSg&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;merlin改版固件380系列软件中心Github项目：&lt;a href=&#34;https://github.com/koolshare/koolshare.github.io&#34;&gt;https://github.com/koolshare/koolshare.github.io&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;梅林AM380软件中心插件开发教程详解：&lt;a href=&#34;https://github.com/koolshare/koolshare.github.io/wiki/%E6%A2%85%E6%9E%97AM380%E8%BD%AF%E4%BB%B6%E4%B8%AD%E5%BF%83%E6%8F%92%E4%BB%B6%E5%BC%80%E5%8F%91%E6%95%99%E7%A8%8B%E8%AF%A6%E8%A7%A3&#34;&gt;点我访问&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;固件下载地址&#34;&gt;固件下载地址:&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;X7.9.1 固件（trx）&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://u18418398.pipipan.com/fs/18418398-312737889&#34;&gt;R6300V2&lt;/a&gt; MD5:688D27BF84254E5965ECB2D9CAFD43C1&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://u18418398.pipipan.com/fs/18418398-312737985&#34;&gt;R6400&lt;/a&gt; MD5:3F9F3BDAC49C154AC79BAE674595EDDF&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://u18418398.pipipan.com/fs/18418398-312738066&#34;&gt;R6900/R7000&lt;/a&gt; MD5:51E631FD28C36878D883D35418294962&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://u18418398.pipipan.com/fs/18418398-312738145&#34;&gt;R8000&lt;/a&gt; MD5:C05636976A7C5677FF7C7ABED83BF40F&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://u18418398.pipipan.com/fs/18418398-312738249&#34;&gt;R8500&lt;/a&gt; MD5:6AC6E6950CEB15B0D9DB48A9D9C3DE18&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;X7.9.1 过度固件（chk）&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://u18418398.pipipan.com/fs/18418398-312737841&#34;&gt;R6300V2&lt;/a&gt; MD5:8547778981ED0CE50B333FF799D42C96&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://u18418398.pipipan.com/fs/18418398-312737953&#34;&gt;R6400&lt;/a&gt; MD5:EEE5B69087E8847DA26D8857086D7131&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://u18418398.pipipan.com/fs/18418398-312738040&#34;&gt;R6900/R7000&lt;/a&gt; MD5:672B99639181CD8846ADD245484A2D28&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://u18418398.pipipan.com/fs/18418398-312738121&#34;&gt;R8000&lt;/a&gt; MD5:F51B1E06061CEF88FF929C2D3144653E&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://u18418398.pipipan.com/fs/18418398-312738216&#34;&gt;R8500&lt;/a&gt; MD5:B2C7F5F78102D2F8D1BEDA119A18EFF1&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;X7.9&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://u18418398.pipipan.com/fs/18418398-312737929&#34;&gt;R6300V2&lt;/a&gt; MD5:641B2841C1E9643E7B76F2CD46CD6936&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://u18418398.pipipan.com/fs/18418398-312738012&#34;&gt;R6400&lt;/a&gt; MD5:876AB82C58AC60B86E21B2FBB21E11E9&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://u18418398.pipipan.com/fs/18418398-312738085&#34;&gt;R6900/R7000&lt;/a&gt; MD5:1C31E5C0689E392C6733A4F9BD1A1B6E&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://u18418398.pipipan.com/fs/18418398-312738192&#34;&gt;R8000&lt;/a&gt; MD5:C8DD62581F32842443E82D5354BA929D&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://u18418398.pipipan.com/fs/18418398-312738363&#34;&gt;R8500&lt;/a&gt; MD5:B422DB290B2A5121EE4A0AFA3746ED6F&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>为路由器增加虚拟内存</title>
      <link>https://unixetc.com/post/add-virtual-memory-to-the-router/</link>
      <pubDate>Mon, 10 Sep 2018 09:10:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/add-virtual-memory-to-the-router/</guid>
      <description>&lt;p&gt;本文介绍，如何在安装了梅林固件的路由器上，增加虚拟内存，以运行需求资源较大的软件。&lt;/p&gt;
&lt;h3 id=&#34;下载swaptargz&#34;&gt;下载swap.tar.gz&lt;/h3&gt;
&lt;p&gt;下载地址 &lt;a href=&#34;https://github.com/koolshare/koolshare.github.io/tree/acelan_softcenter_ui/swap&#34;&gt;https://github.com/koolshare/koolshare.github.io/tree/acelan_softcenter_ui/swap&lt;/a&gt; ，下载&lt;strong&gt;swap.tar.gz&lt;/strong&gt;文件。&lt;/p&gt;
&lt;h3 id=&#34;安装插件&#34;&gt;安装插件&lt;/h3&gt;
&lt;p&gt;进入路由器后台，软件中心-&amp;gt;离线安装,选择刚才下载的&lt;strong&gt;swap.tar.gz&lt;/strong&gt;，上传并安装。&lt;/p&gt;
&lt;h3 id=&#34;准备u盘&#34;&gt;准备U盘&lt;/h3&gt;
&lt;p&gt;准备一个新的U盘，使用diskgen格式化为ext2/3/4格式，插入路由器USB接口。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/format_ext4_udisk.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;设置虚拟内存&#34;&gt;设置虚拟内存&lt;/h3&gt;
&lt;p&gt;进入路由器管理后台，软件中心-&amp;gt;虚拟内存，设置大小后点击&lt;strong&gt;创建swap&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/merlin_create_swap.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;创建完成后自动启用，再次进入swap插件即可看到使用信息&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/merlin_swap_info.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>V2ray使用实例</title>
      <link>https://unixetc.com/post/v2ray-use-case/</link>
      <pubDate>Mon, 20 Aug 2018 18:18:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/v2ray-use-case/</guid>
      <description>&lt;p&gt;Project V 提供了单一的内核和多种界面操作方式。内核（V2Ray）用于实际的网络交互、路由等针对网络数据的处理，而外围的用户界面程序提供了方便直接的操作流程。
V2Ray 的主要作用是根据用户的配置，对于传入的网络连接进行一定处理，然后发往指定的服务器。它是一个命令行程序，可以接受一个 JSON 格式的配置文件。&lt;/p&gt;
&lt;h3 id=&#34;vps安装服务端&#34;&gt;VPS安装服务端&lt;/h3&gt;
&lt;p&gt;使用下面命令一键安装:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;bash &amp;lt;(curl -L -s https://install.direct/go.sh)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;或者从&lt;a href=&#34;https://github.com/v2ray/v2ray-core/releases&#34;&gt;https://github.com/v2ray/v2ray-core/releases&lt;/a&gt;下载预编译包进行安装。&lt;/p&gt;
&lt;p&gt;安装完成后，使用&lt;code&gt;service v2ray start&lt;/code&gt;启动v2ray服务。&lt;/p&gt;
&lt;h3 id=&#34;windows安装本地端&#34;&gt;Windows安装本地端&lt;/h3&gt;
&lt;p&gt;从&lt;a href=&#34;https://github.com/v2ray/v2ray-core/releases&#34;&gt;https://github.com/v2ray/v2ray-core/releases&lt;/a&gt;下载Windows客户端，解压后编辑&lt;code&gt;config.json&lt;/code&gt;文件，内容如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{
&amp;quot;inbound&amp;quot;: {
    &amp;quot;port&amp;quot;: 1080, // 监听端口
    &amp;quot;protocol&amp;quot;: &amp;quot;socks&amp;quot;, // 入口协议为 SOCKS 5
    &amp;quot;domainOverride&amp;quot;: [&amp;quot;tls&amp;quot;,&amp;quot;http&amp;quot;],
    &amp;quot;settings&amp;quot;: {
    &amp;quot;auth&amp;quot;: &amp;quot;noauth&amp;quot;  //socks的认证设置，noauth 代表不认证，由于 socks 通常在客户端使用，所以这里不认证
    }
},
&amp;quot;outbound&amp;quot;: {
    &amp;quot;protocol&amp;quot;: &amp;quot;vmess&amp;quot;, // 出口协议
    &amp;quot;settings&amp;quot;: {
    &amp;quot;vnext&amp;quot;: [
        {
        &amp;quot;address&amp;quot;: &amp;quot;10.0.0.1&amp;quot;, // 服务器地址，请修改为你自己的服务器 ip 或域名
        &amp;quot;port&amp;quot;: 31892,  // 服务器端口
        &amp;quot;users&amp;quot;: [
            {
            &amp;quot;id&amp;quot;: &amp;quot;3efd584f-8a7d-43af-9c75-35266df4ceb0&amp;quot;,  // 用户 ID，必须与服务器端配置相同
            &amp;quot;alterId&amp;quot;: 64 // 此处的值也应当与服务器相同
            }
        ]
        }
    ]
    }
}
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;以上的id和alterId，在vps上使用&lt;code&gt;cat /etc/v2ray/config.json&lt;/code&gt;查看。&lt;/p&gt;
&lt;p&gt;配置完成后，点击&lt;code&gt;wv2ray.exe&lt;/code&gt;在后台运行v2ray本地端。&lt;/p&gt;
&lt;p&gt;然后在浏览器配置通过&lt;code&gt;127.0.0.1:1080&lt;/code&gt; socks5方式使用代理。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>一加3T安装MIUI10</title>
      <link>https://unixetc.com/post/oneplus3t-miui10/</link>
      <pubDate>Thu, 19 Jul 2018 21:22:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/oneplus3t-miui10/</guid>
      <description>&lt;p&gt;首先，十分感谢&lt;strong&gt;&lt;!-- raw HTML omitted --&gt;HitoLiu&lt;!-- raw HTML omitted --&gt;&lt;/strong&gt;辛苦劳动，才有了Oneplus3T的MIUI10&lt;/p&gt;
&lt;p&gt;刷机前先确认H2OS版本，由于H大的MIUI10是基于Android 7，所以要是基于Android7系的话，则可以直接刷，要是基于Android8的话，就得先降级。&lt;/p&gt;
&lt;h3 id=&#34;一加3t安卓8降级安卓7&#34;&gt;一加3T安卓8降级安卓7&lt;/h3&gt;
&lt;p&gt;基于Android8的手机，下载下面降级包，通过系统内自带升级功能，手动选择该包进行降级。&lt;/p&gt;
&lt;p&gt;一加3T &lt;strong&gt;Android 8降级Android 7刷机包 &lt;a href=&#34;https://dotbbq.pipipan.com/fs/18418398-315801567&#34;&gt;https://dotbbq.pipipan.com/fs/18418398-315801567&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;或者在这里下载Android7的底包，刷入底包即可 &lt;strong&gt;&lt;a href=&#34;https://ciux.org/oneplus3t-base-firmware.html&#34;&gt;https://ciux.org/oneplus3t-base-firmware.html&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;降级完成后，开始解锁刷入第三方recovery来刷机。&lt;/p&gt;
&lt;p&gt;推荐使用一加3/3T工具包(OnePlus3/3T Unified ToolKit)，使用方法**&lt;a href=&#34;https://unixetc.com/post/oneplus3-3t-unified-toolkit/&#34;&gt;点击这里&lt;/a&gt;**&lt;/p&gt;
&lt;h3 id=&#34;一加3t-miui10刷机流程&#34;&gt;一加3T MIUI10刷机流程&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;解锁&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;手机端设置-&amp;gt;开发者选项，打开OEM解锁和USB调试。&lt;/p&gt;
&lt;p&gt;连接手机和电脑，打开工具包选择2) Unlock - ReLock Bootloader，下一步选择1解锁。&lt;/p&gt;
&lt;p&gt;手机按照提示选择&lt;strong&gt;YES&lt;/strong&gt;解锁&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;刷入TWRP Recovery&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;重启手机，选择Fastboot模式，连接手机和电脑，选择5) Flash - Boot TWRP Recovery，刷入TWRP&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;刷入MIUI10&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;进入TWRP Recovery，挂载MTP，将MIUI10刷机包拷入手机，然后进行卡刷。&lt;/p&gt;
&lt;p&gt;双清后重启即可！&lt;/p&gt;
&lt;h4 id=&#34;官方更新说明&#34;&gt;官方更新说明&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;因MIUI官方开始全部适配安卓8，7.1的MIUI在11月2号官方已经正式停更了，目前这版MIUI是MIUI官方发布的最后一个安卓7.1版本，也是目前
最完善的一版。
如果不出意外的话，这也是一加3/3T安卓7.1 MIUI的最后一版。后续就是准备给一加3/3T上安卓O或以上的MIUI了，基本完善后我会优先发在群里
给机油门尝鲜。安卓O的MIUI最快也要半个月以上，且第一版难免bug多，耐心等待别催，只要我手上的3T还没坏就会一直把MIUI维护下去。
8.10.22及以上的MIUI无需双清可直接刷本版MIUI升级，8.10.22以下的需要双清升级。
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;8.11.3更新日志&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1.同步MIUI官方最后一版安卓7.1的MIUI的更新
2.修复新版附加设置-交换返回与多任务键无效的bug
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;8.11.2更新日志：&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1.同步MIUI的更新
2.解决WiFi mac地址问题
3.解决WiFi认证问题
4.修复了一些其他已知bug
5.附加设置更新，全新的界面，加入色温调节，省电模式，性能模式等等
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;8.10.28更新日志：&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1.同步MIUI官方第392周更新
2.修复了一些已知bug
这次不是简单的同步更新，而是完全的重制，除了修复以前的一些已知bug外，流畅度也有大幅度的提升，并且还增加了很多新功能，比如
人脸解锁、AI相机等等，还有很多细节上的变化，应该能让你爽到脱肛的那种。
注意注意注意！这个包更改幅度较大，必须双清刷，否则可能出现各种程序报错！如果data分区被加密则需要格式化data！！否则可能会
一直卡在开机动画不能进系统！
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;8.12.5更新：&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1.加入ROOT权限
2.修复充电快充满后几率发生断开的BUG
3.修复人脸识别无法使用的BUG
4.修复MIUI相机无法录像的BUG
5.修复几个引起卡顿问题
6.其它大量的BUG修复，现在已经熬夜到凌晨四点半，不想写了自行体验，做包很累切刷且珍惜
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;注意：&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1.可能有未知bug
2.安卓大版本升级需要双清，否则可能各种报错
3.如果data被加密需要格式化data才能开机，否则可能卡在开机动画无法进系统
4.暂未添加支付宝指纹支付，后续更新添加
5.第一次开机需要点时间，耐心等待，开机后手机有点热是正常的，以后就不会了
6.第一次开机后手机可能会有点卡，是magisk的锅，重启即可
7.硬件原因不支持小爱同学语音唤醒，这不是bug
8.刷机前先确认你的twrp recovery支持安卓8
9.人品不好智商低慎刷
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;MIUI10 for OnePlus3T 下载地址: &lt;strong&gt;提示：刷最新版基于Android8的话不需要降级，刷基于Android7的版本需要降级！！！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Based Android 8&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;MIUI10_OP3-3T_Hito_8.12.5_79c6_8.1.zip &lt;strong&gt;&lt;a href=&#34;https://dotbbq.pipipan.com/fs/18418398-326373687&#34;&gt;https://dotbbq.pipipan.com/fs/18418398-326373687&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;MIUI10_OP3-3T_Hito_8.12.3_e3b7_8.1.zip &lt;strong&gt;&lt;a href=&#34;https://dotbbq.pipipan.com/fs/18418398-326373663&#34;&gt;https://dotbbq.pipipan.com/fs/18418398-326373663&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Based Android 7&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;MIUI10_OP3-3T_Hito_8.11.5_a93c_7.1.zip &lt;strong&gt;&lt;a href=&#34;https://dotbbq.pipipan.com/fs/18418398-319122537&#34;&gt;https://dotbbq.pipipan.com/fs/18418398-319122537&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;MIUI10_OP3-3T_Hito_8.11.2_ff8a_7.1.zip  &lt;strong&gt;&lt;a href=&#34;https://dotbbq.pipipan.com/fs/18418398-317870488&#34;&gt;https://dotbbq.pipipan.com/fs/18418398-317870488&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;MIUI10_OP3-3T_Hito_8.10.28_3cd1_7.1.zip &lt;strong&gt;&lt;a href=&#34;https://dotbbq.pipipan.com/fs/18418398-317451619&#34;&gt;https://dotbbq.pipipan.com/fs/18418398-317451619&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;MIUI10_OP3-3T_Hito_8.10.24_4cce_7.1.zip &lt;strong&gt;&lt;a href=&#34;https://dotbbq.pipipan.com/fs/18418398-316913781&#34;&gt;https://dotbbq.pipipan.com/fs/18418398-316913781&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;MIUI10_OP3-3T_Hito_8.10.8_8aff_7.1.zip  &lt;strong&gt;&lt;a href=&#34;https://dotbbq.pipipan.com/fs/18418398-315803433&#34;&gt;https://dotbbq.pipipan.com/fs/18418398-315803433&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>GRUB引导ISO镜像</title>
      <link>https://unixetc.com/post/grub-boot-iso-image-file/</link>
      <pubDate>Sun, 08 Jul 2018 17:18:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/grub-boot-iso-image-file/</guid>
      <description>&lt;p&gt;家里电脑安装了双系统(Xubuntu+Windows7)，平时一直不关机，开着TeamViewer便于在办公室远程操作。&lt;/p&gt;
&lt;p&gt;这次不知怎么回事儿，远程掉了，回家一看Windows意外关机，再开机直接蓝屏。&lt;/p&gt;
&lt;p&gt;由于为了省资源，关闭了系统保护，没法进行还原，多次试着拯救都没能解决，无限蓝屏……&lt;/p&gt;
&lt;p&gt;手头刚好没有WinPE的U盘，没法ghost恢复或重装Windows，只有xubuntu可用，一筹莫展。&lt;/p&gt;
&lt;p&gt;突然想到grub是否可以引导iso？ 网上找了下，还真可以，于是下载了个WinPE镜像文件，打算通过grub来引导以修复Windows。&lt;/p&gt;
&lt;p&gt;具体操作如下：&lt;/p&gt;
&lt;p&gt;安装&lt;strong&gt;grub-imageboot&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;alair@e6440:~$ apt search memdisk
正在排序... 完成
全文搜索... 完成  
grub-imageboot/bionic,bionic 0.6 all
boot iso, harddisk and floppy images with grub2 and syslinux memdisk

alair@e6440:~$ sudo apt install grub-imageboot
[sudo] alair 的密码： 
正在读取软件包列表... 完成
正在分析软件包的依赖关系树       
正在读取状态信息... 完成       
将会同时安装下列软件：
syslinux-common
下列【新】软件包将被安装：
grub-imageboot syslinux-common
升级了 0 个软件包，新安装了 2 个软件包，要卸载 0 个软件包，有 4 个软件包未被升级。
需要下载 1,176 kB 的归档。
解压缩后会消耗 3,684 kB 的额外空间。
您希望继续执行吗？ [Y/n] y
获取:1 http://mirrors.cqu.edu.cn/ubuntu bionic/main amd64 syslinux-common all 3:6.03+dfsg1-2 [1,171 kB]
获取:2 http://mirrors.cqu.edu.cn/ubuntu bionic/universe amd64 grub-imageboot all 0.6 [4,424 B]
已下载 1,176 kB，耗时 1秒 (1,947 kB/s)
正在选中未选择的软件包 syslinux-common。
(正在读取数据库 ... 系统当前共安装有 181845 个文件和目录。)
正准备解包 .../syslinux-common_3%3a6.03+dfsg1-2_all.deb  ...
正在解包 syslinux-common (3:6.03+dfsg1-2) ...
正在选中未选择的软件包 grub-imageboot。
正准备解包 .../grub-imageboot_0.6_all.deb  ...
正在解包 grub-imageboot (0.6) ...
正在设置 syslinux-common (3:6.03+dfsg1-2) ...
正在设置 grub-imageboot (0.6) ...
Copy syslinux memdisk to /boot/memdisk
alair@e6440:~$ 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;下载WinPE镜像文件(efi.iso)，拷贝至&lt;code&gt;/boot/&lt;/code&gt;目录&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;alair@e6440:~$sudo cp efi.iso /boot/
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;编辑&lt;code&gt;/etc/grub.d/40_custom&lt;/code&gt;文件，加入以下内容：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;menuentry &amp;quot;WinPE&amp;quot; { 
linux16 /boot/memdisk iso raw
initrd16 /boot/efi.iso
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;运行&lt;code&gt;sudo update-grub&lt;/code&gt;使设置生效，完成后重启时grub中会出现&lt;strong&gt;WinPE&lt;/strong&gt;菜单，选择该项则加载自定义winpe镜像，下来就在WinPE下恢复Windows系统咯!!!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Excel文件大小异常核查</title>
      <link>https://unixetc.com/post/excel-file-size-abnormal-check/</link>
      <pubDate>Sun, 10 Jun 2018 16:10:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/excel-file-size-abnormal-check/</guid>
      <description>&lt;p&gt;有时候明明excel文件中没多少内容，但是文件体积却很大，在此分享一个检查解决的方法。&lt;/p&gt;
&lt;p&gt;将excel文件后缀名改为&lt;code&gt;zip&lt;/code&gt;，用压缩软件将其打开，定位到&lt;code&gt;xl\worksheets\&lt;/code&gt;目录，可以看到各个sheet的体积大小，如下:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/Image-0011528628242.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;找到其中体积最大的，定位到该sheet&lt;/p&gt;
&lt;p&gt;首先将所有内容全选并粘贴为文字。&lt;/p&gt;
&lt;p&gt;然后将内容排序后，全选下面的空白行邮件删除，将条件格式全部删除，这样应该就OK了！&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Ubuntu配置Livepatch服务</title>
      <link>https://unixetc.com/post/canonical-livepatch-service/</link>
      <pubDate>Fri, 25 May 2018 05:25:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/canonical-livepatch-service/</guid>
      <description>&lt;p&gt;CLS(Canonical Livepatch Service)是Ubuntu母公司Canonical提供的一项服务，该服务可以为处于LTS的Ubuntu版本提供内核关键补丁修复，而不需要重新启动系统，特别适用于用作Server的系统。&lt;/p&gt;
&lt;p&gt;使用CLS的前提是必须注册一个Ubuntu帐号，地址为&lt;a href=&#34;https://login.ubuntu.com/+login&#34;&gt;https://login.ubuntu.com/+login&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;注册完成后，即可访问CLS主页&lt;a href=&#34;https://www.ubuntu.com/server/livepatch&#34;&gt;https://www.ubuntu.com/server/livepatch&lt;/a&gt;进行登录配置。&lt;/p&gt;
&lt;p&gt;登陆后选择用户类型，一般个人用户选择&lt;strong&gt;Ubuntu User&lt;/strong&gt;，然后点击&lt;strong&gt;Get your Livepatch token&lt;/strong&gt;获取密匙&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/get_cls_token.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;按照下一步提示进行操作，启用CLS服务。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/cls_token_setup.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;运行完成后即成功启用CLS服务。&lt;/p&gt;
&lt;p&gt;检查CLS服务配置状态可以使用以下命令:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;alair@e6440:~$ sudo canonical-livepatch status --verbose
client-version: 8.0.2
machine-id: 08e0*****************750db
machine-token: 4753a054c*****************a2eb84c7
architecture: x86_64
cpu-model: Intel(R) Core(TM) i5-4310M CPU @ 2.70GHz
last-check: 2018-05-25T19:55:15.537634075+08:00
boot-time: 2018-05-25T19:47:51+08:00
uptime: 14m43s
status:
- kernel: 4.15.0-22.24-generic
  running: true
  livepatch:
    checkState: checked
    patchState: nothing-to-apply
    version: &amp;quot;&amp;quot;
    fixes: &amp;quot;&amp;quot;
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>XiunoBBS Nginx伪静态规则</title>
      <link>https://unixetc.com/post/xiunobbs-nginx-pseudo-static/</link>
      <pubDate>Tue, 06 Feb 2018 12:16:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/xiunobbs-nginx-pseudo-static/</guid>
      <description>&lt;p&gt;XiunoBBS是一款非常流行的轻论坛程序&lt;/p&gt;
&lt;p&gt;以下为XiunoBBS Nginx伪静态规则代码，添加到相应的nginx配置文件中即可。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;location ~* \.(htm)$ {
    rewrite &amp;quot;^(.*)/(.+?).htm(.*?)$&amp;quot; $1/index.php?$2.htm$3 last;
}&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>IOS10越狱工具Meridian</title>
      <link>https://unixetc.com/post/meridian-jailbreak/</link>
      <pubDate>Mon, 22 Jan 2018 10:28:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/meridian-jailbreak/</guid>
      <description>&lt;p&gt;Meridian是一款IOS10.0~10.3.3系列越狱工具支持所有64bit设备。&lt;/p&gt;
&lt;p&gt;支持设备清单：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;iPhone 7 &amp;amp; 7+&lt;/li&gt;
&lt;li&gt;iPhone 6S &amp;amp; 6S+&lt;/li&gt;
&lt;li&gt;iPhone 6 &amp;amp; 6+&lt;/li&gt;
&lt;li&gt;iPhone SE&lt;/li&gt;
&lt;li&gt;iPhone 5S&lt;/li&gt;
&lt;li&gt;iPad Air 1 and 2&lt;/li&gt;
&lt;li&gt;iPad (2017)&lt;/li&gt;
&lt;li&gt;iPad Mini 2, 3, and 4&lt;/li&gt;
&lt;li&gt;iPad Pro 1 and 2 (12.9&amp;rdquo; and 10.5&amp;rdquo;)&lt;/li&gt;
&lt;li&gt;iPod Touch 6th Gen&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;安装说明：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;点击网站“下载”按钮下载IPA；&lt;/p&gt;
&lt;p&gt;使用Cydia Impactor将IPA安装到您的设备上；&lt;/p&gt;
&lt;p&gt;在设置-&amp;gt;常规-&amp;gt;配置文件和设备管理中信任证书；&lt;/p&gt;
&lt;p&gt;打开应用程序，然后单击开始按钮。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;国内网盘下载&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://dotbbq.pipipan.com/fs/18418398-316388143&#34;&gt;Meridian public beta5&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://dotbbq.pipipan.com/fs/18418398-316388139&#34;&gt;Cydia Impactor for Windows&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;相关网站&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Meridian官网 &lt;a href=&#34;https://meridian.sparkes.zone/&#34;&gt;https://meridian.sparkes.zone/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Cydia Impactor官网 &lt;a href=&#34;http://www.cydiaimpactor.com/&#34;&gt;http://www.cydiaimpactor.com/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Google Camera一加3/3T移植版</title>
      <link>https://unixetc.com/post/google-camera-port-for-oneplus-3t/</link>
      <pubDate>Wed, 13 Dec 2017 12:13:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/google-camera-port-for-oneplus-3t/</guid>
      <description>&lt;p&gt;Google Camera一加3/3T移植版，支持HDR+, 1080p 60FPS视频, 慢动作和慢动作图片。 By BSG, Ivanich, and Arnova8G2.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;可用特性:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Camera (HDR+, flash, zoom, front camera, etc)&lt;/li&gt;
&lt;li&gt;视频 (30fps/60fps at 1080p、防抖、自动对焦)&lt;/li&gt;
&lt;li&gt;慢动作 (120fps)&lt;/li&gt;
&lt;li&gt;Panorama&lt;/li&gt;
&lt;li&gt;Photo Sphere&lt;/li&gt;
&lt;li&gt;Lens Blur&lt;/li&gt;
&lt;li&gt;RAW&lt;/li&gt;
&lt;li&gt;Motion Photos (Android 8+ only, check the &amp;ldquo;suggested settings&amp;rdquo;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;不可用特性:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ZSL (HDR+打开情况下)&lt;/li&gt;
&lt;li&gt;(OOS Oreo)慢动作&lt;/li&gt;
&lt;li&gt;前置相机HDR&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;下载:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://dotbbq.pipipan.com/fs/18418398-316386226&#34;&gt;GCam_5.3.015-Pixel3Mod-Arnova8G2-1.4.apk&lt;/a&gt; &lt;strong&gt;Update 2018-10-04&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://dotbbq.pipipan.com/fs/18418398-316386061&#34;&gt;GCam-5.1.018-Pixel2Mod-Arnova8G2-V8.3b1.apk&lt;/a&gt; &lt;strong&gt;Update 2018-08-25&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;本文只提供一加3/3T的稳定版apk，BSG、Ivanich和Arnova8G2的完整版清单，请移步&lt;a href=&#34;https://www.celsoazevedo.com/files/android/google-camera/&#34;&gt;这里&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>将静态站点部署到Coding.net</title>
      <link>https://unixetc.com/post/deploy-the-static-site-to-the-coding-net/</link>
      <pubDate>Sat, 25 Nov 2017 11:25:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/deploy-the-static-site-to-the-coding-net/</guid>
      <description>&lt;p&gt;本站是基于&lt;a href=&#34;https://github.com/wendal/gor&#34;&gt;https://github.com/wendal/gor&lt;/a&gt;生成的静态站点。&lt;/p&gt;
&lt;p&gt;下面介绍如何将静态站点部署到coding.net上。&lt;/p&gt;
&lt;h3 id=&#34;注册coding并新建项目&#34;&gt;注册coding并新建项目&lt;/h3&gt;
&lt;p&gt;首先注册coding.net，注册完后新建项目。&lt;/p&gt;
&lt;p&gt;项目名称为&lt;code&gt;*.coding.me&lt;/code&gt;，以此格式新建的项目可以使用&lt;strong&gt;Coding Pages&lt;/strong&gt;服务。&lt;/p&gt;
&lt;h3 id=&#34;pages服务设置&#34;&gt;Pages服务设置&lt;/h3&gt;
&lt;p&gt;建立完成后，在项目设置中找到&lt;strong&gt;Pages服务&lt;/strong&gt;服务进行设置。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;部署来源&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;选择&lt;strong&gt;master分支&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;自定义域名&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;添加自定义域名，建议同时添加domain.com和www.domain.com，并且设置一个为首选项，另一个跳转到首选项。然后将自己的域名&lt;strong&gt;CNAME&lt;/strong&gt;指向&lt;strong&gt;pages.coding.me&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;强制HTTPS访问&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;打开该选项，则为你的域名自动申请设置** Let&amp;rsquo;s Encrypt**证书，并开启**https**访问。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Hosted by Coding Pages&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;新站点都会有coding pages跳转页，按照&lt;strong&gt;Hosted by Coding Pages&lt;/strong&gt;说明，在首页添加规定连接后，可以提交申请不显示跳转页。&lt;/p&gt;
&lt;h3 id=&#34;使用git部署站点&#34;&gt;使用Git部署站点&lt;/h3&gt;
&lt;p&gt;首先推荐配置&lt;strong&gt;SSH公钥&lt;/strong&gt;以便于操作。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ ssh-keygen -t rsa -C &amp;quot;name@domain.com&amp;quot;  //在此设置为coding.net帐号邮箱
Generating public/private rsa key pair.
Enter file in which to save the key (/c/Users/dotbbq/.ssh/id_rsa):
Created directory &#39;/c/Users/dotbbq/.ssh&#39;.
Enter passphrase (empty for no passphrase):
Enter same passphrase again:
Your identification has been saved in /c/Users/dotbbq/.ssh/id_rsa.
Your public key has been saved in /c/Users/dotbbq/.ssh/id_rsa.pub.
The key fingerprint is:
SHA256:Tt/3424234sdfasdfadfs1234234sdfafdsi0 name@domain.com
The key&#39;s randomart image is:
+---[RSA 2048]----+
|     ... ...o  . |
|      + o o   +..|
|*... + * . o . o+|
|    o = + o . ..o|
| . . o =S+ o .. .|
|. o   Bo+. .o.   |
| +.+   ......    |
|o.=.o o  .+ .    |
|.. ..+ .oo.o     |
+----[SHA256]-----+
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;生成完后，将&lt;code&gt;/c/Users/dotbbq/.ssh/id_rsa.pub&lt;/code&gt;的内容粘贴到coding.net的&lt;strong&gt;个人设置&lt;/strong&gt;-&amp;gt;&lt;strong&gt;SSH公钥&lt;/strong&gt;中进行添加。&lt;/p&gt;
&lt;p&gt;下来进行验证&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ ssh -T git@git.coding.net
The authenticity of host &#39;git.coding.net (123.59.85.184)&#39; can&#39;t be established.
RSA key fingerprint is SHA256:3424234sdfasdfadfs1234234sdfafdsi0+Vg/Ik.
Are you sure you want to continue connecting (yes/no)? yes
Warning: Permanently added &#39;git.coding.net,123.59.85.184&#39; (RSA) to the list of known hosts.
Coding 提示: Hello alairs, You&#39;ve connected to Coding.net via SSH. This is a personal key.
alairs，你好，你已经通过 SSH 协议认证 Coding.net 服务，这是一个个人公钥
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;设置git用户名和email&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ git config --global user.name &amp;quot;name&amp;quot;                //coding.net用户名
$ git config --global user.email &amp;quot;name@domain&amp;quot;        //coding.net邮箱
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;将远程的项目clone下来&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ git clone git@git.coding.net:name/name.coding.me.git
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;将静态站点文件拷贝至&lt;code&gt;name.coding.me&lt;/code&gt;目录&lt;/p&gt;
&lt;p&gt;部署文件到coding.net&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ git add .
$ git commit -m &amp;quot;update&amp;quot;
$ git push&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>RB750gr3快速设置</title>
      <link>https://unixetc.com/post/mikrotik-rb750gr3-quickset/</link>
      <pubDate>Wed, 22 Nov 2017 11:22:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/mikrotik-rb750gr3-quickset/</guid>
      <description>&lt;h3 id=&#34;开箱照&#34;&gt;开箱照&lt;/h3&gt;
&lt;p&gt;以下为开箱照&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://unixetc.com/imgs/122558839.webp&#34; alt=&#34;开箱&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://unixetc.com/imgs/3604896701.webp&#34; alt=&#34;上面&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://unixetc.com/imgs/757242537.webp&#34; alt=&#34;后面&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://unixetc.com/imgs/2347094071.webp&#34; alt=&#34;下面&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;rb750快速设置&#34;&gt;RB750快速设置&lt;/h3&gt;
&lt;p&gt;首先下载&lt;strong&gt;Winbox&lt;/strong&gt;，&lt;a href=&#34;https://dotbbq.pipipan.com/fs/18418398-336226059&#34;&gt;下载地址&lt;/a&gt;，将1口连接光猫，2口连接电脑。&lt;/p&gt;
&lt;p&gt;下载打开后，软件会自动搜索到路由器MAC，登录名为admin，密码为空，点击connect登录。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/mt-qs1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;登录后点击&lt;strong&gt;Quick Set&lt;/strong&gt;进行快速设置，完成后应用即可。如下图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/mt-qs2.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;注意以上我把路由器地址设置为&lt;code&gt;192.168.1.11&lt;/code&gt;是为了和光猫&lt;code&gt;192.168.1.1&lt;/code&gt;区分开。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>梅林固件安装Shadowsocks</title>
      <link>https://unixetc.com/post/merlin-install-shadowsocks/</link>
      <pubDate>Sun, 19 Nov 2017 11:19:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/merlin-install-shadowsocks/</guid>
      <description>&lt;p&gt;登录路由器后台，&lt;strong&gt;系统管理&lt;/strong&gt;&amp;gt;&lt;strong&gt;系统设置&lt;/strong&gt;，将&lt;strong&gt;Enable SSH&lt;/strong&gt;设置为&lt;strong&gt;LAN only&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;通过SSH登录路由器，参考以下执行，在此推荐&lt;strong&gt;Putty&lt;/strong&gt;。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#cd /tmp
#wget https://github.com/hq450/fancyss_history_package/raw/master/fancyss_arm/shadowsocks_4.1.1.tar.gz
#tar -zxvf shadowsocks_4.1.1.tar.gz
#cd shadowsocks
#chmod +x install.sh
#./install.sh
2017年11月19日 14:40:36: 固件平台【koolshare merlinarmv7l】符合安装要求，开始安装插件！
2017年11月19日 14:40:36: 清理旧文件
2017年11月19日 14:40:36: 开始复制文件！
2017年11月19日 14:40:36: 复制相关二进制文件！
2017年11月19日 14:40:42: 创建一些二进制文件的软链接！
2017年11月19日 14:40:42: 复制ss的脚本文件！
2017年11月19日 14:40:44: 复制网页文件！
2017年11月19日 14:40:44: 移除安装包！
2017年11月19日 14:40:44: 为新安装文件赋予执行权限...
2017年11月19日 14:40:44: 设置一些默认值
2017年11月19日 14:40:47: 一点点清理工作...
2017年11月19日 14:40:47: 插件安装成功，你为什么这么屌？！
2017年11月19日 14:40:47: 更新完毕，请等待网页自动刷新！
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;完成后重启路由器，在软件中心中即可看到影梭已经安装成功！&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>按需安装Office2016组件</title>
      <link>https://unixetc.com/post/install-office2016-components-on-demand/</link>
      <pubDate>Fri, 20 Oct 2017 11:21:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/install-office2016-components-on-demand/</guid>
      <description>&lt;h3 id=&#34;所需软件&#34;&gt;所需软件&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Office 2016 下载地址 &lt;a href=&#34;ed2k://%7Cfile%7Ccn_office_professional_plus_2016_x86_x64_dvd_6969182.iso%7C2588266496%7C27EEA4FE4BB13CD0ECCDFC24167F9E01%7C/&#34;&gt;ed2k://|file|cn_office_professional_plus_2016_x86_x64_dvd_6969182.iso|2588266496|27EEA4FE4BB13CD0ECCDFC24167F9E01|/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;office2016install.zip  下载地址 &lt;a href=&#34;https://pan.baidu.com/s/1jIMOFfK&#34;&gt;https://pan.baidu.com/s/1jIMOFfK&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;DAEMON Tools Lite 下载地址 &lt;a href=&#34;https://www.daemon-tools.cc/chn/downloads&#34;&gt;https://www.daemon-tools.cc/chn/downloads&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;步骤&#34;&gt;步骤&lt;/h3&gt;
&lt;p&gt;1、下载Office2016和DAEMON Tools Lite，安装DAEMON Tools Lite，将office2016镜像(iso)文件挂载到虚拟光驱。&lt;/p&gt;
&lt;p&gt;2、下载office2016install.zip后解压，得到&lt;strong&gt;setup.exe&lt;/strong&gt;和&lt;strong&gt;configuration.xml&lt;/strong&gt;两个文件&lt;/p&gt;
&lt;p&gt;打开&lt;code&gt;configuration.xml&lt;/code&gt;，文件内容如下&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;Configuration&amp;gt;
    &amp;lt;Add SourcePath=&amp;quot;G:\&amp;quot; OfficeClientEdition=&amp;quot;64&amp;quot; &amp;gt;
        &amp;lt;Product ID=&amp;quot;ProPlusRetail&amp;quot;&amp;gt;
        &amp;lt;Language ID=&amp;quot;zh-CN&amp;quot; /&amp;gt;
        &amp;lt;ExcludeApp ID=&amp;quot;Groove&amp;quot; /&amp;gt;
        &amp;lt;ExcludeApp ID=&amp;quot;InfoPath&amp;quot; /&amp;gt;
        &amp;lt;ExcludeApp ID=&amp;quot;Lync&amp;quot; /&amp;gt;
        &amp;lt;ExcludeApp ID=&amp;quot;OneNote&amp;quot; /&amp;gt;
        &amp;lt;ExcludeApp ID=&amp;quot;Outlook&amp;quot; /&amp;gt;
        &amp;lt;ExcludeApp ID=&amp;quot;Publisher&amp;quot; /&amp;gt;
        &amp;lt;ExcludeApp ID=&amp;quot;SharePointDesigner&amp;quot; /&amp;gt;
        &amp;lt;/Product&amp;gt;
    &amp;lt;/Add&amp;gt;  
&amp;lt;/Configuration&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;SourcePath 是安装源目录，此处为虚拟光驱G盘&lt;/li&gt;
&lt;li&gt;OfficeClientEdition 为构架版本，此处为64位，也可以设置为32位&lt;/li&gt;
&lt;li&gt;Language 为安装语言，此处为中文简体&lt;/li&gt;
&lt;li&gt;ExcludeApp 表示不需要安装的组件，此处去掉了Groove、InfoPath、Lync、OneNote、Outlook、Publisher、SharePointDesigner，剩下的为Word、Excel、powerpoint和access进行安装。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在当前目录下以管理员身份CMD，运行下面命令开始安装：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;setup.exe /configure configuration.xml&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Typecho登录时提示AccessDenied</title>
      <link>https://unixetc.com/post/typecho-login-access-denied/</link>
      <pubDate>Tue, 03 Oct 2017 10:03:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/typecho-login-access-denied/</guid>
      <description>&lt;p&gt;Typecho安装完成后，登录后提示Access Denied，解决方法如下：&lt;/p&gt;
&lt;p&gt;找到&lt;strong&gt;php.ini&lt;/strong&gt;文件，我的在&lt;code&gt;/usr/local/php/etc/php.ini&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;将&lt;code&gt;cgi.fix_pathinfo&lt;/code&gt;的值改为&lt;strong&gt;1&lt;/strong&gt;即可&lt;/p&gt;
&lt;p&gt;重启php&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;service php-fpm restart
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;完了！&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Linux下修复分辨率显示异常</title>
      <link>https://unixetc.com/post/linux-fix-resolution-display-exception/</link>
      <pubDate>Sat, 26 Aug 2017 18:26:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/linux-fix-resolution-display-exception/</guid>
      <description>&lt;p&gt;家里放了台老旧的台式机，显卡是GTX 660Ti，windows下必须安装特定的驱动版本才能显示最佳分辨率(1680x1050)，如果更新到最新的Nvidia驱动，反而显示器无法正常显示(1024x768)。&lt;/p&gt;
&lt;p&gt;没想到，这种情况在Linux下依然存在，不论是安装Debian还是Linux Mint或者Ubuntu，默认都是1024x768。&lt;/p&gt;
&lt;p&gt;网上找到了修复分辨率异常的方法，整理如下。&lt;/p&gt;
&lt;h4 id=&#34;检查当前显卡硬件情况&#34;&gt;检查当前显卡硬件情况&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;$ lspci |grep VGA
01:00.0 VGA compatible controller: NVIDIA Corporation GK104 [GeForce GTX 660 Ti] (rev a2)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;可以看到，显卡硬件识别正常。&lt;/p&gt;
&lt;h4 id=&#34;检查显卡分辨率情况&#34;&gt;检查显卡分辨率情况&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;$ xrandr
Screen 0: minimum 320 x 200, current 1024 x 768, maximum 8192 x 8192
VGA-1 disconnected (normal left inverted right x axis y axis)
DVI-I-1 connected primary 1024x768+0+0 (normal left inverted right x axis y axis) 0mm x 0mm
1024x768      60.00* 
800x600       60.32    56.25  
848x480       60.00  
640x480       59.94  
HDMI-1 disconnected (normal left inverted right x axis y axis)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;可以看到，有三个视频输出，当前正在用的是&lt;strong&gt;DVI-I-1&lt;/strong&gt;，分辨率就是1024x768，第一行显示最大支持8192x8192。&lt;/p&gt;
&lt;p&gt;我们需要通过手动定义，将分辨率调整为最佳的1680x1050&lt;/p&gt;
&lt;h4 id=&#34;新增分辨率模式&#34;&gt;新增分辨率模式&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;$ sudo cvt 1680 1050
# 1680x1050 59.95 Hz (CVT 1.76MA) hsync: 65.29 kHz; pclk: 146.25 MHz
Modeline &amp;quot;1680x1050_60.00&amp;quot;  146.25  1680 1784 1960 2240  1050 1053 1059 1089 -hsync +vsync
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;这里定义了一个1680x1050 60Hz的新分辨率模式。&lt;/p&gt;
&lt;p&gt;下来将新的分辨率模式应用生效。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$sudo xrandr --newmode &amp;quot;1680x1050&amp;quot;  146.25  1680 1784 1960 2240  1050 1053 1059 1089 -hsync +vsync
$sudo xrandr --addmode DVI-I-1 1680x1050
$sudo xrandr --output DVI-I-1 --mode 1600x1050
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;执行完以上命令后，但前显示分辨率就调整为1680x1050了。&lt;/p&gt;
&lt;p&gt;为了使新的分辨率模式每次启动都生效，需要将以下命令添加到&lt;code&gt;~/.profile&lt;/code&gt;中。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cvt 1680 1050
xrandr --newmode &amp;quot;1680x1050&amp;quot;  146.25  1680 1784 1960 2240  1050 1053 1059 1089 -hsync +vsync
xrandr --addmode DVI-I-1 1680x1050&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>一加3T开启黑白屏模式</title>
      <link>https://unixetc.com/post/oneplus3t-switch-on-black-and-white-screen-mode/</link>
      <pubDate>Mon, 21 Aug 2017 18:21:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/oneplus3t-switch-on-black-and-white-screen-mode/</guid>
      <description>&lt;p&gt;一加5发布后，唯一让我眼红的就是那块屏幕，还有类似于水墨屏的阅读体验。&lt;/p&gt;
&lt;p&gt;其实一加3T中也可以使用黑白屏模式，在开发者模式中可以找到设置。&lt;/p&gt;
&lt;p&gt;设置-&amp;gt;开发者选项-&amp;gt;模拟颜色空间-&amp;gt;全色盲。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>sitemap-generators使用实例</title>
      <link>https://unixetc.com/post/sitemap-generators-usage/</link>
      <pubDate>Sun, 13 Aug 2017 23:23:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/sitemap-generators-usage/</guid>
      <description>&lt;p&gt;&lt;strong&gt;sitemap-generators&lt;/strong&gt;是一款Sitemap生成工具，使用它可以生成符合sitemap.org规范的Sitemap文件，以便于提交给各个网站工具平台。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://code.google.com/archive/p/sitemap-generators/&#34;&gt;项目地址&lt;/a&gt;  &amp;amp;&amp;amp;  &lt;a href=&#34;https://code.google.com/archive/p/sitemap-generators/downloads&#34;&gt;下载地址&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;下载&lt;strong&gt;sitemap_gen_1.5.tar.gz&lt;/strong&gt;解压，得到以下内容：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;root@bwgzl:~/sitemap_gen# ls -lh
total 140K
-r--r-----  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;502&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;502&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;22&lt;/span&gt; Jun &lt;span style=&#34;color:#ae81ff&#34;&gt;17&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;2005&lt;/span&gt; AUTHORS
-r--r--r--  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;502&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;502&lt;/span&gt; 2.6K Jul &lt;span style=&#34;color:#ae81ff&#34;&gt;19&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;2007&lt;/span&gt; ChangeLog
-r--r-----  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;502&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;502&lt;/span&gt; 1.8K Jun &lt;span style=&#34;color:#ae81ff&#34;&gt;17&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;2005&lt;/span&gt; COPYING
-rw-r--r--  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;502&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;502&lt;/span&gt; 6.4K Jul &lt;span style=&#34;color:#ae81ff&#34;&gt;19&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;2007&lt;/span&gt; example_config.xml
-rw-r-----  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;502&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;502&lt;/span&gt; 1.6K Jun &lt;span style=&#34;color:#ae81ff&#34;&gt;26&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;2007&lt;/span&gt; example_urllist.txt
drwxr-xr-x &lt;span style=&#34;color:#ae81ff&#34;&gt;23&lt;/span&gt; root root 4.0K Aug  &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; 14:25 getos.org
-rw-r--r--  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;502&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;502&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;244&lt;/span&gt; Jul &lt;span style=&#34;color:#ae81ff&#34;&gt;19&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;2007&lt;/span&gt; PKG-INFO
-r--r--r--  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;502&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;502&lt;/span&gt; 1.1K Jun &lt;span style=&#34;color:#ae81ff&#34;&gt;25&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;2007&lt;/span&gt; README
-r-xr-xr-x  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;502&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;502&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;301&lt;/span&gt; Jul &lt;span style=&#34;color:#ae81ff&#34;&gt;19&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;2007&lt;/span&gt; setup.py
-rwxr-xr-x  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;502&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;502&lt;/span&gt;  66K Jul &lt;span style=&#34;color:#ae81ff&#34;&gt;19&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;2007&lt;/span&gt; sitemap_gen.py
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;将默认的&lt;strong&gt;example_config.xml&lt;/strong&gt;拷贝为&lt;strong&gt;ac.xml&lt;/strong&gt;，参考以下修改：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34;?&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;site&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;base_url=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;http://getos.org/&amp;#34;&lt;/span&gt;
  &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;/**&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;以下为sitemap.xml文件存放目录**/&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;store_into=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/root/sitemap_gen/sitemap.xml&amp;#34;&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;verbose=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1&amp;#34;&lt;/span&gt;
  &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;lt;urllist&lt;/span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;path=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;urllist.txt&amp;#34;&lt;/span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;encoding=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;UTF-8&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;/&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;filter&lt;/span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;action=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;drop&amp;#34;&lt;/span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;type=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;wildcard&amp;#34;&lt;/span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;pattern=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;*~&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;/&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;filter&lt;/span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;action=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;drop&amp;#34;&lt;/span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;type=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;regexp&amp;#34;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;pattern=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/\.[^/]*&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/site&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;接下来，使用&lt;code&gt;wget&lt;/code&gt;来遍历网站所有URL，将结果保存为&lt;strong&gt;urlinfolist.txt&lt;/strong&gt;。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;wget -mk --spider -r  http://getos.org/ -o urlinfolist.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;-r: 递归遍历目录&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;处理wget到的&lt;strong&gt;urlinfolist.txt&lt;/strong&gt;文件，删除不需要的内容。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;cat urlinfolist.txt | tr &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;\012&amp;#39;&lt;/span&gt; | grep &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^http&amp;#34;&lt;/span&gt; | egrep -vi &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;[?]|[.]jpg&lt;/span&gt;$&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; | sort -u &amp;gt; urllist.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;最后使用如下命令来生成&lt;strong&gt;sitemap.xml&lt;/strong&gt;。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;python sitemap_gen.py --config&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ac.xml 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;按照配置文件所示，在&lt;strong&gt;sitemap.xml&lt;/strong&gt;文件保存在_/root/sitemap_gen/_目录下。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Dropbox脚本工具DropboxUploader</title>
      <link>https://unixetc.com/post/powerful-dropbox-scripting-tool-dropbox-uploader/</link>
      <pubDate>Fri, 28 Jul 2017 17:28:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/powerful-dropbox-scripting-tool-dropbox-uploader/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Dropbox Uploader&lt;/strong&gt;是一款专为&lt;strong&gt;Dropbox&lt;/strong&gt;开发的&lt;strong&gt;BASH&lt;/strong&gt;脚本，可以实现上传、下载、删除、列出文件清单、在线分享、同步和备份等功能。&lt;/p&gt;
&lt;p&gt;它使用&lt;strong&gt;BASH&lt;/strong&gt;脚本语言写成，只需要&lt;strong&gt;cURL&lt;/strong&gt;即可使用。&lt;/p&gt;
&lt;p&gt;项目主页 &lt;a href=&#34;https://github.com/andreafabrizi/Dropbox-Uploader&#34;&gt;GiHub project page&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;为什么使用此脚本?&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;绿色轻便:&lt;strong&gt;使用&lt;/strong&gt;BASH&lt;/strong&gt;脚本语言写成，仅仅需要&lt;strong&gt;cURL&lt;/strong&gt;一个软件(curl是一个数据传输工具，大部分linux发行版均会内置该软件)。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;安全:&lt;/strong&gt; 不需要提供帐号密码，该脚本使用官方API进行验证。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;更多的扩展信息和使用技巧请参考&lt;a href=&#34;https://github.com/andreafabrizi/Dropbox-Uploader/wiki&#34;&gt;官方wiki&lt;/a&gt;，该wiki同时提供&lt;strong&gt;Dropbox Uploader&lt;/strong&gt;相关的使用实例和脚本。&lt;/p&gt;
&lt;h3 id=&#34;特性&#34;&gt;特性&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;跨平台&lt;/li&gt;
&lt;li&gt;支持官方Dropbox API v2&lt;/li&gt;
&lt;li&gt;无需密码&lt;/li&gt;
&lt;li&gt;简单的配置提示&lt;/li&gt;
&lt;li&gt;分块文件上传&lt;/li&gt;
&lt;li&gt;递归文档下载&lt;/li&gt;
&lt;li&gt;递归文档上传&lt;/li&gt;
&lt;li&gt;Shell通配符扩展 (仅上传)&lt;/li&gt;
&lt;li&gt;删除/移动/重命名/拷贝/列出/分享文件&lt;/li&gt;
&lt;li&gt;创建分享连接&lt;/li&gt;
&lt;li&gt;监视变化&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;安装配置dropboxuploader&#34;&gt;安装配置DropboxUploader&lt;/h3&gt;
&lt;p&gt;使用git拷贝官方仓库：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;git clone https://github.com/andreafabrizi/Dropbox-Uploader.git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;或者直接下载脚本：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;curl &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://raw.githubusercontent.com/andreafabrizi/Dropbox-Uploader/master/dropbox_uploader.sh&amp;#34;&lt;/span&gt; -o dropbox_uploader.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;给脚本添加执行权限并运行：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt; $chmod +x dropbox_uploader.sh
 $./dropbox_uploader.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;第一次运行&lt;code&gt;dropbox_uploader&lt;/code&gt;时，会有鉴权提示，按照提示在&lt;a href=&#34;https://www.dropbox.com/developers/apps&#34;&gt;https://www.dropbox.com/developers/apps&lt;/a&gt;新建api app，然后在app管理页找到&lt;strong&gt;Generated access token&lt;/strong&gt;创建&lt;strong&gt;access token&lt;/strong&gt;，将&lt;strong&gt;access token&lt;/strong&gt;粘贴到DropboxUploader提示行按回车键，随后会提示成功接入&lt;strong&gt;Dropbox&lt;/strong&gt;。配置文件保存在&lt;code&gt;~/.dropbox_uploader&lt;/code&gt;。&lt;/p&gt;
&lt;h3 id=&#34;使用dropboxuploader&#34;&gt;使用DropboxUploader&lt;/h3&gt;
&lt;p&gt;DropboxUploader语法非常简单:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./dropbox_uploader.sh [PARAMETERS] COMMAND...

[%%]: 可选参数
&amp;lt;%%&amp;gt;: 必须参数
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;可使用命令:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;upload&lt;/strong&gt; &amp;lt;LOCAL_FILE/DIR &amp;hellip;&amp;gt; &amp;lt;REMOTE_FILE/DIR&amp;gt;&lt;/p&gt;
&lt;p&gt;上传本地文件或目录到Dropbox。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;download&lt;/strong&gt; &amp;lt;REMOTE_FILE/DIR&amp;gt; [LOCAL_FILE/DIR]&lt;br&gt;
从Dropbox下载文件或目录到本地&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;delete&lt;/strong&gt; &amp;lt;REMOTE_FILE/DIR&amp;gt;&lt;br&gt;
删除Dropbox上的文件或目录&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;move&lt;/strong&gt; &amp;lt;REMOTE_FILE/DIR&amp;gt; &amp;lt;REMOTE_FILE/DIR&amp;gt;&lt;br&gt;
移动或重命名远端文件或目录&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;copy&lt;/strong&gt; &amp;lt;REMOTE_FILE/DIR&amp;gt; &amp;lt;REMOTE_FILE/DIR&amp;gt;&lt;br&gt;
拷贝远端文件或目录&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;mkdir&lt;/strong&gt; &amp;lt;REMOTE_DIR&amp;gt;&lt;br&gt;
在Dropbox创建目录&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;list&lt;/strong&gt; [REMOTE_DIR]&lt;br&gt;
列出Dropbox目录内容&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;monitor&lt;/strong&gt; [REMOTE_DIR][TIMEOUT]&lt;/p&gt;
&lt;p&gt;监控远端目录变化，如果超时退出，则会反馈第一次变化。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;share&lt;/strong&gt; &amp;lt;REMOTE_FILE&amp;gt;&lt;br&gt;
获取远端文件或目录的公开连接&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;saveurl&lt;/strong&gt; &amp;lt;URL&amp;gt; &amp;lt;REMOTE_DIR&amp;gt;&lt;/p&gt;
&lt;p&gt;从URL下载文件到Dropbox&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;search&lt;/strong&gt; &amp;lt;QUERY&amp;gt;&lt;/p&gt;
&lt;p&gt;搜索特定文件&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;info&lt;/strong&gt;&lt;br&gt;
显示Dropbox帐户相关信息&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;space&lt;/strong&gt;
示当前帐户容量使用情况&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;unlink&lt;/strong&gt;&lt;br&gt;
断开Dropbox帐户连接&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;扩展参数:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;-f &amp;lt;FILENAME&amp;gt;&lt;/strong&gt;&lt;br&gt;
从特定文件加载配置&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;-s&lt;/strong&gt;&lt;br&gt;
Skip already existing files when download/upload. Default: Overwrite&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;-d&lt;/strong&gt;&lt;br&gt;
开启DEBUG模式&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;-q&lt;/strong&gt;&lt;br&gt;
Quiet mode. Don&amp;rsquo;t show progress meter or messages&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;-h&lt;/strong&gt;&lt;br&gt;
显示可读的文件大小格式&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;-p&lt;/strong&gt;&lt;br&gt;
显示cURL过程提示&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;-k&lt;/strong&gt;&lt;br&gt;
不检查SSL证书(不安全)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;DropboxUploader使用实例:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;    ./dropbox_uploader.sh upload /etc/passwd /myfiles/passwd.old
    ./dropbox_uploader.sh upload *.zip /
    ./dropbox_uploader.sh download /backup.zip
    ./dropbox_uploader.sh delete /backup.zip
    ./dropbox_uploader.sh mkdir /myDir/
    ./dropbox_uploader.sh upload &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;My File.txt&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;My File 2.txt&amp;#34;&lt;/span&gt;
    ./dropbox_uploader.sh share &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;My File.txt&amp;#34;&lt;/span&gt;
    ./dropbox_uploader.sh list
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;已通过测试环境&#34;&gt;已通过测试环境&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;GNU Linux&lt;/li&gt;
&lt;li&gt;FreeBSD 8.3/10.0&lt;/li&gt;
&lt;li&gt;MacOSX&lt;/li&gt;
&lt;li&gt;Windows/Cygwin&lt;/li&gt;
&lt;li&gt;Raspberry Pi&lt;/li&gt;
&lt;li&gt;QNAP&lt;/li&gt;
&lt;li&gt;iOS&lt;/li&gt;
&lt;li&gt;OpenWRT&lt;/li&gt;
&lt;li&gt;Chrome OS&lt;/li&gt;
&lt;li&gt;OpenBSD&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;设置代理&#34;&gt;设置代理&lt;/h4&gt;
&lt;p&gt;如果需要使用代理服务器，只需对&lt;strong&gt;https_proxy&lt;/strong&gt;变量进行设置即可：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Linux:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;    export HTTP_PROXY_USER&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;XXXX
    export HTTP_PROXY_PASSWORD&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;YYYY
    export https_proxy&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;http://192.168.0.1:8080
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;BSD:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;    setenv HTTP_PROXY_USER XXXX
    setenv HTTP_PROXY_PASSWORD YYYY
    setenv https_proxy http://192.168.0.1:8080
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;bash和curl安装&#34;&gt;BASH和Curl安装&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;Debian &amp;amp; Ubuntu Linux:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;    sudo apt-get install bash &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Probably BASH is already installed on your system&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
    sudo apt-get install curl
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;BSD:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;    cd /usr/ports/shells/bash &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; make install clean
    cd /usr/ports/ftp/curl &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; make install clean
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Cygwin:&lt;/strong&gt;&lt;br&gt;
需要安装以下文件:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;curl&lt;/li&gt;
&lt;li&gt;ca-certificates&lt;/li&gt;
&lt;li&gt;dos2unix&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;运行脚本前，你需要使用&lt;code&gt;dos2unix&lt;/code&gt;对脚本进行转换。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;从源码安装cURL:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;从这里下载源码 &lt;a href=&#34;http://curl.haxx.se/download.html&#34;&gt;http://curl.haxx.se/download.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;参考安装指南进行安装&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Linux下批量转换PNG和JPG</title>
      <link>https://unixetc.com/post/batch-conversion-png-and-jpg-under-linux/</link>
      <pubDate>Mon, 17 Jul 2017 07:17:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/batch-conversion-png-and-jpg-under-linux/</guid>
      <description>&lt;p&gt;我们用到的软件名为&lt;strong&gt;imagemagick&lt;/strong&gt;，一款强大的图片处理软件。&lt;/p&gt;
&lt;p&gt;Debian系使用&lt;code&gt;apt-get install imagemagick&lt;/code&gt;来安装，Fedora系通过&lt;code&gt;yum install imagemagick&lt;/code&gt;来安装。&lt;/p&gt;
&lt;p&gt;其他系统可以到官方下载页进行下载安装 &lt;a href=&#34;https://www.imagemagick.org/script/download.php&#34;&gt;https://www.imagemagick.org/script/download.php&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;安装完成后，可以通过&lt;code&gt;convert tst.jpg tsg.png&lt;/code&gt;将JPG文件转换为PNG，反之亦可。&lt;/p&gt;
&lt;p&gt;下来进行批量替换：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;root@bwgzl:/data/wwwroot/getos.org/images# ll
total &lt;span style=&#34;color:#ae81ff&#34;&gt;188&lt;/span&gt;
drwxr-xr-x  &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; www www  &lt;span style=&#34;color:#ae81ff&#34;&gt;4096&lt;/span&gt; Aug  &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; 15:48 ./
drwxr-xr-x &lt;span style=&#34;color:#ae81ff&#34;&gt;27&lt;/span&gt; www www  &lt;span style=&#34;color:#ae81ff&#34;&gt;4096&lt;/span&gt; Aug  &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; 15:32 ../
-rw-r--r--  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; www www &lt;span style=&#34;color:#ae81ff&#34;&gt;18778&lt;/span&gt; Aug  &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; 15:43 clip_image002.jpg
-rw-r--r--  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; www www &lt;span style=&#34;color:#ae81ff&#34;&gt;17637&lt;/span&gt; Aug  &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; 15:43 clip_image004.jpg
-rw-r--r--  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; www www &lt;span style=&#34;color:#ae81ff&#34;&gt;28075&lt;/span&gt; Aug  &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; 15:43 clip_image006.jpg
-rw-r--r--  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; www www &lt;span style=&#34;color:#ae81ff&#34;&gt;30916&lt;/span&gt; Aug  &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; 15:43 clip_image008.jpg
-rw-r--r--  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; www www &lt;span style=&#34;color:#ae81ff&#34;&gt;13538&lt;/span&gt; Aug  &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; 15:43 clip_image010.jpg
-rw-r--r--  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; www www &lt;span style=&#34;color:#ae81ff&#34;&gt;11845&lt;/span&gt; Aug  &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; 15:43 clip_image012.jpg
-rw-r--r--  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; www www &lt;span style=&#34;color:#ae81ff&#34;&gt;14519&lt;/span&gt; Aug  &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; 15:43 clip_image014.jpg
-rw-r--r--  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; www www &lt;span style=&#34;color:#ae81ff&#34;&gt;33052&lt;/span&gt; Aug  &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; 15:43 clip_image016.jpg
root@bwgzl:/data/wwwroot/getos.org/images# ls -1 *.jpg | xargs -n &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; bash -c &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;convert &amp;#34;$0&amp;#34; &amp;#34;${0%.jpg}.png&amp;#34;&amp;#39;&lt;/span&gt;
root@bwgzl:/data/wwwroot/getos.org/images# ls -ltr
total &lt;span style=&#34;color:#ae81ff&#34;&gt;1172&lt;/span&gt;
-rw-r--r-- &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; www  www   &lt;span style=&#34;color:#ae81ff&#34;&gt;18778&lt;/span&gt; Aug  &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; 15:43 clip_image002.jpg
-rw-r--r-- &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; www  www   &lt;span style=&#34;color:#ae81ff&#34;&gt;17637&lt;/span&gt; Aug  &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; 15:43 clip_image004.jpg
-rw-r--r-- &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; www  www   &lt;span style=&#34;color:#ae81ff&#34;&gt;28075&lt;/span&gt; Aug  &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; 15:43 clip_image006.jpg
-rw-r--r-- &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; www  www   &lt;span style=&#34;color:#ae81ff&#34;&gt;30916&lt;/span&gt; Aug  &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; 15:43 clip_image008.jpg
-rw-r--r-- &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; www  www   &lt;span style=&#34;color:#ae81ff&#34;&gt;13538&lt;/span&gt; Aug  &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; 15:43 clip_image010.jpg
-rw-r--r-- &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; www  www   &lt;span style=&#34;color:#ae81ff&#34;&gt;11845&lt;/span&gt; Aug  &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; 15:43 clip_image012.jpg
-rw-r--r-- &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; www  www   &lt;span style=&#34;color:#ae81ff&#34;&gt;14519&lt;/span&gt; Aug  &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; 15:43 clip_image014.jpg
-rw-r--r-- &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; www  www   &lt;span style=&#34;color:#ae81ff&#34;&gt;33052&lt;/span&gt; Aug  &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; 15:43 clip_image016.jpg
-rw-r--r-- &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root &lt;span style=&#34;color:#ae81ff&#34;&gt;132411&lt;/span&gt; Aug  &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; 16:00 clip_image002.png
-rw-r--r-- &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root &lt;span style=&#34;color:#ae81ff&#34;&gt;106702&lt;/span&gt; Aug  &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; 16:00 clip_image004.png
-rw-r--r-- &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root &lt;span style=&#34;color:#ae81ff&#34;&gt;197143&lt;/span&gt; Aug  &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; 16:00 clip_image006.png
-rw-r--r-- &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root  &lt;span style=&#34;color:#ae81ff&#34;&gt;79397&lt;/span&gt; Aug  &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; 16:00 clip_image008.png
-rw-r--r-- &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root  &lt;span style=&#34;color:#ae81ff&#34;&gt;37643&lt;/span&gt; Aug  &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; 16:00 clip_image010.png
-rw-r--r-- &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root  &lt;span style=&#34;color:#ae81ff&#34;&gt;81090&lt;/span&gt; Aug  &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; 16:00 clip_image012.png
-rw-r--r-- &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root  &lt;span style=&#34;color:#ae81ff&#34;&gt;88635&lt;/span&gt; Aug  &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; 16:00 clip_image014.png
-rw-r--r-- &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root &lt;span style=&#34;color:#ae81ff&#34;&gt;272537&lt;/span&gt; Aug  &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; 16:00 clip_image016.png
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;注意第二条命令即为批量转换操作&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;ls -1 *.jpg | xargs -n &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; bash -c &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;convert &amp;#34;$0&amp;#34; &amp;#34;${0%.jpg}.png&amp;#34;&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>p7zip使用实例</title>
      <link>https://unixetc.com/post/p7zip-usage/</link>
      <pubDate>Fri, 16 Jun 2017 23:12:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/p7zip-usage/</guid>
      <description>&lt;p&gt;以下是&lt;strong&gt;CentOS7&lt;/strong&gt;中&lt;strong&gt;7za&lt;/strong&gt;的使用实例,&lt;strong&gt;CentOS&lt;/strong&gt;下安装&lt;strong&gt;p7zip&lt;/strong&gt;可以&lt;a href=&#34;https://unixetc.com/post/centos7-installation-and-use-p7zip/&#34;&gt;参考此文&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;root@localhost ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 7za&lt;/span&gt;

7-Zip &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;64&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; 16.02 : Copyright &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;c&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;locale&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;en_US.UTF-8,Utf16&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;on,HugeFiles&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;on,64 bits,1 CPU x64&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;

Usage: 7za &amp;lt;command&amp;gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&amp;lt;switches&amp;gt;...&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &amp;lt;archive_name&amp;gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&amp;lt;file_names&amp;gt;...&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
       &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&amp;lt;@listfiles...&amp;gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;

&amp;lt;Commands&amp;gt;
  a : Add files to archive
  b : Benchmark
  d : Delete files from archive
  e : Extract files from archive &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;without using directory names&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
  h : Calculate hash values &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; files
  i : Show information about supported formats
  l : List contents of archive
  rn : Rename files in archive
  t : Test integrity of archive
  u : Update files to archive
  x : eXtract files with full paths

&amp;lt;Switches&amp;gt;
  -- : Stop switches parsing
  -ai&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;r&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-|0&lt;span style=&#34;color:#f92672&#34;&gt;]]{&lt;/span&gt;@listfile|!wildcard&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; : Include archives
  -ax&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;r&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-|0&lt;span style=&#34;color:#f92672&#34;&gt;]]{&lt;/span&gt;@listfile|!wildcard&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; : eXclude archives
  -ao&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;a|s|t|u&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; : set Overwrite mode
  -an : disable archive_name field
  -bb&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0-3&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; : set output log level
  -bd : disable progress indicator
  -bs&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;o|e|p&lt;span style=&#34;color:#f92672&#34;&gt;}{&lt;/span&gt;0|1|2&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; : set output stream &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; output/error/progress line
  -bt : show execution time statistics
  -i&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;r&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-|0&lt;span style=&#34;color:#f92672&#34;&gt;]]{&lt;/span&gt;@listfile|!wildcard&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; : Include filenames
  -m&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Parameters&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; : set compression Method
    -mmt&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;N&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; : set number of CPU threads
  -o&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Directory&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; : set Output directory
  -p&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Password&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; : set Password
  -r&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-|0&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; : Recurse subdirectories
  -sa&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;a|e|s&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; : set Archive name mode
  -scc&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;UTF-8|WIN|DOS&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; : set charset &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; console input/output
  -scs&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;UTF-8|UTF-16LE|UTF-16BE|WIN|DOS|&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;id&lt;span style=&#34;color:#f92672&#34;&gt;}}&lt;/span&gt; : set charset &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; list files
  -scrc&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;CRC32|CRC64|SHA1|SHA256|*&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; : set hash &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; x, e, h commands
  -sdel : delete files after compression
  -seml&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;.&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; : send archive by email
  -sfx&lt;span style=&#34;color:#f92672&#34;&gt;[{&lt;/span&gt;name&lt;span style=&#34;color:#f92672&#34;&gt;}]&lt;/span&gt; : Create SFX archive
  -si&lt;span style=&#34;color:#f92672&#34;&gt;[{&lt;/span&gt;name&lt;span style=&#34;color:#f92672&#34;&gt;}]&lt;/span&gt; : read data from stdin
  -slp : set Large Pages mode
  -slt : show technical information &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; l &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;List&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; command
  -snh : store hard links as links
  -snl : store symbolic links as links
  -sni : store NT security information
  -sns&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; : store NTFS alternate streams
  -so : write data to stdout
  -spd : disable wildcard matching &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; file names
  -spe : eliminate duplication of root folder &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; extract command
  -spf : use fully qualified file paths
  -ssc&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; : set sensitive &lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt; mode
  -ssw : compress shared files
  -stl : set archive timestamp from the most recently modified file
  -stm&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;HexMask&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; : set CPU thread affinity mask &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;hexadecimal number&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
  -stx&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Type&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; : exclude archive type
  -t&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Type&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; : Set type of archive
  -u&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-&lt;span style=&#34;color:#f92672&#34;&gt;][&lt;/span&gt;p#&lt;span style=&#34;color:#f92672&#34;&gt;][&lt;/span&gt;q#&lt;span style=&#34;color:#f92672&#34;&gt;][&lt;/span&gt;r#&lt;span style=&#34;color:#f92672&#34;&gt;][&lt;/span&gt;x#&lt;span style=&#34;color:#f92672&#34;&gt;][&lt;/span&gt;y#&lt;span style=&#34;color:#f92672&#34;&gt;][&lt;/span&gt;z#&lt;span style=&#34;color:#f92672&#34;&gt;][&lt;/span&gt;!newArchiveName&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; : Update options
  -v&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Size&lt;span style=&#34;color:#f92672&#34;&gt;}[&lt;/span&gt;b|k|m|g&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; : Create volumes
  -w&lt;span style=&#34;color:#f92672&#34;&gt;[{&lt;/span&gt;path&lt;span style=&#34;color:#f92672&#34;&gt;}]&lt;/span&gt; : assign Work directory. Empty path means a temporary directory
  -x&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;r&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-|0&lt;span style=&#34;color:#f92672&#34;&gt;]]{&lt;/span&gt;@listfile|!wildcard&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; : eXclude filenames
  -y : assume Yes on all queries
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;压缩文档&#34;&gt;压缩文档&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;root@localhost oneinstack&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# du -sh     ##当前目录大小&lt;/span&gt;
1.8M    .
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;root@localhost oneinstack&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 7za a oi.7z *   ##将当前目录所有文件压缩保存为oi.7z&lt;/span&gt;

7-Zip &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;64&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; 16.02 : Copyright &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;c&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;locale&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;en_US.UTF-8,Utf16&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;on,HugeFiles&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;on,64 bits,1 CPU x64&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;

Scanning the drive:
&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt; folders, &lt;span style=&#34;color:#ae81ff&#34;&gt;128&lt;/span&gt; files, &lt;span style=&#34;color:#ae81ff&#34;&gt;1541017&lt;/span&gt; bytes &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1505&lt;/span&gt; KiB&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;

Creating archive: oi.7z

Items to compress: &lt;span style=&#34;color:#ae81ff&#34;&gt;135&lt;/span&gt;


Files read from disk: &lt;span style=&#34;color:#ae81ff&#34;&gt;128&lt;/span&gt;
Archive size: &lt;span style=&#34;color:#ae81ff&#34;&gt;131726&lt;/span&gt; bytes &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;129&lt;/span&gt; KiB&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
Everything is Ok
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;root@localhost oneinstack&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# ls -lh oi.7z  ###压缩后大小&lt;/span&gt;
-rw-r--r-- &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root 129K Jun &lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt; 15:59 oi.7z
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;p7zip&lt;/strong&gt;默认使用&lt;strong&gt;7z&lt;/strong&gt;格式，当然它还支持一些通用的压缩格式，如7z, lzma, cab, zip, gzip, bzip2, Z 和tar等等……&lt;/p&gt;
&lt;h3 id=&#34;解压缩&#34;&gt;解压缩&lt;/h3&gt;
&lt;p&gt;解压缩有两个参数可用，&lt;code&gt;e&lt;/code&gt;和&lt;code&gt;x&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;e&lt;/code&gt;  解压到当前目录，不使用压缩包的目录名&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;root@localhost test&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 7za -e mx9.7z&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;root@localhost test&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# tree&lt;/span&gt;
.
├── gor
├── gor.exe
├── linux32
├── linux64
├── linuxarm
├── mx9.7z
├── win32
└── win64
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;x&lt;/code&gt; 按照压缩包内文档结构进行解压，&lt;strong&gt;一般这个使用这个参数较多&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;root@localhost test&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 7za x mx9.7z&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;root@localhost test&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# tree .&lt;/span&gt;
.
├── gor370
│   ├── linux32
│   │   └── gor
│   ├── linux64
│   ├── linuxarm
│   │   └── gor
│   ├── win32
│   │   └── gor.exe
│   └── win64
│       └── gor.exe
└── mx9.7z
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;格式设置&#34;&gt;格式设置&lt;/h3&gt;
&lt;p&gt;使用&lt;code&gt;-t&lt;/code&gt;参数来指定压缩格式，使用如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;7z a -tzip archive.zip *.txt
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;将当前目录下所有&lt;strong&gt;txt&lt;/strong&gt;文件打包压缩为&lt;strong&gt;archive.zip&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;7z t -t7z.split archive.7z.001
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;测试&lt;strong&gt;archive.7z.001&lt;/strong&gt;中的所有文件，同时还支持多7z存档。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;7z x -t# sfxarchive.exe
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;使用解析模式提取&lt;strong&gt;sfxarchive.exe&lt;/strong&gt;文件&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;7z x -tiso archive.iso
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;以&lt;strong&gt;ISO&lt;/strong&gt;存档模式解压&lt;strong&gt;archive.iso&lt;/strong&gt;文件&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;7z x -tudf archive.iso

&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;以&lt;strong&gt;UDF&lt;/strong&gt;存档模式解压&lt;strong&gt;archive.iso&lt;/strong&gt;文件，&lt;strong&gt;UDF&lt;/strong&gt;说明&lt;a href=&#34;https://en.wikipedia.org/wiki/Universal_Disk_Format&#34;&gt;在此&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;压缩模式设置&#34;&gt;压缩模式设置&lt;/h3&gt;
&lt;p&gt;使用&lt;code&gt;-m&lt;/code&gt;参数来设置模式，此项设置与文档类型有关。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;7z&lt;/strong&gt;类型的压缩模式参数：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-mx&lt;/code&gt;  设置压缩级别，x=[0 | 1 | 3 | 5 | 7 | 9 ]&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;等级&lt;/th&gt;
&lt;th&gt;模式&lt;/th&gt;
&lt;th&gt;字典&lt;/th&gt;
&lt;th&gt;FastBytes&lt;/th&gt;
&lt;th&gt;MatchFinder&lt;/th&gt;
&lt;th&gt;Filter&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;Copy&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;无压缩&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;LZMA2&lt;/td&gt;
&lt;td&gt;64 KB&lt;/td&gt;
&lt;td&gt;32&lt;/td&gt;
&lt;td&gt;HC4&lt;/td&gt;
&lt;td&gt;BCJ&lt;/td&gt;
&lt;td&gt;最快压缩&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;LZMA2&lt;/td&gt;
&lt;td&gt;1 MB&lt;/td&gt;
&lt;td&gt;32&lt;/td&gt;
&lt;td&gt;HC4&lt;/td&gt;
&lt;td&gt;BCJk&lt;/td&gt;
&lt;td&gt;快速压缩&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;LZMA2&lt;/td&gt;
&lt;td&gt;16 MB&lt;/td&gt;
&lt;td&gt;32&lt;/td&gt;
&lt;td&gt;BT4&lt;/td&gt;
&lt;td&gt;BCJ&lt;/td&gt;
&lt;td&gt;一般压缩&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;LZMA2&lt;/td&gt;
&lt;td&gt;32 MB&lt;/td&gt;
&lt;td&gt;64&lt;/td&gt;
&lt;td&gt;BT4&lt;/td&gt;
&lt;td&gt;BCJz&lt;/td&gt;
&lt;td&gt;最大压缩&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;LZMA2&lt;/td&gt;
&lt;td&gt;64 MB&lt;/td&gt;
&lt;td&gt;64&lt;/td&gt;
&lt;td&gt;BT4&lt;/td&gt;
&lt;td&gt;BCJ2j&lt;/td&gt;
&lt;td&gt;极致压缩&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;实例如下&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;root@localhost ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#7za -mx=0 a mx0.7z gor370/*&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;root@localhost ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#7za -mx=1 a mx1.7z gor370/*&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;root@localhost ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#7za -mx=3 a mx3.7z gor370/*&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;root@localhost ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#7za -mx=5 a mx5.7z gor370/*&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;root@localhost ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#7za -mx=7 a mx7.7z gor370/*&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;root@localhost ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#7za -mx=9 a mx9.7z gor370/*&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;root@localhost ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# du -sh gor370/&lt;/span&gt;
31M     gor370/
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;root@localhost ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# ls -lh m*.7z&lt;/span&gt;
-rw-r--r-- &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root  31M Jun &lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt; 16:34 mx0.7z
-rw-r--r-- &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root 8.0M Jun &lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt; 16:34 mx1.7z
-rw-r--r-- &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root 7.8M Jun &lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt; 16:34 mx3.7z
-rw-r--r-- &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root 6.6M Jun &lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt; 16:34 mx5.7z
-rw-r--r-- &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root 6.5M Jun &lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt; 16:35 mx7.7z
-rw-r--r-- &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root 6.4M Jun &lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt; 16:35 mx9.7z
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;可以看出压缩级别越高，压缩后的文件体积越小。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>一加3/3T工具包</title>
      <link>https://unixetc.com/post/oneplus3-3t-unified-toolkit/</link>
      <pubDate>Thu, 15 Jun 2017 16:15:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/oneplus3-3t-unified-toolkit/</guid>
      <description>&lt;p&gt;工具菜单如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    Title OnePlus 3/3T Unified ToolKit v5.0U by @ahmed_radaideh
	
	
	
            ======================
            =        Menu        =
            ======================
	
	
    Enter a Number to select a Task.
	
    1)  Install USB Drivers On PC
    2)  Unlock - ReLock Bootloader
    3)  Check Device Status
    4)  Check Bootloader Status
    5)  Flash - Boot TWRP Recovery
    6)  Flash - Boot Stock Recovery
    7)  Push Systemless Root
    8)  Push Debloater Script
    9)  Wipe Cache Your Device
    10) Force Decryption Device [WIPE]
    11) Get Logs your Device
    12) Restart Menu
	
    13) Check for new Version
    14) XDA Thread
    15) Donate!
    00) Exit
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;XDA贴地址在&lt;a href=&#34;https://forum.xda-developers.com/oneplus-3/development/toolkit-oneplus-3-toolkit-unlock-t3398799&#34;&gt;这里&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h3 id=&#34;一加3t刷机步骤&#34;&gt;一加3T刷机步骤&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;进入Fastboot模式方法，关机后，按住&lt;/strong&gt;音量减&lt;strong&gt;+&lt;/strong&gt;电源键**进入。**界面如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://unixetc.com/imgs/161221230.webp&#34; alt=&#34;Image31542161760.webp&#34;&gt;&lt;/p&gt;
&lt;p&gt;注意看最上面两个横线中间的&lt;strong&gt;START&lt;/strong&gt;，这里是启动菜单，可以使用&lt;strong&gt;音量键&lt;/strong&gt;上下选择，使用&lt;strong&gt;电源键确认&lt;/strong&gt;选择。注意看最后一行的设备状态(DEVICE STATE) ，locked表示加锁，unlock表示解锁。&lt;/p&gt;
&lt;p&gt;有以下四个菜单项：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;START 正常启动开机&lt;/li&gt;
&lt;li&gt;Recovery mode 进入recovery&lt;/li&gt;
&lt;li&gt;Restart bootloader 重启bootloader模式&lt;/li&gt;
&lt;li&gt;Power off 关机&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;一加3t解锁&#34;&gt;一加3T解锁&lt;/h4&gt;
&lt;p&gt;设置-&amp;gt;开发者选项  打开&lt;strong&gt;OEM解锁&lt;/strong&gt;和&lt;strong&gt;USB调试&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://unixetc.com/imgs/3468369060.webp&#34; alt=&#34;Image11542159101.webp&#34;&gt;&lt;/p&gt;
&lt;p&gt;连接手机和电脑，打开工具包选择&lt;strong&gt;Unlock - ReLock Bootloader&lt;/strong&gt;，下一步选择&lt;strong&gt;Unlock Bootloader&lt;/strong&gt;解锁，然后手机重启，接下来会有&lt;strong&gt;Unlock Boot loader?&lt;strong&gt;提示，用音量减选择&lt;/strong&gt;YES&lt;/strong&gt;，电源键确认开始解锁操作。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://unixetc.com/imgs/2664099143.webp&#34; alt=&#34;Image21542161433.webp&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;刷入第三方recovery&#34;&gt;刷入第三方Recovery&lt;/h4&gt;
&lt;p&gt;打开&lt;strong&gt;Fastboot&lt;/strong&gt;模式，连接手机和电脑，选择&lt;strong&gt;5)  Flash - Boot TWRP Recovery&lt;/strong&gt;，刷入&lt;strong&gt;TWRP&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;刷机第三方ROM&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;进入&lt;strong&gt;TWRP&lt;/strong&gt;，挂载&lt;strong&gt;MTP&lt;/strong&gt;，将&lt;strong&gt;ROM&lt;/strong&gt;文件拷入手机，然后进行卡刷。&lt;/p&gt;
&lt;h4 id=&#34;一加3t恢复官方rom&#34;&gt;一加3T恢复官方ROM&lt;/h4&gt;
&lt;p&gt;步骤：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;恢复官方Recovery&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;进入&lt;strong&gt;Fastboot&lt;/strong&gt;，连接手机和电脑，选择&lt;strong&gt;6)  Flash - Boot Stock Recovery&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;进入&lt;strong&gt;Fastboot&lt;/strong&gt;，连接手机和电脑，选择&lt;strong&gt;10) Force Decryption Device [WIPE]&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;重新加锁Boot&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;进入&lt;strong&gt;Fastboot&lt;/strong&gt;，连接手机和电脑，打开工具包选择&lt;strong&gt;2)  Unlock - ReLock Bootloader&lt;/strong&gt;，下一步选择2重新加锁。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;通过USB刷机&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;进入&lt;strong&gt;Recovery&lt;/strong&gt;，选择&lt;strong&gt;从USB安装升级文件&lt;/strong&gt;,手机连接电脑，通过以下命令刷入官方包：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;adb fastboot OnePlus3T.zip
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;完成后重启。&lt;/p&gt;
&lt;h4 id=&#34;一些补充说明&#34;&gt;一些补充说明&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;启用开发者选项&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;设置-&amp;gt;关于手机 单击&lt;strong&gt;版本号&lt;/strong&gt;多次(4)，会提示已经打开开发者选项&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;进入&lt;strong&gt;Fastboot&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;关机，按住&lt;strong&gt;音量减&lt;/strong&gt;，再同时按住&lt;strong&gt;电源键&lt;/strong&gt;开机&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;进入&lt;strong&gt;Recovery&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;关机，按住&lt;strong&gt;音量加&lt;/strong&gt;，再同时按住&lt;strong&gt;电源键&lt;/strong&gt;开机&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Adb工具&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;adb在工具包内的files文件夹中&lt;/p&gt;
&lt;p&gt;下载地址&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://dotbbq.pipipan.com/fs/18418398-315801102&#34;&gt;https://dotbbq.pipipan.com/fs/18418398-315801102&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>修复东芝U盘写保护</title>
      <link>https://unixetc.com/post/fix-toshiba-u-disk-write-protection/</link>
      <pubDate>Sat, 10 Jun 2017 16:10:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/fix-toshiba-u-disk-write-protection/</guid>
      <description>&lt;p&gt;一直以来都是使用U盘安装Linux，光盘镜像通过&lt;code&gt;dd&lt;/code&gt;写入U盘。最近需要安装&lt;strong&gt;elementary&lt;/strong&gt;，下载镜像后发现系统推荐使用&lt;strong&gt;Rufus&lt;/strong&gt;来写入U盘，这个工具以前没试过所以试了下，确实挺快的。&lt;/p&gt;
&lt;p&gt;不过在安装完&lt;strong&gt;elementary&lt;/strong&gt;后，想将U盘重新恢复格式化出问题了，使用&lt;strong&gt;DiskGenius&lt;/strong&gt;无法进行操作，使用系统自带的磁盘管理也没法操作，包括&lt;strong&gt;Linux&lt;/strong&gt;下的&lt;strong&gt;GParted&lt;/strong&gt;也不行，都提示U盘被写保护了，-__-!&lt;/p&gt;
&lt;p&gt;万般无奈只能想到量产工具，下面分享使用到的两款软件：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ChipGenius&lt;/li&gt;
&lt;li&gt;Restore&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;ChipGenius&lt;/strong&gt;是一款U盘信息检测软件，通过它可以来查看U盘主控信息，我的这款U盘芯片信息如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-reStructuredText&#34; data-lang=&#34;reStructuredText&#34;&gt;设备描述: [G:]USB 大容量存储设备(TOSHIBA TransMemory-Mx)&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;设备类型: 大容量存储设备&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;协议版本: USB 3.00&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;当前速度: 极速(SuperSpeed)&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;电力消耗: 504mA&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;USB设备ID: VID = 0930 PID = 6545&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;设备序列号: FFFFFFFFFFFFEE20F000BC99&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;设备供应商: TOSHIBA&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;　设备名称: TransMemory-Mx&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;设备修订版: 0110&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;产品制造商: TOSHIBA&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;　产品型号: TransMemory-Mx&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;产品修订版: PMAP&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;　主控厂商: Phison(群联)&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;　主控型号: PS2251-03(PS2303) - F/W 02.08.53 [2014-01-02]&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;闪存识别码: 983AA892 - Toshiba(东芝) TC58NVG7T2JTA00 [TLC-8K]&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Restore&lt;/strong&gt;是群联官方提供的一款恢复工具，可以进行低级格式化和修复。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>在Linux中运行Android软件</title>
      <link>https://unixetc.com/post/anbox-run-android-applications-on-linux/</link>
      <pubDate>Fri, 09 Jun 2017 06:09:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/anbox-run-android-applications-on-linux/</guid>
      <description>&lt;p&gt;想要在PC上运行Android软件就需要模拟器，Windows版的Android模拟器软件很多，但是Linux平台的就不多了，今天推荐一款Linux下的Android模拟器软件&lt;strong&gt;Anbox&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Anbox官方介绍为Android in a Box,Run Android applications on any GNU/Linux operating system.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Anbox&lt;/strong&gt;现在还处于测试阶段，很多功能还不完善和稳定，请谨慎使用。&lt;/p&gt;
&lt;h3 id=&#34;安装anbox&#34;&gt;安装Anbox&lt;/h3&gt;
&lt;p&gt;首先得安装&lt;strong&gt;Snaps&lt;/strong&gt;,官方地址为&lt;a href=&#34;https://snapcraft.io/&#34;&gt;https://snapcraft.io/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;LinuxMint中安装Snaps和必须包&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo apt install snapd
sudo apt install pulseaudio
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;接下来按照官方指南安装&lt;strong&gt;Anbox&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;snap install --classic anbox-installer &amp;amp;&amp;amp; anbox-installer
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;我试着通过snap来安装一直存在权限问题，一般权限不能运行&lt;code&gt;snap install --classic anbox-installer&lt;/code&gt;，root运行完&lt;code&gt;snap install --classic anbox-installer&lt;/code&gt;后，但运行&lt;code&gt;anbox-installer&lt;/code&gt;又提示不能使用root权限，一般权限根本无法运行&lt;code&gt;anbox-installer&lt;/code&gt;，搞了半天都没有成功，于是就有了下文。&lt;/p&gt;
&lt;p&gt;通过常规方法安装&lt;strong&gt;Anbox&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;wget https://raw.githubusercontent.com/anbox/anbox-installer/master/installer.sh -O anbox-installer
chmod +x ./anbox-installer
./anbox-installer
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;安装完成后会有重启系统的提示&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;To ensure all changes made to your system you should now reboot
your system. If you don&amp;rsquo;t do this no Android applications will
show up in the system application launcher.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;重启后就会在系统菜单中找到&lt;strong&gt;Anbox&lt;/strong&gt;，点击打开，见下图(注意Cuto是我自己安装的，原来没有)&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/org.anbox.appmgr.webp&#34; alt=&#34;org.anbox.appmgr&#34;&gt;&lt;/p&gt;
&lt;p&gt;一个基本的Android系统已经成功了，可以看看系统信息&lt;strong&gt;Settings&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/anbox.settings.webp&#34; alt=&#34;anbox_settings&#34;&gt;&lt;/p&gt;
&lt;p&gt;可以看到，Android版本为7.1.1，很新咯!&lt;/p&gt;
&lt;h4 id=&#34;在anbox中安装android软件&#34;&gt;在Anbox中安装Android软件&lt;/h4&gt;
&lt;p&gt;首先需要安装&lt;strong&gt;adb&lt;/strong&gt;工具&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo apt install adb
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;安装成功后，可以使用adb来识别模拟器是否链接&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;adb devices

List of devices attached
emulator-6663	device
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;可以看到出现了一个名为emulator-6663的设备&lt;/p&gt;
&lt;p&gt;下来安装Android软件&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;alair@vbs ~/下载 $ ls
Cuto-1.2.1-28-for-30644-o_1bgano4o21gjj1l1v183893n1sdkr-uid-423508.apk
nautilus_nutstore_amd64.deb
alair@vbs ~/下载 $ adb install ./Cuto-1.2.1-28-for-30644-o_1bgano4o21gjj1l1v183893n1sdkr-uid-423508.apk 
18112 KB/s (7389673 bytes in 0.398s)
Success
alair@vbs ~/下载 $ 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;以上以安装&lt;strong&gt;Cuto&lt;/strong&gt;为例，安装完成后就可以点击运行咯。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>CentOS7安装使用p7zip</title>
      <link>https://unixetc.com/post/centos7-installation-and-use-p7zip/</link>
      <pubDate>Tue, 06 Jun 2017 06:06:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/centos7-installation-and-use-p7zip/</guid>
      <description>&lt;p&gt;在此只推荐从源码安装&lt;strong&gt;p7zip&lt;/strong&gt;，下载地址 &lt;a href=&#34;http://www.7-zip.org/download.html&#34;&gt;http://www.7-zip.org/download.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;源码在这里下载 &lt;a href=&#34;https://sourceforge.net/projects/p7zip/files/p7zip/&#34;&gt;https://sourceforge.net/projects/p7zip/files/p7zip/&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;wget https://sourceforge.net/projects/p7zip/files/p7zip/16.02/p7zip_16.02_src_all.tar.bz2
tar jxf p7zip_16.02_src_all.tar.bz2
cd p7zip_16.02
make 
make install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;使用p7zip&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[root@localhost ~]# 7za
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;7-Zip &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;64&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; 16.02 : Copyright &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;c&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;locale&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;en_US.UTF-8,Utf16&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;on,HugeFiles&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;on,64 bits,1 CPU x64&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;

Usage: 7za &amp;lt;command&amp;gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&amp;lt;switches&amp;gt;...&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &amp;lt;archive_name&amp;gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&amp;lt;file_names&amp;gt;...&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
   &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&amp;lt;@listfiles...&amp;gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;

&amp;lt;Commands&amp;gt;
  a : Add files to archive
  b : Benchmark
  d : Delete files from archive
  e : Extract files from archive &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;without using directory names&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
  h : Calculate hash values &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; files
  i : Show information about supported formats
  l : List contents of archive
  rn : Rename files in archive
  t : Test integrity of archive
  u : Update files to archive
  x : eXtract files with full paths
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;压缩文件&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;7za a pak.7z ./photos/*.jpg    &lt;span style=&#34;color:#75715e&#34;&gt;#压缩./photo/目录下所有jpg文件为pak.7z&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;解压缩文件&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;7za x pak.7z
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>树莓派显示天气信息</title>
      <link>https://unixetc.com/post/weather-according-to-raspberry-pi/</link>
      <pubDate>Thu, 25 May 2017 15:12:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/weather-according-to-raspberry-pi/</guid>
      <description>&lt;p&gt;在此介绍一个国外网友的树莓派项目&lt;strong&gt;RARP&lt;/strong&gt;，Weather According to Raspberry Pi&lt;/p&gt;
&lt;p&gt;顾名思义，Weather According to Raspberry Pi是一个有关天气信息的项目，该项目通过采集&lt;strong&gt;Raspberry Pi&lt;/strong&gt;和&lt;strong&gt;Sense HAT&lt;/strong&gt;的数据，来显示相关的天气信息，比如温度、湿度、压力等&lt;/p&gt;
&lt;p&gt;项目地址&lt;a href=&#34;http://coded2.herokuapp.com/weather/&#34;&gt;http://coded2.herokuapp.com/weather/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;代码国内下载地址&lt;a href=&#34;http://cdn.lyq.wiki/res/warp_final.zip&#34;&gt;http://cdn.lyq.wiki/res/warp_final.zip&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;下载后解压，得到&lt;strong&gt;main.py&lt;/strong&gt;和&lt;strong&gt;gauge2.html&lt;/strong&gt;两个文件，其中&lt;strong&gt;main.py&lt;/strong&gt;需要&lt;strong&gt;Python3&lt;/strong&gt;运行，&lt;strong&gt;gauge2.html&lt;/strong&gt;是最终的显示文件&lt;/p&gt;
&lt;p&gt;安装相关软件&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo apt-get install python3
sudo apt-get install python3-pip
pip3 install flask
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;打开&lt;strong&gt;Sense HAT仿真器&lt;/strong&gt;，在程序菜单中，打开后如下图示:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/senseHAT-emu.webp&#34; alt=&#34;SenseHAT Menu&#34;&gt;&lt;/p&gt;
&lt;p&gt;下来，运行下载的python脚本&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;python3 main.py
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;正常情况下，会提示一个端口为&lt;strong&gt;5000&lt;/strong&gt;的web服务正在运行&lt;/p&gt;
&lt;p&gt;在浏览器中浏览&lt;strong&gt;localhost:5000&lt;/strong&gt;或者&lt;strong&gt;127.0.0.1:5000&lt;/strong&gt;，最终的浏览如下图&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/warp.webp&#34; alt=&#34;WARP&#34;&gt;&lt;/p&gt;
&lt;p&gt;三个图表分别显示温度、压力和湿度，这三者的信息均来自&lt;strong&gt;Sense HAT 模拟器&lt;/strong&gt;而不是真正的&lt;strong&gt;Sense HAT&lt;/strong&gt;硬件。&lt;/p&gt;
&lt;p&gt;如果需要采集&lt;strong&gt;Sense HAT&lt;/strong&gt;扩展板的数据，需要将&lt;strong&gt;Sense HAT&lt;/strong&gt;附加板和&lt;strong&gt;Raspberry Pi&lt;/strong&gt;相连，具体信息参考官网 &lt;a href=&#34;https://www.raspberrypi.org/products/sense-hat/&#34;&gt;https://www.raspberrypi.org/products/sense-hat/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;然后修改代码，打开&lt;strong&gt;main.py&lt;/strong&gt;文件，找到如下行&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;from sense_emu import SenseHat
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;修改为&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;from sense_hat import SenseHat
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;保存后，重新运行&lt;strong&gt;python3 main.py&lt;/strong&gt;，此时采集的数据就来自真实的&lt;strong&gt;SenseHAT&lt;/strong&gt;硬件。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>在Citrix中使用本机输入法</title>
      <link>https://unixetc.com/post/native-input-method-is-used-in-citrix/</link>
      <pubDate>Tue, 16 May 2017 15:16:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/native-input-method-is-used-in-citrix/</guid>
      <description>&lt;p&gt;进入到Citrix安装目录&lt;code&gt;C:\Program Files (x86)\Citrix\ICA Client&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;启用本地输入法&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;wfica32.exe /localime:on
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;禁用本地输入法&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;wfica32.exe /localime:off
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;以上输入完后会有弹窗提示是否成功。&lt;/p&gt;
&lt;p&gt;除了通过运行命令行程序来更改，也可以通过修改注册表来实现&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;HKLM配置位置
HKEY_LOCAL_MACHINE\SOFTWARE\Citrix\ICA Client\Engine\Lockdown Profiles\All Regions\Lockdown\Virtual Channels\Keyboard
HKCU配置位置
HKEY_CURRENT_USER\Software\Citrix\ICA Client\Engine\Lockdown Profiles\All Regions\Lockdown\Virtual Channels\Keyboard
#设置LocalIME = 1 or 0
#disable=0, enable=1,留空使用其他位置的设置
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;注意HKLM和HKCU必须同时修改，64位操作系统注册表键值在WOW64节点下&lt;/strong&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>理解Linux中Shell初始化文件和用户Profiles文件</title>
      <link>https://unixetc.com/post/understand-linux-shell-initialization-files-and-user-profiles-files/</link>
      <pubDate>Tue, 25 Apr 2017 14:25:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/understand-linux-shell-initialization-files-and-user-profiles-files/</guid>
      <description>&lt;p&gt;Linux是一个多用户、实时共享的操作系统，意味着不止一个用户可以登录同一个系统。系统管理员通过任务管理来分配不同用户的权限，比如安装、升级、卸载应用程序，运行编译程序，文件查看、编辑等等。&lt;/p&gt;
&lt;p&gt;Linux允许通过两种主要方式来创建用户环境：系统级(全局)和用户级(个人)。一般情况下，Linux系统都会运行基本shell程序，当用户登录成功后shell会在初始化时根据某些文件开创建环境。&lt;/p&gt;
&lt;h3 id=&#34;linux中的shell初始化&#34;&gt;Linux中的Shell初始化&lt;/h3&gt;
&lt;p&gt;当&lt;strong&gt;Shell&lt;/strong&gt;被调用时，会有一些初始化/启动文件被启用，它们的主要作用是为shell本身或用户设定运行环境，包含一些函数、	变量、别名等等。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Shell&lt;/strong&gt;可以读取以下两种初始化文件:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;系统级启动文件&lt;/strong&gt; – 包含一些应用于户所有用户的全局配置，一般存在于**/etc**目录中，如 **/etc/profiles** 、**/etc/bashrc** 或者 **/etc/bash.bashrc**。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;用户级启动文件&lt;/strong&gt; – 包含一些应用于单用户的配置文件，一般存放在各个用户目录，这些配置可以覆盖系统级全局配置，如**.profiles**、 **.bash_profile**、 **.bashrc** 和 **.bash_login**.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Shell&lt;/strong&gt;存在三种调用模式：&lt;/p&gt;
&lt;h4 id=&#34;1-交互式登录shell&#34;&gt;1. 交互式登录Shell&lt;/h4&gt;
&lt;p&gt;当用户成功登录系统后调用该&lt;strong&gt;Shell&lt;/strong&gt;,使用**/bin/login**登录，随后读取**/etc/passwd**文件。&lt;/p&gt;
&lt;p&gt;当启动交互式&lt;strong&gt;shell&lt;/strong&gt;后，将读取**/etc/profile**文件以及特定的用户文件**~/.bash_profile**&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;login as: pi
pi@pi.raspi.in&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;s password:

The programs included with the Debian GNU/Linux system are free software;
the exact distribution terms &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; each program are described in the
individual files in /usr/share/doc/*/copyright.

Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent
permitted by applicable law.
Last login: Tue Apr &lt;span style=&#34;color:#ae81ff&#34;&gt;25&lt;/span&gt; 10:43:53 &lt;span style=&#34;color:#ae81ff&#34;&gt;2017&lt;/span&gt; from 211.137.135.200
pi@raspi:~ $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;2-非登录交互式shell&#34;&gt;2. 非登录交互式Shell&lt;/h4&gt;
&lt;p&gt;当使用如&lt;strong&gt;$/bin/bash&lt;/strong&gt; or &lt;strong&gt;$/bin/zsh&lt;/strong&gt;的命令行时，将会系统非登录交互式&lt;strong&gt;shell&lt;/strong&gt;。他也可以通过**/bin/su**命令来运行。&lt;/p&gt;
&lt;p&gt;另外，在打开如&lt;strong&gt;konsole&lt;/strong&gt;、&lt;strong&gt;terminator&lt;/strong&gt;和&lt;strong&gt;xterm&lt;/strong&gt;等图形化终端程序时 ，非登录交互式&lt;strong&gt;shell&lt;/strong&gt;也将被调用。&lt;/p&gt;
&lt;p&gt;这种情况下调用时，它将拷贝父&lt;strong&gt;shell&lt;/strong&gt;的环境，并读取相应用户级的 &lt;strong&gt;~/.bashrc&lt;/strong&gt; 配置文件。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;pi@raspi:~ $ sudo -s
root@raspi:/home/pi# cd
root@raspi:~# ls -la
total &lt;span style=&#34;color:#ae81ff&#34;&gt;56&lt;/span&gt;
drwx------  &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt; root root &lt;span style=&#34;color:#ae81ff&#34;&gt;4096&lt;/span&gt; Apr &lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt; 10:26 .
drwxr-xr-x &lt;span style=&#34;color:#ae81ff&#34;&gt;22&lt;/span&gt; root root &lt;span style=&#34;color:#ae81ff&#34;&gt;4096&lt;/span&gt; Feb  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; 20:28 ..
-rw-------  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root &lt;span style=&#34;color:#ae81ff&#34;&gt;2177&lt;/span&gt; Apr &lt;span style=&#34;color:#ae81ff&#34;&gt;25&lt;/span&gt; 11:21 .bash_history
-rw-r--r--  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root  &lt;span style=&#34;color:#ae81ff&#34;&gt;765&lt;/span&gt; Feb  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; 20:48 .bashrc
drwx------  &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; root root &lt;span style=&#34;color:#ae81ff&#34;&gt;4096&lt;/span&gt; Mar  &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; 14:28 .cache
drwxr-xr-x  &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; root root &lt;span style=&#34;color:#ae81ff&#34;&gt;4096&lt;/span&gt; Mar  &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; 11:15 .config
drwxr-xr-x  &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; root root &lt;span style=&#34;color:#ae81ff&#34;&gt;4096&lt;/span&gt; Mar  &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; 11:15 .local
drwxr-xr-x  &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; root root &lt;span style=&#34;color:#ae81ff&#34;&gt;4096&lt;/span&gt; Apr &lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt; 10:26 .oracle_jre_usage
drwxr-xr-x  &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; root root &lt;span style=&#34;color:#ae81ff&#34;&gt;4096&lt;/span&gt; Feb &lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt; 11:18 .pip
-rw-r--r--  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root  &lt;span style=&#34;color:#ae81ff&#34;&gt;140&lt;/span&gt; Nov &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;2007&lt;/span&gt; .profile
-rw-------  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root   &lt;span style=&#34;color:#ae81ff&#34;&gt;41&lt;/span&gt; Mar  &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; 11:39 .python_history
drwx------  &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; root root &lt;span style=&#34;color:#ae81ff&#34;&gt;4096&lt;/span&gt; Mar  &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; 11:20 .ssh
-rw-------  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root &lt;span style=&#34;color:#ae81ff&#34;&gt;6342&lt;/span&gt; Mar &lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt; 17:30 .viminfo
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;3-非交互式shell&#34;&gt;3. 非交互式Shell&lt;/h4&gt;
&lt;p&gt;当运行脚本时则条用非交互式&lt;strong&gt;shell&lt;/strong&gt;。在这种模式下，它将处理所运行的脚本中的命令、函数等操作，不需要进行交互式输入，除非脚本需求。使用的环境继承自&lt;strong&gt;父shell&lt;/strong&gt;。&lt;/p&gt;
&lt;h3 id=&#34;理解系统级shell启动文件&#34;&gt;理解系统级Shell启动文件&lt;/h3&gt;
&lt;p&gt;下来，我们来看看一些系统级启动文件都有什么内容：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/etc/profile file&lt;/strong&gt;文件存储登录时系统级环境配置和启动程序。如果你想配置应用于所有用户的环境设置，可以加入此文件。&lt;/p&gt;
&lt;p&gt;比如，你可在这里设置全局路径变量。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;pi@raspi:~ $ cat /etc/profile
&lt;span style=&#34;color:#75715e&#34;&gt;# /etc/profile: system-wide .profile file for the Bourne shell (sh(1))&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# and Bourne compatible shells (bash(1), ksh(1), ash(1), ...).&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;`id -u`&amp;#34;&lt;/span&gt; -eq &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
  PATH&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/usr/local/sbin:/usr/local/usr/sbin:/usr/sbin:/bin&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#old bak  PATH=&amp;#34;/usr/local/sbin:/usr/local/usr/sbin:/usr/sbin:/bin:/usr/local/games:/usr/games&amp;#34;&lt;/span&gt;
PATH&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/bin:/sbin:/usr/local/games:/usr/games&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
export PATH

&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$PS1&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
  &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$BASH&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$BASH&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; !&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/bin/sh&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
    &lt;span style=&#34;color:#75715e&#34;&gt;# The file bash.bashrc already sets the default PS1.&lt;/span&gt;
    &lt;span style=&#34;color:#75715e&#34;&gt;# PS1=&amp;#39;\h:\w\$ &amp;#39;&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -f /etc/bash.bashrc &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
      . /etc/bash.bashrc
    &lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
  &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;`id -u`&amp;#34;&lt;/span&gt; -eq &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
      PS1&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;# &amp;#39;&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;
      PS1&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;$ &amp;#39;&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
  &lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -d /etc/profile.d &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
  &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i in /etc/profile.d/*.sh; &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -r $i &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
      . $i
    &lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
  &lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;
  unset i
&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
export PATH&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;/usr/local/nginx/sbin:$PATH
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：当你使用&lt;strong&gt;RHEL/CentOS7&lt;/strong&gt;系统时，会看到如下提示&amp;quot;It’s not recommended to change this file unless you know what you are doing. It’s much better to create a custom &lt;strong&gt;.sh&lt;/strong&gt; shell script in &lt;strong&gt;/etc/profile.d/&lt;/strong&gt; to make custom changes to your environment, as this will prevent the need for merging in future updates&amp;rdquo;。&lt;/p&gt;
&lt;p&gt;提示中的 &lt;strong&gt;/etc/profile.d/&lt;/strong&gt; 目录保存着所有的自定义修改运行环境的脚本。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;pi@raspi:~ $ cd /etc/profile.d/
pi@raspi:/etc/profile.d $ ls -l
total &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;
-rw-r--r-- &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root &lt;span style=&#34;color:#ae81ff&#34;&gt;663&lt;/span&gt; Mar &lt;span style=&#34;color:#ae81ff&#34;&gt;23&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;2014&lt;/span&gt; bash_completion.sh
-rw-r--r-- &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root &lt;span style=&#34;color:#ae81ff&#34;&gt;387&lt;/span&gt; Mar &lt;span style=&#34;color:#ae81ff&#34;&gt;31&lt;/span&gt; 11:47 oneinstack.sh
pi@raspi:/etc/profile.d $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;/etc/bashrc&lt;/strong&gt; 或 &lt;strong&gt;/etc/bash.bashrc&lt;/strong&gt;文件，包含应用于所有用户的系统级函数、变量、别名等配置信息。&lt;/p&gt;
&lt;p&gt;如果你的系统包含多种&lt;strong&gt;Shell&lt;/strong&gt;程序，建议你可以将一些特定的配置放到这里。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;root@raspi:~# cat /etc/bash.bashrc
&lt;span style=&#34;color:#75715e&#34;&gt;# System-wide .bashrc file for interactive bash(1) shells.&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# To enable the settings / commands in this file for login shells as well,&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# this file has to be sourced in /etc/profile.&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# If not running interactively, don&amp;#39;t do anything&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -z &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$PS1&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# check the window size after each command and, if necessary,&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# update the values of LINES and COLUMNS.&lt;/span&gt;
shopt -s checkwinsize

&lt;span style=&#34;color:#75715e&#34;&gt;# set variable identifying the chroot you work in (used in the prompt below)&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -z &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;debian_chroot&lt;span style=&#34;color:#66d9ef&#34;&gt;:-&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -r /etc/debian_chroot &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
    debian_chroot&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;cat /etc/debian_chroot&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# set a fancy prompt (non-color, overwrite the one in /etc/profile)&lt;/span&gt;
PS1&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;${debian_chroot:+($debian_chroot)}\u@\h:\w\$ &amp;#39;&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# Commented out, don&amp;#39;t overwrite xterm -T &amp;#34;title&amp;#34; -n &amp;#34;icontitle&amp;#34; by default.&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# If this is an xterm set the title to user@host:dir&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#case &amp;#34;$TERM&amp;#34; in&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#xterm*|rxvt*)&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#    PROMPT_COMMAND=&amp;#39;echo -ne &amp;#34;\033]0;${USER}@${HOSTNAME}: ${PWD}\007&amp;#34;&amp;#39;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#    ;;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#*)&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#    ;;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#esac&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# enable bash completion in interactive shells&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#if ! shopt -oq posix; then&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#  if [ -f /usr/share/bash-completion/bash_completion ]; then&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#    . /usr/share/bash-completion/bash_completion&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#  elif [ -f /etc/bash_completion ]; then&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#    . /etc/bash_completion&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#  fi&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#fi&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# if the command-not-found package is installed, use it&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -x /usr/lib/command-not-found -o -x /usr/share/command-not-found/command-not-found &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; command_not_found_handle &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
                &lt;span style=&#34;color:#75715e&#34;&gt;# check because c-n-f could&amp;#39;ve been removed in the meantime&lt;/span&gt;
                &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -x /usr/lib/command-not-found &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
                   /usr/lib/command-not-found -- &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$1&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
                   &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; $?
                &lt;span style=&#34;color:#66d9ef&#34;&gt;elif&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -x /usr/share/command-not-found/command-not-found &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
                   /usr/share/command-not-found/command-not-found -- &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$1&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
                   &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; $?
                &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;
                   printf &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%s: command not found\n&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$1&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &amp;gt;&amp;amp;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
                   &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;127&lt;/span&gt;
                &lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;理解用户级shell启动文件&#34;&gt;理解用户级Shell启动文件&lt;/h3&gt;
&lt;p&gt;接下来，我们看一下用户级启动文件，它们中的配置只应用户对应用户，一般放置在相对应的用户目录中：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;root@raspi:~# ls -la
total &lt;span style=&#34;color:#ae81ff&#34;&gt;56&lt;/span&gt;
drwx------  &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt; root root &lt;span style=&#34;color:#ae81ff&#34;&gt;4096&lt;/span&gt; Apr &lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt; 10:26 .
drwxr-xr-x &lt;span style=&#34;color:#ae81ff&#34;&gt;22&lt;/span&gt; root root &lt;span style=&#34;color:#ae81ff&#34;&gt;4096&lt;/span&gt; Feb  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; 20:28 ..
-rw-------  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root &lt;span style=&#34;color:#ae81ff&#34;&gt;2177&lt;/span&gt; Apr &lt;span style=&#34;color:#ae81ff&#34;&gt;25&lt;/span&gt; 11:21 .bash_history
-rw-r--r--  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root  &lt;span style=&#34;color:#ae81ff&#34;&gt;765&lt;/span&gt; Feb  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; 20:48 .bashrc
drwx------  &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; root root &lt;span style=&#34;color:#ae81ff&#34;&gt;4096&lt;/span&gt; Mar  &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; 14:28 .cache
drwxr-xr-x  &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; root root &lt;span style=&#34;color:#ae81ff&#34;&gt;4096&lt;/span&gt; Mar  &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; 11:15 .config
drwxr-xr-x  &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; root root &lt;span style=&#34;color:#ae81ff&#34;&gt;4096&lt;/span&gt; Mar  &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; 11:15 .local
drwxr-xr-x  &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; root root &lt;span style=&#34;color:#ae81ff&#34;&gt;4096&lt;/span&gt; Apr &lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt; 10:26 .oracle_jre_usage
drwxr-xr-x  &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; root root &lt;span style=&#34;color:#ae81ff&#34;&gt;4096&lt;/span&gt; Feb &lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt; 11:18 .pip
-rw-r--r--  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root  &lt;span style=&#34;color:#ae81ff&#34;&gt;140&lt;/span&gt; Nov &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;2007&lt;/span&gt; .profile
-rw-------  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root   &lt;span style=&#34;color:#ae81ff&#34;&gt;41&lt;/span&gt; Mar  &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; 11:39 .python_history
drwx------  &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; root root &lt;span style=&#34;color:#ae81ff&#34;&gt;4096&lt;/span&gt; Mar  &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; 11:20 .ssh
-rw-------  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root &lt;span style=&#34;color:#ae81ff&#34;&gt;6342&lt;/span&gt; Mar &lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt; 17:30 .viminfo
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;~/.bash_profile&lt;/strong&gt;包含一些用户级的环境变量、启动程序、配置信息等等。你可以在这里自定义路径信息、变量等内容：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# cat ~/.bash_profile&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# .bash_profile&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# Get the aliases and functions&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -f ~/.bashrc &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
        . ~/.bashrc
&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# User specific environment and startup programs&lt;/span&gt;
export PATH
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;~/.bashrc&lt;/strong&gt;文件中包含用户自定义别名和函数等。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;pi@raspi:~ $ cat ~/.bashrc
&lt;span style=&#34;color:#75715e&#34;&gt;# ~/.bashrc: executed by bash(1) for non-login shells.&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# for examples&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# If not running interactively, don&amp;#39;t do anything&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt; $- in
    *i*&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; ;;
      *&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;;;
&lt;span style=&#34;color:#66d9ef&#34;&gt;esac&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# don&amp;#39;t put duplicate lines or lines starting with space in the history.&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# See bash(1) for more options&lt;/span&gt;
HISTCONTROL&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ignoreboth

&lt;span style=&#34;color:#75715e&#34;&gt;# append to the history file, don&amp;#39;t overwrite it&lt;/span&gt;
shopt -s histappend

&lt;span style=&#34;color:#75715e&#34;&gt;# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)&lt;/span&gt;
HISTSIZE&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1000&lt;/span&gt;
HISTFILESIZE&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2000&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# check the window size after each command and, if necessary,&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# update the values of LINES and COLUMNS.&lt;/span&gt;
shopt -s checkwinsize

&lt;span style=&#34;color:#75715e&#34;&gt;# If set, the pattern &amp;#34;**&amp;#34; used in a pathname expansion context will&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# match all files and zero or more directories and subdirectories.&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#shopt -s globstar&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# make less more friendly for non-text input files, see lesspipe(1)&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#[ -x /usr/bin/lesspipe ] &amp;amp;&amp;amp; eval &amp;#34;$(SHELL=/bin/sh lesspipe)&amp;#34;&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# set variable identifying the chroot you work in (used in the prompt below)&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -z &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;debian_chroot&lt;span style=&#34;color:#66d9ef&#34;&gt;:-&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -r /etc/debian_chroot &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
    debian_chroot&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;cat /etc/debian_chroot&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# set a fancy prompt (non-color, unless we know we &amp;#34;want&amp;#34; color)&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$TERM&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; in
    xterm-color&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; color_prompt&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;yes;;
&lt;span style=&#34;color:#66d9ef&#34;&gt;esac&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# uncomment for a colored prompt, if the terminal has the capability; turned&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# off by default to not distract the user: the focus in a terminal window&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# should be on the output of commands, not on the prompt&lt;/span&gt;
force_color_prompt&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;yes

&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -n &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$force_color_prompt&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -x /usr/bin/tput &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; tput setaf &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &amp;gt;&amp;amp;/dev/null; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
        &lt;span style=&#34;color:#75715e&#34;&gt;# We have color support; assume it&amp;#39;s compliant with Ecma-48&lt;/span&gt;
        &lt;span style=&#34;color:#75715e&#34;&gt;# (ISO/IEC-6429). (Lack of such support is extremely rare, and such&lt;/span&gt;
        &lt;span style=&#34;color:#75715e&#34;&gt;# a case would tend to support setf rather than setaf.)&lt;/span&gt;
        color_prompt&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;yes
    &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;
        color_prompt&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$color_prompt&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; yes &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
    PS1&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w \$\[\033[00m\] &amp;#39;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;
    PS1&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;${debian_chroot:+($debian_chroot)}\u@\h:\w\$ &amp;#39;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
unset color_prompt force_color_prompt

&lt;span style=&#34;color:#75715e&#34;&gt;# If this is an xterm set the title to user@host:dir&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$TERM&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; in
xterm*|rxvt*&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
    PS1&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\[\e]0;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;debian_chroot:+($debian_chroot)&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;\u@\h: \w\a\]&lt;/span&gt;$PS1&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
    ;;
*&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
    ;;
&lt;span style=&#34;color:#66d9ef&#34;&gt;esac&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# enable color support of ls and also add handy aliases&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -x /usr/bin/dircolors &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
    test -r ~/.dircolors &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; eval &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;dircolors -b ~/.dircolors&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;||&lt;/span&gt; eval &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;dircolors -b&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
    alias ls&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ls --color=auto&amp;#39;&lt;/span&gt;
    &lt;span style=&#34;color:#75715e&#34;&gt;#alias dir=&amp;#39;dir --color=auto&amp;#39;&lt;/span&gt;
    &lt;span style=&#34;color:#75715e&#34;&gt;#alias vdir=&amp;#39;vdir --color=auto&amp;#39;&lt;/span&gt;

    alias grep&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;grep --color=auto&amp;#39;&lt;/span&gt;
    alias fgrep&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;fgrep --color=auto&amp;#39;&lt;/span&gt;
    alias egrep&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;egrep --color=auto&amp;#39;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# colored GCC warnings and errors&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#export GCC_COLORS=&amp;#39;error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01&amp;#39;&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# some more ls aliases&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#alias ll=&amp;#39;ls -l&amp;#39;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#alias la=&amp;#39;ls -A&amp;#39;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#alias l=&amp;#39;ls -CF&amp;#39;&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# Alias definitions.&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# You may want to put all your additions into a separate file like&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# ~/.bash_aliases, instead of adding them here directly.&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# See /usr/share/doc/bash-doc/examples in the bash-doc package.&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -f ~/.bash_aliases &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
    . ~/.bash_aliases
&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# enable programmable completion features (you don&amp;#39;t need to enable&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# this, if it&amp;#39;s already enabled in /etc/bash.bashrc and /etc/profile&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# sources /etc/bash.bashrc).&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; ! shopt -oq posix; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
  &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -f /usr/share/bash-completion/bash_completion &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
    . /usr/share/bash-completion/bash_completion
  &lt;span style=&#34;color:#66d9ef&#34;&gt;elif&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -f /etc/bash_completion &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
    . /etc/bash_completion
  &lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;~/.bash_login&lt;/strong&gt; 文件包含一些登陆时运行的配置信息。当&lt;strong&gt;~/.bash_profile&lt;/strong&gt;缺失时，&lt;strong&gt;bash&lt;/strong&gt;将读取&lt;strong&gt;~/.bash_login&lt;/strong&gt; 。&lt;/p&gt;
&lt;p&gt;当 &lt;strong&gt;~/.bash_profile&lt;/strong&gt; 和 &lt;strong&gt;~/.bash_login&lt;/strong&gt;缺失时，&lt;strong&gt;bash&lt;/strong&gt;将读取 &lt;strong&gt;~/.profile&lt;/strong&gt;文件。它同样包含配置信息、函数、变量、别名的信息。&lt;/p&gt;
&lt;p&gt;下面，我们再看看两个&lt;strong&gt;bash&lt;/strong&gt;初始化时非必须，但是比较重要的配置文件。&lt;/p&gt;
&lt;p&gt;Linux系统有的一个&lt;strong&gt;历史命令&lt;/strong&gt;功能，该功能按用户记录运行的所有命令历史，存储在 &lt;strong&gt;~/.bash_history&lt;/strong&gt; 文件中。&lt;/p&gt;
&lt;p&gt;查看历史命令：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;root@bwgzl:~# history
    &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;  2017-04-25 11:41:34 root cd sf/
    &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;  2017-03-31 10:46:17 root ls
    &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;  2017-03-31 10:46:29 root ./setup-seafile-mysql.sh
    &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;  2017-03-31 10:47:47 root mysql -u sf -h localhost -p
    &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;  2017-03-31 10:47:57 root reboot
    &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;  2017-03-31 10:48:28 root ls
    &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;  2017-03-31 10:48:33 root ls
    &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;  2017-03-31 10:48:36 root cd sf
    &lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;  2017-03-31 10:48:36 root ls
   &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;  2017-03-31 10:48:42 root ./setup-seafile-mysql.sh
   &lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;  2017-03-31 10:48:48 root exit
   &lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;  2017-03-31 11:16:54 root cd /data/wwwroot/unixetc.com/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;最后一个是 &lt;strong&gt;~/.bash_logout&lt;/strong&gt; 文件，它不用于&lt;strong&gt;shell&lt;/strong&gt;启动，但存储一些特殊的指令当用户注销时执行。&lt;/p&gt;
&lt;p&gt;一个很有用的例子就是当用户注销后，清空所有屏幕内容。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;root@bwgzl:~# cat bash_logout 
&lt;span style=&#34;color:#75715e&#34;&gt;# ~/.bash_logout&lt;/span&gt;

clear
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>python-pip安装实例</title>
      <link>https://unixetc.com/post/python-pip-installation/</link>
      <pubDate>Thu, 20 Apr 2017 14:28:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/python-pip-installation/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Python-pip&lt;/strong&gt; 是一个现代的，通用的 &lt;strong&gt;Python&lt;/strong&gt;包管理工具。提供了对 Python 包的查找、下载、安装、卸载的功能。&lt;/p&gt;
&lt;p&gt;以下为多个操作系统平台下&lt;strong&gt;Python-pip&lt;/strong&gt;安装方法&lt;/p&gt;
&lt;h3 id=&#34;通用方法&#34;&gt;通用方法&lt;/h3&gt;
&lt;p&gt;通过&lt;strong&gt;get-pip.py&lt;/strong&gt;文件来安装，建议&lt;strong&gt;Windows&lt;/strong&gt;用户使用，前提是你必须首先安装&lt;strong&gt;Python&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;版本要求Python 2 &amp;gt;=2.7.9 或Python 3 &amp;gt;=3.4，可从官网下载&lt;a href=&#34;http://www.python.org/&#34;&gt;http://www.python.org/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;然后下载&lt;strong&gt;get-pip.py&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;下载地址 &lt;a href=&#34;https://bootstrap.pypa.io/get-pip.py&#34;&gt;https://bootstrap.pypa.io/get-pip.py&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;通过&lt;code&gt;python get-pip.py&lt;/code&gt;命令来进行安装。&lt;/p&gt;
&lt;h3 id=&#34;linux下通过软件管理工具来安装python-pip&#34;&gt;Linux下通过软件管理工具来安装Python-pip&lt;/h3&gt;
&lt;h4 id=&#34;fedora21&#34;&gt;Fedora21&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Python2&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo yum upgrade python-setuptools
sudo yum install python-pip python-wheel
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Python3&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo yum install python3 python3-wheel
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;fedora22&#34;&gt;Fedora22&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Python2&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo dnf upgrade python-setuptools
sudo dnf install python-pip python-wheel
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Python3&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo dnf install python3 python3-wheel
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;centosrhel&#34;&gt;CentOS/RHEL&lt;/h4&gt;
&lt;p&gt;首先得启用&lt;strong&gt;EPEL repository&lt;/strong&gt;,&lt;a href=&#34;https://fedoraproject.org/wiki/EPEL#How_can_I_use_these_extra_packages.3F&#34;&gt;可参考此文&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;EPEL 6/EPEL 7&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo yum install python-pip
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;EPEL 7&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bsh&#34; data-lang=&#34;bsh&#34;&gt;sudo yum install python-wheel
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;opensuse&#34;&gt;OpenSUSE&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Python 2:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo zypper install python-pip python-setuptools python-wheel

&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Python 3:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo zypper install python3-pip python3-setuptools python3-wheel
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;debianubuntu&#34;&gt;Debian/Ubuntu&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;sudo apt-get install python-pip
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;当系统安装的是&lt;strong&gt;Python3&lt;/strong&gt;是，则安装&lt;code&gt;python3-pip&lt;/code&gt;&lt;/p&gt;
&lt;h4 id=&#34;archlinux&#34;&gt;Archlinux&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Python 2:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo pacman -S python2-pip

&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Python 3:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo pacman -S python-pip
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>树莓派动态IP更新器</title>
      <link>https://unixetc.com/post/raspberrypi-dynamic-ip-updater/</link>
      <pubDate>Wed, 19 Apr 2017 21:28:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/raspberrypi-dynamic-ip-updater/</guid>
      <description>&lt;p&gt;这是一个python3的脚本，每隔10分钟监控一次IP地址，如果发生变化则会通过AutoRemote消息通知你。 关于AutoRemote的使用可&lt;a href=&#34;http://www.notenoughtech.com/raspberry-pi/tasker-raspberrypi/&#34;&gt;参考这里&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这里推荐使用&lt;a href=&#34;https://github.com/phoemur/ipgetter&#34;&gt;&lt;strong&gt;ipgetter&lt;/strong&gt;&lt;/a&gt;来获取外网IP，地址为&lt;a href=&#34;https://github.com/phoemur/ipgetter&#34;&gt;https://github.com/phoemur/ipgetter&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;安装ipgetter&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo apt-get install python3 pip
sudo pip3 install ipgetter
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;你可以从以下地址获取每个通知设备的AutoRemote所需google key&lt;/p&gt;
&lt;p&gt;​	http://autoremotejoaomgcd.appspot.com/?key=[it&amp;rsquo;s the part that is here]&lt;/p&gt;
&lt;p&gt;以下为python3脚本:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;import ipgetter
import urllib.request
import requests

currentIP &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ipgetter.myip&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#AutoRemote function to send a notification YOUR_KEY goes here&lt;/span&gt;
def sendAR&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;x&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;:
	AR_key &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;YOUR_KEY&amp;#39;&lt;/span&gt;
	AR_url &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;http://autoremotejoaomgcd.appspot.com/sendmessage?key=&amp;#39;&lt;/span&gt;+ AR_key +&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;amp;message=IP%20&amp;#39;&lt;/span&gt;
	message &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; AR_url + x
	response &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; urllib.request.urlopen&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;message&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;.read&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;
	print&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;x&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;	
&lt;span style=&#34;color:#75715e&#34;&gt;#check the internet  and check if previous file is present&lt;/span&gt;
try:
	requests.get&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;http://www.google.com&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
	print&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Internet present&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
	IPfile &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; open&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ipfile.txt&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;r&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
	lastIP &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; IPfile.read&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;	
	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; lastIP &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; currentIP:
		print&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;No changes last IP: &amp;#39;&lt;/span&gt; + lastIP + &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; current IP: &amp;#39;&lt;/span&gt; + currentIP&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
	&lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
		with open&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ipfile.txt&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;w+&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; as f:
			f.write&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;currentIP&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
			f.close&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;
			sendAR&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;currentIP&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
			print&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;IP updated&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#handle no file&lt;/span&gt;			
except IOError:
	&lt;span style=&#34;color:#75715e&#34;&gt;#print(IOError)&lt;/span&gt;
	with open&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ipfile.txt&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;w+&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; as f:
		IPfile &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ipgetter.myip&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;
		f.write&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;IPfile&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
		f.close&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;
		print&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;created file with current IP&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
		sendAR&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;currentIP&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
		quit&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#Handle no internet&lt;/span&gt;		
except requests.ConnectionError:
	quit&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;运行脚本后，会监视ip变化，如果发生变化则通知最新ip，如果未发生变化则不通知。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Linux开启TCP BBR算法</title>
      <link>https://unixetc.com/post/linux_enable_tcp_bbr/</link>
      <pubDate>Mon, 17 Apr 2017 14:28:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/linux_enable_tcp_bbr/</guid>
      <description>&lt;p&gt;Linux Kernel 4.9+已经支持tcp_bbr拥塞控制算法，因此建议将内核升级为最新版。&lt;/p&gt;
&lt;h3 id=&#34;将内核升级到最新版&#34;&gt;将内核升级到最新版&lt;/h3&gt;
&lt;h4 id=&#34;debianubuntu升级最新内核&#34;&gt;Debian/Ubuntu升级最新内核&lt;/h4&gt;
&lt;p&gt;最新内核下载地址 &lt;a href=&#34;http://kernel.ubuntu.com/~kernel-ppa/mainline&#34;&gt;http://kernel.ubuntu.com/~kernel-ppa/mainline&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;下载安装新内核&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;wget http://kernel.ubuntu.com/~kernel-ppa/mainline/v4.10.10/linux-image-4.10.10-041010-generic_4.10.10-041010.201704120813_amd64.deb&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;
dpkg -i linux-image-4.10.10-041010-generic_4.10.10-041010.201704120813_amd64.deb
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;更新GRUB并且重启&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;update-grub
reboot
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;centos-7-升级最新内核&#34;&gt;Centos 7 升级最新内核&lt;/h4&gt;
&lt;p&gt;内核下载地址 &lt;a href=&#34;http://elrepo.org/linux/kernel/el7/x86_64/RPMS/&#34;&gt;http://elrepo.org/linux/kernel/el7/x86_64/RPMS/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;安装最新内核&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;rpm --import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org
rpm -Uvh http://www.elrepo.org/elrepo-release-7.0-2.el7.elrepo.noarch.rpm
yum --enablerepo&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;elrepo-kernel install kernel-ml -y
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;检查内核是否安装完成&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;rpm -qa | grep kernel&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;更新GRUB并重启主机&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;egrep ^menuentry /etc/grub2.cfg | cut -f &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; -d &lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#39;&lt;/span&gt;
grub2-set-default &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;#default 0表示第一个内核设置为默认运行, 选择最新内核就对了&lt;/span&gt;
reboot
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;a href=&#34;http://elrepo.org/linux/kernel/&#34;&gt;http://elrepo.org/linux/kernel/&lt;/a&gt;下&lt;code&gt;e15&lt;/code&gt;、&lt;code&gt;e16&lt;/code&gt;分别对应Centos5、Centos6，可参考以上安装&lt;/p&gt;
&lt;h3 id=&#34;开启bbr&#34;&gt;开启BBR&lt;/h3&gt;
&lt;p&gt;重启后&lt;code&gt;uname -r&lt;/code&gt; 检查内核版本是不是4.9+&lt;/p&gt;
&lt;p&gt;然后执行以下操作&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;net.core.default_qdisc=fq&amp;#34;&lt;/span&gt; &amp;gt;&amp;gt; /etc/sysctl.conf
echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;net.ipv4.tcp_congestion_control=bbr&amp;#34;&lt;/span&gt; &amp;gt;&amp;gt; /etc/sysctl.conf
sysctl -p
sysctl net.ipv4.tcp_available_congestion_control
sysctl net.ipv4.tcp_congestion_control
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;运行结果中有&lt;strong&gt;bbr&lt;/strong&gt;则成功了&lt;/p&gt;
&lt;p&gt;通过&lt;code&gt;lsmod | grep bbr&lt;/code&gt;可以检查是否开启&lt;strong&gt;bbr&lt;/strong&gt;模块&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>使用手机远程控制树莓派GPIO</title>
      <link>https://unixetc.com/post/use-your-phone-to-remotely-control-raspberrypi/</link>
      <pubDate>Thu, 13 Apr 2017 14:14:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/use-your-phone-to-remotely-control-raspberrypi/</guid>
      <description>&lt;p&gt;必备条件：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;树莓派已联网&lt;/li&gt;
&lt;li&gt;安装官方镜像&lt;/li&gt;
&lt;li&gt;只支持Raspberry Pi 2/3 Model B&lt;/li&gt;
&lt;li&gt;只支持Android手机&lt;/li&gt;
&lt;li&gt;安装Java8&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;安装官方镜像raspbian&#34;&gt;安装官方镜像Raspbian&lt;/h3&gt;
&lt;p&gt;下载地址 &lt;a href=&#34;https://www.raspberrypi.org/downloads/&#34;&gt;https://www.raspberrypi.org/downloads/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;安装java8&#34;&gt;安装Java8&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;sudo apt install oracle-java8-jdk
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;下载Marsiot到树莓派&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;wget http://www.marsiot.com/download/marsiot.jar
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;下载Marsiot到手机，安装&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://www.marsiot.com/download/marsiot.apk&#34;&gt;http://www.marsiot.com/download/marsiot.apk&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在树莓派上运行&lt;strong&gt;Marsiot&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pi@raspi:~ $ sudo java -jar marsiot.jar

Current version &amp;lt;101&amp;gt;
More help: sudo java -jar marsiot.jar help

Connect to www.marsiot.com...
Connected ok!

GPIO init...
GPIO init ok!

ID-CODE:c1fa PASS-CODE：11c6
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;记住以上&lt;strong&gt;ID-CODE&lt;/strong&gt;、&lt;strong&gt;PASS-CODE&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在手机上打开&lt;strong&gt;火星互联&lt;/strong&gt;,&lt;strong&gt;事件中心&lt;/strong&gt;时间轴上会显示所有新加入设备，以&lt;strong&gt;ID-CODE&lt;/strong&gt;区分，找到你对应的设备点击，按照提示输入&lt;strong&gt;PASS-CODE&lt;/strong&gt;即可连接。&lt;/p&gt;
&lt;p&gt;连接后可以在&lt;strong&gt;我的设备&lt;/strong&gt;中看到已连接的设备，点击通用视图即可实时监控&lt;strong&gt;GPIO&lt;/strong&gt;端口状态。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Linux下设置IP、网关、掩码、MAC和DNS</title>
      <link>https://unixetc.com/post/linux-set-ip-netmask-gateway-mac-dns/</link>
      <pubDate>Mon, 20 Mar 2017 13:20:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/linux-set-ip-netmask-gateway-mac-dns/</guid>
      <description>&lt;p&gt;先用&lt;code&gt;ifconfig&lt;/code&gt;来查看所有活动网络接口&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;eth0      Link encap:Ethernet  HWaddr b8:27:eb:1b:63:a8
        inet addr:192.168.1.6  Bcast:192.168.1.255  Mask:255.255.255.0
        inet6 addr: fe80::6502:67ff:89b:b2fd/64 Scope:Link
        UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
        RX packets:43239 errors:0 dropped:24 overruns:0 frame:0
        TX packets:30644 errors:0 dropped:0 overruns:0 carrier:0
        collisions:0 txqueuelen:1000
        RX bytes:25068614 (23.9 MiB)  TX bytes:5993030 (5.7 MiB)

lo        Link encap:Local Loopback
        inet addr:127.0.0.1  Mask:255.0.0.0
        inet6 addr: ::1/128 Scope:Host
        UP LOOPBACK RUNNING  MTU:65536  Metric:1
        RX packets:1961 errors:0 dropped:0 overruns:0 frame:0
        TX packets:1961 errors:0 dropped:0 overruns:0 carrier:0
        collisions:0 txqueuelen:1
        RX bytes:160232 (156.4 KiB)  TX bytes:160232 (156.4 KiB)
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;设置ip和掩码&#34;&gt;设置IP和掩码&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;ifconfig eth0 192.168.1.6 netmask 255.255.255.0 
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;设置网关&#34;&gt;设置网关&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;route add default gw 192.168.1.1
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;修改网卡mac&#34;&gt;修改网卡MAC&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;ifconfig eth0 down
ifconfig eth0 hw ether b877c322f8
ifconfig eth0 up
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;设置dns&#34;&gt;设置DNS&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;vi /etc/resolv.conf

nameserver 114.114.114.114
nameserver 114.114.115.115
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;重启网络服务生效 &lt;code&gt;service network restart&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;最新的ubuntu已经不能简单通过修改&lt;code&gt;/etc/resolv.conf&lt;/code&gt;来实现，需要修改&lt;code&gt;resolvconf&lt;/code&gt;配置文件，然后通过命令&lt;code&gt;resolvconf&lt;/code&gt;命令来操作&lt;/p&gt;
&lt;p&gt;修改&lt;code&gt;/etc/resolvconf/resolv.conf/&lt;/code&gt;目录下的head文件&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;nameserver 114.114.114.114
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后通过更新配置来生效&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;resolvconf -u&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Windows10开启Linux子系统</title>
      <link>https://unixetc.com/post/windows10-enabled-linux-subsystem/</link>
      <pubDate>Fri, 10 Mar 2017 11:13:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/windows10-enabled-linux-subsystem/</guid>
      <description>&lt;h3 id=&#34;打开功能&#34;&gt;打开功能&lt;/h3&gt;
&lt;p&gt;设置-系统-应用和功能，右侧下拉到底，点击“相关设置”下的“程序和功能”&lt;/p&gt;
&lt;p&gt;在打开的“程序和功能”左侧菜单中，找到“启用或关闭windows功能”，点击打开。&lt;/p&gt;
&lt;p&gt;在接下来的“windows功能”菜单中，下拉勾选“适用于linux的windows子系统（beta）”，确认后重启系统。&lt;/p&gt;
&lt;h3 id=&#34;开启开发人员模式&#34;&gt;开启开发人员模式&lt;/h3&gt;
&lt;p&gt;设置-更新和安全-针对开发人员，在右侧打开“开发人员模式”&lt;/p&gt;
&lt;h3 id=&#34;安装linux子系统&#34;&gt;安装linux子系统&lt;/h3&gt;
&lt;p&gt;Win+R输入cmd回车，打开cmd&lt;/p&gt;
&lt;p&gt;输入“bash”按照提示安装设置用户名密码即可使用。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/windows10-linux-subsystem.png&#34; alt=&#34;Windows 10 Linux Subsystem&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后就可以使用ubuntu提供的linux子系统了。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Termux软件包管理</title>
      <link>https://unixetc.com/post/termux-package-management/</link>
      <pubDate>Thu, 09 Mar 2017 13:19:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/termux-package-management/</guid>
      <description>&lt;p&gt;首次安装Termux后，内含一个基础系统，包括apt软件包管理功能，并且集成了一些busybox系统工具。&lt;/p&gt;
&lt;p&gt;其余的软件包可使用apt进行安装管理，命令如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;apt update
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;更新可用软件包清单。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;apt search &amp;lt;query&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;按名称搜索可用软件。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;apt install &amp;lt;package&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;安装软件&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;apt upgrade
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;更新所有可更新软件。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;apt show &amp;lt;package&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;显示软件信息&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;apt list
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;列出可用软件清单&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;apt list --installed
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;列出所有已安装软件清单&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;apt remove &amp;lt;package&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;卸载已安装软件&lt;/p&gt;
&lt;p&gt;Apt是基于dpkg格式的软件管理工具，一般没必要直接使用dpkg来进行操作，不过以下两个例子可以参考：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;dpkg -L &amp;lt;package&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;列出已安装软件&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;dpkg --verify
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;验证已安装软件的完整性&lt;/p&gt;
&lt;p&gt;更多信息请检阅apt manual page (通过apt install man来安装)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>修复树莓派PATH变量</title>
      <link>https://unixetc.com/post/fix-raspberry-path-variable/</link>
      <pubDate>Fri, 03 Mar 2017 13:13:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/fix-raspberry-path-variable/</guid>
      <description>&lt;p&gt;使用lnmp一键工具安装完nmp后，重启进入系统就提示&lt;code&gt;bash command not found&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;然后试了试&lt;code&gt;service&lt;/code&gt;,&lt;code&gt;who&lt;/code&gt;等命令也无法使用&lt;/p&gt;
&lt;p&gt;只有最基本的系统命令&lt;code&gt;ls&lt;/code&gt;,&lt;code&gt;cat&lt;/code&gt;等可以用&lt;/p&gt;
&lt;p&gt;看来安装lnmp后，我的PATH变量被动了&lt;/p&gt;
&lt;p&gt;先临时修改下PATH，便于后面操作&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;export PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin:$PATH
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后检查&lt;code&gt;~/.profile&lt;/code&gt;,&lt;code&gt;/etc/profile&lt;/code&gt;是否存在，存在&lt;/p&gt;
&lt;p&gt;检查其中的PATH赋值是否异常&lt;/p&gt;
&lt;p&gt;经过排查，发现&lt;code&gt;/etc/profile&lt;/code&gt;中的PATH赋值异常，修改之重启OK！&lt;/p&gt;
&lt;p&gt;在此分享正确的原始&lt;code&gt;~/.profile&lt;/code&gt;和&lt;code&gt;/etc/profile&lt;/code&gt;文件&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;~/.profile 内容&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# ~/.profile: executed by the command interpreter for login shells.
# This file is not read by bash(1), if ~/.bash_profile or ~/.bash_login
# exists.
# see /usr/share/doc/bash/examples/startup-files for examples.
# the files are located in the bash-doc package.

# the default umask is set in /etc/profile; for setting the umask
# for ssh logins, install and configure the libpam-umask package.
#umask 022

# if running bash
if [ -n &amp;quot;$BASH_VERSION&amp;quot; ]; then
    # include .bashrc if it exists
    if [ -f &amp;quot;$HOME/.bashrc&amp;quot; ]; then
        . &amp;quot;$HOME/.bashrc&amp;quot;
    fi
fi

# set PATH so it includes user&#39;s private bin if it exists
if [ -d &amp;quot;$HOME/bin&amp;quot; ] ; then
    PATH=&amp;quot;$HOME/bin:$PATH&amp;quot;
fi
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;**/etc/profile内容 **&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# /etc/profile: system-wide .profile file for the Bourne shell (sh(1))
# and Bourne compatible shells (bash(1), ksh(1), ash(1), ...).

if [ &amp;quot;`id -u`&amp;quot; -eq 0 ]; then
PATH=&amp;quot;/usr/local/sbin:/usr/local/usr/sbin:/usr/sbin:/bin&amp;quot;
else
#old bak  PATH=&amp;quot;/usr/local/sbin:/usr/local/usr/sbin:/usr/sbin:/bin:/usr/local/games:/usr/games&amp;quot;
PATH=&amp;quot;/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/bin:/sbin:/usr/local/games:/usr/games&amp;quot;
fi
export PATH

if [ &amp;quot;$PS1&amp;quot; ]; then
if [ &amp;quot;$BASH&amp;quot; ] &amp;amp;&amp;amp; [ &amp;quot;$BASH&amp;quot; != &amp;quot;/bin/sh&amp;quot; ]; then
    # The file bash.bashrc already sets the default PS1.
    # PS1=&#39;\h:\w\$ &#39;
    if [ -f /etc/bash.bashrc ]; then
    . /etc/bash.bashrc
    fi
else
    if [ &amp;quot;`id -u`&amp;quot; -eq 0 ]; then
    PS1=&#39;# &#39;
    else
    PS1=&#39;$ &#39;
    fi
fi
fi

if [ -d /etc/profile.d ]; then
for i in /etc/profile.d/*.sh; do
    if [ -r $i ]; then
    . $i
    fi
done
unset i
fi
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Over!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>七牛云qshell工具批量操作</title>
      <link>https://unixetc.com/post/qiniu-batch-operation/</link>
      <pubDate>Sun, 12 Feb 2017 23:23:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/qiniu-batch-operation/</guid>
      <description>&lt;p&gt;为了方便管理七牛云，官方放出了一个工具-qshell&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;qshell是利用七牛文档上公开的API实现的一个方便开发者测试和使用七牛API服务的命令行工具。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;使用qshell可以方便的进行批量操作，包括批量上传、批量下载、批量删除等等……&lt;/p&gt;
&lt;p&gt;首先，从&lt;a href=&#34;https://u18418398.pipipan.com/fs/18418398-314035000&#34;&gt;https://u18418398.pipipan.com/fs/18418398-314035000&lt;/a&gt;下载官方提供的qshell，里面包含多个平台。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;qshell_linux_386	Linux 32位系统&lt;/li&gt;
&lt;li&gt;qshell_linux_amd64	Linux 64位系统&lt;/li&gt;
&lt;li&gt;qshell_linux_arm	Linux ARM CPU&lt;/li&gt;
&lt;li&gt;qshell_windows_386.exe	Windows 32位系统&lt;/li&gt;
&lt;li&gt;qshell_windows_amd64.exe	Windows 64位系统&lt;/li&gt;
&lt;li&gt;qshell_darwin_386	Mac 32位系统，这种系统很老了&lt;/li&gt;
&lt;li&gt;qshell_darwin_amd64	Mac 64位系统，主流的系统&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;解压后，将对应的版本软件放到自定义目录&lt;/p&gt;
&lt;p&gt;在此以windows版实例操作&lt;/p&gt;
&lt;h3 id=&#34;帐号设置&#34;&gt;帐号设置&lt;/h3&gt;
&lt;p&gt;使用qshell前，需要进行帐号验证，可以通过&lt;code&gt;qshell account ak sk&lt;/code&gt;格式来进行验证，其中&lt;code&gt;ak&lt;/code&gt;和&lt;code&gt;sk&lt;/code&gt;对应个人面板-&amp;gt;密匙管理中的AccessKey/SecretKey&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;qshell account  yW!DRel0y8ERbjw%so^?X8  6pfC4OlL$TZtjpNuR4bLxRsD
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;设置完成后，可以通过&lt;code&gt;qshell account&lt;/code&gt;来查看已设置帐号详情&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;qshell account
AccessKey:yW!DRel0y8ERbjw%so^?X8
SecretKey:6pfC4OlL$TZtjpNuR4bLxRsD
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;设置完帐号后，我们就可以使用&lt;code&gt;qshell&lt;/code&gt;对帐号对应的空间进行操作&lt;/p&gt;
&lt;h3 id=&#34;列出当前帐号下所有空间&#34;&gt;列出当前帐号下所有空间&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;qshell buckets
cname
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;cname&lt;/code&gt;为空间名&lt;/p&gt;
&lt;h3 id=&#34;列出空间中所有文件&#34;&gt;列出空间中所有文件&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;qshell listbucket  cname cname.list.txt
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;cname&lt;/code&gt;为空间名,&lt;code&gt;cname.list.txt&lt;/code&gt;为结果输出文件。&lt;/p&gt;
&lt;h3 id=&#34;批量上传&#34;&gt;批量上传&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;qshell qupload up.cfg
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;up.cfg&lt;/code&gt;上传操作配置文件，如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{
&amp;quot;src_dir&amp;quot; : &amp;quot;D:\\abc&amp;quot;,
&amp;quot;bucket&amp;quot; : &amp;quot;cname&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;src_dir&lt;/code&gt;为本地文件夹，Wdinwos下必须使用如上格式&lt;/p&gt;
&lt;p&gt;&lt;code&gt;bucket&lt;/code&gt;为空间名&lt;/p&gt;
&lt;p&gt;以上配置文件意思将本地D盘下abc文件夹内的所有内容上传到名为&lt;code&gt;cname&lt;/code&gt;的空间&lt;/p&gt;
&lt;h3 id=&#34;批量下载&#34;&gt;批量下载&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;qshell qdownload  dl.cfg
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;dl.cfg&lt;/code&gt;下载操作配置文件，如下:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{
    &amp;quot;dest_dir&amp;quot;   :   &amp;quot;./dldoc&amp;quot;,
    &amp;quot;bucket&amp;quot;     :   &amp;quot;cname&amp;quot;,
    &amp;quot;prefix&amp;quot;     :   &amp;quot;&amp;quot;,
    &amp;quot;suffixes&amp;quot;   :   &amp;quot;&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;dest_dir&lt;/code&gt;为本地目录，&lt;code&gt;bucket&lt;/code&gt;为空间名，&lt;code&gt;prefix&lt;/code&gt;前缀过滤，&lt;code&gt;suffixes&lt;/code&gt;后缀过滤&lt;/p&gt;
&lt;p&gt;以上配置文件可以将&lt;code&gt;cname&lt;/code&gt;空间中的所有内容下载到当前目录下的&lt;code&gt;dldoc&lt;/code&gt;文件夹&lt;/p&gt;
&lt;p&gt;可以通过设置&lt;code&gt;prefix&lt;/code&gt;和&lt;code&gt;suffixes&lt;/code&gt;来过滤具体目录或文件类型&lt;/p&gt;
&lt;h3 id=&#34;批量删除&#34;&gt;批量删除&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;qshell listbucket cname cname.list.txt
qshell batchdelete -force cname cname.list.txt
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;第一行获取&lt;code&gt;cname&lt;/code&gt;下所有文件，输出清单到&lt;code&gt;cname.list.txt&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;第二行根据&lt;code&gt;cname.list.txt&lt;/code&gt;清单来删除&lt;code&gt;cname&lt;/code&gt;中所有内容。&lt;/p&gt;
&lt;p&gt;以上只是一些简单的操作示例，&lt;code&gt;qshell&lt;/code&gt;功能远非如此，其他具体的使用可参考官方文档&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;a href=&#34;https://developer.qiniu.com/kodo/tools/qshell&#34;&gt;https://developer.qiniu.com/kodo/tools/qshell&lt;/a&gt;&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;a href=&#34;https://github.com/qiniu/qshell&#34;&gt;https://github.com/qiniu/qshell&lt;/a&gt;&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>树莓派可用的PCD8544库</title>
      <link>https://unixetc.com/post/pcd8544-library-for-raspberry-pi/</link>
      <pubDate>Fri, 20 Jan 2017 11:20:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/pcd8544-library-for-raspberry-pi/</guid>
      <description>&lt;p&gt;Nokia 3310/5110显示器基于PCD8544，在此分享一个树莓派可用的PCD8544库&lt;/p&gt;
&lt;p&gt;使用该库之前，需要安装wiringPi,安装方法可参考&lt;a href=&#34;https://unixetc.com/post/Raspberry-Pi-by-DHT11-collecting-temperature-and-humidity/&#34;&gt;树莓派连接DHT11采集温度与湿度&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;项目地址：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;https://github.com/binerry/RaspberryPi/tree/master/libraries/c/PCD8544
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;可通过&lt;a href=&#34;https://github.com/downloads/binerry/RaspberryPi/Raspberry.Pi_PCD8544.Library.zip&#34;&gt;github download&lt;/a&gt;直接下载,不能访问github的，用以下连接下载&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;http://cdn.lyq.wiki/res/Raspberry.Pi_PCD8544.Library.zip
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;解压后，可得到一个c源码和一个h头文件&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;PCD8544.c
PCD8544.h
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;以及samples文件夹下的三个示例&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pcd8544_rpi.c
pcd8544_test.c
pcd8544_test2.c
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;按照下图所示连接好树莓派和显示器&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/raspi_pcd8544.webp&#34; alt=&#34;raspi_pcd8544&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;RST —— 复位 接GPIO 0&lt;/li&gt;
&lt;li&gt;CE —— 片选 接GPIO 1 或 不接&lt;/li&gt;
&lt;li&gt;DC —— 数据/指令选择 接GPIO 2&lt;/li&gt;
&lt;li&gt;DIN —— 串行数据线 接GPIO 3&lt;/li&gt;
&lt;li&gt;CLK —— 串行时钟线 接GPIO 5 （因为我的GPIO 4已经接了一个DHT11传感器）&lt;/li&gt;
&lt;li&gt;VCC —— 电源输入 接3.3v&lt;/li&gt;
&lt;li&gt;BL —— 背光控制端 接3.3v&lt;/li&gt;
&lt;li&gt;GND —— 地线 接地&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;编译三个示例程序&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cc -o pcd8544_test pcd8544_test.c ../PCD8544.c  -L/usr/local/lib -lwiringPi
cc -o pcd8544_test2 pcd8544_test2.c ../PCD8544.c  -L/usr/local/lib -lwiringPi
cc -o pcd8544_rpi pcd8544_rpi.c ../PCD8544.c  -L/usr/local/lib -lwiringPi
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后运行之&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo ./pcd8544_test
sudo ./pcd8544_test2
sudo ./pcd8544_rpi
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;一下是三个示例运行情况&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/nokia-5110-example.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;参考: &lt;em&gt;&lt;a href=&#34;http://binerry.de/post/25787954149/pcd8544-library-for-raspberry-pi&#34;&gt;http://binerry.de/post/25787954149/pcd8544-library-for-raspberry-pi&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>黑莓9630使用中国电信4G卡</title>
      <link>https://unixetc.com/post/blackberry-9630-use-ctcc-4g-card/</link>
      <pubDate>Mon, 02 Jan 2017 01:02:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/blackberry-9630-use-ctcc-4g-card/</guid>
      <description>&lt;h3 id=&#34;准备工作&#34;&gt;准备工作&lt;/h3&gt;
&lt;p&gt;Alt + Shift + H进入帮帮我界面&lt;/p&gt;
&lt;p&gt;进入后，不要退出，注意以下三个信息&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;应用程序版本  7.1.0.649 （1886）&lt;/li&gt;
&lt;li&gt;PIN     3045e17c&lt;/li&gt;
&lt;li&gt;正常运行时间  173秒&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;注意!注意!注意&lt;/strong&gt;  一定不要退出以上界面，因为运行时间会变动，如果退出了，重新进入查看运行时间&lt;/p&gt;
&lt;h3 id=&#34;计算解锁码&#34;&gt;计算解锁码&lt;/h3&gt;
&lt;p&gt;使用软件工具或者网页版工具计算，网址在这里 &lt;a href=&#34;http://www.kealin.net/Escreen/Index.html&#34;&gt;http://www.kealin.net/Escreen/Index.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;按照提示，输入PIN、OS Version、Uptime&lt;/p&gt;
&lt;p&gt;底下会出现响应时长的解锁码，有1day到30days&lt;/p&gt;
&lt;p&gt;一般我们就用一下下，选择一天解锁码，如果你需要长时间使用，可以选择较长时间的解锁码&lt;/p&gt;
&lt;p&gt;解锁码也可以使用软件来获取，可以使用BBctrl、BerryBox，请自行搜索。&lt;/p&gt;
&lt;h3 id=&#34;进入工程模式engineering-screen-contents&#34;&gt;进入工程模式(Engineering Screen Contents)&lt;/h3&gt;
&lt;p&gt;注意，前面的帮帮我没有退出，在该界面下输入你所获得的解锁码&lt;/p&gt;
&lt;p&gt;如果退出了，重新进入查看运行时间，按照新的时间重新获取解锁码&lt;/p&gt;
&lt;p&gt;输入正确后，即可进入工程模式(engineering screen contents)&lt;/p&gt;
&lt;h3 id=&#34;设置&#34;&gt;设置&lt;/h3&gt;
&lt;p&gt;在工程模式下按以下顺序来操作&lt;/p&gt;
&lt;p&gt;Radio Engineering Screens(MULTI)  -&amp;gt; 3GPP Radio Engineering Screens -&amp;gt; GCF -&amp;gt; SIM Electrical Test Mode On&lt;/p&gt;
&lt;p&gt;点击最后一个菜单后手机自动重启，然后启动完即可使用4G手机卡。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Debian下安装Zbook14无线网卡驱动</title>
      <link>https://unixetc.com/post/zbook14-install-wireless-driver-under-debian/</link>
      <pubDate>Wed, 17 Aug 2016 08:17:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/zbook14-install-wireless-driver-under-debian/</guid>
      <description>&lt;p&gt;首先查看无线网卡型号&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;alair@zb14:~$ lspci|grep less
02:00.0 Network controller: Intel Corporation Wireless 7260 (rev 73)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;搜索Inter相关固件
​
alair@zb14:~$ apt-cache search iwlwifi
firmware-iwlwifi - Binary firmware for Intel Wireless cards&lt;/p&gt;
&lt;p&gt;安装之
​
&lt;code&gt;alair@zb14:~$ apt-get install firmware-iwlwifi&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;重启完事儿！&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>HSTS域名更换实例</title>
      <link>https://unixetc.com/post/hsts-domain-name-replacement-examples/</link>
      <pubDate>Fri, 01 Jul 2016 17:21:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/hsts-domain-name-replacement-examples/</guid>
      <description>&lt;p&gt;新入手了its0k.com，原来的alair.cn还继续使用&lt;/p&gt;
&lt;p&gt;在这里需要将alair.cn重定向到its0k.com&lt;/p&gt;
&lt;p&gt;第一次只是将&lt;code&gt;nginx&lt;/code&gt;配置文件中的&lt;code&gt;alair.cn&lt;/code&gt;全部替换为&lt;code&gt;its0k.com&lt;/code&gt;，通过its0k.com浏览新站完全没问题&lt;/p&gt;
&lt;p&gt;但是试着从alair.cn跳转浏览新站，浏览器出现了证书安全告警，告警具体原因为证书未包含&lt;code&gt;alair.cn&lt;/code&gt;域名，我才想起来旧域名&lt;code&gt;alair.cn&lt;/code&gt;已经添加进了&lt;code&gt;HSTS&lt;/code&gt;列表，因此不能简单的只为新域名签名，而是需要证书签名时包含新旧两个域名。&lt;/p&gt;
&lt;p&gt;重新签名了证书，包含以下四个域名&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;its0k.com www.its0k.com alair.cn www.alair.cn
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;以下为更改完成后的&lt;code&gt;nginx&lt;/code&gt;配置文件，请注意名相关的部分&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;server {
listen 443 ssl http2;

ssl_certificate     /root/ssls/its0k.crt;
ssl_certificate_key /root/ssls/its0k.key;

ssl_session_timeout 60m;
ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
ssl_ciphers ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-RC4-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:RC4-SHA:!aNULL:!eNULL:!EXPORT:!DES:!3DES:!MD5:!DSS:!PKS;
ssl_prefer_server_ciphers on;
ssl_session_cache builtin:1000 shared:SSL:10m;
ssl_dhparam /etc/ssl/certs/dhparam.pem;

add_header Strict-Transport-Security &amp;quot;max-age=63072000; includeSubdomains; preload&amp;quot;;
add_header X-Frame-Options &amp;quot;DENY&amp;quot;;

ssl_stapling on;
ssl_stapling_verify on;

resolver 8.8.8.8 8.8.4.4 valid=300s;
resolver_timeout 5s;

server_name its0k.com www.its0k.com alair.cn www.alair.cn;
access_log off;
index index.html index.htm;
include /usr/local/nginx/conf/rewrite/ps.conf;
root /data/wwwroot/its0k.com/compiled;
error_page 403 404 500 503 505 = https://its0k.com/404;
if ($host != its0k.com) {
        rewrite ^/(.*)$ $scheme://its0k.com/$1 permanent;
        }

location ~ .*\.(gif|svg|jpg|jpeg|png|bmp|swf|flv|ico)$ {
    expires 30d;
    access_log off;
    }
location ~ .*\.(js|css)?$ {
    expires 7d;
    access_log off;
    }
}
server {
listen 80;
server_name www.its0k.com its0k.com alair.cn www.alair.cn;
add_header Strict-Transport-Security &amp;quot;max-age=63072000; includeSubdomains; preload&amp;quot;;
rewrite ^/(.*) https://its0k.com/$1 permanent;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;至此域名替换完成！&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>ubuntu修改grub引导菜单</title>
      <link>https://unixetc.com/post/ubuntu-modify-the-grub-boot-menu/</link>
      <pubDate>Mon, 27 Jun 2016 17:42:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/ubuntu-modify-the-grub-boot-menu/</guid>
      <description>&lt;p&gt;先运行&lt;code&gt;update-grub&lt;/code&gt;命令生成一次grub配置，顺便查看一下识别出来的引导菜单内容&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;root@alairpc:~# update-grub
Generating grub configuration file ...
Found linux image: /boot/vmlinuz-4.4.0-21-generic
Found initrd image: /boot/initrd.img-4.4.0-21-generic
Found memtest86+ image: /boot/memtest86+.elf
Found memtest86+ image: /boot/memtest86+.bin
Found Windows 7 (loader) on /dev/sda1
done
root@alairpc:~# 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;注意看，以上共有5个菜单项，最后一个是windows7&lt;/p&gt;
&lt;p&gt;接下来我们来看看gurb配置文件&lt;code&gt;/etc/default/grub&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;root@alairpc:~# cat /etc/default/grub 
# If you change this file, run &#39;update-grub&#39; afterwards to update
# /boot/grub/grub.cfg.
# For full documentation of the options in this file, see:
#   info -f grub -n &#39;Simple configuration&#39;

GRUB_DEFAULT=4
#GRUB_HIDDEN_TIMEOUT=0
GRUB_HIDDEN_TIMEOUT_QUIET=true
GRUB_TIMEOUT=3
GRUB_DISTRIBUTOR=`lsb_release -i -s 2&amp;gt; /dev/null || echo Debian`
GRUB_CMDLINE_LINUX_DEFAULT=&amp;quot;quiet splash&amp;quot;
GRUB_CMDLINE_LINUX=&amp;quot;locale=zh_CN&amp;quot;

# Uncomment to enable BadRAM filtering, modify to suit your needs
# This works with Linux (no patch required) and with any kernel that obtains
# the memory map information from GRUB (GNU Mach, kernel of FreeBSD ...)
#GRUB_BADRAM=&amp;quot;0x01234567,0xfefefefe,0x89abcdef,0xefefefef&amp;quot;

# Uncomment to disable graphical terminal (grub-pc only)
#GRUB_TERMINAL=console

# The resolution used on graphical terminal
# note that you can use only modes which your graphic card supports via VBE
# you can see them in real GRUB with the command `vbeinfo&#39;
#GRUB_GFXMODE=640x480

# Uncomment if you don&#39;t want GRUB to pass &amp;quot;root=UUID=xxx&amp;quot; parameter to Linux
#GRUB_DISABLE_LINUX_UUID=true

# Uncomment to disable generation of recovery mode menu entries
#GRUB_DISABLE_RECOVERY=&amp;quot;true&amp;quot;

# Uncomment to get a beep at grub start
#GRUB_INIT_TUNE=&amp;quot;480 440 1&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;其中&lt;strong&gt;GRUB_DEFAULT&lt;/strong&gt;就是默认引导项，这里设置为4,对应的为windows7,说明一下，这个引导序列号是从0开始排的，所以第五项window7的序列号应为为4&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;GRUB_TIMEOUT&lt;/strong&gt;表示菜单等待时间，单位为秒(s)&lt;/p&gt;
&lt;p&gt;还值得说明的是&lt;strong&gt;GRUB_GFXMODE&lt;/strong&gt;，设置grub显示的分辨率&lt;/p&gt;
&lt;p&gt;自定义编辑完grub配置文件后，运行&lt;code&gt;update-grub&lt;/code&gt;使配置生效即可。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Let&#39;s encrypt 证书快速生成脚本</title>
      <link>https://unixetc.com/post/letsencrypt-certificate-quickly-generate-script/</link>
      <pubDate>Mon, 09 May 2016 15:28:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/letsencrypt-certificate-quickly-generate-script/</guid>
      <description>&lt;p&gt;网站的Let&amp;rsquo;s encrypt证书快到期了，看了官方的续期方法比较繁琐，于是在网上找了找简单方便做法，结果找到了&lt;strong&gt;墓地小企鹅&lt;/strong&gt;写的一个脚本(shell script)，使用这个脚本可以方便的生成以及更新Let&amp;rsquo;s encrypt 证书。&lt;/p&gt;
&lt;p&gt;脚本地址 &lt;a href=&#34;https://github.com/xdtianyu/scripts/tree/master/lets-encrypt&#34;&gt;https://github.com/xdtianyu/scripts/tree/master/lets-encrypt&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;下载脚本&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;wget https://raw.githubusercontent.com/xdtianyu/scripts/master/lets-encrypt/letsencrypt.conf
wget https://raw.githubusercontent.com/xdtianyu/scripts/master/lets-encrypt/letsencrypt.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;配置&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;root@rnse:~/lesh# cat letsencrypt.conf
# only modify the values, key files will be generated automaticly.
ACCOUNT_KEY=&amp;quot;letsencrypt-account.key&amp;quot;
DOMAIN_KEY=&amp;quot;alair.key&amp;quot;
DOMAIN_DIR=&amp;quot;/data/wwwroot/alair.cn/compiled&amp;quot;
DOMAINS=&amp;quot;DNS:alair.cn,DNS:www.alair.cn&amp;quot;
#ECC=TRUE
#LIGHTTPD=TRUE
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;按照需要自定义&lt;code&gt;DOMAIN_KEY&lt;/code&gt;、&lt;code&gt;DOMAIN_DIR&lt;/code&gt;、&lt;code&gt;DOMAINS&lt;/code&gt;三部分。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;生成证书&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;root@rnse:~/lesh#chmod +x letsencrypt.sh
root@rnse:~/lesh# ./letsencrypt.sh letsencrypt.conf
Generate account key...
Generating RSA private key, 4096 bit long modulus
..............................++
....++
e is 65537 (0x10001)
Generate domain key...
Generating RSA private key, 2048 bit long modulus
...............................................................+++
..........................+++
e is 65537 (0x10001)
Generate CSR...alair.csr
Parsing account key...
Parsing CSR...
Registering account...
Registered!
Verifying www.alair.cn...
www.alair.cn verified!
Verifying alair.cn...
alair.cn verified!
Signing certificate...
Certificate signed!
New cert: alair.chained.crt has been generated
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;生成后的目录文件如下:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;root@rnse:~/lesh# ls
alair.chained.crt  alair.crt  alair.csr  alair.key  lets-encrypt-x3-cross-signed.pem  letsencrypt-account.key  letsencrypt.conf  letsencrypt.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;配置nginx&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;... ...
ssl_certificate     /path/to/cert/alair.chained.crt;
ssl_certificate_key /path/to/cert/alair.key;
... ...
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;更新证书&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;证书到期前直接再次生成而已&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>使用Syncthing在多个设备之间同步文件</title>
      <link>https://unixetc.com/post/use-syncthing-synchronize-files-between-multiple-devices/</link>
      <pubDate>Fri, 06 May 2016 15:16:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/use-syncthing-synchronize-files-between-multiple-devices/</guid>
      <description>&lt;p&gt;Syncthing是一款开源的多平台同步软件，使用他可以在多个设备间进行文件同步，并且带有版本控制功能。&lt;/p&gt;
&lt;p&gt;Syncthing官网地址 **&lt;a href=&#34;https://syncthing.net/&#34;&gt;https://syncthing.net/&lt;/a&gt;**Github地址 &lt;strong&gt;&lt;a href=&#34;https://github.com/syncthing/syncthing&#34;&gt;https://github.com/syncthing/syncthing&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;安装syncthing&#34;&gt;安装Syncthing&lt;/h3&gt;
&lt;p&gt;Syncthing官网提供多平台安装包，下载地址为 &lt;a href=&#34;https://github.com/syncthing/syncthing/releases/&#34;&gt;https://github.com/syncthing/syncthing/releases/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;并且针对Debian/Ubuntu平台，官方提供了apt-get安装方法&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# Add the release PGP keys:
curl -s https://syncthing.net/release-key.txt | sudo apt-key add -

# Add the &amp;quot;release&amp;quot; channel to your APT sources:
echo &amp;quot;deb http://apt.syncthing.net/ syncthing release&amp;quot; | sudo tee /etc/apt/sources.list.d/syncthing.list

# Update and install syncthing:
sudo apt-get update
sudo apt-get install syncthing
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;运行syncthing&#34;&gt;运行Syncthing&lt;/h3&gt;
&lt;p&gt;Linux下直接使用&lt;code&gt;syncthing&lt;/code&gt;命令运行&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;syncthing &amp;amp;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Windows下直接打开下载的&lt;strong&gt;syncthing.exe&lt;/strong&gt;文件，而后浏览器自动打开&lt;code&gt;http://127.0.0.1:8384&lt;/code&gt;进行设置管理。&lt;/p&gt;
&lt;h3 id=&#34;管理syncthing&#34;&gt;管理Syncthing&lt;/h3&gt;
&lt;p&gt;如果是在VPS上安装Syncthing ,运行&lt;code&gt;syncthing&lt;/code&gt;后，只能通过&lt;code&gt;http://127.0.0.1:8384&lt;/code&gt;进行管理，我们可以通过以下方法在本地管理。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ssl -L 9891:localhost:8384 root@ip
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;输入root密码登录成功后，即可本地浏览&lt;code&gt;http://127.0.0.1:9891&lt;/code&gt;对VPS上的Synchting进行管理。&lt;/p&gt;
&lt;h4 id=&#34;添加设备&#34;&gt;添加设备&lt;/h4&gt;
&lt;p&gt;每个设备均有一个&lt;strong&gt;设备标识&lt;/strong&gt;，可以通过操作-&amp;gt;显示设备标识来查看。&lt;/p&gt;
&lt;p&gt;不同的设备之间进行链接，就是通过添加对方的&lt;strong&gt;设备标志&lt;/strong&gt;来实现。&lt;/p&gt;
&lt;p&gt;例如，在本地点击&lt;strong&gt;添加远程设备&lt;/strong&gt;，然后将VPS端的&lt;strong&gt;设备标识&lt;/strong&gt;填写入，设备名称可以置空。&lt;/p&gt;
&lt;p&gt;在此提醒勾选&lt;strong&gt;介绍人设备&lt;/strong&gt;选项，这样当对方添加了其他第三方设备，可以自动添加到本设备中，而不需要在本设备与第三方设备间进行再次添加。&lt;/p&gt;
&lt;h4 id=&#34;添加同步文件&#34;&gt;添加同步文件&lt;/h4&gt;
&lt;p&gt;点击&lt;strong&gt;添加文件夹&lt;/strong&gt;来设置进行共享的文件内容。&lt;/p&gt;
&lt;p&gt;首先设置&lt;strong&gt;文件夹标识&lt;/strong&gt;和&lt;strong&gt;文件夹路径&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;然后如果已经添加了其他远程设备，在&lt;strong&gt;共享给&lt;/strong&gt;下方勾选需要进行同步的远程设备。&lt;/p&gt;
&lt;h4 id=&#34;接收同步文件夹&#34;&gt;接收同步文件夹&lt;/h4&gt;
&lt;p&gt;Syncthing共享操作时双向的，通过上一步进行分享文件夹后，还需要在另外一个设备上进行确认共享。&lt;/p&gt;
&lt;p&gt;收到远程设备的共享信息后，选择确认共享，然后设置共享文件夹接收目录即可。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>使用OptiPNG优化压缩图片</title>
      <link>https://unixetc.com/post/optimize-and-compress-image-by-optipng/</link>
      <pubDate>Sun, 03 Apr 2016 12:34:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/optimize-and-compress-image-by-optipng/</guid>
      <description>&lt;p&gt;因工作需要，得处理一张7872x5904体积为178MB的图片，格式为TIFF。&lt;/p&gt;
&lt;p&gt;网上搜了半天，找到一个名为&lt;strong&gt;OptiPNG&lt;/strong&gt;的软件，主要为PNG优化，但也支持TIFF格式。&lt;/p&gt;
&lt;p&gt;下面是OptiPNG的官方介绍&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;OptiPNG is a PNG optimizer that recompresses image files to a smaller size, without losing any information. This program also converts external formats (BMP, GIF, PNM and TIFF) to optimized PNG, and performs PNG integrity checks and corrections.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;OptiPNG可以将PNG文件重新压缩，压缩后体积变得更小，并且不会丢失任何信息。同时optipng还支持其他格式的图片，如BMP、GIF、PNM和TIFF。&lt;/p&gt;
&lt;p&gt;至于OptiPNG的威力如何，请看本次实例&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;root@raspi:~# ls -lh huxian.tif                         
-rw-r--r-- 1 root root 178M Apr  4 16:54 huxian.tif    //原始文件178MB
root@raspi:~# optipng huxian.tif
** Processing: huxian.tif
Importing TIFF
7872x5904 pixels, 4x8 bits/pixel, RGB+alpha   //分辨率7872x5904
Reducing image to 3x8 bits/pixel, RGB
Input file size = 186000368 bytes

Trying:
zc = 9  zm = 8  zs = 0  f = 0         IDAT size = 4273133

Selecting parameters:
zc = 9  zm = 8  zs = 0  f = 0         IDAT size = 4273133

Output file: huxian.png

Output IDAT size = 4273133 bytes
Output file size = 4273190 bytes (181727178 bytes = 97.70% decrease)

root@raspi:~# ls -lh huxian*
-rw-r--r-- 1 root root 4.1M Apr  4 17:02 huxian.png   //压缩结果4.1MB
-rw-r--r-- 1 root root 178M Apr  4 16:54 huxian.tif
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;看来OptiPNG还是很牛的嘛！！!&lt;/p&gt;
&lt;p&gt;OptiPNG官方地址 &lt;a href=&#34;http://optipng.sourceforge.net/&#34;&gt;http://optipng.sourceforge.net/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;官方提供源码和Windows编译版，Debian/Ubuntu系统可以通过&lt;code&gt;apt-get install optipng&lt;/code&gt;来安装。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>LFTP使用实例</title>
      <link>https://unixetc.com/post/lftp-use-case/</link>
      <pubDate>Fri, 01 Apr 2016 14:21:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/lftp-use-case/</guid>
      <description>&lt;h3 id=&#34;lftp介绍&#34;&gt;LFTP介绍&lt;/h3&gt;
&lt;p&gt;lftp是一个功能强大的ftp/http客户端，作者是 Alexander Lukyanov。&lt;/p&gt;
&lt;p&gt;lftp支持多种传输协议，如ftp、http、https、sftp、exp等。&lt;/p&gt;
&lt;p&gt;如同BASH一样，lftp支持任务管理。并且具备书签管理、内置镜像和多线程传送功能。&lt;/p&gt;
&lt;h3 id=&#34;使用lftp&#34;&gt;使用LFTP&lt;/h3&gt;
&lt;h4 id=&#34;登录服务器&#34;&gt;登录服务器&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;lftp ftp://user:password@ip:port
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;以上是一个完整的lftp登录示例，其中包含协议(ftp)、用户名(user)、密码(password)、主机(ip)以及端口(port)&lt;/p&gt;
&lt;p&gt;默认情况下lftp直接访问ftp服务，默认登录端口为22，因此我们可以使用以下方法来便捷登录主机&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;lftp user@ip
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后系统会提示输入&lt;strong&gt;password&lt;/strong&gt;，完成后登录成功！&lt;/p&gt;
&lt;h4 id=&#34;lftp命令行参数&#34;&gt;lftp命令行参数&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;lftp :~&amp;gt; help
    !&amp;lt;shell-command&amp;gt;                     (commands)
    alias [&amp;lt;name&amp;gt; [&amp;lt;value&amp;gt;]]             attach [PID]
    bookmark [SUBCMD]                    cache [SUBCMD]
    cat [-b] &amp;lt;files&amp;gt;                     cd &amp;lt;rdir&amp;gt;
    chmod [OPTS] mode file...            close [-a]
    [re]cls [opts] [path/][pattern]      debug [&amp;lt;level&amp;gt;|off] [-o &amp;lt;file&amp;gt;]
    du [options] &amp;lt;dirs&amp;gt;                  exit [&amp;lt;code&amp;gt;|bg]
    get [OPTS] &amp;lt;rfile&amp;gt; [-o &amp;lt;lfile&amp;gt;]      glob [OPTS] &amp;lt;cmd&amp;gt; &amp;lt;args&amp;gt;
    help [&amp;lt;cmd&amp;gt;]                         history -w file|-r file|-c|-l [cnt]
    jobs [-v] [&amp;lt;job_no...&amp;gt;]              kill all|&amp;lt;job_no&amp;gt;
    lcd &amp;lt;ldir&amp;gt;                           lftp [OPTS] &amp;lt;site&amp;gt;
    ln [-s] &amp;lt;file1&amp;gt; &amp;lt;file2&amp;gt;              ls [&amp;lt;args&amp;gt;]
    mget [OPTS] &amp;lt;files&amp;gt;                  mirror [OPTS] [remote [local]]
    mkdir [-p] &amp;lt;dirs&amp;gt;                    module name [args]
    more &amp;lt;files&amp;gt;                         mput [OPTS] &amp;lt;files&amp;gt;
    mrm &amp;lt;files&amp;gt;                          mv &amp;lt;file1&amp;gt; &amp;lt;file2&amp;gt;
    [re]nlist [&amp;lt;args&amp;gt;]                   open [OPTS] &amp;lt;site&amp;gt;
    pget [OPTS] &amp;lt;rfile&amp;gt; [-o &amp;lt;lfile&amp;gt;]     put [OPTS] &amp;lt;lfile&amp;gt; [-o &amp;lt;rfile&amp;gt;]
    pwd [-p]                             queue [OPTS] [&amp;lt;cmd&amp;gt;]
    quote &amp;lt;cmd&amp;gt;                          repeat [OPTS] [delay] [command]
    rm [-r] [-f] &amp;lt;files&amp;gt;                 rmdir [-f] &amp;lt;dirs&amp;gt;
    scache [&amp;lt;session_no&amp;gt;]                set [OPT] [&amp;lt;var&amp;gt; [&amp;lt;val&amp;gt;]]
    site &amp;lt;site-cmd&amp;gt;                      source &amp;lt;file&amp;gt;
    torrent [-O &amp;lt;dir&amp;gt;] &amp;lt;file|URL&amp;gt;...     user &amp;lt;user|URL&amp;gt; [&amp;lt;pass&amp;gt;]
    wait [&amp;lt;jobno&amp;gt;]                       zcat &amp;lt;files&amp;gt;
    zmore &amp;lt;files&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;常用的命令解释如下：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;远端操作&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ls 显示远端目录列表&lt;/li&gt;
&lt;li&gt;cd 切换远端目录&lt;/li&gt;
&lt;li&gt;get 下载文件&lt;/li&gt;
&lt;li&gt;put 上传文件&lt;/li&gt;
&lt;li&gt;mv 移动远端文件&lt;/li&gt;
&lt;li&gt;rm 删除远端文件&lt;/li&gt;
&lt;li&gt;pwd 显示远端目录&lt;/li&gt;
&lt;li&gt;du 计算远端目录大小&lt;/li&gt;
&lt;li&gt;退出&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;本地操作&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;!ls 显示本地目录列表&lt;/li&gt;
&lt;li&gt;lcd 切换本地目录&lt;/li&gt;
&lt;li&gt;lpwd 显示本地目录&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;lftp使用范例&#34;&gt;LFTP使用范例&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;登录服务器&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;root@hostus:~# lftp qxu1128@qxu1128.my3w.com
Password:
lftp qxu1128@qxu1128.my3w.com:~&amp;gt; ls
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;列出服务器目录文件&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;lftp qxu1128@qxu1128.my3w.com:/&amp;gt; ls
drwxr-xr-x    2 0        0            4096 Jan 23  2015 backup
drwxr-xr-x    2 675      100          4096 Jan 23  2015 cgi-bin
drwxr-xr-x    2 0        0            4096 Apr 01 03:40 ftplogs
drwxr-xr-x    4 675      100          4096 Apr 01 11:02 htdocs
drwxr-xr-x    2 675      100          4096 Jan 23  2015 myfolder
drwxr-xr-x    2 0        0            4096 Apr 01 02:03 wwwlogs
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;切换远端目录&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;lftp qxu1128@qxu1128.my3w.com:/&amp;gt; cd htdocs/
lftp qxu1128@qxu1128.my3w.com:/htdocs&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;上传文件&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;lftp qxu1128@qxu1128.my3w.com:/htdocs&amp;gt; put tb7302.apk
`tb7302.apk&#39; at 1913856 (24%) 77.7K/s eta:75s [Sending data]

7713808 bytes transferred in 78 seconds (97.0K/s)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;下载文件&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;lftp qxu1128@qxu1128.my3w.com:/htdocs&amp;gt; get bk.apk
`bk.apk&#39; at 124528 (1%) 28.1K/s eta:4m [Receiving data]

7713808 bytes transferred in 519 seconds (14.5K/s)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;上传文件夹&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;lftp qxu1128@qxu1128.my3w.com:/htdocs&amp;gt; mirror -R bootstrap/
Total: 4 directories, 14 files, 0 symlinks
New: 14 files, 0 symlinks
1079609 bytes transferred in 7 seconds (150.7 KiB/s)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;下载文件夹&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;lftp qxu1128@qxu1128.my3w.com:/htdocs&amp;gt; mirror bootstrap/ new
Total: 4 directories, 14 files, 0 symlinks
New: 14 files, 0 symlinks
1079609 bytes transferred in 6 seconds (189.9 KiB/s)
lftp qxu1142380172@qxu1142380172.my3w.com:/htdocs&amp;gt; !ls new/
css  fonts  js
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;中文乱码&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;有时由于编码问题，我们看到的中文可能是乱码，如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;lftp qxu1128@qxu1128.my3w.com:/&amp;gt; ls
drwxr-xr-x    2 0        0            4096 Jan 23  2015 backup
drwxr-xr-x    2 675      100          4096 Jan 23  2015 cgi-bin
drwxr-xr-x    2 0        0            4096 Apr 01 03:40 ftplogs
drwxr-xr-x    4 675      100          4096 Apr 01 11:02 htdocs
drwxr-xr-x    2 675      100          4096 Jan 23  2015 myfolder
drwxr-xr-x    2 0        0            4096 Apr 01 02:03 wwwlogs
-r-xr--r--    1 55961    100           606 Aug 31  2015 ▒▒▒ȶ▒▒▒.txt
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;如果出现这种情况，就需要进行编码设置，如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;lftp qxu1128@qxu1128.my3w.com:/&amp;gt; set ftp:charset GBK
lftp qxu1128@qxu1128.my3w.com:/&amp;gt; set file:charset UTF-8
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;设置完成后再看：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;lftp qxu1128@qxu1128.my3w.com:/&amp;gt; ls
drwxr-xr-x    2 0        0            4096 Jan 23  2015 backup
drwxr-xr-x    2 675      100          4096 Jan 23  2015 cgi-bin
drwxr-xr-x    2 0        0            4096 Apr 01 03:40 ftplogs
drwxr-xr-x    4 675      100          4096 Apr 01 11:33 htdocs
drwxr-xr-x    2 675      100          4096 Jan 23  2015 myfolder
drwxr-xr-x    2 0        0            4096 Apr 01 02:03 wwwlogs
-r-xr--r--    1 55961    100           606 Aug 31  2015 请先读我.txt
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;以上两条&lt;strong&gt;set&lt;/strong&gt;命令可以写入lftp配置文件，以方便以后使用，关于lftp配置文件参考下节介绍。&lt;/p&gt;
&lt;h4 id=&#34;lftp书签使用方法&#34;&gt;LFTP书签使用方法&lt;/h4&gt;
&lt;p&gt;我们可以使用书签来存储一些商用的ftp登录信息，lftp的书签文件为&lt;code&gt;~/.lftp/bookmarks&lt;/code&gt;，我们可以编辑它来添加书签&lt;/p&gt;
&lt;p&gt;lftp书签格式如下&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;bkname ftp://user:password@ip:port
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;设置好书签后，可以使用&lt;code&gt;lftp&lt;/code&gt;加书签名来登录&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;lftp bkname
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;书签使用示例：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;root@hostus:~# cat ~/.lftp/bookmarks
aliyun ftp://qxu172@qxu150172.my3w.com
root@hostus:~# lftp aliyun
Password:
lftp qxu1128@qxu1128.my3w.com:~&amp;gt; ls
drwxr-xr-x    2 0        0            4096 Jan 23  2015 backup
drwxr-xr-x    2 675      100          4096 Jan 23  2015 cgi-bin
drwxr-xr-x    2 0        0            4096 Apr 01 03:40 ftplogs
drwxr-xr-x    4 675      100          4096 Apr 01 11:33 htdocs
drwxr-xr-x    2 675      100          4096 Jan 23  2015 myfolder
drwxr-xr-x    2 0        0            4096 Apr 01 02:03 wwwlogs
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;lftp配置文件&#34;&gt;LFTP配置文件&lt;/h3&gt;
&lt;p&gt;lftp执行配置文件顺序为&lt;code&gt;/etc/lftp.conf&lt;/code&gt;、&lt;code&gt;~/.lftprc&lt;/code&gt;、&lt;code&gt;~/.lftp/rc&lt;/code&gt;，我们可以编辑这些修改这些文件，来达到全局配置或者用户自定义配置。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;set&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在设置文件中，使用set来设置一些变量的值，如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;set ftp:ssl-force on
set ssl:verify-certificate on
set ftp:use-feat off
set ftp:ssl-protect-data on
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;debug&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;默认情况下lftp是静默提示的，如果需要查看一些提示信息，就要对&lt;strong&gt;debug&lt;/strong&gt;进行设置&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;debug 5 显示所有调试信息&lt;/li&gt;
&lt;li&gt;debug 3 仅显示欢迎信息和错误信息&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;alias&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;定义命令别名，比如为ls设置别名dir以方便个人使用习惯，如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;alias dir ls
alias less more
alias zless zmore
alias bzless bzmore
alias reconnect &amp;quot;close; cache flush; cd .&amp;quot;
alias edit &amp;quot;eval -f &amp;quot;get $0 -o ~/.lftp/edit.tmp.$$ &amp;amp;&amp;amp; shell \\&amp;quot;cp -p ~/.lftp/edit.tmp.$$ ~/.lftp/edit.tmp.$$.orig &amp;amp;&amp;amp; vim ~/.lftp/edit.tmp.$$ &amp;amp;&amp;amp; test ~/.lftp/edit.tmp.$$ -nt ~/.lftp/edit.tmp.$$.orig\\&amp;quot; &amp;amp;&amp;amp; put ~/.lftp/edit.tmp.$$ -o $0; shell rm -f ~/.lftp/edit.tmp.$$*&amp;quot;&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Linux下查看修改PATH</title>
      <link>https://unixetc.com/post/linux-check-and-set-the-path/</link>
      <pubDate>Tue, 29 Mar 2016 13:29:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/linux-check-and-set-the-path/</guid>
      <description>&lt;h3 id=&#34;什么是path&#34;&gt;什么是PATH?&lt;/h3&gt;
&lt;p&gt;要搞清什么是&lt;strong&gt;PATH&lt;/strong&gt;，应该先搞清什么是环境变量？&lt;/p&gt;
&lt;p&gt;在计算机中，如果需要运行一个软件，那么我们就要找到它所在的位置，但是每次运行程序时如果都要进入到相应目录，那么显然是很繁琐的。于是就有了环境变量，环境变量就是一个系统参数，里面记录了一些目录，运行软件的时候，相关的程序将会按照该目录寻找相关文件。&lt;/p&gt;
&lt;p&gt;而在Linux中，系统会有一个默认的&lt;strong&gt;PATH&lt;/strong&gt;环境变量，里面记录了系统级的相关命令目录，比如当我们输入&lt;code&gt;ls&lt;/code&gt;、&lt;code&gt;cd&lt;/code&gt;、&lt;code&gt;pwd&lt;/code&gt;等命令时，我们不需要指定它们所在的目录，因为包含这些命令的系统目录已经写入&lt;strong&gt;PATH&lt;/strong&gt;参数，因而方便我们调用。&lt;/p&gt;
&lt;h3 id=&#34;查看path&#34;&gt;查看PATH&lt;/h3&gt;
&lt;p&gt;在linux中，可以使用&lt;code&gt;export&lt;/code&gt;命令来查看所有环境变量，如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pi@raspi:~$ export
declare -x HOME=&amp;quot;/home/pi&amp;quot;
declare -x LANG=&amp;quot;en_GB.UTF-8&amp;quot;
declare -x LOGNAME=&amp;quot;pi&amp;quot;
declare -x MAIL=&amp;quot;/var/mail/pi&amp;quot;
declare -x OLDPWD
declare -x PATH=&amp;quot;/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin:/home/pi/bin&amp;quot;
declare -x PWD=&amp;quot;/home/pi&amp;quot;
declare -x SHELL=&amp;quot;/bin/bash&amp;quot;
declare -x SHLVL=&amp;quot;1&amp;quot;
declare -x SSH_CLIENT=&amp;quot;101.135.216.146 28249 22&amp;quot;
declare -x SSH_CONNECTION=&amp;quot;101.135.216.146 28249 192.168.1.111 22&amp;quot;
declare -x SSH_TTY=&amp;quot;/dev/pts/1&amp;quot;
declare -x TERM=&amp;quot;xterm&amp;quot;
declare -x USER=&amp;quot;pi&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;使用&lt;code&gt;echo&lt;/code&gt;来查看单独的环境变量&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pi@raspi:~$ echo $PATH
/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin:/home/pi/bin
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;我们可以看到，以上&lt;strong&gt;PATH&lt;/strong&gt;值包含了一些系统命令的目录，而这些目录都用&lt;code&gt;:&lt;/code&gt;隔开。&lt;/p&gt;
&lt;h3 id=&#34;修改path&#34;&gt;修改PATH&lt;/h3&gt;
&lt;p&gt;我们可以使用&lt;code&gt;export&lt;/code&gt;命令来添加目录，如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;export PATH=/mydoc:$PATH
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;以上命令在原有的&lt;strong&gt;PATH&lt;/strong&gt;前添加了&lt;code&gt;/mydoc&lt;/code&gt;这个目录，设置完成后的&lt;strong&gt;PATH&lt;/strong&gt;值如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pi@raspi:~$ echo $PATH
/mydoc:/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin:/home/pi/bin
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;以上方法修改&lt;strong&gt;PATH&lt;/strong&gt;值，在终端退出后就会失效，因此建议通过修改&lt;code&gt;/etc/profile&lt;/code&gt;来设定&lt;strong&gt;PATH&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;看一下&lt;code&gt;/etc/profile&lt;/code&gt;中到底有什么东西&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pi@raspi:~$ cat /etc/profile
# /etc/profile: system-wide .profile file for the Bourne shell (sh(1))
# and Bourne compatible shells (bash(1), ksh(1), ash(1), ...).

if [ &amp;quot;`id -u`&amp;quot; -eq 0 ]; then
PATH=&amp;quot;/usr/local/sbin:/usr/local/usr/sbin:/usr/sbin:/bin&amp;quot;
else
PATH=&amp;quot;/usr/local/sbin:/usr/local/usr/sbin:/usr/sbin:/bin:/usr/local/games:/usr/games&amp;quot;
fi
export PATH

if [ &amp;quot;$PS1&amp;quot; ]; then
if [ &amp;quot;$BASH&amp;quot; ] &amp;amp;&amp;amp; [ &amp;quot;$BASH&amp;quot; != &amp;quot;/bin/sh&amp;quot; ]; then
    # The file bash.bashrc already sets the default PS1.
    # PS1=&#39;\h:\w\$ &#39;
    if [ -f /etc/bash.bashrc ]; then
    . /etc/bash.bashrc
    fi
else
    if [ &amp;quot;`id -u`&amp;quot; -eq 0 ]; then
    PS1=&#39;# &#39;
    else
    PS1=&#39;$ &#39;
    fi
fi
fi

if [ -d /etc/profile.d ]; then
for i in /etc/profile.d/*.sh; do
    if [ -r $i ]; then
    . $i
    fi
done
unset i
fi
export PATH=/usr/local/nginx/sbin:/usr/local/php:$PATH
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;看来&lt;code&gt;/etc/profile&lt;/code&gt;中默认将一部分系统目录都添加到了&lt;strong&gt;PATH&lt;/strong&gt;中，而我们只需要更改最后一行，将一些自定义的目录添加到&lt;strong&gt;PATH&lt;/strong&gt;即可。&lt;/p&gt;
&lt;p&gt;通过编辑&lt;code&gt;/etc/profile&lt;/code&gt;来设定的&lt;strong&gt;PATH&lt;/strong&gt;值会在下次进入系统时生效，如果需要当即生效，只需要执行以下命令即可：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;source /etc/profile&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Ubunt下安装H2O</title>
      <link>https://unixetc.com/post/install-h2o-on-ubuntu/</link>
      <pubDate>Sat, 26 Mar 2016 13:26:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/install-h2o-on-ubuntu/</guid>
      <description>&lt;h3 id=&#34;更新系统&#34;&gt;更新系统&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;apt-get update &amp;amp;&amp;amp; apt-get upgrade -y &amp;amp;&amp;amp; apt-get dist-upgrade -y &amp;amp;&amp;amp; apt-get autoremove --purge -y &amp;amp;&amp;amp; apt-get autoclean -y
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;安装必备软件&#34;&gt;安装必备软件&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;apt-get install locate git cmake build-essential checkinstall autoconf pkg-config libtool python-sphinx wget libcunit1-dev nettle-dev libyaml-dev libuv-dev -y
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;安装wslay&#34;&gt;安装wslay&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;git clone https://github.com/tatsuhiro-t/wslay.git
cd wslay/
autoreconf -i
automake
autoconf
./configure
make
make install
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;安装完成后检查lib文件，如下所示：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ls /usr/local/lib/
libuv.a   libuv.so.1      libwslay.la    libwslay.so.0.0.1  python3.4
libuv.la  libuv.so.1.0.0  libwslay.so    pkgconfig
libuv.so  libwslay.a      libwslay.so.0  python2.7
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;安装最新版openssl&#34;&gt;安装最新版OpenSSL&lt;/h3&gt;
&lt;p&gt;删除旧版OpenSSL&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;apt-get remove --purge openssl libssl-dev
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;下载新版OpenSSL&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;wget https://www.openssl.org/source/openssl-1.0.2.tar.gz --no-check-certificate
tar -xvzf openssl-1.0.2.tar.gz
mv openssl-1.0.2 openssl
cd openssl/
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;建立&lt;code&gt;openssl.ld&lt;/code&gt;文件，内容如下:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;vi openssl.ld

OPENSSL_1.0.0 {
    global:
        *;

    local:
        *;
};

OPENSSL_1.0.1 {
} OPENSSL_1.0.0;

OPENSSL_1.0.1d {
} OPENSSL_1.0.1;

OPENSSL_1.0.2 {
} OPENSSL_1.0.1d;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;接下开始安装OpenSSL&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./config -fPIC shared -Wl,--version-script=/root/openssl/openssl.ld -Wl,-Bsymbolic-functions
make
make test
make install
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;检查安装结果&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;/usr/local/ssl/bin/openssl version
OpenSSL 1.0.2 22 Jan 2015
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;设置环境变量&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;export OPENSSL_INCLUDE_DIR=/usr/local/ssl/include/
export OPENSSL_LIBRARIES=&#39;/usr/local/ssl/lib/libssl.so;/usr/local/ssl/lib/libcrypto.so&#39;
export LD_LIBRARY_PATH=/usr/local/ssl/lib/
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;安装h2o&#34;&gt;安装H2O&lt;/h3&gt;
&lt;p&gt;新建&lt;code&gt;FindOpenSSL.cmake&lt;/code&gt;文件&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd h2o/
vi cmake/FindOpenSSL.cmake
FIND_PATH(OPENSSL_INCLUDE_DIR NAMES openssl/ssl.h)

INCLUDE(FindPackageHandleStandardArgs)
FIND_PACKAGE_HANDLE_STANDARD_ARGS(OPENSSL DEFAULT_MSG OPENSSL_LIBRARIES
OPENSSL_INCLUDE_DIR)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;编译安装H2O&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cmake -DCMAKE_INSTALL_PREFIX=/usr/local/h2o -DOPENSSL_LIBRARIES=&#39;/usr/local/ssl/lib/libssl.so;/usr/local/ssl/lib/libcrypto.so&#39; -DOPENSSL_INCLUDE_DIR=/usr/local/ssl/include/
make
make install
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;运行h2o&#34;&gt;运行H2O&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;/usr/local/h2o/bin/h2o -c examples/h2o/h2o.conf&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>小米4C解锁和刷入TWRP Recovery</title>
      <link>https://unixetc.com/post/mi4c-unlock-and-twrp-recovery/</link>
      <pubDate>Sun, 20 Mar 2016 13:20:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/mi4c-unlock-and-twrp-recovery/</guid>
      <description>&lt;p&gt;时隔三年再次入手小米手机，没想到如今的MIUI已经今非昔比，首先是bootloader锁住了，官方理由是安全，但是作为一个android发烧友，锁bootloader后就无法安装第三方recovery，进而无法体验众多第三方系统了。以下介绍如何解锁小米4C以及刷入第三方TWRP Recovery。
permalink: &amp;lsquo;logs/Mi4C-Unlock-and-TWRP-Recovery.html&amp;rsquo;
时隔三年再次入手小米手机，没想到如今的MIUI已经今非昔比，首先是bootloader锁住了，官方理由是安全，但是作为一个android发烧友，锁bootloader后就无法安装第三方recovery，进而无法体验众多第三方系统了。其次是到处广告，整个系统UI很多处都是广告，额滴个神啊！ 小米穷疯了吧! 无力吐槽啊………………&lt;/p&gt;
&lt;p&gt;以下介绍如何解锁小米4C以及刷入第三方TWRP Recovery。&lt;/p&gt;
&lt;h3 id=&#34;解锁小米4c&#34;&gt;解锁小米4C&lt;/h3&gt;
&lt;p&gt;小米解锁需要去官方申请，申请提交地址为 &lt;a href=&#34;http://www.miui.com/unlock/&#34;&gt;http://www.miui.com/unlock/&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;录入小米ID以及手机号等信息后，就等着吧……&lt;/p&gt;
&lt;p&gt;我等了16天才收到解锁申请通过短信通知。&lt;/p&gt;
&lt;p&gt;然后下载官方解锁工具，下载地址为&lt;a href=&#34;http://www.miui.com/unlock/download.html&#34;&gt;http://www.miui.com/unlock/download.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;打开解锁工具，登录小米帐号，关机长按音量下+电源键进入Fastboot模式。&lt;/p&gt;
&lt;p&gt;然后按照提示进行操作，两分钟不到解锁成功！！！&lt;/p&gt;
&lt;p&gt;注：如果解锁失败，提示什么帐号不一致啦、手机信息无法获取啦，请到miui官网论坛进行问题提交。&lt;/p&gt;
&lt;h3 id=&#34;刷入twrp-recovery&#34;&gt;刷入TWRP Recovery&lt;/h3&gt;
&lt;p&gt;首先下载adb工具包，里面包含需要的软件fastboot，下载地址 &lt;a href=&#34;http://pan.baidu.com/s/1sjR8ved&#34;&gt;http://pan.baidu.com/s/1sjR8ved&lt;/a&gt;，下载后点击安装。&lt;/p&gt;
&lt;p&gt;然后下载TWRP Recovery镜像文件，下载地址为&lt;a href=&#34;http://pan.baidu.com/s/1nuugNK9&#34;&gt;http://pan.baidu.com/s/1nuugNK9&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;将下载后的TWRP Recovery镜像文件(.img)拷贝至adb工具包目录，然后CMD模式下进入到adb工具包目录，如下操作：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;刷入TWRP Recovery&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;D:\&amp;gt;fastboot flash recovery libra_ts_twrp_3_0_0_3.img
target reported max download size of 536870912 bytes
sending &#39;recovery&#39; (51844 KB)...
OKAY [  1.485s]
writing &#39;recovery&#39;...
OKAY [  0.481s]
finished. total time: 1.971s
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;重启引导进入TWRP Recovery&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;D:\&amp;gt;fastboot boot libra_ts_twrp_3_0_0_3.img
downloading &#39;boot.img&#39;...
OKAY [  1.494s]
booting...
OKAY [  0.516s]
finished. total time: 2.014s
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;说明：首次刷入TWRP Recovery，进入Recovery后触摸屏可能无法操作，这时唯一的方法就是等待，等到1分钟左右手机自动息屏后，重按电源键点亮屏幕即可恢复操作。&lt;/p&gt;
&lt;h3 id=&#34;推荐小米4c第三方rom&#34;&gt;推荐小米4C第三方ROM&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Xiaomi Mi4c CM13&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;http://www.teamsuperluminal.org/mi4c-cyanogenmod-13/&#34;&gt;http://www.teamsuperluminal.org/mi4c-cyanogenmod-13/&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Xiaomi Mi4c Broken OS v4.3&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;http://www.teamsuperluminal.org/broken-os-v4-2-mi4c/&#34;&gt;http://www.teamsuperluminal.org/broken-os-v4-2-mi4c/&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Xiaomi Mi4c CM12.1&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;http://www.teamsuperluminal.org/mi4c-cyanogenmod-12-1/&#34;&gt;http://www.teamsuperluminal.org/mi4c-cyanogenmod-12-1/&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Xiaomi Mi4c PAC-rom 5.1.1&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;http://www.teamsuperluminal.org/pac-rom-5-1-1-mi4c/&#34;&gt;http://www.teamsuperluminal.org/pac-rom-5-1-1-mi4c/&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Mokee 60.1&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;http://download.mokeedev.com/?device=libra&#34;&gt;http://download.mokeedev.com/?device=libra&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>斐讯K1刷华硕固件</title>
      <link>https://unixetc.com/post/phicomm-k1-psg-1208-brush-asus-firmware/</link>
      <pubDate>Sat, 20 Feb 2016 12:32:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/phicomm-k1-psg-1208-brush-asus-firmware/</guid>
      <description>&lt;p&gt;在福利吧(fuliba.net)看到斐讯K1路由器免费获得的活动，于是在天猫买了一台，赠送的139铃铛卡也正常激活使用，一个月到期后共140元也正常提了出来。总的来说，没被坑！！！&lt;/p&gt;
&lt;p&gt;但是斐讯K1默认的固件确实不敢恭维，于是在网上搜了一通，先刷入Breed，然后通过Breed刷入华硕固件，特整理步骤。&lt;/p&gt;
&lt;h3 id=&#34;什么是breed&#34;&gt;什么是Breed?&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;这是楼主从去年年中自行设计开发的一个全新的 Bootloader，并用于取代 U-Boot。&lt;/p&gt;
&lt;p&gt;此 Bootloader 暂取名为 Breed，不是 U-Boot，也不是 U-Boot 的改进版，是全新、独立的、跟 U-Boot 平级的 Bootloader。&lt;/p&gt;
&lt;p&gt;科普一下：&lt;/p&gt;
&lt;p&gt;Bootloader 意思为引导加载器，即为用于加载操作系统的程序。它是一大类此类功能程序的统称。现在的 BIOS、UEFI、GRUB、RedBoot、U-Boot、CFE、Breed 等都是 Bootloader。&lt;/p&gt;
&lt;p&gt;因此，还是上面那句话，Breed 不是由什么东西改名出来的，这就是一个新的东西。看着有些人的话我真的觉得很搞笑。&lt;/p&gt;
&lt;p&gt;此外，由上面两句话，如果想从 Breed 刷到其他任何 Bootloader，例如 U-Boot，请在 Breed 固件更新页面选择更新 Bootloader。。。。。。。。。。。。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;em&gt;摘自&lt;strong&gt;恩山无线论坛&lt;/strong&gt;Breed作者&lt;strong&gt;hackpascal&lt;/strong&gt;原帖&lt;/em&gt;&lt;/p&gt;
&lt;h3 id=&#34;刷入breed&#34;&gt;刷入Breed&lt;/h3&gt;
&lt;p&gt;适合斐讯K1的Breed下载地址为 &lt;a href=&#34;http://breed.hackpascal.net/breed-mt7620-reset1.bin&#34;&gt;http://breed.hackpascal.net/breed-mt7620-reset1.bin&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;首先进入到斐讯K1的管理后台,192.168.2.1，确保路由器正常使用并且已经配置好联网。&lt;/p&gt;
&lt;p&gt;接着，在浏览器地址栏输入&lt;strong&gt;http://192.168.2.1/goform/Diagnosis?pingAddr=192.168.2.100|echo&amp;quot;&amp;ldquo;|telnetd&lt;/strong&gt;回车&lt;/p&gt;
&lt;p&gt;浏览器会跳转到网络测试页面，这个不用理会。&lt;/p&gt;
&lt;p&gt;打开&lt;strong&gt;CMD&lt;/strong&gt; (WIN+R)，telnet连接路由器&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;telnet 192.168.2.1
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;使用路由器管理员帐号登录，默认为admin/admin&lt;/p&gt;
&lt;p&gt;下载Breed到路由器&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd /tmp
wget http://breed.hackpascal.net/breed-mt7620-reset1.bin
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;刷入Breed&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mtd_write write breed-mt7620-reset1.bin Bootloader
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;重启路由器&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;reboot
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;相关截图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/breed-to-k1.png&#34; alt=&#34;斐讯K1刷入Breed过程&#34; title=&#34;斐讯K1刷入Breed过程&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;刷华硕固件&#34;&gt;刷华硕固件&lt;/h3&gt;
&lt;p&gt;路由器断电，插电时按住Reset键5秒。&lt;/p&gt;
&lt;p&gt;网线连接电脑，浏览192.168.1.1进入Breed Web恢复控制台。&lt;/p&gt;
&lt;p&gt;左侧菜单点击固件更新，在右侧选择固件文件，开始上传更新。&lt;/p&gt;
&lt;p&gt;完成后可能不会自动重启，需要手动断电重启。&lt;/p&gt;
&lt;p&gt;注意：有时Reset后，电脑可能无法连接192.168.1.1，可以手动设置网卡参数192.168.1.11/255.255.255.0/192.168.1.1&lt;/p&gt;
&lt;p&gt;至此斐讯K1刷华硕固件整个过程完成，至于华硕固件使用方法，请自行搜索。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Firefox和FoxyProxy</title>
      <link>https://unixetc.com/post/firefox-and-foxyproxy/</link>
      <pubDate>Sat, 13 Feb 2016 12:13:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/firefox-and-foxyproxy/</guid>
      <description>&lt;p&gt;三年不用Firefox了，最近由于需要进行手机端和电脑端资源同步，chrome在国内不安装谷歌套件无法使用，所以又切换回了firefox。&lt;/p&gt;
&lt;p&gt;在安装完成autoproxy后发现，订阅gfwlist.txt一直无法成功，网上找了找消息，说是autoproxy已经跟不上firefox开发脚步，无法继续使用。于是在firefox的addon站点重新找代理插件，最终选定foxyproxy。&lt;/p&gt;
&lt;p&gt;以下是foxyproxy设置socks代理，和订阅gfwlist.txt的一些设置方法。&lt;/p&gt;
&lt;h3 id=&#34;安装foxyproxy&#34;&gt;安装foxyproxy&lt;/h3&gt;
&lt;p&gt;去主页&lt;a href=&#34;http://getfoxyproxy.org/&#34;&gt;http://getfoxyproxy.org/&lt;/a&gt;，安装完成后重启firefox&lt;/p&gt;
&lt;h3 id=&#34;添加代理服务器&#34;&gt;添加代理服务器&lt;/h3&gt;
&lt;p&gt;双击地址栏和搜索栏中间的foxyproxy图标，进入到设置&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;代理服务器&lt;/strong&gt;选项卡中点击&lt;strong&gt;新建代理服务器&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;常规&lt;/strong&gt;选项卡中设置&lt;strong&gt;代理名称&lt;/strong&gt;，如ss&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;代理服务器细节&lt;/strong&gt;中设置具体参数，以下是我的设置截图，可以参考&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/foxyproxy_config.webp&#34; alt=&#34;FoxyProxy代理服务器设置&#34; title=&#34;FoxyProxy代理服务器设置&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;设置订阅gfwlisttxt&#34;&gt;设置订阅gfwlist.txt&lt;/h3&gt;
&lt;p&gt;在&lt;strong&gt;模式订阅&lt;/strong&gt;选项卡中，空白处点击右键，&lt;strong&gt;添加新的模式订阅&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;参考下图设置，注意勾划出来的地方&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/foxyproxy_config_1.webp&#34; alt=&#34;FoxyProxy订阅gfwlist.txt&#34; title=&#34;FoxyProxy订阅gfwlist.txt&#34;&gt;&lt;/p&gt;
&lt;p&gt;将foxyproxy的&lt;strong&gt;工作模式&lt;/strong&gt;选择为&lt;strong&gt;使用基于其预定义模版的代理服务器&lt;/strong&gt;。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>windows7开启telnet客户端</title>
      <link>https://unixetc.com/post/windows7-enable-telnet-client/</link>
      <pubDate>Wed, 10 Feb 2016 12:11:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/windows7-enable-telnet-client/</guid>
      <description>&lt;p&gt;安装完成windows7后，默认可能没有开启telnet功能，这样在cmd下输入telnet时会提示无命令，可以参考下文开启telnet功能。&lt;/p&gt;
&lt;p&gt;开始 -&amp;gt; 控制面板 -&amp;gt; 程序和功能&lt;/p&gt;
&lt;p&gt;在左侧边栏找到&lt;strong&gt;打开或关闭windows功能&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在打开的窗口中找到&lt;strong&gt;Telnet客户端&lt;/strong&gt;，勾选，确认。&lt;/p&gt;
&lt;p&gt;Over!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>使用net_speeder加速VPS</title>
      <link>https://unixetc.com/post/use-net-speeder-accelerate-vps/</link>
      <pubDate>Sun, 07 Feb 2016 12:32:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/use-net-speeder-accelerate-vps/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;当使用国外服务器时，经常会发现，下载速度只有十几k。平时可能不太注意，认为服务器带宽不足，或者自己使用的宽带不给力，其实很有可能原因并不在此。&lt;/p&gt;
&lt;p&gt;由于光速的局限性，延迟会比较高（即使光沿直线传播，太平洋一个往返也要一百多毫秒）。并且由于距离较远，途径路由跳数较多，并且网络拥堵的原因。经常会发生丢包的情况。&lt;/p&gt;
&lt;p&gt;对于平时使用最广泛的TCP协议来讲，发送端发出包后，接收端会回复ACK，表示自己收到了。用这种机制来保证可靠性。但对于高延迟链路来讲，如果每发送一个包都等待应答，那么大部分时间都在等待数据包到达，而链路则空置了。为此一般会采用滑动窗口技术。即在窗口满之前，发送端一直发送包，然后收到应答后将确认收到的包从窗口中移除。这样可以提高链路利用率。&lt;/p&gt;
&lt;p&gt;TCP还有一个特性则是拥塞控制。当发送端检测到链路发生丢包时，则会主动缩小窗口大小以减慢发送速度，避免拥塞。不过对于跳数较多的链路来讲，只要有一个路由不够稳定丢包，就会被发送端判断为拥塞，从而影响网络速度。&lt;/p&gt;
&lt;p&gt;为了解决丢包问题，最简单粗暴的方法就是双倍发送，即同一份数据包发送两份。这样的话在服务器带宽充足情况下，丢包率会平方级降低。&lt;/p&gt;
&lt;p&gt;这种方式下，直接优点是降低丢包率，直接缺点是耗费双倍流量。一些延伸影响是更容易触发快速恢复逻辑，避免了丢包时窗口缩减过快。一定程度也能提高网络速度。&lt;/p&gt;
&lt;p&gt;最近比较忙，空闲时间做了一个最简单的程序，试用效果很好，在一台VPS上测试后发现，未开启时单线程下载、ssh管道速度在十几K级别。开启后可以达到平均300KB+的速度。效果非常明显。但对于不加速就可以跑满带宽的类型来讲（多线程下载），开启后反而由于多出来的无效流量，导致速度减半。所以对于多线程/高速链路，这个方案是不适合的。&lt;/p&gt;
&lt;p&gt;目前版本是最简单的逻辑，未来会进行细化（主动触发快速恢复、快速重传等），降低流量浪费，提升加速效果。&lt;/p&gt;
&lt;p&gt;目前程序起名net-speeder，相对于修改协议栈来讲，由于后者需要重新升级编译内核，使用用户态程序部署更方便，稳定性更高，兼容性更好。缺点则是性能开销稍大和自由度有损失。总体比较起来，个人使用还是使用用户态程序更合适一些，特别是在虚拟机中使用（OpenVZ，LXC等虚拟机无法自己定制内核）。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;em&gt;摘自http://www.snooda.com/read/324&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;net_speeder项目主页 &lt;a href=&#34;https://github.com/snooda/net-speeder&#34;&gt;https://github.com/snooda/net-speeder&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;安装net_speeder&#34;&gt;安装net_speeder&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;apt-get install libnet-dev libpcap-dev -y
git clone https://github.com/snooda/net-speeder.git
cd net-speeder
sh build.sh
mv net_speeder /usr/local/bin/
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;使用net_speeder&#34;&gt;使用net_speeder&lt;/h3&gt;
&lt;p&gt;使用&lt;code&gt;ifconfig&lt;/code&gt;查看网卡端口，我的端口为&lt;code&gt;venet0&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;nohup net_speeder venet0 &amp;quot;ip&amp;quot; &amp;gt;/dev/null 2&amp;gt;&amp;amp;1 &amp;amp;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;添加到开机启动&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;echo &#39;nohup net_speeder venet0 &amp;quot;ip&amp;quot; &amp;gt;/dev/null 2&amp;gt;&amp;amp;1 &amp;amp;&#39; &amp;gt;&amp;gt; /etc/rc.local&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>查看cp、mv等命令的执行进度</title>
      <link>https://unixetc.com/post/check-cp-dd-etc-commands-progress/</link>
      <pubDate>Thu, 04 Feb 2016 02:04:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/check-cp-dd-etc-commands-progress/</guid>
      <description>&lt;p&gt;Linux中进行文件拷贝和移动时，我们是看不到具体命令的执行情况，不知道还需要多久才可以执行完成。在此推荐一个软件名为progress，用它可以查看一些命令的具体执行情况，包括进度、时间等等。&lt;/p&gt;
&lt;p&gt;该软件的具体解释为&lt;strong&gt;Coreutils Progress Viewer&lt;/strong&gt;，即核心程序进度查看，用它可以监视很多linux程序的执行情况，比如cp、mv、dd、tar,、gzip、cat等等，甚至于firefox的下载进度或者nginx的运行情况。&lt;/p&gt;
&lt;h3 id=&#34;安装progress&#34;&gt;安装progress&lt;/h3&gt;
&lt;p&gt;progress主页 &lt;a href=&#34;https://github.com/Xfennec/progress&#34;&gt;https://github.com/Xfennec/progress&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;安装progress方法&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git clone https://github.com/Xfennec/progress.git
cd progress
make
make install
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;使用progress&#34;&gt;使用progress&lt;/h3&gt;
&lt;p&gt;简单的执行方法&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;progress
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;几个示例：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;监控所有可监控软件的执行情况&lt;/p&gt;
&lt;p&gt;watch progress -q&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;然后进行文件操作即可看到如下内容:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/progress_1.webp&#34; alt=&#34;progress监控窗口&#34; title=&#34;progress监控窗口&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;查看下载进度&lt;/p&gt;
&lt;p&gt;watch progress -wc firefox&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;查看网页服务器活动情况&lt;/p&gt;
&lt;p&gt;progress -c nginx&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>使用Google Authenticator两步验证加强SSH登录</title>
      <link>https://unixetc.com/post/use-google-authenticator-set-2step-verification-strengthening-ssh-login/</link>
      <pubDate>Thu, 28 Jan 2016 12:33:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/use-google-authenticator-set-2step-verification-strengthening-ssh-login/</guid>
      <description>&lt;p&gt;Google Authenticator开源版主页 &lt;a href=&#34;https://github.com/google/google-authenticator&#34;&gt;https://github.com/google/google-authenticator&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;安装google-authenticator&#34;&gt;安装Google Authenticator&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Ubuntu&lt;/strong&gt;已经包含libpam-google-authenticator软件(Ubuntu 11.10以上版本),可以直接使用&lt;code&gt;apt-get&lt;/code&gt;安装&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;apt-get install libpam-google-authenticator
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;其他系统可以通过源码编译安装&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git clone https://github.com/google/google-authenticator-libpam.git
cd google-authenticator-libpam/
./bootstrap.sh
./configure
make
make install
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;注意：在Debian7中执行&lt;code&gt;./configure&lt;/code&gt;时可能存在以下错误提示&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;configure: error: Unable to find the PAM library or the PAM header files
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;在此需要安装&lt;code&gt;libpam0g-dev&lt;/code&gt;和&lt;code&gt;libtool&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;apt-get -y install libpam0g-dev libtool
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;设置google-authenticator&#34;&gt;设置Google Authenticator&lt;/h3&gt;
&lt;p&gt;在手机端搜索安装&lt;strong&gt;Google Authenticator&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;google-authenticator
Do you want authentication tokens to be time-based (y/n) y
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后出现二维码，使用手机端&lt;strong&gt;Google Authenticator&lt;/strong&gt;扫码,接下来服务器端继续设置&lt;/p&gt;
&lt;p&gt;如果没有出现二维码，可以将提示的以**&lt;a href=&#34;https://www.google.com/chart?&#34;&gt;https://www.google.com/chart?&lt;/a&gt;**开头的连接复制到浏览器中，就可以看到二维码了&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Do you want me to update your &amp;quot;/root/.google_authenticator&amp;quot; file (y/n) y

Do you want to disallow multiple uses of the same authentication
token? This restricts you to one login about every 30s, but it increases
your chances to notice or even prevent man-in-the-middle attacks (y/n) Do you want to disallow multiple uses of the same authentication
token? This restricts you to one login about every 30s, but it increases
your chances to notice or even prevent man-in-the-middle attacks (y/n) y

By default, tokens are good for 30 seconds and in order to compensate for
possible time-skew between the client and the server, we allow an extra
token before and after the current time. If you experience problems with poor
time synchronization, you can increase the window from its default
size of 1:30min to about 4min. Do you want to do so (y/n) y

If the computer that you are logging into isn&#39;t hardened against brute-force
login attempts, you can enable rate-limiting for the authentication module.
By default, this limits attackers to no more than 3 login attempts every 30s.
Do you want to enable rate-limiting (y/n) y
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;接下来将&lt;strong&gt;Google Authenticator&lt;/strong&gt;验证配置到SSH登录中&lt;/p&gt;
&lt;p&gt;编辑&lt;code&gt;/etc/pam.d/sshd&lt;/code&gt;文件，添加下行保存&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;auth required pam_google_authenticator.so
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;编辑&lt;code&gt;/etc/ssh/sshd_config&lt;/code&gt;找到下行&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ChallengeResponseAuthentication no
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;更改为&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ChallengeResponseAuthentication yes
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;重启SSH服务&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;service ssh restart
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;再次登录的话输入用户名后就跟着提示两部验证码，然后才输入用户密码，如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;login as: root
Using keyboard-interactive authentication.
Verification code:
Using keyboard-interactive authentication.
Password:
Welcome to Ubuntu 14.04.2 LTS (GNU/Linux 2.6.32-042stab108.8 i686)

* Documentation:  https://help.ubuntu.com/
Last login: Thu Jan 28 15:04:20 2016 from 61.185.216.146
root@hkvps:~#
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;参考 &lt;a href=&#34;https://wzyboy.im/post/765.html&#34;&gt;https://wzyboy.im/post/765.html&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>树莓派安装Dnsmasq加速DNS解析</title>
      <link>https://unixetc.com/post/raspberry-pi-install-dnsmasq-and-dnsmasq-china-list/</link>
      <pubDate>Mon, 18 Jan 2016 21:28:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/raspberry-pi-install-dnsmasq-and-dnsmasq-china-list/</guid>
      <description>&lt;p&gt;天朝的dns服务商尿性不是一般的大，动不动就抽风或者劫持，为了避免这种情况，可以在树莓派上安装Dnsmasq来加速dns解析，提高网络浏览体验。&lt;/p&gt;
&lt;h3 id=&#34;安装配置dnsmasq&#34;&gt;安装配置dnsmasq&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;apt-get install dnsmasq
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;配置dnsmasq,&lt;code&gt;vi /etc/dnsmasq.conf&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;我的配置文件如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;domain=Raspi2
resolv-file=/etc/resolv.dnsmasq
conf-dir=/etc/dnsmasq.d
min-port=4096
server=114.114.114.114
server=114.114.115.115
server=223.5.5.5
server=223.6.6.6
server=119.29.29.29
server=182.254.116.116
server=112.124.47.27
server=114.215.126.16
server=101.226.4.6
server=218.30.118.6
server=42.120.21.30
server=199.91.73.222
server=178.79.131.110
server=8.8.8.8
server=8.8.4.4

cache-size=10000
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;配置完重启dnsmasq服务&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;service dnsmasq restart
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;其中的&lt;code&gt;server&lt;/code&gt;字段为上游DNS&lt;/p&gt;
&lt;h3 id=&#34;配置dnsmasq-china-list&#34;&gt;配置dnsmasq-china-list&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;git clone https://github.com/felixonmars/dnsmasq-china-list.git
cd dnsmasq-china-list/
cp *.conf  /etc/dnsmasq.d/
service dnsmasq restart
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;至此设置完成，可以在路由器中将首选dns设为树莓派ip，这样局域网内的所有设备都可以体验dns解析加速了！&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>树莓派下安装配置Noip</title>
      <link>https://unixetc.com/post/install-configure-noip-client-in-raspberry-pi/</link>
      <pubDate>Mon, 11 Jan 2016 12:13:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/install-configure-noip-client-in-raspberry-pi/</guid>
      <description>&lt;h3 id=&#34;注册noip&#34;&gt;注册noip&lt;/h3&gt;
&lt;p&gt;首先在&lt;a href=&#34;http://noip.com&#34;&gt;http://noip.com&lt;/a&gt;注册账户&lt;/p&gt;
&lt;p&gt;然后在主机管理(Manage Hosts)中添加主机(Add A Host)，根据提示设置二级域名，IP可以随意填写。&lt;/p&gt;
&lt;h3 id=&#34;安装noip客户端&#34;&gt;安装Noip客户端&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;wget https://www.noip.com/client/linux/noip-duc-linux.tar.gz
tar zxf noip-duc-linux.tar.gz
cd noip-2.1.9-1
sudo make install
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;安装过程中，按照提示输入noip帐号信息，时间间隔建议设为5s，默认30s&lt;/p&gt;
&lt;h3 id=&#34;设置开机启动&#34;&gt;设置开机启动&lt;/h3&gt;
&lt;p&gt;在&lt;code&gt;/etc/init.d/&lt;/code&gt;中建立&lt;code&gt;noip2&lt;/code&gt;脚本&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo vi /etc/init.d/noip2
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;脚本内容如下&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#! /bin/sh

### BEGIN INIT INFO
# Provides:          noip2
# Required-Start:    $syslog
# Required-Stop:     $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: noip.com client service
### END INIT INFO

# . /lib/lsb/init-functions
case &amp;quot;$1&amp;quot; in
    start)
        echo &amp;quot;Starting noip2.&amp;quot;
        /usr/local/bin/noip2
    ;;
    stop)
        echo &amp;quot;Shutting down noip2.&amp;quot;
        killall noip2
        #killproc /usr/local/bin/noip2
    ;;
    *)
        echo &amp;quot;Usage: $0 {start|stop}&amp;quot;
        exit 1
esac

exit 0
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;设置开机启动&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo chmod +x /etc/init.d/noip2
sudo update-rc.d noip2 defaults
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;设置dmz转发&#34;&gt;设置DMZ转发&lt;/h3&gt;
&lt;p&gt;进入到路由器管理平台，为树莓派指定一个固定IP，然后在&lt;strong&gt;转发规则&lt;/strong&gt;下设置&lt;strong&gt;DMZ主机&lt;/strong&gt;将树莓派ip添加设置，重启生效。&lt;/p&gt;
&lt;p&gt;至此设置完成，可以ping一下自定义域名，看ip是正确，以后就可以通过自定义域名访问树莓派了。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>树莓派使用ddclient和DDNS</title>
      <link>https://unixetc.com/post/raspberry-pi-using-ddclient-and-ddns/</link>
      <pubDate>Thu, 07 Jan 2016 12:31:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/raspberry-pi-using-ddclient-and-ddns/</guid>
      <description>&lt;h3 id=&#34;域名解析&#34;&gt;域名解析&lt;/h3&gt;
&lt;p&gt;首先得有个域名，在域名管理中将域名DNS设为he.net的DNS地址，如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ns1.he.net
ns2.he.net
ns3.he.net
ns4.he.net
ns5.he.net
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后在&lt;a href=&#34;http://dns.he.net&#34;&gt;http://dns.he.net&lt;/a&gt;注册账号，添加域名(Add a new domain)&lt;/p&gt;
&lt;p&gt;接下来添加A记录(New A)，勾选允许动态域名解析(Enable entry for dynamic dns)&lt;/p&gt;
&lt;p&gt;点击域名后DDNS列中的刷新按钮，新建一个DDNS密匙(Generate a DDNS key.)&lt;/p&gt;
&lt;h3 id=&#34;安装设置ddclient&#34;&gt;安装设置ddclient&lt;/h3&gt;
&lt;p&gt;在树莓派上安装ddclient&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo apt-get install ddclient
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;编辑ddclient配置文件，路径为&lt;code&gt;/etc/ddclient.conf&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;protocol=dyndns2
use=web,web=myip.dnsomatic.com
server=dyn.dns.he.net
login=raspi.in
password=&#39;ddnskey&#39;
www.raspi.in,raspi.in
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;其中&lt;strong&gt;password&lt;/strong&gt;为设置DDNS时的key&lt;/p&gt;
&lt;p&gt;重启ddclient服务&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;service ddclient restart
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;验证IP查询结果&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo ddclient -query
use=if, if=eth0 address is 192.168.1.111
use=if, if=lo address is 127.0.0.1
use=web, web=dnspark address is 36.40.143.235
use=web, web=dyndns address is NOT FOUND
use=web, web=loopia address is 36.40.143.235
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;其中if方式查询到的是内网地址和本机地址，web方式查询到的时外网IP&lt;/p&gt;
&lt;p&gt;至此设置完成，可以ping一下域名试试咯！&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>SSL安全优化</title>
      <link>https://unixetc.com/post/ssl-security-optimization/</link>
      <pubDate>Mon, 21 Dec 2015 12:21:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/ssl-security-optimization/</guid>
      <description>&lt;p&gt;先贴出本站的SSL安全评级,测试地址为&lt;a href=&#34;https://www.ssllabs.com/ssltest/analyze.html?d=alair.cn&#34;&gt;https://www.ssllabs.com/ssltest/analyze.html?d=alair.cn&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/ssl-rank.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;以下是本站&lt;strong&gt;Nginx&lt;/strong&gt;配置中关于SSL部分&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;listen 443 ssl http2;

ssl_certificate /etc/letsencrypt/live/alair.cn/fullchain.pem;  
ssl_certificate_key /etc/letsencrypt/live/alair.cn/privkey.pem; 

ssl_session_timeout 60m;
ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
ssl_ciphers ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-RC4-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:RC4-SHA:!aNULL:!eNULL:!EXPORT:!DES:!3DES:!MD5:!DSS:!PKS;

ssl_prefer_server_ciphers on;
ssl_session_cache builtin:1000 shared:SSL:10m;
ssl_dhparam /etc/ssl/certs/dhparam.pem;
ssl_stapling on;
ssl_stapling_verify on;

add_header Strict-Transport-Security &amp;quot;max-age=63072000; includeSubdomains; preload&amp;quot;;
add_header X-Frame-Options &amp;quot;DENY&amp;quot;;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;说明：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;dhparam.pem&lt;/strong&gt;可以使用&lt;code&gt;openssl dhparam -out dhparam.pem 4096&lt;/code&gt;命令生成，这个命令会执行很长时间，也可以将字节数改为2048&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>使用免费Let&#39;s Encrypt证书</title>
      <link>https://unixetc.com/post/use-letsencrypt-free-ssl-certificate/</link>
      <pubDate>Tue, 15 Dec 2015 22:38:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/use-letsencrypt-free-ssl-certificate/</guid>
      <description>&lt;p&gt;在此介绍如何使用Let&amp;rsquo;s Encrypt的免费SSL证书，需要在有管理权限的VPS上操作，然后参考以下方法自签域名证书。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git clone https://github.com/letsencrypt/letsencrypt.git
cd letsencrypt
mkdir -p /home/webroot/.well-known/acme-challenge  #/home/webroot为网站目录
./letsencrypt-auto certonly --email me@alair.cn -d alair.cn,www.alair.cn --webroot -w /home/webroot --agree-tos #注意email、域名、和网站目录
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;签发成功后，会提示如&lt;code&gt;/etc/letsencrypt/live/www.alair.cn/fullchain.pem;&lt;/code&gt;的证书路径信息。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;IMPORTANT NOTES:
- Congratulations! Your certificate and chain have been saved at
/etc/letsencrypt/live/www.alair.cn/fullchain.pem. Your cert will
expire on 2016-03-14. To obtain a new version of the certificate in
the future, simply run Let&#39;s Encrypt again.
- If like Let&#39;s Encrypt, please consider supporting our work by:

Donating to ISRG / Let&#39;s Encrypt:   https://letsencrypt.org/donate
Donating to EFF:                    https://eff.org/donate-le
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;接下来在&lt;strong&gt;Nginx&lt;/strong&gt;中配置使用，如下代码&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;... ...
listen 443 ssl http2; 
server_name www.alair.cn;   
index index.html index.htm default.html default.htm;
root /home/webroot;           
ssl_certificate /etc/letsencrypt/live/www.alair.cn/fullchain.pem;  
ssl_certificate_key /etc/letsencrypt/live/www.alair.cn/privkey.pem; 
ssl_ciphers &amp;quot;EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH&amp;quot;;
ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
ssl_prefer_server_ciphers on;
ssl_session_cache shared:SSL:10m;
... ...
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;注意:&lt;strong&gt;我在第一次签发时候提示无法连接DV服务器，经过排查是由于DNS原因，当时用的DNS服务器是&lt;/strong&gt;Dnspod&lt;/strong&gt;，更换为&lt;strong&gt;dns.he.net&lt;/strong&gt;后正常了。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>使用MD5校验文件</title>
      <link>https://unixetc.com/post/md5sum-usage/</link>
      <pubDate>Sun, 13 Dec 2015 12:13:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/md5sum-usage/</guid>
      <description>&lt;p&gt;md5sum命令用于生成和校验文件的md5值。它会逐位对文件的内容进行校验。是文件的内容，与文件名无关，也就是文件内容相同，其md5值相同。md5值是一个128位的二进制数据，转换成16进制则是32（128/4）位的进制值。&lt;/p&gt;
&lt;p&gt;md5校验，有很小的概率不同的文件生成的md5可能相同。比md5更安全的校验算法还有SHA*系列的。&lt;/p&gt;
&lt;p&gt;在网络传输时，我们校验源文件获得其md5sum，传输完毕后，校验其目标文件，并对比如果源文件和目标文件md5 一致的话，则表示文件传输无异常。否则说明文件在传输过程中未正确传输。&lt;/p&gt;
&lt;h3 id=&#34;md5sum示例&#34;&gt;md5sum示例&lt;/h3&gt;
&lt;h4 id=&#34;生成文件md5&#34;&gt;生成文件md5&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;pi@raspi:~ $ md5sum bs.conf
fcd3e1243d1cd5903d4e38c46671b84f  bs.conf
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;md5sum校验是根据文件内容为准，与名称无关，意思是即便文件名修改了，但md5校验值应该不会改变，如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pi@raspi:~ $ cp bs.conf bs.conf.bak
pi@raspi:~ $ md5sum bs*
fcd3e1243d1cd5903d4e38c46671b84f  bs.conf
fcd3e1243d1cd5903d4e38c46671b84f  bs.conf.bak
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;根据md5校验文件是否更改&#34;&gt;根据md5校验文件是否更改&lt;/h4&gt;
&lt;p&gt;一般网上分享的大文件都会附带一个.md5文件，这就是所分享文件的md5值，可以使用&lt;code&gt;-c&lt;/code&gt;参数来直接使用.md5文件来检验文件是否完整&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pi@raspi:~ $ md5sum bs.conf&amp;gt;bs.conf.md5
pi@raspi:~ $ md5sum -c bs.conf.md5
bs.conf: OK
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;如上例，将bs.conf的md5值定向到一个bs.conf.md5文件，然后使用&lt;code&gt;md5sum -c bs.conf.md5&lt;/code&gt;直接检验相应文件是否完整一致，校验通过的话会输出提示&lt;strong&gt;OK&lt;/strong&gt;，如果文件经过修改，内容已经不一致，则不会通过校验，则会显示&lt;strong&gt;FAILED&lt;/strong&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>使用SCP传输文件</title>
      <link>https://unixetc.com/post/transfer-files-using-scp/</link>
      <pubDate>Tue, 08 Dec 2015 21:38:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/transfer-files-using-scp/</guid>
      <description>&lt;p&gt;&lt;strong&gt;示例：用户名root 地址 2.33.153.67&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;下载文件&#34;&gt;下载文件&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;scp root@2.33.153.67:/root/test.mp4 /home/pi/
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;将服务器上的/root/test.mp4下载到本地/home/pi文件夹&lt;/p&gt;
&lt;h3 id=&#34;上传文件&#34;&gt;上传文件&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;scp /home/pi/ok.txt root@2.33.153.67:/root
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;将本地/home/pi/ok.txt上传至服务器/root文件夹&lt;/p&gt;
&lt;h3 id=&#34;下载文件夹&#34;&gt;下载文件夹&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;scp -r root@2.33.153.67:/root/ebooks /home/pi
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;将服务器上的/root/ebooks文件夹下载至本地/home/pi下&lt;/p&gt;
&lt;h3 id=&#34;上传文件夹&#34;&gt;上传文件夹&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;scp  -r /home/pi/music root@2.33.153.67:/media
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;将本地/home/pi/music文件夹上传至服务器/media下&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>树莓派安装Node.js</title>
      <link>https://unixetc.com/post/raspberry-pi-install-nodejs/</link>
      <pubDate>Thu, 03 Dec 2015 12:32:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/raspberry-pi-install-nodejs/</guid>
      <description>&lt;p&gt;首先查看树莓派cpu信息&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pi@raspi:~ $ cat /proc/cpuinfo
processor       : 0
model name      : ARMv6-compatible processor rev 7 (v6l)
BogoMIPS        : 2.00
Features        : half thumb fastmult vfp edsp java tls
CPU implementer : 0x41
CPU architecture: 7
CPU variant     : 0x0
CPU part        : 0xb76
CPU revision    : 7

Hardware        : BCM2708
Revision        : 000e
Serial          : 000000004a8acb6d
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;看清楚cpu构架，是&lt;strong&gt;ARMv6&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;然后在node.js官网下载对应版本的包，下载地址&lt;a href=&#34;https://nodejs.org/dist/&#34;&gt;https://nodejs.org/dist/&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# wget https://nodejs.org/dist/v4.2.2/node-v4.2.2-linux-arm64.tar.gz
# tar zxf node-v4.2.2-linux-arm64.tar.gz
# mv node-v4.2.2-linux-arm64 /usr/nodejs422
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;方便使用期间，做个链接&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# ln -s /usr/nodejs422/bin/npm /usr/bin/npm
# ln -s /usr/nodejs422/bin/node /usr/bin/node
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;完成后查看版本信息&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# node -v
v4.2.2
# npm -v
2.14.7
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;至此安装完成，官网现在放出arm编译版方便多了，为以前通过源码编译安装的岁月干杯！！！&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Linux下更改时区</title>
      <link>https://unixetc.com/post/change-timezone-in-centos/</link>
      <pubDate>Mon, 30 Nov 2015 11:30:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/change-timezone-in-centos/</guid>
      <description>&lt;p&gt;Linux中时区代码都在&lt;code&gt;/usr/share/zoneinfo/&lt;/code&gt;目录中&lt;/p&gt;
&lt;p&gt;首先删除默认时区&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#rm /etc/localtime
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;设定新的时区&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#ln -s /usr/share/zoneinfo/Asia/Shanghai /etc/localtime
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;完成！&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>打造一台翻墙路由器[转载]</title>
      <link>https://unixetc.com/post/dir-505-openwrt-shadowsocks-chinadns/</link>
      <pubDate>Fri, 20 Nov 2015 11:20:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/dir-505-openwrt-shadowsocks-chinadns/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;本文转载自&lt;a href=&#34;https://github.com/Jerry-hechen/blog&#34;&gt;https://github.com/Jerry-hechen/blog&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;路由器配置方案：Shadowsocks-libev-spec + ChinaDNS&lt;/p&gt;
&lt;p&gt;本教程以Dlink dir-505为例，其他型号路由也类似，Openwrt版本：15.05，其他安装包均为最新版。&lt;/p&gt;
&lt;p&gt;首先路由器型号需要在openwrt列表中：&lt;a href=&#34;http://wiki.openwrt.org/toh/start&#34;&gt;http://wiki.openwrt.org/toh/start&lt;/a&gt;(可以ctrl+F搜索匹配型号)，并记录所用路由器cpu的型号。&lt;/p&gt;
&lt;h3 id=&#34;一下载路由器cpu型号对应的的固件httpsdownloadsopenwrtorg&#34;&gt;一.下载路由器CPU型号对应的的固件：&lt;a href=&#34;https://downloads.openwrt.org/&#34;&gt;https://downloads.openwrt.org/&lt;/a&gt;&lt;/h3&gt;
&lt;h3 id=&#34;二刷机及配置&#34;&gt;二.刷机及配置&lt;/h3&gt;
&lt;p&gt;1.访问路由器上传固件，等待一会儿，勿断电。&lt;/p&gt;
&lt;p&gt;2.好了之后打开wifi开关，连上openwrt（有的固件默认不没有开启WI-FI需要用网线连接），访问192.168.1.1&lt;/p&gt;
&lt;p&gt;3.System－》Administertion，设置路由密码，选中Allow remote hosts to connect to local SSH forwarded ports&lt;/p&gt;
&lt;p&gt;4.Network－》Wifi，WI-FI没有启动先启动，设置Transmit Power为15dBm（31mW），设置Country Code为CN-China&lt;/p&gt;
&lt;p&gt;5.设置下WIFI名称（ESSID）、密码、加密方式（Encryption,推荐使用WPA-PSK/WPA2-PSK）&lt;/p&gt;
&lt;p&gt;6.Network－》Interfaces，修改LAN口，勾掉Bridge interfaces选项，更改网关为192.168.5.1，添加WAN口选择DHCP client选项（如果需要拨号选择PPPoE）,勾上Adapter “eth1”。注意：此处修改LAN口、添加WAN口不要“保存&amp;amp;应用”，先“保存”，在Network－》Interfaces列表整体“保存&amp;amp;应用”&lt;/p&gt;
&lt;p&gt;为了和主路由不冲突最好将网关改为其他，比如192.168.5.1&lt;/p&gt;
&lt;p&gt;刷机成功。&lt;/p&gt;
&lt;h3 id=&#34;三下载安装包并安装到路由器&#34;&gt;三.下载安装包并安装到路由器&lt;/h3&gt;
&lt;h4 id=&#34;1下载安装包&#34;&gt;1.下载安装包&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;Shadowsocks-spec: http://sourceforge.net/projects/openwrt-dist/files/shadowsocks-libev/
chinaDNS: chinaDNS: http://sourceforge.net/projects/openwrt-dist/files/chinadns/
Shadowsocks-spec-LuCI：http://sourceforge.net/projects/openwrt-dist/files/luci-app/shadowsocks-spec/
chinaDNS-LuCI：http://sourceforge.net/projects/openwrt-dist/files/luci-app/chinadns/
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;注意，一定要下载路由器cpu型号对应的文件！DIR-505选择ar71xx&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;2安装到路由器&#34;&gt;2.安装到路由器&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;保证路由器可以上外网&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;用ssh工具上传shadowsocks-libev-spec、ChinaDNS、及2个luci文件 4个ipk包到路由器/tmp目录&lt;/p&gt;
&lt;p&gt;ssh &lt;a href=&#34;mailto:root@192.168.5.1&#34;&gt;root@192.168.5.1&lt;/a&gt;
opkg update&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;安装中文包，然后在路由管理界面System－》System－》Language and Style切换中文语音，刷新可看到中文&lt;/p&gt;
&lt;p&gt;opkg install luci-i18n-base-zh-cn&lt;/p&gt;
&lt;p&gt;cd /tmp&lt;/p&gt;
&lt;p&gt;opkg install shadowsocks-libev-spec-polarssl_2.4.1-1_ar71xx.ipk&lt;/p&gt;
&lt;p&gt;opkg install ChinaDNS_1.3.2-3_ar71xx.ipk&lt;/p&gt;
&lt;p&gt;opkg install luci-app-shadowsocks-spec_1.3.2-1_all.ipk&lt;/p&gt;
&lt;p&gt;opkg install luci-app-chinadns_1.3.4-1_all.ipk&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;期间可能会遇到错误提示,没关系，这时因为安装ipset包后需要重启。&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;3更改配置路由管理界面&#34;&gt;3.更改配置（路由管理界面）&lt;/h4&gt;
&lt;p&gt;网络－》DHCP/DNS&lt;/p&gt;
&lt;p&gt;基本设置里将 本地服务器 更改为 127.0.0.1#5353&lt;/p&gt;
&lt;p&gt;HOSTS和解析文件里 勾选 忽略解析文件和忽略HOSTS文件&lt;/p&gt;
&lt;p&gt;服务－》ChinaDNS里 ChinaDNS上游服务器更改为 114.114.114.114,127.0.0.1:5300 (适合服务器支持UDP转发，较新版本Shadowsocks均支持)&lt;/p&gt;
&lt;p&gt;服务－》ShadowSocks 全局设置中输入S’s账号（先启用，S’s账号需要和服务配置匹配），代理设置中更改代理方式为“忽略列表”&lt;/p&gt;
&lt;h3 id=&#34;四设置自动更新忽略配置文件&#34;&gt;四.设置自动更新忽略配置文件。&lt;/h3&gt;
&lt;p&gt;敌人的策略一直在变化，为了实现智能分流需要设置自动更新忽略配置文件，长时间不更新可能导致部分国内网站走代理或者国外不走代理，如下：&lt;/p&gt;
&lt;p&gt;1.手动建立文件夹, shadowsocks忽略配置用到&lt;/p&gt;
&lt;p&gt;mkdir /etc/shadowsocks&lt;/p&gt;
&lt;p&gt;2.新建 vi /root/update.sh，内容如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#!/bin/sh

ping -c2 www.baidu.com &amp;gt;&amp;gt;/dev/null
if [ $? -eq 0 ];then
    wget -O- &#39;http://ftp.apnic.net/apnic/stats/apnic/delegated-apnic-latest&#39; | awk -F\| &#39;/CN\|ipv4/ { printf(&amp;quot;%s/%d\n&amp;quot;, $4, 32-log($5)/log(2)) }&#39; &amp;gt; /etc/shadowsocks/ignore.list
    wget -O- &#39;http://ftp.apnic.net/apnic/stats/apnic/delegated-apnic-latest&#39; | awk -F\| &#39;/CN\|ipv4/ { printf(&amp;quot;%s/%d\n&amp;quot;, $4, 32-log($5)/log(2)) }&#39; &amp;gt; /etc/chinadns_chnroute.txt
else
        echo &#39;network is down...&#39;
fi
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;3.然后用命令给予该脚本执行权限并执行，正常的话配置文件会成功更新&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;chmod +x /root/update.sh
/root/update.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;4.在路由器，管理界面点击“系统”→“计划任务”中，输入以下内容：&lt;/p&gt;
&lt;p&gt;30 4 * * * /root/update.sh&lt;/p&gt;
&lt;p&gt;保存后，每天的凌晨4点半就会自动执行这个更新脚本了。&lt;/p&gt;
&lt;p&gt;5.重启路由器，系统－》重启&lt;/p&gt;
&lt;p&gt;翻墙成功!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>树莓派安装ffmpeg</title>
      <link>https://unixetc.com/post/raspberry-pi-install-ffmpeg/</link>
      <pubDate>Sat, 07 Nov 2015 21:23:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/raspberry-pi-install-ffmpeg/</guid>
      <description>&lt;p&gt;先安装h264编码器&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#!/bin/bash
cd /usr/src
git clone git://git.videolan.org/x264
cd x264
./configure --host=arm-unknown-linux-gnueabi --enable-static --disable-opencl
make
sudo make install
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;下载源码编译安装ffmpeg&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd /usr/src
git clone git://source.ffmpeg.org/ffmpeg.git
cd ffmpeg
sudo ./configure --arch=armel --target-os=linux --enable-gpl --enable-libx264 --enable-nonfree
make
sudo make install
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;由于树莓派原因，这个过程很长……很长……  建议开&lt;code&gt;screen&lt;/code&gt;，然后Ctrl+a+d&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>linux下将mp3转换为ogg</title>
      <link>https://unixetc.com/post/linux-mp3-converted-to-ogg/</link>
      <pubDate>Wed, 21 Oct 2015 11:21:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/linux-mp3-converted-to-ogg/</guid>
      <description>&lt;p&gt;安装软件&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;apt-get install mpg321 vorbis-tools 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;使用如下命令转换&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mpg321 tweet.mp3 -w raw &amp;amp;&amp;amp; oggenc raw -o tweet.ogg &amp;amp;&amp;amp; rm -rf raw
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;示例:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;root@hkvps:/home/res# mpg321 tweet.mp3 -w raw &amp;amp;&amp;amp; oggenc raw -o tweet.ogg &amp;amp;&amp;amp; rm -rf raw
High Performance MPEG 1.0/2.0/2.5 Audio Player for Layer 1, 2, and 3.
Version 0.3.2-1 (2012/03/25). Written and copyrights by Joe Drew,
now maintained by Nanakos Chrysostomos and others.
Uses code from various people. See &#39;README&#39; for more!
THIS SOFTWARE COMES WITH ABSOLUTELY NO WARRANTY! USE AT YOUR OWN RISK!

Playing MPEG stream from tweet.mp3 ...
MPEG 1.0 layer III, 192 kbit/s, 44100 Hz joint-stereo

[4:45] Decoding of tweet.mp3 finished.
Opening with wav module: WAV file reader
Encoding &amp;quot;raw&amp;quot; to
        &amp;quot;tweet.ogg&amp;quot;
at quality 3.00
        [ 99.7%] [ 0m00s remaining] |

Done encoding file &amp;quot;tweet.ogg&amp;quot;

        File length:  4m 45.0s
        Elapsed time: 0m 16.3s
        Rate:         17.5056
        Average bitrate: 112.1 kb/s

root@hkvps:/home/res# ll&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>科目一过咧</title>
      <link>https://unixetc.com/post/ke-mu-yi-passed/</link>
      <pubDate>Fri, 16 Oct 2015 10:16:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/ke-mu-yi-passed/</guid>
      <description>&lt;p&gt;驾校交钱已经一年了，一直没时间考试，上次报考的科目一由于临时加班没去成，这次重新交钱补考。&lt;/p&gt;
&lt;p&gt;昨儿晚把驾校发的书翻了一遍，然后就是在手机上用车轮考驾照不停的练习。&lt;/p&gt;
&lt;p&gt;今儿中午11点多到考场，换了准考证就等待安排考试。&lt;/p&gt;
&lt;p&gt;分配了个电脑有点挫，第一次登录显示考试时间不对，重新更新信息。&lt;/p&gt;
&lt;p&gt;第二次指纹录入一直不能验证通过，重新更新指纹验证。&lt;/p&gt;
&lt;p&gt;第三次摄像头无法采集视频信息，重置考试系统。&lt;/p&gt;
&lt;p&gt;第四次，一切正常开始答题……&lt;/p&gt;
&lt;p&gt;13分钟答完，等过了15分钟交卷，得分98。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;考试要点：细心别急、细心别急、细心别急！&lt;/strong&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>StartSSL免费证书与Nginx配置</title>
      <link>https://unixetc.com/post/startssl-and-nginx/</link>
      <pubDate>Wed, 14 Oct 2015 12:13:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/startssl-and-nginx/</guid>
      <description>&lt;h3 id=&#34;注册startssl&#34;&gt;注册StartSSL&lt;/h3&gt;
&lt;p&gt;打开&lt;a href=&#34;https://www.startssl.com/&#34;&gt;https://www.startssl.com/&lt;/a&gt;，点击&lt;strong&gt;Sign-up&lt;/strong&gt;开始注册&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/sign-up-startssl.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;参考上图填写注册信息，然后&lt;strong&gt;Continue&lt;/strong&gt;，会有如下提示，系统会发送验证码到你的注册邮箱&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/CR.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;检查注册邮箱，将收到的验证码填写提交，然后会出现如下提示，等待审核。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/Additional_Verification_Required.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;审核通过后，会收到如下提示邮件，点击其中连接，然后输入邮箱中的验证码完成注册&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/StartSSL_Account_Request.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/complete_registration.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;安装证书&#34;&gt;安装证书&lt;/h3&gt;
&lt;p&gt;接下来创建私匙&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/gpk.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;安装证书&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/install_cert.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;安装成功后会有如下提示&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/cif.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/fic.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;验证域名&#34;&gt;验证域名&lt;/h3&gt;
&lt;p&gt;接下来验证域名，点击&lt;strong&gt;Validations Wizard&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/select_Validation.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;填写域名&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/enter_domain_name.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;选择验证邮件地址&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/select_Validation_email.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;按照提示输入邮箱接收到的验证码完成验证。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/complete_Validation_domain.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;创建证书&#34;&gt;创建证书&lt;/h3&gt;
&lt;p&gt;选择&lt;strong&gt;Certificates Wizard&lt;/strong&gt;，证书目标选择&lt;strong&gt;Web Server SSL/TLS Certificate&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/Select_Certificate_Purpose.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;接下来新建私匙&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/Generate_Private_key.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;点击&lt;strong&gt;Skip&lt;/strong&gt;跳过系统建立步骤，我们自己在VPS上建立CSR文件，参考下图通过&lt;code&gt;openssl&lt;/code&gt;命令建立CSR文件&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/create_scr_file.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;注意，为了便于后期安装配置方便，建议密码置空&lt;/p&gt;
&lt;p&gt;完成后，&lt;code&gt;cat&lt;/code&gt;出建立好的&lt;strong&gt;ciuxsss.csr&lt;/strong&gt;内容，粘贴提交&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/Submit_Certificate_Request.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/Certificate_Request_Received.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;接下来添加域名&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/add_domains.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/add_sub_domain.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/Ready_Processing_Certificate.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;接下来将文本框中的内容保存为一个**.crt**文件&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/Save_Certificate.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;配置nginx&#34;&gt;配置Nginx&lt;/h3&gt;
&lt;p&gt;贴出我的配置文件，大家参考一下&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;server {
    listen 80;
    location /{
    return 301 https://$host$request_uri;
    }
}

server
    {
        listen 443;
        #listen 80;
        #listen [::]:80;
        server_name ciux.org;
        index index.html index.htm index.php default.html default.htm default.php;
        root  /home/ciux/compiled;

ssl    on;
ssl_certificate    /home/bk/ssl/ciuxsss.crt;
ssl_certificate_key     /home/bk/ssl/ciuxsss.key;
ssl_session_timeout 5m;

ssl_protocols SSLv2 SSLv3 TLSv1;
ssl_ciphers ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP;
ssl_prefer_server_ciphers   on;

……
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;其中第一个Server是将所有80端口的http访问301重定向到443端口的https访问。&lt;/p&gt;
&lt;p&gt;如果发现浏览器提示证书不被信任，那就需要合并Startssl的根证书&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;wget http://cert.startssl.com/certs/sub.class1.server.ca.pem  
cat sub.class1.server.ca.pem &amp;gt;&amp;gt; ciuxsss.crt&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Gandi免费SSL证书使用方法</title>
      <link>https://unixetc.com/post/gandi-free-ssl-certificate-usage/</link>
      <pubDate>Thu, 24 Sep 2015 19:23:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/gandi-free-ssl-certificate-usage/</guid>
      <description>&lt;p&gt;首先澄清此文中的&lt;strong&gt;免费&lt;/strong&gt;不是真的免费，而是新注册或转移域名到Gandi，都可以获得标准版SSL证书一年的免费使用。&lt;/p&gt;
&lt;p&gt;符合以上条件的话，可以进行下面操作了！&lt;/p&gt;
&lt;p&gt;在Gandi上购买SSL证书，选择标准版，在结算的时候系统会自动判断是否免单，正常情况下会0元结单，完成后接着配置SSL证书。&lt;/p&gt;
&lt;p&gt;首先提交CSR，这里需要自己生产CSR。&lt;/p&gt;
&lt;p&gt;在此以&lt;strong&gt;3c.lc&lt;/strong&gt;域名为例，在Ubuntu中操作。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;openssl req -nodes -newkey rsa:2048 -sha1 -keyout 3clc.key -out 3clc.csr
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后根据提示填写以下内容：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Country Name (2 letter code) [AU]:                          #国家代码，中国为CN&lt;/p&gt;
&lt;p&gt;State or Province Name (full name) [Some-State]:            #省份&lt;/p&gt;
&lt;p&gt;Locality Name (eg, city) []:                                #城市&lt;/p&gt;
&lt;p&gt;Organization Name (eg, company) [Internet Widgits Pty Ltd]: #组织名&lt;/p&gt;
&lt;p&gt;Organizational Unit Name (eg, section) []:                  #部门名&lt;/p&gt;
&lt;p&gt;Common Name (e.g. server FQDN or YOUR name) []:3c.lc        #注意，这里需要填写你的域名。&lt;/p&gt;
&lt;p&gt;Email Address []:2b@3c.lc                                   #邮箱&lt;/p&gt;
&lt;p&gt;Please enter the following &amp;lsquo;extra&amp;rsquo; attributes&lt;/p&gt;
&lt;p&gt;to be sent with your certificate request&lt;/p&gt;
&lt;p&gt;A challenge password []:                                    #注意，为了后面方便配置nginx，建议密码置空。&lt;/p&gt;
&lt;p&gt;An optional company name []:                                #扩展组织名&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;完成后，就会生成&lt;strong&gt;3clc.key&lt;/strong&gt;和&lt;strong&gt;3clc.csr&lt;/strong&gt;两个文件。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cat 3clc.csr
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;将显示的文件内容粘贴到Gandi提交。&lt;/p&gt;
&lt;p&gt;接下来验证域名所有者权限，有三种方法，建议使用email验证，比较方便。&lt;/p&gt;
&lt;p&gt;下来是凭证验证，这个得等待系统完成,完成后即可获得SSL证书一枚。&lt;/p&gt;
&lt;p&gt;至于如何在&lt;strong&gt;Nginx&lt;/strong&gt;中使用SSL，可参考&lt;a href=&#34;https://unixetc.com/post/Nginx-configuration-SSL-certificate/&#34;&gt;Nginx配置SSL证书&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>墙、感染、信任和欺骗</title>
      <link>https://unixetc.com/post/gfw-infection-trust-and-deception/</link>
      <pubDate>Mon, 21 Sep 2015 23:31:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/gfw-infection-trust-and-deception/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;声明:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;本文来自霍炬的微信公共帐号“歪理邪说”，用微信添加 wxieshuo 公众号，即可订阅。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;先跟读者道个歉，最近一段时间有点忙，好久没更新。而写文章这事，一旦有一段时间不写就会越来越写不下去。很长一段时间我甚至不敢打开公众帐号后台，一怕被催稿，二怕看到惨烈的退订数字以至于更不敢写…非常感谢各位还没退订的读者，我未来一定争取保持一个合理的更新频率。&lt;/p&gt;
&lt;p&gt;最近XcodeGhost导致的严重安全问题，相信大家已经从各个渠道知道了。简单概括一下，有人在中国网盘和论坛上传播了一个修改过的Xcode，这个版本的Xcode会在编译出来的App上面加一些可以被远程控制的代码，并且发送数据到某个服务器上。这是iOS出现以来，未越狱系统遭遇的最大安全威胁，在此之前苹果的Sandbox模式几乎没遇到过挑战，iPhone用户甚至大量iOS开发者都认为系统固若金汤，不可能遇到问题。&lt;/p&gt;
&lt;p&gt;在XcodeGhost开始被媒体报道的时，很多人大大低估了它的风险。我在乌云报道这个问题的当天，在朋友圈上建议大家先把中招的app都删掉，并且立刻修改iCloud密码，开两步验证。甚至遭到了不少人反对，还有好几位iOS开发者告诉我这件事没什么大问题，因为iOS有Sandbox，不会造成什么伤害。当时网易也发了一个关于云音乐被感染的说明，也是类似不痛不痒的口气。这些说法当然都是大错特错的，会有这种想法，是因为只会站在程序员角度看问题，如果对安全问题稍微有一点敏感性，就会立刻意识到这是极严重的威胁，稍微发挥一些想象力就会被吓着。&lt;/p&gt;
&lt;p&gt;所谓安全威胁，大部分都是在获取到非常有限资源的情况下，利用社会工程学（俗称：骗）来达到目的。比如，你觉得让别人看到你的通讯录有什么问题吗？很多人会认为虽然不舒服，但不会有什么威胁。实际上，骗子会从通讯录里面挑出来你父母的电话，打电话去骗他们。所以，这和iOS有没有sandbox，能不能保护系统安全没关系，只要我获得了一个机会，能控制你信任的app上弹出对话框，我就可以利用这个对话框来骗你输入系统的重要密码。程序员应该想象力再丰富一点，不要把目光局限于“系统给了我什么权限”，而是要扩展到“如果我被完全信任了，我能进行什么样的欺骗”。&lt;/p&gt;
&lt;p&gt;我不打算在这里讲太多直接的安全问题，毕竟已经很多人分析过了，在好几篇非常不完善，极大低估这次事件威胁的分析文章之后，腾讯给出了一篇相当详细的分析，比较符合我的观点，也把问题的严重性说的非常清楚。在腾讯的分析里面，说可以利用OpenUrl来操作用户拨打电话，同样又有iOS开发者说“OpenUrl不能控制iPhone打电话”。事实上，OpenUrl可以弹出一个带有固定电话号码的弹窗，上面有“拨打”和“取消”两个按钮，这确实不算直接拨打了电话，但如果给一千万个用户在某个特定环境下弹出一个这样的窗口，其中有多大比例的人会去点“拨打”呢？如果程序员不去提高想象力，总把安全问题和功能局限在系统文档提供的“能做什么”这个范围内，软件的安全性实在让人难以信任。&lt;/p&gt;
&lt;p&gt;具体的安全问题有更专业的人去普及，本文不多说，在这里我更想谈谈关于信任的问题。在这次事件中，也有一些人想起了Ken Thompson大神（Unix系统/C语言的前身B语言/Go语言的直接贡献者，称作Unix之父也不过分）在1984年的一次演讲，在那次演讲中中，Ken讲了他在70年代在贝尔实验室捉弄同事的一次恶作剧，在那段时间里面，实验室里面所有的Unix系统，Ken都可以随便以最高权限登录，而同事反复检查用户，权限，甚至是当时使用的Unix代码，都没查不到后门，百思不得其解。14年之后，Ken在这次演讲里面才公开，后门其实隐藏在他写的编译器中，当用编译器编译Unix系统的时候，后门就被放在了编译出来的系统里面，但Unix本身的代码是干净的，所以同事无论如何也查不到问题。Ken的演讲所提到的核心问题并不是如何入侵一个操作系统，而是信任。其标题“Reflections on Trusting Trust” （我翻译为&amp;quot;深入思考我们信任的可信&amp;rdquo;，以下简称RoTT）开宗名义，明确强调这一点。&lt;/p&gt;
&lt;p&gt;在80年代曾经有很多人用这样的办法给开发工具加各种外壳和后门，但当时联网条件并不好，很难产生大规模影响。很多案例是发生在相对封闭的企业内网和教育网中，Ken捉弄同事的原始案例也可以看作是企业内网上的传播。可以说，RoTT能产生的影响一直被人们低估，因为在现实世界想要具备适合它的条件，实在是太难了。历史上，虽然有很多底层代码Bug导致的安全事件（比如之前的OpenSSL心脏出血漏洞，可以参考我的另外一篇文章，点阅读原文可见），但直接通过这种在基础工具上制造的后门，从而衍生的大规模安全事件，从来没有真正发生过。这种手法一般是用在有限范围的网络上，比如在早年的教育网上或者企业网络里面，那时候在内网上传递一个被下了毒的软件，很容易传播开。&lt;/p&gt;
&lt;p&gt;在互联网上，如果要重现Ken的案例，首先需要找到一个可信的源头感染，这本身就已经是极其困难的事了。用这次的事件做例子的话，在正常情况下，用户是通过Mac App Store来下载Xcode的，在下载安装的过程中，OS X本身会替用户进行加密签名校验，保证下载的东西确实是苹果原始分发的软件，这样才能被安装到用户的机器上。如果想把在Xcode中嵌入一个后门，你得先找到Apple服务器的漏洞，才能有机会把自己改过的包上传上去，而且还要弄到苹果的私钥去进行签名，才能装到用户计算机上。但如果同时具备了这两个条件，已经是荣华富贵唾手可得，有的是更可靠，获利更大的做法，谁又肯去舍近求远感染一个Xcode呢？&lt;/p&gt;
&lt;p&gt;所以，只有在相对封闭的网络环境下，才有可能玩这个把戏。80年代，网络远远没有今天发达，人们更多的下载和网络活动是分布在各大机构自己的网络里面的，比如大型企业的内部网络，相对于互联网，这些内部网络网络速度会快的多，人们通常更倾向于从内部网络获得软件。这就给了入侵者（通常是商业间谍）通过替换内容软件来侵入公司内部的机会。但内网又造成了另外一个问题，在封闭网络下，入侵者获得的数据也没这么容易拿走，必须还要回到内网才有机会拿到之前的战果。这些特性造成了这种做法始终在小范围内有效，在公众网络上性价比不高。&lt;/p&gt;
&lt;p&gt;这次XcodeGhost事件会给很多人启发，中国目前的网络环境类似于80年代的企业内网，但规模又比当年的内网大的多，而且不像那么难以进入。 于是，一些80年代流行但没造成大规模影响的办法，有机会可以在中国环境下重新应用了，并且造成巨大影响。以前的创业是Copy to China，现在同样可以复制30年前的安全问题。&lt;/p&gt;
&lt;p&gt;Ken的演讲最后指出，你没办法信任那些不是自己写的代码。80年代达到这个目标尚且有可能，那时候的软件规模还很小。而今天，任何工作都需要建立在大量的现成软件基础之上，换句话说，你必须去信任其他人，才有可能制作出产品。如今的可信任环境就变得更加重要。&lt;/p&gt;
&lt;p&gt;但在中国，因为GFW和相关政策的存在，要获得一个可信环境变得非常困难。在这个环境里面，大量国外网站不能访问或者难于访问，非常多怕麻烦的人会使用国内替代品，这次的事件之所以影响巨大，就是因为通过苹果官方渠道升级Xcode速度太慢，少则10多个小时，多则几十个小时，其间还有可能中断和重新下载。从国内随便下载一个Xcode用当然是错的，但在这样的环境下也不是完全不能理解，考虑一下互联网的下载速度只有50K，企业内网速度能高达10M的时候，谁会不从内网下载呢？&lt;/p&gt;
&lt;p&gt;用一个现实世界的例子做个比喻吧，前面说了骗子拿到你父母的电话之后，会打电话去骗他们，比如跟你父母说你出了车祸，急需用钱。要让这个骗术成功，一个前提条件是要阻止你父母去找你验证真假，所以骗子同时会用各种办法来骚扰你的电话，迫使你不堪其扰关机或者始终占线。这样你父母和你的联系就断开了，他们没法找你验证了，此时骗子的话就更容易被相信。在这次事件里面，GFW让人们无法访问国外的可信网站，或者访问速度极慢，它起的作用就如同迫使你占线或者关机，从而让人们只能从不可信的地方获取软件。&lt;/p&gt;
&lt;p&gt;GFW让中国本来开放的互联网环境，变成了一个巨大的企业内网，或者叫做中国局域网。除了速度和难以访问的影响，各种各样的DNS投毒，电信运营商干扰也是严重问题，你拿回来的DNS结果往往也未必是可信的，而运营商试图在HTTP请求中插入广告的行为，又经常会导致正常的应用表现不正常，而这些乱七八糟的毛病还经常变化，今天你可以这样对付，下周可能就需要换一个办法。要维持一个可信的软件环境，需要付出巨大的精力，能愿意付出这个代价的人越来越少。&lt;/p&gt;
&lt;p&gt;在这个环境中，我们能信任的什么呢？网络链接不可信，运营商不可信，DNS不可信，大企业不可信。最后这一点更荒唐，如果是在正常的网络环境下，你很难相信苹果或者Google会坑害自己的用户，因为这和他们的利益直接相关，他们总是要尽量保护自己的用户。但在中国，如果你敢信任百度，基本意味着你生活各方面都会出问题，用百度查个搬家公司，骗死你没商量，用百度查个快递电话，骗死你也没商量，用百度查个医院，你猜会怎么样？那是真要骗死你没商量，这里的骗死都不再是比喻了。你要信任百度的软件，更好玩了，它莫名其妙就给你把百度出的所有软件都装在你机器上了，人们管这个不请自来的大礼叫做百度全家桶。如此致力于坑害自己用户的大公司，在中国之外还真是罕见。&lt;/p&gt;
&lt;p&gt;在中国的网络环境下，这次事件产生的危害本身也更加危险。事件发生时，我告诉朋友们立刻删除所有被感染的软件，直至问题被修复。有人说，黑客自己的网站已经关闭了，没什么危险。这么说当然是错的，因为遍布中国各处的DNS投毒和劫持，创造一个一样域名的网站再简单不过了。比如到游客聚集的区域，带一个路由器，创建一个没有密码的WIFI热点，等着人们连上来，在这个热点上劫持XcodeGhost使用的域名，就可以利用已经中毒的app来骗iCloud密码了。这些都是非常容易实现的办法，千万不要低估安全问题能造成的后果，尤其是在中国特殊的网络环境下。&lt;/p&gt;
&lt;p&gt;目前中国的网络环境和食品安全有诸多共同之处，你没法信任路边的小饭馆，但同时你也没法信任昂贵的大饭馆。你没法信任菜市场买的肉，但超市买的肉也并不那么可靠。在一切的背后是土壤和水的全面污染，可能一家好的饭馆未必打算毒害自己的顾客，但他们也很难保证自己原材料的供货商可靠，要保证使用的所有材料可靠，这是一家饭馆不可能具备的能力。比如，奶粉的三聚氰胺事件之前，一家有追求的饭馆大概会觉得，我不用来路不明的奶粉，我用大品牌的三鹿，伊利，这算是对顾客负责了吧？可惜，这些大品牌一样出问题。这绝非饭馆所希望的，他们也是受害者，就像是这次事件中的网易云音乐，他们确实没打算坑自己的用户，不过网易、腾讯这样的大公司一样中招了。&lt;/p&gt;
&lt;p&gt;相对封闭的iOS尚且如此（单一开发工具，单一软件分发渠道，独家封闭系统iOS，独家硬件iPhone）尚且能出这么大问题，想想Android会怎么样？Android官方网站几年前就被封了无法访问，大部分开发者都是从国内渠道下载的开发工具。App的安全可靠吗？国内无数家忙着改Android皮肤就称自己是“操作系统”厂商，他们能保证自己的定制Android版本是安全吗？他们有真正的操作系统厂商级别的能力吗？进一步，他们能保证自己使用的开发工具安全吗？每家手机厂商都恨不得做自己的Android app下载渠道，他们能保证这些渠道上分发的app安全吗？甚至，他们能保证自己的下载市场安全吗？请大家继续联想吧。有朋友跟我说，你想多了，Android哪需要这么麻烦啊，本来国内环境就是木马遍地了。真实情况恐怕只能用惨烈来形容。顺便说一声，传说Google要把Play Store进入中国，提供一个受审查的版本，很多人说这是Google妥协了，我看这根本不是妥协了，是中国内部的Android环境太糟糕，已经威胁全球生态了，Google不得不自己出手解决这个问题。所以，一旦Google Play真的进了中国，请大家记得立刻把Play Store做为自己唯一的Android软件下载渠道，哪怕它不好用，不中国国情，甚至显得有点傻里傻气…千万记得，安全比方便更重要。&lt;/p&gt;
&lt;p&gt;在这些前提下，重新认真考虑Ken的演讲提到的观点就显得更加重要，深入思考我们信任的可信。到底什么是可信的呢？开发工具可信吗？操作系统可信吗？你觉得下载来之后验证一下md5或者sha512总应该可信了，但你用来计算sha的工具是哪下载来的？你又如何知道这个工具本身是可信呢？在一个封闭的，难以和真正源头沟通的环境下，根本没办法谈所谓的信任。&lt;/p&gt;
&lt;p&gt;在中国目前的环境下，难以直接套用成熟的软件开发和管理流程，除非保证团队所有人都必须翻墙，必须用Google查资料，必须不信任国内网站。你的团队中有一个习惯用百度查资料，顺着国内论坛的链接从百度网盘或者迅雷下载工具的人，就不知道会惹出来多大麻烦。这次事件充分证明了这一点，我起初认为腾讯应该不会有问题，因为我知道腾讯内部有极好的网络环境，但最终不幸的是微信也中招了。我们的恶劣环境已经改变了工程师的习惯，甚至改变了教育，就算是在腾讯内部这么好的网络环境下，仍然有人会去百度查资料，用百度网盘下载开发工具。就像很多留学生到了美国仍然用百度搜索一样，环境的改变并不能直接逆转已经完成的用户习惯。&lt;/p&gt;
&lt;p&gt;比较讽刺的是，在中国特色的现实世界反而又制约了出现大规模安全灾难的可能性。比如，中国有相当严重的网络监控、审查和实名制、以及互联网公司必须保存（而且要向有关部门开放）的各种用户数据，并且互联网和世界半隔绝，在出现这种问题的时候，要抓到始作俑者又相对简单。现实世界中，只要在论坛发个贴，去你家查水表就是分分钟的事情。这大概算是“不幸+不幸“互相抵消之后产生了一点点微小的幸运吧。&lt;/p&gt;
&lt;p&gt;很多年前，我说招聘工程师有几个原则，比如，必须使用Google而不是百度，必须翻墙而不是用国内替代品，必须优先使用国外的工具。经常有人认为这种要求过于苛刻，甚至认为是装逼。这次事件告诉了我们，这些良好的习惯确实是工程师的第一道防线，融入世界主流，可以让你少遭遇很多中国特色的麻烦。虽然保持这些良好的习惯需要付出不小的代价，但事实证明这些代价是值得的。&lt;/p&gt;
&lt;p&gt;这样的网络环境，是我们这一代工程师的耻辱，但我们如此愤怒于此 ，又如此无能为力，这是这个时代最令人悲哀的事情。&lt;/p&gt;
&lt;p&gt;我们对此有多么无能为力呢？我写这篇文章的时候就在想，大家应该赶快传播它，因为我觉得它很快会被删掉。这就是无能为力的具体表现。&lt;/p&gt;
&lt;p&gt;顺便说一句，1996年，受Ken的案例启发，我写过一篇科幻小说，大意是一种病毒把编译器做为感染的源头，最终感染了操作系统。在这个操作系统上，它会判断用户指令对它是否会造成伤害，如果是有害的指令，就假装执行一下，实际并不真执行，从而可以躲过杀毒软件和人工清除。这同样是信任问题，在这个环境下，没有任何可信的东西，这种病毒将会在操作系统中永存，并且把自己附着于任何在这台计算机上制造的软件中。在一个计算机一开机就无线联网的时代，病毒可以借此高速传播，最后人类已经找不到一台干净的计算机可以去编写真正干净的操作系统了。（90年代还没有无线网络，那时候甚至连有线网络都没普及，Sun还在号称网络就是计算机，那时候一台随时联网的计算机简直太奢侈了，但如今看来…世界确实已经发展到了这样，想找一台不联网的计算机倒是不容易了）。&lt;/p&gt;
&lt;p&gt;不知道这种幻想中的病毒什么时候会真正出现…其实，前几年工信部推行绿坝的时候，我当时就觉得那简直是创造这种病毒的一个非常好的机会，还好最终绿坝计划被放弃了。中国网络和政策环境的特殊性，将来真的有可能制造出适合这种病毒生存的环境，就像这次因为GFW的正面和潜在影响，让70年代Ken设想的RoTT在2015年大规模流行，40多年的时间跨度…著名科幻作家韩松说过：“中国的现实变得比科幻还要科幻”。深以为然。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>树莓派开启root登录</title>
      <link>https://unixetc.com/post/raspberry-pi-allow-root-login/</link>
      <pubDate>Fri, 18 Sep 2015 21:28:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/raspberry-pi-allow-root-login/</guid>
      <description>&lt;p&gt;想要通过ssh登录树莓派进行管理，使用默认的&lt;strong&gt;pi&lt;/strong&gt;用户有时真的不便，对于linux老手来说，可以直接开启&lt;strong&gt;root&lt;/strong&gt;用户ssh登录，这就方便多了，方法如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo passwd root
sudo passwd --unlock root
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;设置SSH&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo vi /etc/ssh/sshd_config
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;将其中的&lt;code&gt;PermitRootLogin without-password&lt;/code&gt;改为&lt;code&gt;PermitRootLogin yes&lt;/code&gt;，然后重启ssh服务&lt;code&gt;sudo service ssh restart&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Over!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>使用Photoshop压缩PNG图片</title>
      <link>https://unixetc.com/post/photoshop-compressed-png-images/</link>
      <pubDate>Sun, 13 Sep 2015 12:38:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/photoshop-compressed-png-images/</guid>
      <description>&lt;p&gt;&lt;!-- raw HTML omitted --&gt;Ctrl+O&lt;!-- raw HTML omitted --&gt; 打开PNG文件&lt;/p&gt;
&lt;p&gt;图像 -&amp;gt; 调整 -&amp;gt; 色调分离&lt;/p&gt;
&lt;p&gt;调整&lt;strong&gt;色阶&lt;/strong&gt;值，边调整边预览，找到图片质量变化最小时候的值&lt;/p&gt;
&lt;p&gt;文件 -&amp;gt; 导出 -&amp;gt; 存储为Web所用格式&lt;/p&gt;
&lt;p&gt;文件格式选择&lt;strong&gt;PNG-8&lt;/strong&gt;，参考下图全选部分进行调整，完成后保存即可。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/output_png_images.png&#34; alt=&#34;导出设置&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>使用ScrollUp添加返回顶部功能</title>
      <link>https://unixetc.com/post/use-scrollup-to-add-scroll-to-top-feature/</link>
      <pubDate>Tue, 08 Sep 2015 19:28:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/use-scrollup-to-add-scroll-to-top-feature/</guid>
      <description>&lt;p&gt;下载ScrollUp &lt;a href=&#34;https://github.com/markgoodyear/scrollup&#34;&gt;https://github.com/markgoodyear/scrollup&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在网页中引用&lt;code&gt;jquery.scrollUp.js&lt;/code&gt;、&lt;code&gt;jquery.easing.js&lt;/code&gt;、&lt;code&gt;jquery.min.js&lt;/code&gt;三个JavaScript脚本，注意顺序&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;script src=&amp;quot;jquery.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&amp;quot;jquery.easing.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script src=&amp;quot;jquery.scrollUp.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后加入控制代码&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;script&amp;gt;
$(function () {
    $.scrollUp();
});
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;以上是最简单的使用方法，还有一种带参数的方法&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$(function () {
    $.scrollUp({
        scrollName: &#39;scrollUp&#39;,      // Element ID
        scrollDistance: 300,         // Distance from top/bottom before showing element (px)
        scrollFrom: &#39;top&#39;,           // &#39;top&#39; or &#39;bottom&#39;
        scrollSpeed: 300,            // Speed back to top (ms)
        easingType: &#39;linear&#39;,        // Scroll to top easing (see http://easings.net/)
        animation: &#39;fade&#39;,           // Fade, slide, none
        animationSpeed: 200,         // Animation speed (ms)
        scrollTrigger: false,        // Set a custom triggering element. Can be an HTML string or jQuery object
        scrollTarget: false,         // Set a custom target element for scrolling to. Can be element or number
        scrollText: &#39;Scroll to top&#39;, // Text for element, can contain HTML
        scroll
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;title: false,          // Set a custom &lt;!-- raw HTML omitted --&gt; title if required.
scrollImg: false,            // Set true to use image
activeOverlay: false,        // Set CSS color to display scrollUp active point, e.g &amp;lsquo;#00FFFF&amp;rsquo;
zIndex: 2147483647           // Z-Index for the overlay
});
});&lt;/p&gt;
&lt;p&gt;其中&lt;code&gt;easingType&lt;/code&gt;为&lt;strong&gt;运动类型&lt;/strong&gt;，可参考&lt;a href=&#34;http://easings.net/&#34;&gt;http://easings.net/&lt;/a&gt;说明选用。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Linux下使用grive管理Google Drive</title>
      <link>https://unixetc.com/post/linux-use-grive-management-google-drive/</link>
      <pubDate>Wed, 26 Aug 2015 18:23:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/linux-use-grive-management-google-drive/</guid>
      <description>&lt;p&gt;找到一个linux下可用的google drive客户端，纯cli操作，值得推荐&lt;/p&gt;
&lt;p&gt;grive项目主页 &lt;a href=&#34;https://github.com/Grive/grive&#34;&gt;https://github.com/Grive/grive&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Ubuntu中下通过PPA安装grive&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo add-apt-repository ppa:nilarimogard/webupd8 
sudo apt-get update
sudo apt-get install grive
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;使用grive同步Google Drive&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mkdir googledrive
cd googledrive
grive -a
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;第一次运行，会有验证提示，将提示的url代码粘贴到浏览器中验证帐户，完了后将生成的验证代码粘贴到grive进行验证。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>无法使用add-apt-repository命令</title>
      <link>https://unixetc.com/post/can-not-use-add-apt-repository/</link>
      <pubDate>Sun, 23 Aug 2015 08:23:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/can-not-use-add-apt-repository/</guid>
      <description>&lt;p&gt;在Ubuntu中使用&lt;strong&gt;PPA&lt;/strong&gt;安装软件时，需要用到&lt;code&gt;add-apt-repository&lt;/code&gt;命令，但有的&lt;strong&gt;VPS&lt;/strong&gt;系统因为体量原因，可能没有该命令，因此需要通过以下方法来安装：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;apt-get install python-software-properties 
apt-get install software-properties-common&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>树莓派安装配置minidlna</title>
      <link>https://unixetc.com/post/raspberry-pi-install-minidlna-to-create-digital-media-server/</link>
      <pubDate>Thu, 06 Aug 2015 18:26:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/raspberry-pi-install-minidlna-to-create-digital-media-server/</guid>
      <description>&lt;h3 id=&#34;树莓派挂载移动存储&#34;&gt;树莓派挂载移动存储&lt;/h3&gt;
&lt;p&gt;可以挂载移动硬盘或者大容量的U盘，参考以下文章：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://unixetc.com/post/raspberry-pi-mount-udisk-as-the-storage-partition/&#34;&gt;树莓派挂载U盘作为存储分区&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://unixetc.com/post/examples-of-fdisk-partition/&#34;&gt;fdisk分区实例&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;安装配置minidlna&#34;&gt;安装配置minidlna&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;#sudo apt-get install -y minidlna
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;编辑minidlna配置文件&lt;code&gt;/etc/minidlna.conf&lt;/code&gt;，内容如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;media_dir=/home/pi/dlnadoc  #媒体文件目录
db_dir=/var/lib/minidlna    #minidlna通过SQLite来建立媒体库索引，因此需要定义数据库目录
listening_ip=192.168.1.111  #树莓派IP
port=8200					#web端口，可以通过ip:port查看索引状态
friendly_name=Raspi_DLNA    #服务器命名
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;重启&lt;code&gt;minidlna&lt;/code&gt;服务&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo service minidlna restart
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;强制刷新&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo service minidlna force-reload
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;查看索引状态,浏览http://192.168.1.111:8200&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;MiniDLNA status
Audio files: 0
Video files: 2
Image files: 0
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;dlna客户端&#34;&gt;DLNA客户端&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;PC&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Windows7下将网络设置为&lt;strong&gt;家庭网络&lt;/strong&gt;，完成后刷新，在&lt;strong&gt;网络&lt;/strong&gt;中&lt;strong&gt;媒体设备&lt;/strong&gt;下就可以自动发现&lt;strong&gt;Rasp_DLNA&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;点击进去就可以使用MediaPlayer来浏览。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Android&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;VPlayer+ VPlayer uPnP DLNA Plugin&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;IOS&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;RushPlayer&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>树莓派使用DietPi</title>
      <link>https://unixetc.com/post/raspberry-pi-use-dietpi/</link>
      <pubDate>Tue, 04 Aug 2015 18:23:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/raspberry-pi-use-dietpi/</guid>
      <description>&lt;h3 id=&#34;下载安装dietpi&#34;&gt;下载安装DietPi&lt;/h3&gt;
&lt;p&gt;DietPi项目主页 &lt;a href=&#34;http://dietpi.com/&#34;&gt;http://dietpi.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;DietPi下载地址 &lt;a href=&#34;http://fuzon.co.uk/downloads/DietPi.7z&#34;&gt;http://fuzon.co.uk/downloads/DietPi.7z&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这个压缩包91MB，解压后的img文件522MB,比官方的小多了。&lt;/p&gt;
&lt;p&gt;然后将镜像写入到SD卡中，linux下使用&lt;code&gt;dd&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;dd if=DietPi_v74.img of=/dev/sdc bs=2M
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Windows下使用&lt;strong&gt;Win32 Disk Imager&lt;/strong&gt;，&lt;a href=&#34;http://sourceforge.net/projects/win32diskimager/&#34;&gt;戳这里&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;写入完成后将SD卡插入树莓派，加电启动。&lt;/p&gt;
&lt;h3 id=&#34;预设置wifi链接&#34;&gt;预设置Wifi链接&lt;/h3&gt;
&lt;p&gt;首次使用时，可以通过编辑&lt;strong&gt;dietpi.txt&lt;/strong&gt;来进行wifi预设置。&lt;/p&gt;
&lt;p&gt;将TF卡插入电脑读卡器，打开对应的磁盘，找到&lt;strong&gt;dietpi.txt&lt;/strong&gt;文件，打开。&lt;/p&gt;
&lt;p&gt;找到&lt;code&gt;Wifi_Enabled=0&lt;/code&gt;，将其设置为&lt;strong&gt;1&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;然后找到&lt;code&gt;Wifi_SSID&lt;/code&gt;和&lt;code&gt;Wifi_KEY&lt;/code&gt;分别设置wifi节点名和密码，保存即可。&lt;/p&gt;
&lt;h3 id=&#34;配置dietpi&#34;&gt;配置DietPi&lt;/h3&gt;
&lt;p&gt;DietPi默认用户名密码为&lt;code&gt;root dietpi&lt;/code&gt;，第一次启动DietPi提示检测升级，按提示操作。&lt;/p&gt;
&lt;p&gt;不过由于天朝网路问题，可能升级比较缓慢，建议&lt;strong&gt;Ctrl+c&lt;/strong&gt;终止升级，修改&lt;code&gt;sources.list&lt;/code&gt;为朝内镜像。&lt;/p&gt;
&lt;p&gt;DietPi默认没有&lt;code&gt;vi&lt;/code&gt;,使用&lt;code&gt;nano&lt;/code&gt;进行编辑，添加Aliyun源。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;deb http://mirrors.aliyun.com/raspbian/raspbian/ wheezy main non-free contrib
deb-src http://mirrors.aliyun.com/raspbian/raspbian/ wheezy main non-free contrib
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;更新软件&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;apt-get update&amp;amp;&amp;amp;apt-get upgrade -y
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后运行&lt;code&gt;dietpi-config&lt;/code&gt;进行配置。&lt;/p&gt;
&lt;p&gt;DietPi - Config&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;           ┌────┤ ---------- DietPi-Config ---------- ├─────┐
           │  Hardware : Raspberry Pi 1 (512MB)             │
           │                                                │
           │           1 Display Options                    │
           │           2 Audio Options                      │
           │           3 Performance Options                │
           │           4 Advanced Options                   │
           │           5 Language/Regional Options          │
           │           6 Security Options                   │
           │           7 Networking Options                 │
           │           8 AutoBoot Options                   │
           │           9 Tools                              │
           │                                                │
           │                                                │
           │           &amp;lt;Ok&amp;gt;               &amp;lt;Exit&amp;gt;            │
           │                                                │
           └────────────────────────────────────────────────┘
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;推荐配置：&lt;/p&gt;
&lt;p&gt;Display Options -&amp;gt; GPU/RAM Memory Split ，不适用桌面系统的话，建议选择&lt;code&gt;Server&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Performance Options -&amp;gt; Change Overclocking Profile ，设置超频选项&lt;/p&gt;
&lt;p&gt;Language/Regional Options-&amp;gt;  Locale/Timezone ，设置语言与时区，建议将&lt;strong&gt;zh_CN&lt;/strong&gt;的四个语言全部勾选。时区选择Asia/Chongqing。&lt;/p&gt;
&lt;p&gt;Security Options -&amp;gt; Change Root Password/Change Hostname ，修改密码和主机名&lt;/p&gt;
&lt;p&gt;Networking Options中干货比较多，大家自行设置&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;┌──────────────────┤ --- DietPi - Network Options --- ├───────────────────┐
│                                                                         │
│  Ethernet     : Not Found | Enabled | Disconnected                      │
│  Wifi         : Not Found | Disabled | Disconnected                     │
│  Internet     : Please run Internet Test                                │
│  Samba client : Not Installed                                           │
│  FTP client   : Not Installed                                           │
│  NoIp status  : Not Installed                                           │
│                                                                         │
│        Ethernet     Change Wired Network Settings                       │
│        Wifi         Change Wireless Network Settings                    │
│        Test         Run the Internet Connection Test                    │
│        Samba Client Install now to access Windows shares                │
│        Ftp Client   Install now to access FTP as filesystem mount       │
│        NoIp         Install No-Ip now                                   │
│                                                                         │
│                                                                         │
│                   &amp;lt;Ok&amp;gt;                       &amp;lt;Back&amp;gt;                     │
│                                                                         │
└─────────────────────────────────────────────────────────────────────────┘
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;设置完成后重启系统。&lt;/p&gt;
&lt;h3 id=&#34;dietpi软件快捷安装工具&#34;&gt;DietPi软件快捷安装工具&lt;/h3&gt;
&lt;p&gt;DietPi自带一个便捷的软件安装工具&lt;code&gt;dietpi-software&lt;/code&gt;，可以通过这个工具快速安装一些常用软件&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Setup USB Dedicated Drive?
    ┌───────────────────┤ Setup USB Dedicated Drive? ├───────────────────┐
    │                                                                    │
    │ Will you be using a dedicated USB hard drive with this DietPi      │
    │ installation?                                                      │
    │                                                                    │
    │ (NOTICE) Your decision now is final and cannot be changed at a     │
    │ later date. DietPi will automatically setup your future software   │
    │ installations to utilize the USB drive instead of MicroSD.         │
    │ As USB hard drives are generally faster than MicroSD, using a USB  │
    │ drive can vastly improve system performance.                       │
    │                                                                    │
    │  This is recommended for:                                          │
    │  - BitTorrent (Store downloads)                                    │
    │  - OwnCloud                                                        │
    │  - Kodi (Store Media Files)                                        │
    │  - RetroPie (Store Roms)                                           │
    │  - Hifi (Store Music)                                              │
    │                                                                    │
    │                                                                    │
    │                  &amp;lt;Yes&amp;gt;                     &amp;lt;No&amp;gt;                    │
    │                                                                    │
    └────────────────────────────────────────────────────────────────────┘

      ┌────┤ ---------- DietPi - Software Setup ---------- ├─────┐
      │                                                          │
      │           1  Select DietPi Optimized Software.           │
      │           2  Select Additional Linux Software.           │
      │           3  SSH Server  : Dropbear                      │
      │           4  File Server : None                          │
      │           5  Log System  : DietPi-Ramlog #1              │
      │           6  DietPi-Config                               │
      │           7  Help!                                       │
      │           Go Start Install                               │
      │                                                          │
      │                                                          │
      │              &amp;lt;Ok&amp;gt;                  &amp;lt;Exit&amp;gt;                │
      │                                                          │
      └──────────────────────────────────────────────────────────┘
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;1  Select DietPi Optimized Software.包含以下软件:&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;2  Select Additional Linux Software.包含以下软件&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
</description>
    </item>
    
    <item>
      <title>将树莓派数据上传至乐为物联</title>
      <link>https://unixetc.com/post/sumbit-raspberry-pi-data-to-lewei50/</link>
      <pubDate>Thu, 30 Jul 2015 12:59:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/sumbit-raspberry-pi-data-to-lewei50/</guid>
      <description>&lt;p&gt;进入&lt;a href=&#34;http://www.lewei50.com/&#34;&gt;http://www.lewei50.com/&lt;/a&gt;注册登录&lt;/p&gt;
&lt;h3 id=&#34;添加设备add-device&#34;&gt;添加设备(Add Device)&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;我的物联&lt;/strong&gt; -&amp;gt; &lt;strong&gt;我的设备&lt;/strong&gt;，添加新设备，类型选择&lt;strong&gt;其他&lt;/strong&gt;，不使用模板。&lt;/p&gt;
&lt;p&gt;请自定义设备&lt;strong&gt;标识&lt;/strong&gt;，后面要用到。&lt;/p&gt;
&lt;h4 id=&#34;添加传感器&#34;&gt;添加传感器&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;我的物联&lt;/strong&gt; -&amp;gt; &lt;strong&gt;感器与控制器&lt;/strong&gt;，新建传感器。&lt;/p&gt;
&lt;p&gt;其中&lt;strong&gt;标识&lt;/strong&gt;为提交数据依据，建议英文。&lt;/p&gt;
&lt;h3 id=&#34;向乐为物联提交数据&#34;&gt;向乐为物联提交数据&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;lewei.sh&lt;/code&gt;代码如下 &lt;a href=&#34;http://cdn.lyq.wiki/res/lewei.sh&#34;&gt;http://cdn.lyq.wiki/res/lewei.sh&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#!/bin/bash
LURL=http://www.lewei50.com/api/V1/Gateway/UpdateSensors/01
KEY=&amp;quot;2fasdfsdfsdf9ffadsf62dfbfsdfa1&amp;quot;
sys_load=`cat /proc/loadavg | awk &#39;{print $2}&#39;`
st=`/usr/bin/sen_t`
sh=`/usr/bin/sen_h`

for i in 1 2 3 4 5; do
        sys_temp=`cat /sys/class/thermal/thermal_zone0/temp | awk &#39;{print $1/1000}&#39;`
        if [[ &amp;quot;${sys_temp}&amp;quot; =~ ^- ]]
        then
                sys_temp=&#39;0.0&#39;
        else
                echo ${sys_temp}
                break
        fi
done

echo &amp;quot;Printf Values&amp;quot;
echo &amp;quot;sys_temp:&amp;quot;${sys_temp}
echo &amp;quot;sys_load:&amp;quot;${sys_load}
echo &amp;quot;sensor_t:&amp;quot;${st}
echo &amp;quot;sensor_h:&amp;quot;${sh}
echo &amp;quot;Done!&amp;quot;

echo &amp;quot;Sumbit Data to Lewei&amp;quot;

curl --request POST ${LURL} --header &amp;quot;userkey:${KEY}&amp;quot; --data &amp;quot;[{&#39;Name&#39;:&#39;load&#39;,&#39;Value&#39;:&#39;${sys_load}&#39;},{&#39;Name&#39;:&#39;temp&#39;,&#39;Value&#39;:&#39;${sys_temp}&#39;},{&#39;Name&#39;:&#39;sd&#39;,&#39;Value&#39;:&#39;${sh}&#39;},{&#39;Name&#39;:&#39;wd&#39;,&#39;Value&#39;:&#39;${st}&#39;}]&amp;quot; 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;其中&lt;strong&gt;LURL&lt;/strong&gt;后面的&lt;strong&gt;01&lt;/strong&gt;为设备标识,&lt;strong&gt;KEY&lt;/strong&gt;为用户&lt;strong&gt;Userkey&lt;/strong&gt;,JSON数据中的&lt;strong&gt;Name&lt;/strong&gt;对应相应的&lt;strong&gt;传感器标识&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;其中**/usr/bin/**下的**st,sh**为通过DHT11采集温度与湿度程序，参考&lt;a href=&#34;https://unixetc.com/post/Raspberry-Pi-by-DHT11-collecting-temperature-and-humidity/&#34;&gt;树莓派通过DHT11采集温度与湿度&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;接下来添加cronta任务，每隔1分钟运行一次该脚本&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# m h  dom mon dow   command
*/1 * * * * /home/pi/lewei.sh&amp;gt;/dev/null 2&amp;gt;&amp;amp;1 &amp;amp;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后可以通过&lt;a href=&#34;http://www.lewei50.com/u/g/12290&#34;&gt;http://www.lewei50.com/u/g/12290&lt;/a&gt;来查看具体的数据以及图表&lt;/p&gt;
&lt;p&gt;监控页面&lt;a href=&#34;http://raspi.in&#34;&gt;http://raspi.in&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;参考:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://www.lewei50.com/dev/content/api?sk=70&#34;&gt;http://www.lewei50.com/dev/content/api?sk=70&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://www.dqy.me/2013/use-cosm.html&#34;&gt;http://www.dqy.me/2013/use-cosm.html&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://personal.xively.com/dev/tutorials/pi/&#34;&gt;https://personal.xively.com/dev/tutorials/pi/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>安装Nginx和ngx_pagespeed</title>
      <link>https://unixetc.com/post/install-nginx-and-ngx_pagespeed-on-vps/</link>
      <pubDate>Fri, 24 Jul 2015 17:24:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/install-nginx-and-ngx_pagespeed-on-vps/</guid>
      <description>&lt;p&gt;VPS配置:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Ubuntu 14.04 x86
RAM 512M
SWAP 64M
DISK 5G
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;准备工作&#34;&gt;准备工作&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;sudo apt-get update&amp;amp;&amp;amp;apt-get upgrade -y
sudo apt-get install build-essential zlib1g-dev libpcre3 libpcre3-dev unzip libssl-dev -y
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;下载ngx_pagespeed&#34;&gt;下载ngx_pagespeed&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;cd
NPS_VERSION=1.9.32.4
wget https://github.com/pagespeed/ngx_pagespeed/archive/release-${NPS_VERSION}-beta.zip
unzip release-${NPS_VERSION}-beta.zip
cd ngx_pagespeed-release-${NPS_VERSION}-beta/
wget https://dl.google.com/dl/page-speed/psol/${NPS_VERSION}.tar.gz
tar -xzvf ${NPS_VERSION}.tar.gz 
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;安装nginx&#34;&gt;安装Nginx&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;cd
groupadd www
useradd -s /sbin/nologin -g www www
NGINX_VERSION=1.8.0
wget http://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz
tar -xvzf nginx-${NGINX_VERSION}.tar.gz
cd nginx-${NGINX_VERSION}/
./configure \
--user=www \
--group=www  \
--prefix=/usr/local/nginx \
--with-http_stub_status_module \
--with-http_ssl_module \
--with-http_spdy_module \
--with-http_gzip_static_module \
--with-http_sub_module \
--add-module=$HOME/ngx_pagespeed-release-${NPS_VERSION}-beta \

sudo make
sudo make install
sudo ln -sf /usr/local/nginx/sbin/nginx /usr/bin/nginx
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;配置&lt;code&gt;/etc/init.d/nginx&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo wget https://raw.github.com/JasonGiedymin/nginx-init-ubuntu/master/nginx -O /etc/init.d/nginx
sudo chmod +x /etc/init.d/nginx
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;管理Nginx服务&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;service nginx {start|stop|restart|force-reload|reload|status|configtest|quietupgrade|terminate|destroy}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;测试安装结果&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;root@bwgvps:~# nginx -t
nginx: the configuration file /usr/local/nginx/conf/nginx.conf syntax is ok
nginx: configuration file /usr/local/nginx/conf/nginx.conf test is successful
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;配置ngx_pagespeed&#34;&gt;配置ngx_pagespeed&lt;/h3&gt;
&lt;p&gt;编辑Nginx的配置文件(/usr/local/nginx/conf/nginx.conf)&lt;/p&gt;
&lt;p&gt;在server段内添加&lt;code&gt;include gp.conf&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;在&lt;code&gt;/usr/local/nginx/conf/&lt;/code&gt;内新建&lt;code&gt;gp.conf&lt;/code&gt;,内容如下:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pagespeed on;
pagespeed FileCachePath /usr/local/nginx/pagespeed/;
pagespeed RewriteLevel PassThrough;
pagespeed EnableFilters collapse_whitespace;
pagespeed EnableFilters canonicalize_javascript_libraries;
pagespeed EnableFilters combine_css;
pagespeed EnableFilters combine_javascript;
pagespeed EnableFilters elide_attributes;
pagespeed EnableFilters extend_cache;
pagespeed EnableFilters flatten_css_imports;
pagespeed CssFlattenMaxBytes 5120;
pagespeed EnableFilters lazyload_images;
pagespeed EnableFilters rewrite_javascript;
pagespeed EnableFilters rewrite_images;
pagespeed EnableFilters insert_dns_prefetch;
pagespeed EnableFilters prioritize_critical_css;	
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Nginx reload后，用&lt;code&gt;curl&lt;/code&gt;验证是否开启&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;root@bwgvps:~# curl -I 127.0.0.1
HTTP/1.1 200 OK
Server: nginx/1.8.0
Content-Type: text/html
Connection: keep-alive
Date: Sat, 07 Feb 1970 00:54:49 GMT
X-Page-Speed: 1.9.32.4-7251
Cache-Control: max-age=0, no-cache
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;以上X-Page-Speed代表已经OK!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;参考:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://developers.google.com/speed/pagespeed/module/build_ngx_pagespeed_from_source&#34;&gt;https://developers.google.com/speed/pagespeed/module/build_ngx_pagespeed_from_source&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/JasonGiedymin/nginx-init-ubuntu&#34;&gt;https://github.com/JasonGiedymin/nginx-init-ubuntu&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://lnmp.org&#34;&gt;http://lnmp.org&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>将百度输入法词库导入倒小狼毫词典</title>
      <link>https://unixetc.com/post/baidu-input-dictionary-converted-to-rime/</link>
      <pubDate>Thu, 23 Jul 2015 07:23:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/baidu-input-dictionary-converted-to-rime/</guid>
      <description>&lt;p&gt;首先，在百度输入法设置中，将词库导出，选择&lt;strong&gt;txt&lt;/strong&gt;格式&lt;/p&gt;
&lt;p&gt;然后下载&lt;a href=&#34;https://github.com/studyzy/imewlconverter&#34;&gt;深蓝词库转换&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;打开深蓝词库转换，选择百度词库，在转换为类型中选择&lt;strong&gt;中州韵&lt;/strong&gt;，转换文成后保存为另外一个&lt;strong&gt;txt&lt;/strong&gt;文件&lt;/p&gt;
&lt;p&gt;然后打开**【小狼毫】用户词典管理**，选择已存在的词典，点击右侧的**导入文本码表**&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>将Nginx更换为H2O</title>
      <link>https://unixetc.com/post/install-h2o-on-bandwagon-vps/</link>
      <pubDate>Tue, 21 Jul 2015 17:31:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/install-h2o-on-bandwagon-vps/</guid>
      <description>&lt;h3 id=&#34;安装必须的软件&#34;&gt;安装必须的软件&lt;/h3&gt;
&lt;p&gt;预备工具软件&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#apt-get install autoconf automake m4 build-essential
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;libssl-dev &lt;strong&gt;必选&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#apt-get install openssl libssl-dev
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;以下为可选包，可自行搜索安装&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;libuv&lt;/li&gt;
&lt;li&gt;libyaml&lt;/li&gt;
&lt;li&gt;wslay&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;安装h2o&#34;&gt;安装H2O&lt;/h3&gt;
&lt;p&gt;下载安装最新版h2o  &lt;a href=&#34;https://github.com/h2o/h2o/releases&#34;&gt;https://github.com/h2o/h2o/releases&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#wget https://github.com/h2o/h2o/archive/v1.4.1.tar.gz
#tar zxf v1.4.1.tar.gz
#cd h2o-1.4.1
#cmake -DWITH_BUNDLED_SSL=on .
#make
#sudo make install
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;编辑h2o站点配置文件&#34;&gt;编辑H2O站点配置文件&lt;/h3&gt;
&lt;p&gt;以下是一个简单的http与https配置文件，可自行参考修改&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;hosts:
&amp;quot;www.example.com&amp;quot;:
    listen:
    port: 80
    listen:
    port: 443
    ssl:
        certificate-file: /path/to/server-certificate.crt
        key-file:         /path/to/private-key.crt
    paths:
    &amp;quot;/&amp;quot;:
        file.dir: /path/to/doc-root

access-log: /path/to/the/access-log
error-log: /path/to/the/error-log
pid-file: /path/to/the/pid-file
http2-reprioritize-blocking-assets: ON   # performance tuning option
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;启动H2O&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#h2o h2o.conf
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;以daemon模式启动&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#h2o -m daemon -c h2o.conf&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>将博客从Typcho转移至Gor</title>
      <link>https://unixetc.com/post/typecho-converted-to-gor/</link>
      <pubDate>Mon, 20 Jul 2015 17:20:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/typecho-converted-to-gor/</guid>
      <description>&lt;h3 id=&#34;缘由&#34;&gt;缘由&lt;/h3&gt;
&lt;p&gt;VPS快到期了，不想继续维护，太累，并且香港VPS价格也不菲。&lt;/p&gt;
&lt;p&gt;于是打算选择一个静态博客平台，原来用过的不少:jekyll,hexo,gor,pelican，最后决定Gor&lt;/p&gt;
&lt;p&gt;选择Gor的理由有两点&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;安装方便&lt;/li&gt;
&lt;li&gt;执行效率高&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;安装gor&#34;&gt;安装Gor&lt;/h3&gt;
&lt;p&gt;参考Gor主页&lt;a href=&#34;https://github.com/wendal/gor&#34;&gt;https://github.com/wendal/gor&lt;/a&gt;安装Gor&lt;/p&gt;
&lt;h3 id=&#34;将typecho文章导出为markdown文件md&#34;&gt;将Typecho文章导出为Markdown文件(.md)&lt;/h3&gt;
&lt;p&gt;Github上有现成的工具&lt;strong&gt;typecho-exporter&lt;/strong&gt;，主页为&lt;a href=&#34;https://github.com/aneasystone/typecho-exporter&#34;&gt;https://github.com/aneasystone/typecho-exporter&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这个工具可以将所有的文章导出为Markdown文件，但是以文章标题为文件名，不利于后期处理，建议使用slug为文件名。&lt;/p&gt;
&lt;p&gt;编辑下载的&lt;code&gt;main.py&lt;/code&gt;，将75行的&lt;code&gt;p.title = r[1]&lt;/code&gt;替换为`p.title = r[2]&#39;，如下:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;results = cur.fetchall()
for r in results:
    p = Post()
    p.id = r[0]
    p.title = r[2]
    p.content = r[5]
    posts.append(p)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;原来的&lt;code&gt;r[1]&lt;/code&gt;对应&lt;code&gt;typecho_contents&lt;/code&gt;SQL表中的&lt;code&gt;title&lt;/code&gt;列，我的&lt;code&gt;r[2]&lt;/code&gt;对应&lt;code&gt;slug&lt;/code&gt;列，可以根据实际情况更改。&lt;/p&gt;
&lt;p&gt;编辑&lt;strong&gt;typecho-exporter&lt;/strong&gt;的&lt;code&gt;config.ini&lt;/code&gt;文件，设置数据库访问方式。&lt;/p&gt;
&lt;p&gt;运行&lt;code&gt;main.py&lt;/code&gt;，完成后会在&lt;strong&gt;typecho-exporter&lt;/strong&gt;目录下生成&lt;strong&gt;files&lt;/strong&gt;文件夹，里面就是导出的Markdown文件。&lt;/p&gt;
&lt;h3 id=&#34;后期整理&#34;&gt;后期整理&lt;/h3&gt;
&lt;p&gt;导出后的Markdown没有Gor需要的文件头格式，需要手动整理&lt;/p&gt;
&lt;p&gt;这里推荐使用Notepad++批量替换&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/insert_gor_markdown_header.png&#34; alt=&#34;插入Hexo的Markdown头格式&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;查找目标:&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;替换为&amp;mdash;\n
title: title\ndate: 2015-07-20\ndescription: \npermalink: \ncategories: \ntags: \n&amp;mdash;\n&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;记得将查找模式重的扩展打开。&lt;/p&gt;
&lt;p&gt;经过以上替换，就大概有了个Gor的Markdown头格式，后面的手动工作就少了多了。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>typecho主题Amaze</title>
      <link>https://unixetc.com/post/typecho-theme-amaze/</link>
      <pubDate>Fri, 17 Jul 2015 21:23:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/typecho-theme-amaze/</guid>
      <description>&lt;p&gt;typecho主题一枚Amaze,采用Amaze UI框架&lt;/p&gt;
&lt;p&gt;注意：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;评论采用多说,直接替换comment.php内容&lt;/li&gt;
&lt;li&gt;无页面导航，请将文章数设为999&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;预览图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/typecho_amaze.webp&#34; alt=&#34;Typecho主题Amaze预览图&#34;&gt;&lt;/p&gt;
&lt;p&gt;下载地址:&lt;a href=&#34;http://cdn.lyq.wiki/res/amaze.7z&#34;&gt;http://cdn.lyq.wiki/res/amaze.7z&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Xively与树莓派监控温度与湿度</title>
      <link>https://unixetc.com/post/use-xively-monitor-raspberry-pi/</link>
      <pubDate>Tue, 14 Jul 2015 14:14:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/use-xively-monitor-raspberry-pi/</guid>
      <description>&lt;p&gt;进入&lt;a href=&#34;https://www.xively.com/&#34;&gt;https://www.xively.com/&lt;/a&gt;注册登录&lt;/p&gt;
&lt;h3 id=&#34;添加设备add-device&#34;&gt;添加设备(Add Device)&lt;/h3&gt;
&lt;p&gt;在&lt;strong&gt;Development Devices&lt;/strong&gt;页面点击&lt;strong&gt;Add Device&lt;/strong&gt;添加设备&lt;/p&gt;
&lt;p&gt;填写&lt;strong&gt;Device Name&lt;/strong&gt;和&lt;strong&gt;Device Description&lt;/strong&gt;，将&lt;strong&gt;Privacy&lt;/strong&gt;设定为&lt;strong&gt;Public Device&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;设置api-key&#34;&gt;设置API Key&lt;/h4&gt;
&lt;p&gt;进入Device详情页，在&lt;strong&gt;API Keys&lt;/strong&gt;中点击&lt;strong&gt;Add Key&lt;/strong&gt;添加一个Key,将&lt;strong&gt;Permissions&lt;/strong&gt;中的&lt;strong&gt;Read,Create,Update,Delete&lt;/strong&gt;全部勾选，&lt;strong&gt;Label&lt;/strong&gt;随便填。&lt;/p&gt;
&lt;h3 id=&#34;向xively提交数据&#34;&gt;向Xively提交数据&lt;/h3&gt;
&lt;p&gt;在这里通过&lt;strong&gt;CURL&lt;/strong&gt;向xively提交&lt;strong&gt;JSON&lt;/strong&gt;格式的数据&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;JSON数据格式&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{
  &amp;quot;datastreams&amp;quot;: [
    {
       &amp;quot;id&amp;quot;: &amp;quot;load&amp;quot;,
       &amp;quot;current_value&amp;quot;: &amp;quot;9.00&amp;quot;
    },
    {
      &amp;quot;id&amp;quot;: &amp;quot;temp&amp;quot;,
      &amp;quot;current_value&amp;quot;: &amp;quot;89.15&amp;quot;
    }
  ]
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;其中每个id为数据定义的idcurrent_value为提交的值&lt;/p&gt;
&lt;p&gt;脚本文件&lt;strong&gt;send_xively.sh&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#!/bin/bash
LOCATION=&#39;/home/pi/xively_data&#39;   #Path of Xively JSON DATA file
API_KEY=&#39;orxUhgjqSYPDbv5243534tG65464345eArxSVY9pE8ITnE&#39; #API Key
FEED_ID=&#39;1354438558&#39; #FEED_ID
####################################################

COSM_URL=https://api.xively.com/v2/feeds/${FEED_ID}?timezone=+8
cpu_load=`cat /proc/loadavg | awk &#39;{print $2}&#39;`
sen_t=`sudo /home/pi/st`
sen_h=`sudo /home/pi/sh`

for i in 1 2 3 4 5; do
        cpu_t=`cat /sys/class/thermal/thermal_zone0/temp | awk &#39;{print $1/1000}&#39;`
        if [[ &amp;quot;${cpu_t}&amp;quot; =~ ^- ]]
        then
                cpu_t=&#39;0.0&#39;
        else
                echo ${cpu_t}
                break
        fi
done

STR=`awk &#39;BEGIN{printf &amp;quot;{\&amp;quot;datastreams\&amp;quot;:[ {\&amp;quot;id\&amp;quot;:\&amp;quot;cpu_load\&amp;quot;,\&amp;quot;current_value\&amp;quot;:\&amp;quot;%.2f\&amp;quot;}, {\&amp;quot;id\&amp;quot;:\&amp;quot;cpu_temp\&amp;quot;,\&amp;quot;current_value\&amp;quot;:\&amp;quot;%.2f\&amp;quot;},{\&amp;quot;id\&amp;quot;:\&amp;quot;sensor_t\&amp;quot;,\&amp;quot;current_value\&amp;quot;:\&amp;quot;%.2f\&amp;quot;}, {\&amp;quot;id\&amp;quot;:\&amp;quot;sensor_h\&amp;quot;,\&amp;quot;current_value\&amp;quot;:\&amp;quot;%.2f\&amp;quot;}] } &amp;quot;,&#39;$cpu_load&#39;,&#39;$cpu_t&#39;,&#39;$sen_t&#39;,&#39;$sen_h&#39;}&#39;`

echo ${cpu_t}
echo ${cpu_load}
echo ${sen_t}
echo ${sen_h}
echo ${STR}
echo ${STR} &amp;gt; ${LOCATION}/cosm.json
curl -s -v --request PUT --header &amp;quot;X-ApiKey: ${API_KEY}&amp;quot; --data-binary @${LOCATION}/cosm.json ${COSM_URL}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;其中&lt;strong&gt;LOCATION&lt;/strong&gt;为JSON文件存放目录，没有的话请新建。API_KEY和FEED_ID按照自己的配置填写。&lt;/p&gt;
&lt;p&gt;其中**/home/pi/**下的**st,sh**为通过DHT11采集温度与湿度程序，参考&lt;a href=&#34;https://unixetc.com/post/Raspberry-Pi-by-DHT11-collecting-temperature-and-humidity.html&#34;&gt;树莓派通过DHT11采集温度与湿度&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;接下来添加cronta任务，每隔1分钟运行一次该脚本&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# m h  dom mon dow   command
*/1 * * * * /home/pi/send_xively.sh&amp;gt;/dev/null 2&amp;gt;&amp;amp;1 &amp;amp;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后可以通过&lt;a href=&#34;https://personal.xively.com/feeds/1255758558&#34;&gt;https://personal.xively.com/feeds/1255758558&lt;/a&gt;来查看具体的数据以及图表&lt;/p&gt;
&lt;p&gt;监控页面&lt;a href=&#34;http://zjq.in/raspi_sensor&#34;&gt;http://zjq.in/raspi_sensor&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;参考:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://www.dqy.me/2013/use-cosm.html&#34;&gt;http://www.dqy.me/2013/use-cosm.html&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://personal.xively.com/dev/tutorials/pi/&#34;&gt;https://personal.xively.com/dev/tutorials/pi/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>使用Replace Pioneer按行分割文本</title>
      <link>https://unixetc.com/post/use-pioneer-replace-to-segment-the-text-file/</link>
      <pubDate>Fri, 10 Jul 2015 22:38:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/use-pioneer-replace-to-segment-the-text-file/</guid>
      <description>&lt;p&gt;Replace Pioneer下载地址 &lt;a href=&#34;http://www.mind-pioneer.com/replace/Download.html&#34;&gt;http://www.mind-pioneer.com/replace/Download.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;安装后打开，Ctrl+O加载文本文件&lt;/p&gt;
&lt;p&gt;File -&amp;gt; Save As -&amp;gt; Save to files&amp;ndash;split by lines/chars/bytes&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/rp_stf.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后选择分割方式，注意批量命名的 &lt;strong&gt;#&lt;/strong&gt; 的个数&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/rp_stf_save.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>V版本iPhone5C开启中国电信4G</title>
      <link>https://unixetc.com/post/verzion-iphone5c-open-chinatelecom-4g/</link>
      <pubDate>Fri, 10 Jul 2015 10:27:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/verzion-iphone5c-open-chinatelecom-4g/</guid>
      <description>&lt;p&gt;首先，使用太极越狱将手机越狱 &lt;code&gt;http://www.taig.com/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;在Cydia中添加&lt;code&gt;http://apt.chinasnow.net&lt;/code&gt;源，搜索安装&lt;strong&gt;CommCenter patch for ios8&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;设置iTunes可以刷入运营商文件(.ipcc)&lt;/p&gt;
&lt;p&gt;Win+R打开运行窗口，输入&lt;code&gt;&amp;quot;%ProgramFiles%\iTunes\iTunes.exe&amp;quot; /setPrefInt carrier-testing 1&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;下载运营商文件&lt;a href=&#34;http://cdn.lyq.wiki/res/ipccs.zip&#34;&gt;http://cdn.lyq.wiki/res/ipccs.zip&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;打开iTunes，链接手机到电脑，Shift+更新，选择相对应系统版本的运营商文件&lt;/p&gt;
&lt;p&gt;完成后重启手机OK！&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>将域名从Godaddy转移到万网</title>
      <link>https://unixetc.com/post/godaddy-domain-transferred-to-the-hichina/</link>
      <pubDate>Tue, 07 Jul 2015 18:27:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/godaddy-domain-transferred-to-the-hichina/</guid>
      <description>&lt;p&gt;准备将&lt;code&gt;ltecn.com&lt;/code&gt;从Godaddy转到万网&lt;/p&gt;
&lt;p&gt;首先在Godaddy的域名管理中，将域名解锁,将Lock状态设置为Off&lt;/p&gt;
&lt;p&gt;然后你会收到一封标题为&lt;strong&gt;Domain Status Notification&lt;/strong&gt;的邮件，提醒你域名状态已经修改为&lt;strong&gt;Unlocked&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;然后将&lt;strong&gt;authorization code&lt;/strong&gt;发送到你的邮箱&lt;/p&gt;
&lt;p&gt;Godaddy会发送一封标题为&lt;strong&gt;LTECN.COM - Information You Requested&lt;/strong&gt;的邮件，里面有你的验证码，邮件内容如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Customer Account: 888888884 
Domain Name: LTECN.COM 
Authorization Code: f@jje0932!E 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;接下来在万网中使用以上验证码进行转入操作，订单支付后万网会发送一封标题为&lt;strong&gt;万网域名转入确认通知&lt;/strong&gt;的邮件，点击其中的链接确认转入&lt;/p&gt;
&lt;p&gt;下来进入到Godaddy，DOMAINS-&amp;gt;TRANSFERS,在PENDING TRANSFERS OUT会显示正在转出的域名，域名状态列显示&lt;strong&gt;Transfer not started. Accept or decline&lt;/strong&gt;，点击&lt;strong&gt;Accept or decline&lt;/strong&gt;在接下来的提示中选择&lt;strong&gt;Accept&lt;/strong&gt;接受转出。&lt;/p&gt;
&lt;p&gt;Godaddy会发送一封标题为&lt;strong&gt;Transfer of LTECN.COM&lt;/strong&gt;的邮件，提醒你转出操作。&lt;/p&gt;
&lt;p&gt;稍等片刻Godaddy会发送一封标题为&lt;strong&gt;An important notice regarding your transfer of LTECN.COM&lt;/strong&gt;的邮件，提醒转出成功，并且告知转出的ISP服务商，如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Dear Jkrjj csao, 

This is to confirm that the following domain names have been successfully transferred away from GoDaddy to HICHINA WEB SOLUTIONS LIMITED: 

LTECN.COM 

If you have any questions, visit Online Support or call us at (480) 505-8877. 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;剩下的就是等待万网通知转移成功。&lt;/p&gt;
&lt;p&gt;以下是本次的转移邮件记录，时间还是蛮快的，不到30分钟&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/emaillist.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Typecho主题Limits</title>
      <link>https://unixetc.com/post/typecho-limits-theme/</link>
      <pubDate>Thu, 02 Jul 2015 17:32:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/typecho-limits-theme/</guid>
      <description>&lt;p&gt;又造了个简单成马咧的主题，分享给大家!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;说明&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;评论采用多说，请自行替换comments.php内容&lt;/li&gt;
&lt;li&gt;没有页面导航，因此请在&lt;strong&gt;设置-阅读&lt;/strong&gt;中，将&lt;strong&gt;每页文章数目&lt;/strong&gt;设大一些(例如:&lt;strong&gt;999&lt;/strong&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;预览图:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/typecho_limits.png&#34; alt=&#34;Limits主题&#34;&gt;&lt;/p&gt;
&lt;p&gt;下载: &lt;a href=&#34;http://cdn.lyq.wiki/res/limits.7z&#34;&gt;Limits.7z&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>树莓派连接DHT11采集温度与湿度</title>
      <link>https://unixetc.com/post/raspberry-pi-by-dht11-collecting-temperature-and-humidity/</link>
      <pubDate>Sun, 21 Jun 2015 16:21:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/raspberry-pi-by-dht11-collecting-temperature-and-humidity/</guid>
      <description>&lt;h3 id=&#34;dht11介绍&#34;&gt;DHT11介绍&lt;/h3&gt;
&lt;p&gt;DHT11是一款有已校准数字信号输出的温湿度传感器。 精度湿度+-5%RH， 温度+-2℃，量程湿度20-90%RH， 温度0~50℃。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;DHT11针脚说明&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/dht11.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;VCC	供电 3－5.5VDC&lt;/li&gt;
&lt;li&gt;DATA	串行数据，单总线&lt;/li&gt;
&lt;li&gt;N/A	空脚，请悬空&lt;/li&gt;
&lt;li&gt;GND	接地，电源负极&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;硬件连接&#34;&gt;硬件连接&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;树莓派GPIO针脚说明&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/Pi-GPIO-header-26-sm.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;DHT11与树莓派链接&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;VCC连接+3V3
DATA连接GPIO4
GND链接GND&lt;/p&gt;
&lt;h3 id=&#34;软件部分&#34;&gt;软件部分&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;安装wiringPi&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo apt-get install git-core
git clone git://git.drogon.net/wiringPi
cd wiringPi
./build
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;如果由于网络原因无法&lt;code&gt;git clone&lt;/code&gt;成功，可以从此下载wiringPi &lt;a href=&#34;http://cdn.lyq.wiki/res/wiringPi_v2.3.1.zip&#34;&gt;http://cdn.lyq.wiki/res/wiringPi_v2.3.1.zip&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;验证是否安装成功&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;gpio -v
gpio readall
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;下载编译C语言程序代码&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;wget http://cdn.lyq.wiki/res/sensor.c
gcc -o sensor sensor.c -lwiringPi
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;运行程序&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo ./sensor
24,39
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;输出结果，第一个为湿度，第二个为温度&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Ubuntu下安装Ghost博客系统</title>
      <link>https://unixetc.com/post/ubuntu-install-ghost-blog-system/</link>
      <pubDate>Sat, 06 Jun 2015 16:26:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/ubuntu-install-ghost-blog-system/</guid>
      <description>&lt;h3 id=&#34;安装nodejs&#34;&gt;安装Nodejs&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;sudo add-apt-repository ppa:chris-lea/node.js
sudo apt-get update
sudo apt-get install nodejs
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;检查是否安装成功&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;root@hkvps:~# node -v
v0.10.37
root@hkvps:~# npm -v
1.4.28
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;安装ghost&#34;&gt;安装Ghost&lt;/h3&gt;
&lt;p&gt;Ghost下载地址&lt;a href=&#34;https://ghost.org/download/&#34;&gt;https://ghost.org/download/&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;wget https://ghost.org/zip/ghost-0.6.4.zip
unzip ghost-0.6.4.zip -d ghost
cd ghost
npm install --production
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;运行Ghost&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;npm start
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;可以通过127.0.0.1:2368来访问&lt;/p&gt;
&lt;p&gt;通过&lt;code&gt;nmp start&lt;/code&gt;来运行Ghost，退出后就会停止，因此需要一个方法让Ghost一直运行&lt;/p&gt;
&lt;h3 id=&#34;让ghost一直运行&#34;&gt;让Ghost一直运行&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;安装forever&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;npm install forever -g
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;进入ghost目录，执行以下命令，让Ghost一直运行&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;NODE_ENV=production forever start index.js
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;停止ghost&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;forever stop index.js
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;查看forever运行列表&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;forever list
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;结合nginx配置域名&#34;&gt;结合Nginx配置域名&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;安装Nginx&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo apt-get install nginx
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;编辑配置文件&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo vi /etc/nginx/sites-available/ghost.conf
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;写入如下内容&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;server {
    listen 80;
    server_name aquan.me;

    location / {
        proxy_set_header   X-Real-IP $remote_addr;
        proxy_set_header   Host      $http_host;
        proxy_pass         http://127.0.0.1:2368;
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;重启Nginx&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo ln -s /etc/nginx/sites-available/ghost.conf /etc/nginx/sites-enabled/ghost.conf
sudo service nginx restart
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;参考:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://docs.ghostchina.com/zh/&#34;&gt;http://docs.ghostchina.com/zh/&lt;/a&gt;
&lt;a href=&#34;http://972169909-qq-com.iteye.com/blog/1739928&#34;&gt;http://972169909-qq-com.iteye.com/blog/1739928&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Nginx配置SSL证书</title>
      <link>https://unixetc.com/post/nginx-configuration-ssl-certificate/</link>
      <pubDate>Mon, 25 May 2015 15:25:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/nginx-configuration-ssl-certificate/</guid>
      <description>&lt;h3 id=&#34;申请wosign免费ssl证书&#34;&gt;申请Wosign免费SSL证书&lt;/h3&gt;
&lt;p&gt;申请地址: &lt;a href=&#34;https://www.wosign.com/products/free_ssl.htm&#34;&gt;https://www.wosign.com/products/free_ssl.htm&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;申请成功后，收到类似于&lt;strong&gt;aquan.me_sha256_cn.zip&lt;/strong&gt;的文件,解压后包含如下文件&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;for Apache.zip
for IIS.zip
for Nginx.zip
for Other Server.zip
for Tomcat.zip
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;其中&lt;strong&gt;for Nginx.zip&lt;/strong&gt;中包含如下两个文件，将其上传到VPS自定义位置。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1_aquan.me_bundle.crt&lt;/li&gt;
&lt;li&gt;2_aquan.me.key&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;配置nginx&#34;&gt;配置Nginx&lt;/h3&gt;
&lt;p&gt;不多说了，直接贴代码:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#### Add Wosign SSL Start ####
listen 443;
ssl on;
ssl_certificate /usr/local/nginx/ssl/ssl.crt;
ssl_certificate_key /usr/local/nginx/ssl/ssl.key;
ssl_session_timeout 5m;
ssl_protocols SSLv2 SSLv3 TLSv1;
ssl_ciphers ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP;
ssl_prefer_server_ciphers on;
#### Add Wosign SSL End ####
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;将以上代码插入&lt;code&gt;listen 80;&lt;/code&gt;之后。&lt;/p&gt;
&lt;p&gt;重启Nginx生效&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;/etc/init.d/nginx restart
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;以上设置完成，就可以通过https来浏览网站，同时http也可以浏览。&lt;/p&gt;
&lt;h3 id=&#34;合并wosign根证书&#34;&gt;合并Wosign根证书&lt;/h3&gt;
&lt;p&gt;有的浏览器会提示不信任证书，可以通过合并Wosign根证书来解决&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;wget https://www.wosign.com/Root/Bundle_DV_St.crt  
cat Bundle_DV_St.crt &amp;gt;&amp;gt; /usr/local/nginx/ssl/ssl.crt
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;设置http跳转https&#34;&gt;设置http跳转https&lt;/h3&gt;
&lt;p&gt;如果想将http跳转至https，可以进行如下设置:&lt;/p&gt;
&lt;p&gt;将原&lt;code&gt;server&lt;/code&gt;字段中的&lt;code&gt;listen 80;&lt;/code&gt;注释掉，新添加&lt;code&gt;server&lt;/code&gt;专门监听80端口进行跳转&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;server { 
listen 80; 
server_name ciux.org www.ciux.org; 
rewrite ^/(.*) https://$server_name/$1 permanent; 
}&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Typecho主题Read</title>
      <link>https://unixetc.com/post/typecho-theme-read/</link>
      <pubDate>Thu, 21 May 2015 15:23:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/typecho-theme-read/</guid>
      <description>&lt;p&gt;闲暇时参考&lt;a href=&#34;http://www.yinwang.org/&#34;&gt;http://www.yinwang.org/&lt;/a&gt;修改制作了一个Typecho主题，命名为Read，分享给大家！&lt;/p&gt;
&lt;p&gt;预览图:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/read_review.webp&#34; alt=&#34;Read&#34;&gt;&lt;/p&gt;
&lt;p&gt;下载地址:&lt;a href=&#34;http://cdn.lyq.wiki/res/read_theme.zip&#34;&gt;read.zip&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Windows下安装Jekyll</title>
      <link>https://unixetc.com/post/install-jekyll-on-windows/</link>
      <pubDate>Wed, 20 May 2015 15:20:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/install-jekyll-on-windows/</guid>
      <description>&lt;h3 id=&#34;安装rubydevkit&#34;&gt;安装Ruby/DevKit&lt;/h3&gt;
&lt;p&gt;首先从 &lt;a href=&#34;http://rubyinstaller.org/downloads/&#34;&gt;http://rubyinstaller.org/downloads/&lt;/a&gt;  下载以下两个文件进行安装&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://pan.baidu.com/share/link?shareid=1353205281&amp;amp;uk=1493434283&#34;&gt;rubyinstaller-1.9.3-p194.exe&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://pan.baidu.com/share/link?shareid=1354945070&amp;amp;uk=1493434283&#34;&gt;DevKit-tdm-32-4.5.2-20111229-1559-sfx.exe&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Ruby安装在&lt;strong&gt;D:\Ruby200&lt;/strong&gt;, DevKit安装在&lt;strong&gt;D:\rubydevkit&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;打开CMD进入到DevKit目录，开始初始化安装&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;D:\rubydevkit&amp;gt;ruby dk.rb init
[INFO] found RubyInstaller v2.0.0 at d:/Ruby200

Initialization complete! Please review and modify the auto-generated
&#39;config.yml&#39; file to ensure it contains the root directories to all
of the installed Rubies you want enhanced by the DevKit.

D:\rubydevkit&amp;gt;ruby dk.rb install
[INFO] Updating convenience notice gem override for &#39;d:/Ruby200&#39;
[INFO] Installing &#39;d:/Ruby200/lib/ruby/site_ruby/devkit.rb&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;替换Gem源&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;天朝网路可能会引起gem安装失败，建议更换为ruby.taobao,org源&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$gem sources -r http://rubygems.org/
$gem sources -a http://ruby.taobao.org/
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;安装jekyll&#34;&gt;安装jekyll&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;D:\rubydevkit&amp;gt;gem install jekyll
Fetching: yajl-ruby-1.1.0-x86-mingw32.gem (100%)
Successfully installed yajl-ruby-1.1.0-x86-mingw32
Fetching: posix-spawn-0.3.6.gem (100%)
Temporarily enhancing PATH to include DevKit...
Building native extensions.  This could take a while...
Successfully installed posix-spawn-0.3.6
Fetching: pygments.rb-0.4.2.gem (100%)
Successfully installed pygments.rb-0.4.2
Fetching: highline-1.6.18.gem (100%)
Successfully installed highline-1.6.18
Fetching: commander-4.1.3.gem (100%)
Successfully installed commander-4.1.3
Fetching: safe_yaml-0.7.1.gem (100%)
Successfully installed safe_yaml-0.7.1
Fetching: colorator-0.1.gem (100%)
Successfully installed colorator-0.1
Fetching: jekyll-1.0.1.gem (100%)
Successfully installed jekyll-1.0.1
Parsing documentation for yajl-ruby-1.1.0-x86-mingw32
unable to convert &amp;quot;\x90&amp;quot; from ASCII-8BIT to UTF-8 for lib/yajl/1.8/yajl.so, skip
ping
unable to convert &amp;quot;\x90&amp;quot; from ASCII-8BIT to UTF-8 for lib/yajl/1.9/yajl.so, skip
ping
Installing ri documentation for yajl-ruby-1.1.0-x86-mingw32
Parsing documentation for posix-spawn-0.3.6
Installing ri documentation for posix-spawn-0.3.6
Parsing documentation for pygments.rb-0.4.2
Installing ri documentation for pygments.rb-0.4.2
Parsing documentation for highline-1.6.18
Installing ri documentation for highline-1.6.18
Parsing documentation for commander-4.1.3
Installing ri documentation for commander-4.1.3
Parsing documentation for safe_yaml-0.7.1
Installing ri documentation for safe_yaml-0.7.1
Parsing documentation for colorator-0.1
Installing ri documentation for colorator-0.1
Parsing documentation for jekyll-1.0.1
Installing ri documentation for jekyll-1.0.1
Done installing documentation for yajl-ruby, posix-spawn, pygments.rb, highline,
 commander, safe_yaml, colorator, jekyll (7 sec).
8 gems installed
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;完成后，可以使用jekyll -v来检查是否安装成功&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;D:\rubydevkit&amp;gt;jekyll -v 
jekyll 1.0.1
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;有时由于天朝内网路问题，可能造成以上安装中某一个部分中途退出，再次执行安装时出现以下提示:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;D:\rubydevkit&amp;gt;gem install jekyll
ERROR:  While executing gem ... (NoMethodError)
    undefined method `size&#39; for nil:NilClass
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;在此只需要将gem目录下cache文件夹内清空，重新安装即可。&lt;/p&gt;
&lt;p&gt;如果不知道gem目录的可以使用gem env来查看GEM PATHS值，如下所示&lt;strong&gt;d:/Ruby200/lib/ruby/gems/2.0.0&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;D:\rubydevkit&amp;gt;gem env
RubyGems Environment:
  - RUBYGEMS VERSION: 2.0.0
  - RUBY VERSION: 2.0.0 (2013-02-24 patchlevel 0) [i386-mingw32]
  - INSTALLATION DIRECTORY: d:/Ruby200/lib/ruby/gems/2.0.0
  - RUBY EXECUTABLE: d:/Ruby200/bin/ruby.exe
  - EXECUTABLE DIRECTORY: d:/Ruby200/bin
  - RUBYGEMS PLATFORMS:
    - ruby
    - x86-mingw32
  - GEM PATHS:
     - d:/Ruby200/lib/ruby/gems/2.0.0
     - C:/Documents and Settings/aquan/.gem/ruby/2.0.0
  - GEM CONFIGURATION:
     - :update_sources =&amp;gt; true
     - :verbose =&amp;gt; true
     - :backtrace =&amp;gt; false
     - :bulk_threshold =&amp;gt; 1000
  - REMOTE SOURCES:
     - http://ruby.taobao.org/&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Linux下安装最新版golang</title>
      <link>https://unixetc.com/post/install-the-last-version-golang-for-linux/</link>
      <pubDate>Mon, 11 May 2015 15:11:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/install-the-last-version-golang-for-linux/</guid>
      <description>&lt;p&gt;ubuntu中可以使用&lt;code&gt;apt-get install golang&lt;/code&gt;来安装go，但是版本稍旧&lt;/p&gt;
&lt;p&gt;如果需要安装最新版的golang，那就得自己动手咧&lt;/p&gt;
&lt;h3 id=&#34;安装golang&#34;&gt;安装golang&lt;/h3&gt;
&lt;p&gt;从官网下载最新版，手动安装&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;apt-get install build-essential
wget https://storage.googleapis.com/golang/go1.4.2.linux-386.tar.gz
tar zxf go1.4.2.linux-386.tar.gz
cd go/src
./all.bash
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;设置path&#34;&gt;设置PATH&lt;/h3&gt;
&lt;p&gt;安装完成后需要设置PATH才能随地使用&lt;code&gt;go&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;export PATH=&amp;quot;/root/go/bin:$PATH&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;检查版本&#34;&gt;检查版本&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;go version
go version go1.4.2 linux/386&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>赵雨煖</title>
      <link>https://unixetc.com/post/zhaoyuxuan/</link>
      <pubDate>Tue, 07 Apr 2015 04:07:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/zhaoyuxuan/</guid>
      <description>&lt;p&gt;姓名：赵雨煖&lt;/p&gt;
&lt;p&gt;性别：女&lt;/p&gt;
&lt;p&gt;生日：2015-04-06 17:45&lt;/p&gt;
&lt;p&gt;初重：3285g&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/zhaoyuxuan.webp&#34; alt=&#34;赵雨煖&#34; title=&#34;赵雨煖&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>使用speedtest-cli测试带宽</title>
      <link>https://unixetc.com/post/use-speedtest-cli-tests-network-bandwidth/</link>
      <pubDate>Thu, 26 Mar 2015 13:26:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/use-speedtest-cli-tests-network-bandwidth/</guid>
      <description>&lt;h3 id=&#34;安装speedtest-cli&#34;&gt;安装speedtest-cli&lt;/h3&gt;
&lt;p&gt;安装speedtest-cli方法如下:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo apt-get install python-pip
sudo pip install speedtest-cli
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;或&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pip install git+https://github.com/sivel/speedtest-cli.git
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;或&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git clone https://github.com/sivel/speedtest-cli.git
python speedtest-cli/setup.py install
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;或&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;wget -O speedtest-cli https://raw.githubusercontent.com/sivel/speedtest-cli/master/speedtest_cli.py
chmod +x speedtest-cli
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;或&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;curl -Lo speedtest-cli https://raw.githubusercontent.com/sivel/speedtest-cli/master/speedtest_cli.py
chmod +x speedtest-cli
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;使用speedtest-cli&#34;&gt;使用speedtest-cli&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;root@MyUbuntuCloud:~# speedtest-cli -h
usage: speedtest-cli [-h] [--bytes] [--share] [--simple] [--list]
                 [--server SERVER] [--mini MINI] [--source SOURCE]
                 [--timeout TIMEOUT] [--version]

Command line interface for testing internet bandwidth using speedtest.net.
--------------------------------------------------------------------------
https://github.com/sivel/speedtest-cli

optional arguments:
  -h, --help         show this help message and exit
  --bytes            Display values in bytes instead of bits. Does not affect
                     the image generated by --share
  --share            Generate and provide a URL to the speedtest.net share
                     results image
  --simple           Suppress verbose output, only show basic information
  --list             Display a list of speedtest.net servers sorted by
                     distance
  --server SERVER    Specify a server ID to test against
  --mini MINI        URL of the Speedtest Mini server
  --source SOURCE    Source IP address to bind to
  --timeout TIMEOUT  HTTP timeout in seconds. Default 10
  --version          Show the version number and exit
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;以下为两则实例：&lt;/p&gt;
&lt;p&gt;HKVPS:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;root@MyUbuntuCloud:~# speedtest-cli --share
Retrieving speedtest.net configuration...
Retrieving speedtest.net server list...
Testing from Shanghai Anchnet Network Technology (118.193.151.193)...
Selecting best server based on latency...
Hosted by ChinaTelecom (Guangzhou) [2.51 km]: 6.646 ms
Testing download speed........................................
Download: 19.66 Mbit/s
Testing upload speed..................................................
Upload: 0.81 Mbit/s
Share results: https://www.speedtest.net/result/4242720179.png
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/str4242720179.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Raspberry Pi:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pi@araspi ~ $ ./speedtest-cli --share
Retrieving speedtest.net configuration...
Retrieving speedtest.net server list...
Testing from China Unicom Shannxi (123.138.35.2)...
Selecting best server based on latency...
Hosted by Xi&#39;an branch,Chinaunicom (Xian) [2.79 km]: 14.556 ms
Testing download speed........................................
Download: 38.05 Mbit/s
Testing upload speed..................................................
Upload: 7.34 Mbit/s
Share results: https://www.speedtest.net/result/4242749590.png
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/str4242749590.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>fdisk分区实例</title>
      <link>https://unixetc.com/post/examples-of-fdisk-partition/</link>
      <pubDate>Thu, 19 Mar 2015 12:31:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/examples-of-fdisk-partition/</guid>
      <description>&lt;h3 id=&#34;查看磁盘分区详情&#34;&gt;查看磁盘分区详情&lt;/h3&gt;
&lt;p&gt;直接使用fdisk -l 或者使用fdisk /dev/sda，再使用p命令来查看&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Command (m for help): p

Disk /dev/sda: 32.2 GB, 32212254720 bytes
255 heads, 63 sectors/track, 3916 cylinders, total 62914560 sectors
Units = sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
Disk identifier: 0x000657c3

   Device Boot      Start         End      Blocks   Id  System
/dev/sda1   *        2048    61868031    30932992   83  Linux
/dev/sda2        61870078    62912511      521217    5  Extended
/dev/sda5        61870080    62912511      521216   82  Linux swap / Solaris
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;fdisk命令&#34;&gt;fdisk命令&lt;/h3&gt;
&lt;p&gt;fdisk有以下命令可用，其中常用的已简单说明&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Command (m for help): m
Command action
   a   toggle a bootable flag   //切换可引导标记
   b   edit bsd disklabel
   c   toggle the dos compatibility flag
   d   delete a partition   //删除分区
   l   list known partition types   //查看所有分区类型
   m   print this menu   //返回此菜单
   n   add a new partition   //新建分区
   o   create a new empty DOS partition table
   p   print the partition table   //查看当前分区表
   q   quit without saving changes   //取消更改并退出
   s   create a new empty Sun disklabel
   t   change a partition&#39;s system id   //修改分区系统id
   u   change display/entry units
   v   verify the partition table   //验证分区表
   w   write table to disk and exit   //保存更改并退出
   x   extra functionality (experts only)
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;操作范例&#34;&gt; 操作范例&lt;/h3&gt;
&lt;p&gt;1,删除分区&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Command (m for help): p   //显示分区表

Disk /dev/sda: 32.2 GB, 32212254720 bytes
255 heads, 63 sectors/track, 3916 cylinders, total 62914560 sectors
Units = sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
Disk identifier: 0x000657c3

   Device Boot      Start         End      Blocks   Id  System
/dev/sda1   *        2048    61868031    30932992   83  Linux
/dev/sda2        61870078    62912511      521217    5  Extended
/dev/sda5        61870080    62912511      521216   82  Linux swap / Solaris

Command (m for help): d   //删除分区
Partition number (1-5): 5   //分区号
Command (m for help): d 
Partition number (1-5): 2

Command (m for help): p

Disk /dev/sda: 32.2 GB, 32212254720 bytes
255 heads, 63 sectors/track, 3916 cylinders, total 62914560 sectors
Units = sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
Disk identifier: 0x000657c3

   Device Boot      Start         End      Blocks   Id  System
/dev/sda1   *        2048    61868031    30932992   83  Linux

Command (m for help):
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;2,新建分区&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Command (m for help): n   //新建分区
Partition type:  //分区类型
   p   primary (1 primary, 0 extended, 3 free)  //主分区
   e   extended   //扩展分区
Select (default p):  //默认主分区
Using default response p
Partition number (1-4, default 2):  //分区号，默认升序分配
Using default value 2
First sector (61868032-62914559, default 61868032):   //首sector，默认接着上一分区
Using default value 61868032
Last sector, +sectors or +size{K,M,G} (61868032-62914559, default 62914559): +300M  //容量大小，可用单位K,M,G
Command (m for help): n
Partition type:
   p   primary (2 primary, 0 extended, 2 free)
   e   extended
Select (default p):
Using default response p
Partition number (1-4, default 3):
Using default value 3
First sector (62482432-62914559, default 62482432):
Using default value 62482432
Last sector, +sectors or +size{K,M,G} (62482432-62914559, default 62914559): //默认使用全部剩余容量
Using default value 62914559

Command (m for help): p

Disk /dev/sda: 32.2 GB, 32212254720 bytes
255 heads, 63 sectors/track, 3916 cylinders, total 62914560 sectors
Units = sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
Disk identifier: 0x000657c3

   Device Boot      Start         End      Blocks   Id  System
/dev/sda1   *        2048    61868031    30932992   83  Linux
/dev/sda2        61868032    62482431      307200   83  Linux
/dev/sda3        62482432    62914559      216064   83  Linux

Command (m for help):
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;3,切换可引导标记&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Command (m for help): a  //切换可引导标记
Partition number (1-4): 2   //分区号

Command (m for help): p

Disk /dev/sda: 32.2 GB, 32212254720 bytes
255 heads, 63 sectors/track, 3916 cylinders, total 62914560 sectors
Units = sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
Disk identifier: 0x000657c3

   Device Boot      Start         End      Blocks   Id  System
/dev/sda1   *        2048    61868031    30932992   83  Linux
/dev/sda2   *    61868032    62482431      307200   83  Linux   //已增加可引导标记
/dev/sda3        62482432    62914559      216064   83  Linux

Command (m for help): a
Partition number (1-4): 2

Command (m for help): p

Disk /dev/sda: 32.2 GB, 32212254720 bytes
255 heads, 63 sectors/track, 3916 cylinders, total 62914560 sectors
Units = sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
Disk identifier: 0x000657c3

   Device Boot      Start         End      Blocks   Id  System
/dev/sda1   *        2048    61868031    30932992   83  Linux
/dev/sda2        61868032    62482431      307200   83  Linux   //取消可引导标记
/dev/sda3        62482432    62914559      216064   83  Linux

Command (m for help):
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;4,更改分区类型&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Command (m for help): l   //查看所有分区类型

 0  Empty           24  NEC DOS         81  Minix / old Lin bf  Solaris
 1  FAT12           27  Hidden NTFS Win 82  Linux swap / So c1  DRDOS/sec (FAT-
 2  XENIX root      39  Plan 9          83  Linux           c4  DRDOS/sec (FAT-
 3  XENIX usr       3c  PartitionMagic  84  OS/2 hidden C:  c6  DRDOS/sec (FAT-
 4  FAT16 &amp;lt;32M      40  Venix 80286     85  Linux extended  c7  Syrinx
 5  Extended        41  PPC PReP Boot   86  NTFS volume set da  Non-FS data
 6  FAT16           42  SFS             87  NTFS volume set db  CP/M / CTOS / .
 7  HPFS/NTFS/exFAT 4d  QNX4.x          88  Linux plaintext de  Dell Utility
 8  AIX             4e  QNX4.x 2nd part 8e  Linux LVM       df  BootIt
 9  AIX bootable    4f  QNX4.x 3rd part 93  Amoeba          e1  DOS access
 a  OS/2 Boot Manag 50  OnTrack DM      94  Amoeba BBT      e3  DOS R/O
 b  W95 FAT32       51  OnTrack DM6 Aux 9f  BSD/OS          e4  SpeedStor
 c  W95 FAT32 (LBA) 52  CP/M            a0  IBM Thinkpad hi eb  BeOS fs
 e  W95 FAT16 (LBA) 53  OnTrack DM6 Aux a5  FreeBSD         ee  GPT
 f  W95 Ext&#39;d (LBA) 54  OnTrackDM6      a6  OpenBSD         ef  EFI (FAT-12/16/
10  OPUS            55  EZ-Drive        a7  NeXTSTEP        f0  Linux/PA-RISC b
11  Hidden FAT12    56  Golden Bow      a8  Darwin UFS      f1  SpeedStor
12  Compaq diagnost 5c  Priam Edisk     a9  NetBSD          f4  SpeedStor
14  Hidden FAT16 &amp;lt;3 61  SpeedStor       ab  Darwin boot     f2  DOS secondary
16  Hidden FAT16    63  GNU HURD or Sys af  HFS / HFS+      fb  VMware VMFS
17  Hidden HPFS/NTF 64  Novell Netware  b7  BSDI fs         fc  VMware VMKCORE
18  AST SmartSleep  65  Novell Netware  b8  BSDI swap       fd  Linux raid auto
1b  Hidden W95 FAT3 70  DiskSecure Mult bb  Boot Wizard hid fe  LANstep
1c  Hidden W95 FAT3 75  PC/IX           be  Solaris boot    ff  BBT
1e  Hidden W95 FAT1 80  Old Minix

Command (m for help): t  //更改分区类型
Partition number (1-4): 2  //分区号
Hex code (type L to list codes): 82 //82号:交换分区
Changed system type of partition 2 to 82 (Linux swap / Solaris)

Command (m for help): p

Disk /dev/sda: 32.2 GB, 32212254720 bytes
255 heads, 63 sectors/track, 3916 cylinders, total 62914560 sectors
Units = sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
Disk identifier: 0x000657c3

   Device Boot      Start         End      Blocks   Id  System
/dev/sda1   *        2048    61868031    30932992   83  Linux
/dev/sda2        61868032    62482431      307200   82  Linux swap / Solaris   //已更改为交换分区
/dev/sda3        62482432    62914559      216064   83  Linux

Command (m for help):&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>推荐几个Xposed模块</title>
      <link>https://unixetc.com/post/the-xposed-module-is-recommended/</link>
      <pubDate>Sat, 14 Mar 2015 13:23:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/the-xposed-module-is-recommended/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;MinMinGuard&lt;/li&gt;
&lt;li&gt;Statusbar Scroll to Top&lt;/li&gt;
&lt;li&gt;WiFiKeyView&lt;/li&gt;
&lt;li&gt;SwipeBack&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/xposed_modules.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>入手树莓派2 Model B</title>
      <link>https://unixetc.com/post/starting-raspberry-pi-2-model-b/</link>
      <pubDate>Thu, 12 Mar 2015 23:12:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/starting-raspberry-pi-2-model-b/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/raspi2.webp&#34; alt=&#34;Raspberry Pi 2 Model B正面&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/raspi2_b.webp&#34; alt=&#34;Raspberry Pi 2 Model B背面&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;树莓派 2 Mode B 配置详情&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;A 900MHz quad-core ARM Cortex-A7 CPU&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;1GB RAM&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;4 USB ports&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;40 GPIO pins&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Full HDMI port&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Ethernet port&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Combined 3.5mm audio jack and composite video&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Camera interface (CSI)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Display interface (DSI)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Micro SD card slot&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;VideoCore IV 3D graphics core&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>组装ATRIX 4G Laptop Dock和树莓派</title>
      <link>https://unixetc.com/post/assemble-atrix-4g-pc-docking-and-raspberry-pi/</link>
      <pubDate>Sat, 28 Feb 2015 02:28:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/assemble-atrix-4g-pc-docking-and-raspberry-pi/</guid>
      <description>&lt;p&gt;清单如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Raspberry Pi B+&lt;/li&gt;
&lt;li&gt;Laptop Dock for Motorola ATRIX 4G&lt;/li&gt;
&lt;li&gt;Micro-HDMI 母对母转接头&lt;/li&gt;
&lt;li&gt;HDMI-Micro HDMI 公对公连接线&lt;/li&gt;
&lt;li&gt;Micro USB 母对母延长线&lt;/li&gt;
&lt;li&gt;USB-Micro USB充电线一根&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;以下为实物图:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/laptopdock.webp&#34; alt=&#34;Laptop Dock for Motorola ATRIX 4G&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/microhdmigg.webp&#34; alt=&#34;Micro HDMI 母对母转接头&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/hdmimicrohdmi.webp&#34; alt=&#34;HDMI Micro HDMI 公对公连接线&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/mircousbmm.webp&#34; alt=&#34;Micro USB 母对母延长线&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/usbcabe.webp&#34; alt=&#34;USB-Micro USB充电线一根&#34;&gt;&lt;/p&gt;
&lt;p&gt;操作:&lt;/p&gt;
&lt;p&gt;主要是将一个Micro USB母口和一对USB/Micro USb公口相连，然后就可以通过Laptop Dock进行供电，并且链接Laptop Dock键盘。&lt;/p&gt;
&lt;p&gt;下图是一张Laptop Dock接口的照片:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/dockport.webp&#34; alt=&#34;Laptop Dock接口&#34;&gt;&lt;/p&gt;
&lt;p&gt;以下为USB引脚定义:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;红 电源+&lt;/li&gt;
&lt;li&gt;白 数据-&lt;/li&gt;
&lt;li&gt;绿 数据+&lt;/li&gt;
&lt;li&gt;黑 接地&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;因此需要将Laptop上的Micro USB引出的电路进行改造，将其中的&lt;strong&gt;电源&lt;/strong&gt;接到Micro USB公口上给树莓派供电，将&lt;strong&gt;数据&lt;/strong&gt;接到USB公口上链接键盘，线路改造图示如下:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/dockwithrspi.png&#34; alt=&#34;线路改造图示&#34;&gt;&lt;/p&gt;
&lt;p&gt;接下来就是考验动手能力了，完成后的实物图如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/1f2usb.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/wctlr.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>树莓派安装TP WN322G&#43;驱动</title>
      <link>https://unixetc.com/post/raspberry-pi-install-tp-wn322g-drivers/</link>
      <pubDate>Sat, 07 Feb 2015 12:27:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/raspberry-pi-install-tp-wn322g-drivers/</guid>
      <description>&lt;p&gt;首先查看usb设备&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pi@raspi ~ $ lsusb
Bus 001 Device 002: ID 0424:9514 Standard Microsystems Corp.
Bus 001 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub
Bus 001 Device 003: ID 0424:ec00 Standard Microsystems Corp.
Bus 001 Device 004: ID 0ace:1215 ZyDAS ZD1211B 802.11g
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;注意，最后一行为无线网卡信息&lt;/p&gt;
&lt;p&gt;打开&lt;a href=&#34;https://wiki.debian.org/WiFi&#34;&gt;https://wiki.debian.org/WiFi&lt;/a&gt;，查看是否有对照型号的固件&lt;/p&gt;
&lt;p&gt;安装对应的固件&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pi@raspi ~ $ sudo apt-get install zd1211-firmware
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;完成后使用&lt;code&gt;iwconfig&lt;/code&gt;检查是否已经安装成功&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pi@raspi ~ $ iwconfig
wlan0     IEEE 802.11bg  ESSID:off/any
          Mode:Managed  Access Point: Not-Associated   Tx-Power=20 dBm
          Retry  long limit:7   RTS thr:off   Fragment thr:off
          Power Management:off

lo        no wireless extensions.

eth0      no wireless extensions.&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>使用youtube-dl下载YouTube视频</title>
      <link>https://unixetc.com/post/use-youtube-dl-to-download-youtube-video/</link>
      <pubDate>Thu, 08 Jan 2015 11:28:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/use-youtube-dl-to-download-youtube-video/</guid>
      <description>&lt;h3 id=&#34;什么是youtube-dl&#34;&gt;什么是youtube-dl&lt;/h3&gt;
&lt;p&gt;youtube-dl是一个简单的下载youtube视频脚本工具，基于Python。&lt;/p&gt;
&lt;h3 id=&#34;安装youtube-dl&#34;&gt;安装youtube-dl&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;官方安装方法&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo curl https://yt-dl.org/latest/youtube-dl -o /usr/local/bin/youtube-dl
sudo chmod a+x /usr/local/bin/youtube-dl
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;或者&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo wget https://yt-dl.org/downloads/latest/youtube-dl -O /usr/local/bin/youtube-dl
sudo chmod a+x /usr/local/bin/youtube-dl
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;还有两种方法:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo pip install youtube-dl
brew install youtube-dl
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;使用youtube-dl&#34;&gt;使用youtube-dl&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;youtube-dl [OPTIONS] URL [URL...]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;youtube-dl官网&lt;/strong&gt; &lt;a href=&#34;https://github.com/rg3/youtube-dl/&#34;&gt;https://github.com/rg3/youtube-dl/&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>树莓派设置时区和ntp时间同步</title>
      <link>https://unixetc.com/post/raspberry-pi-set-timezone-and-ntp/</link>
      <pubDate>Fri, 26 Dec 2014 14:23:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/raspberry-pi-set-timezone-and-ntp/</guid>
      <description>&lt;h3 id=&#34;设置时区&#34;&gt;设置时区&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;使用&lt;code&gt;raspi-config&lt;/code&gt;设置&lt;/p&gt;
&lt;p&gt;raspi-config&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Internationalisation Options -&amp;gt;  Change Timezone&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;
&lt;p&gt;使用&lt;code&gt;tzselect&lt;/code&gt;设置&lt;/p&gt;
&lt;p&gt;tzselect&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;然后根据提示，选择时区&lt;/p&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;
&lt;p&gt;手动设置**/etc/localtime**&lt;/p&gt;
&lt;p&gt;rm /etc/localtime
ln -s /usr/share/zoneinfo/Asia/Shanghai /etc/localtime&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;安装配置ntp&#34;&gt;安装配置NTP&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;sudo apt-get install ntp ntpdate
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;编辑&lt;code&gt;ntp&lt;/code&gt;配置文件**/etc/ntp.conf**，添加以下内容&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;server 0.asia.pool.ntp.org
server 1.asia.pool.ntp.org
server 2.asia.pool.ntp.org
server 3.asia.pool.ntp.org
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;重启ntp服务&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;service ntp restart&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Mapinfo中通过SQL查询筛选区域点</title>
      <link>https://unixetc.com/post/mapinfo-iris-out-points-with-sql-select/</link>
      <pubDate>Wed, 24 Dec 2014 12:24:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/mapinfo-iris-out-points-with-sql-select/</guid>
      <description>&lt;p&gt;Mapinfo中有一批离散点，现在需要把一部分点筛选出来，可以使用SQL查询功能导出。&lt;/p&gt;
&lt;p&gt;首先，打开需要筛选的图层：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/2126470077.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后打开装饰层可编辑：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/2287001872.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;设置不规则图形样式，建议将填充去掉只留下边框：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/1223917062.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;使用不规则图形圈出所需要的采样点&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注意：边线不要压着采样点，被压线的采样点不算做圈选有效。&lt;/strong&gt;
&lt;img src=&#34;http://cdn.lyq.wiki/imgs/2381800210.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Map&lt;/strong&gt;-&amp;gt;&lt;strong&gt;Save Cosmetic Objects&lt;/strong&gt;  保存装饰图层，这里取名&lt;strong&gt;123&lt;/strong&gt;
&lt;img src=&#34;http://cdn.lyq.wiki/imgs/2252925310.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后使用SQL查询功能进行查询&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/3149415981.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;SQL查询时，选择需要交叉的两个图层&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/1938280739.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;查询完成后，&lt;strong&gt;Table&lt;/strong&gt;-&amp;gt;&lt;strong&gt;Export&lt;/strong&gt; 导出查询结果
&lt;img src=&#34;http://cdn.lyq.wiki/imgs/204486118.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;导出时设置参考下图，可选择**.mif**、**.txt**、**.csv**格式
&lt;img src=&#34;http://cdn.lyq.wiki/imgs/2183870599.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>梦 20141216</title>
      <link>https://unixetc.com/post/dream-20141216/</link>
      <pubDate>Wed, 17 Dec 2014 12:17:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/dream-20141216/</guid>
      <description>&lt;p&gt;托姐姐的关系，可以回到初中复读了，心情很激动。&lt;/p&gt;
&lt;p&gt;有一次体验了中学食堂的大锅饭，吃饭时人山人海，貌似身上钱不够，就买了份麻辣豆腐，做成麻辣豆腐渣了，应该盛了一碗，一大口喝完了! 对，确实是喝完了。&lt;/p&gt;
&lt;p&gt;该到上课了，第一次上课去找分班表。&lt;/p&gt;
&lt;p&gt;四层的教学楼，每隔班级外面都贴的大字报，红纸黑字，上面写着分班名单。&lt;/p&gt;
&lt;p&gt;从上到下找了半天都没找到我的名字，最后一晃眼发现最底下有个大字报就我一个人的名字，一看班级，:-O 初三1班 ，哈哈哈&lt;/p&gt;
&lt;p&gt;看来有熟人就是不错，补习生大部分都分到后面的几个班级了，就我一人分到了1班，窃喜中……&lt;/p&gt;
&lt;p&gt;被旁边的刘凯鄙视了一把，开始上课了  梦醒！&lt;/p&gt;
&lt;p&gt;刘凯：现在的同事。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Linux VPS中安装Shadowsocks</title>
      <link>https://unixetc.com/post/linux-vps-install-shadowsocks/</link>
      <pubDate>Sat, 13 Dec 2014 23:12:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/linux-vps-install-shadowsocks/</guid>
      <description>&lt;p&gt;&lt;strong&gt;VPS系统版本:&lt;/strong&gt; Ubuntu 12.04 32bit&lt;/p&gt;
&lt;h3 id=&#34;最简单的办法&#34;&gt;最简单的办法&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;#apt-get install python-pip
#pip install shadowsocks
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;启动Shadowsock&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#ssserver -p 4000 -k sss4k -d start
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;-p&lt;/code&gt;后定义端口号，&lt;code&gt;-k&lt;/code&gt;后面设定密码，&lt;code&gt;-d start&lt;/code&gt;代表以&lt;strong&gt;daemon&lt;/strong&gt;方式启动&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;下面是另外一种方法:&lt;/p&gt;
&lt;h3 id=&#34;安装shadowsocks-libev&#34;&gt;安装shadowsocks-libev&lt;/h3&gt;
&lt;p&gt;先用&lt;code&gt;aptitude show&lt;/code&gt;查看libssl-dev版本&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;aptitude show libssl-dev
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后根据版本执行以下修改：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;libssl &amp;gt; 1.0.1&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在&lt;code&gt;/etc/apt/sources.list&lt;/code&gt;添加下行：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;deb http://shadowsocks.org/debian wheezy main
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;libssl &amp;gt; 0.9.8 但 &amp;lt; 1.0.0&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在&lt;code&gt;/etc/apt/sources.list&lt;/code&gt;添加下行：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;deb http://shadowsocks.org/debian squeeze main
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;添加GPG&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;wget http://shadowsocks.org/debian/1D27208A.gpg
sudo apt-key add 1D27208A.gpg
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;添加完成后更新软件源，然后安装shadowsocks&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo apt-get update
sudo apt-get install python-m2crypto
sudo apt-get install shadowsocks-libev
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;配置管理shadowsocks服务&#34;&gt;配置/管理shadowsocks服务&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;配置&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo vim /etc/shadowsocks-libev/config.json
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;以下为一则配置实例：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;root@hkvps:~# cat /etc/shadowsocks-libev/config.json 
{
    &amp;quot;server&amp;quot;:&amp;quot;118.193.151.193&amp;quot;,
    &amp;quot;server_port&amp;quot;:&amp;quot;8388&amp;quot;,
    &amp;quot;local_port&amp;quot;:&amp;quot;1080&amp;quot;,
    &amp;quot;password&amp;quot;:&amp;quot;foolish&amp;quot;,
    &amp;quot;timeout&amp;quot;:&amp;quot;60&amp;quot;,
    &amp;quot;method&amp;quot;:&amp;quot;aes-256-cfb&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;管理shadowsocks服务&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo /etc/init.d/shadowsocks-libev start  //开启服务
sudo /etc/init.d/shadowsocks-libev stop   //关闭服务&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>树莓派挂载U盘</title>
      <link>https://unixetc.com/post/raspberry-pi-mount-udisk-as-the-storage-partition/</link>
      <pubDate>Thu, 11 Dec 2014 21:21:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/raspberry-pi-mount-udisk-as-the-storage-partition/</guid>
      <description>&lt;p&gt;树莓派用的是8g的TF卡，想作为小型NAS有点小，存不了多少东西，于是将一个闲置的32G U盘挂载上，当作存储分区&lt;/p&gt;
&lt;p&gt;以下为操作过程：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;查看磁盘信息&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pi@raspberrypi ~ $ sudo fdisk -l

Disk /dev/mmcblk0: 7990 MB, 7990149120 bytes
4 heads, 16 sectors/track, 243840 cylinders, total 15605760 sectors
Units = sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
Disk identifier: 0x000981cb

        Device Boot      Start         End      Blocks   Id  System
/dev/mmcblk0p1            8192      122879       57344    c  W95 FAT32 (LBA)
/dev/mmcblk0p2          122880    15605759     7741440   83  Linux

Disk /dev/sda: 32.2 GB, 32229031936 bytes
255 heads, 63 sectors/track, 3918 cylinders, total 62947328 sectors
Units = sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
Disk identifier: 0x15a8a090

   Device Boot      Start         End      Blocks   Id  System
/dev/sda1            2048    62947327    31472640    f  W95 Ext&#39;d (LBA)
/dev/sda5            4096    62947327    31471616    7  HPFS/NTFS/exFAT
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;这里看到，&lt;strong&gt;/dev/sda&lt;/strong&gt;为32G的磁盘，分区格式为NTFS，现在就是要将改磁盘挂载为linux分区。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;编辑分区&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pi@raspberrypi ~ $ sudo fdisk /dev/sda

Command (m for help): p   //查看分区信息

Disk /dev/sda: 32.2 GB, 32229031936 bytes
255 heads, 63 sectors/track, 3918 cylinders, total 62947328 sectors
Units = sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
Disk identifier: 0x15a8a090

   Device Boot      Start         End      Blocks   Id  System
/dev/sda1            2048    62947327    31472640    f  W95 Ext&#39;d (LBA)
/dev/sda5            4096    62947327    31471616    7  HPFS/NTFS/exFAT

Command (m for help): d //删除分区
Partition number (1-5): 5

Command (m for help): p

Disk /dev/sda: 32.2 GB, 32229031936 bytes
255 heads, 63 sectors/track, 3918 cylinders, total 62947328 sectors
Units = sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
Disk identifier: 0x15a8a090

   Device Boot      Start         End      Blocks   Id  System

Command (m for help): m //查看命令
Command action
   a   toggle a bootable flag
   b   edit bsd disklabel
   c   toggle the dos compatibility flag
   d   delete a partition
   l   list known partition types
   m   print this menu
   n   add a new partition
   o   create a new empty DOS partition table
   p   print the partition table
   q   quit without saving changes
   s   create a new empty Sun disklabel
   t   change a partition&#39;s system id
   u   change display/entry units
   v   verify the partition table
   w   write table to disk and exit
   x   extra functionality (experts only)

Command (m for help): n  //新建分区
Partition type:
   p   primary (0 primary, 0 extended, 4 free)
   e   extended
Select (default p):
Using default response p
Partition number (1-4, default 1):
Using default value 1
First sector (2048-62947327, default 2048):
Using default value 2048
Last sector, +sectors or +size{K,M,G} (2048-62947327, default 62947327):
Using default value 62947327

Command (m for help): p

Disk /dev/sda: 32.2 GB, 32229031936 bytes
255 heads, 63 sectors/track, 3918 cylinders, total 62947328 sectors
Units = sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
Disk identifier: 0x15a8a090

   Device Boot      Start         End      Blocks   Id  System
/dev/sda1            2048    62947327    31472640   83  Linux

Command (m for help): w
The partition table has been altered!

Calling ioctl() to re-read partition table.
Syncing disks.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;以上完成后就会新建**/dev/sda1**分区&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;格式化分区&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pi@raspberrypi ~ $ sudo mkfs.ext3 /dev/sda1
mke2fs 1.42.5 (29-Jul-2012)
Filesystem label=
OS type: Linux
Block size=4096 (log=2)
Fragment size=4096 (log=2)
Stride=0 blocks, Stripe width=0 blocks
1970416 inodes, 7868160 blocks
393408 blocks (5.00%) reserved for the super user
First data block=0
Maximum filesystem blocks=0
241 block groups
32768 blocks per group, 32768 fragments per group
8176 inodes per group
Superblock backups stored on blocks:
        32768, 98304, 163840, 229376, 294912, 819200, 884736, 1605632, 2654208,
        4096000

Allocating group tables: done
Writing inode tables: done
Creating journal (32768 blocks): done
Writing superblocks and filesystem accounting information: done
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;挂载U盘&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pi@raspberrypi ~ $ mkdir ussd
pi@raspberrypi ~ $ sudo mount /dev/sda1 ./ussd/
pi@raspberrypi ~ $ df -hal
Filesystem      Size  Used Avail Use% Mounted on
rootfs          7.3G  3.0G  3.9G  44% /
/dev/root       7.3G  3.0G  3.9G  44% /
devtmpfs        211M     0  211M   0% /dev
tmpfs            44M  220K   44M   1% /run
tmpfs           5.0M     0  5.0M   0% /run/lock
proc               0     0     0    - /proc
sysfs              0     0     0    - /sys
tmpfs            88M     0   88M   0% /run/shm
devpts             0     0     0    - /dev/pts
/dev/mmcblk0p1   56M   19M   38M  34% /boot
/dev/sda1        30G   45M   28G   1% /home/pi/ussd
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;开机自动挂载U盘&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;编辑**/etc/fstab**&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pi@raspberrypi ~ $ cat /etc/fstab
proc            /proc           proc    defaults          0       0
/dev/mmcblk0p1  /boot           vfat    defaults          0       2
/dev/mmcblk0p2  /               ext4    defaults,noatime  0       1
/dev/sda1       /home/pi/ussd   ext3    defaults          0       0
# a swapfile is not a swap partition, so no using swapon|off from here on, use  dphys-swapfile     swap[on|off]  for that&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>感冒灵颗粒和穿心莲内酯滴丸</title>
      <link>https://unixetc.com/post/999-ganmaoling-and-chuanxinlian/</link>
      <pubDate>Wed, 26 Nov 2014 11:26:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/999-ganmaoling-and-chuanxinlian/</guid>
      <description>&lt;p&gt;貌似五六年了吧，大病没患过，就只有发烧和感冒，更因为从小鼻炎，感冒尤为难受！&lt;/p&gt;
&lt;p&gt;五六年没打过针，只是自己吃药，偶尔发热高了就加上物理降温法。&lt;/p&gt;
&lt;p&gt;分享一下自己的经验，一般有两类。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;感冒&lt;/li&gt;
&lt;li&gt;感冒加发热&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;对于第一种情况，在轻微吸鼻子，并且有鼻涕的情况下，马上开始喝999感冒灵颗粒，并且注意保暖防风，并且多运动多喝水，别在阴冷的地方常待，多见太阳，一般情况下一盒没喝完就可以转好，要是不幸严重的话，请看第二种情况。&lt;/p&gt;
&lt;p&gt;第二种情况病症较多，鼻涕，喷嚏，发热(&lt;strong&gt;注意还是发热，不是发烧&lt;/strong&gt;),嗓子疼痛。&lt;/p&gt;
&lt;p&gt;一般情况下，要是突然间嗓子开始疼痛，并且口内干渴，那么就注意了，马上吃穿心莲内酯滴丸加999感冒颗粒，一般情况下得有个一天两天的过程，不能间断。生活中就得注意防风、保暖、多喝水、多运动。感冒症状一般恢复的慢，如果在这一两天过程中发热一直不能止住，还有严重的倾向，建议加上物理降温法，如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;开上电热毯被窝里捂出一身汗，马上冲热水澡降温，如此三遍，体温一定有大幅度降低，但是要注意保持，接下来就是卧床好好休息。
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;下列出两种药的说明：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;感冒灵颗粒&lt;/p&gt;
&lt;p&gt;【药品名称】
通用名称：感冒灵颗粒
汉语拼音：Ganmaoling Keli
【成        份】三叉苦、金盏银盘、野菊花、岗梅、咖啡因、对乙酰氨基酚、马来酸氯苯那敏、薄荷油。辅料为蔗糖粉。
【性        状】本品为浅棕色至深棕色颗粒；味甜、微苦。
【功能主治】解热镇痛。用于感冒引起的头痛，发热，鼻塞，流涕，咽痛。        &lt;br&gt;
【规        格】每袋重10克（含对乙酰氨基酚0.2克）
【用法用量】开水冲服，一次10克（1袋），一日3次。
【不良反应】偶见皮疹、荨麻疹、药热及粒细胞减少；可见困倦、嗜睡、口渴、虚弱感；长期大量用药会
导致肝肾功能异常。
【禁        忌】严重肝肾功能不全者禁用。
【注意事项】
1、忌烟、酒及辛辣、生冷、油腻食物。
2、不宜在服药期间同时服用滋补性中成药。
3、本品含对乙酰氨基酚、马来酸氯苯那敏、咖啡因。服用本品期间不得饮酒或含有酒精的饮料；不能同时服用与本品成份相似的其他抗感冒药；肝、肾功能不全者慎用；膀胱颈梗阻、甲状腺功能亢进、青光眼、高血压和前列腺肥大者慎用；孕妇及哺乳期妇女慎用；服药期间不得驾驶机、车、船、从事高空作业、机械作业及操作精密仪器。
4、脾胃虚寒，症见腹痛、喜暖、泄泻者慎用。
5、糖尿病患者及有心脏病等慢性病严重者应在医师指导下服用。
6、儿童、年老体弱者应在医师指导下服用。
7、服药3天后症状无改善，或症状加重，或出现新的严重症状如胸闷、心悸等应立即停药，并去医院就诊。
8、对本品过敏者禁用，过敏体质者慎用。
9、本品性状发生改变时禁止使用。
10、 儿童必须在成人监护下使用。
11、请将本品放在儿童不能接触的地方。
12、如正在服用其他药品，使用本品前请咨询医师或药师。
【药物相互作用】
1、与其他解热镇痛药并用，有增加肾毒性的危险。
2、与其他药物同时使用可能会发生药物相互作用，详情请咨询医师或药师。
【贮        藏】密封。
【包        装】复合膜；每盒装9袋。
【有 效 期】24个月。
【执行标准】国家药典委员会药典业发（1998）第115号文件所附质量标准。
【批准文号】国药准字Z44021940
【说明书修订日期】2007年05月15日&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;穿心莲内酯滴丸&lt;/p&gt;
&lt;p&gt;【功能主治】清热解毒，抗菌消炎。用于呼吸道感染风热证所致的咽痛。
【用法用量】口服，一次1袋，一日三次。
【规 格】每袋含穿心莲内酯0.15克
【贮 藏】 遮光
【有 效 期】 24个月
【国药批准文号】 国药准字Z20040078&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;最终提醒&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果以上办法三天内无法缓解症状，那就及时去医院吧&lt;/li&gt;
&lt;li&gt;物理降温法后请及时换洗床单被套 -_-!&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>树莓派使用Ngrok实例</title>
      <link>https://unixetc.com/post/raspberry-pi-install-ngrok/</link>
      <pubDate>Wed, 26 Nov 2014 11:26:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/raspberry-pi-install-ngrok/</guid>
      <description>&lt;p&gt;首先在ngrok &lt;a href=&#34;https://ngrok.com/&#34;&gt;https://ngrok.com/&lt;/a&gt;注册登录&lt;/p&gt;
&lt;p&gt;架设已经在树莓派上安装了Nginx，端口为80&lt;/p&gt;
&lt;p&gt;那么下载Linux/ARM版ngrok到树莓派，执行如下命令：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ngrok -authtoken UfATi0wi98gGMqQ+/GsP 80
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;其中&lt;strong&gt;UfATi0wi98gGMqQ+/GsP&lt;/strong&gt;为你的auth token&lt;/p&gt;
&lt;p&gt;然后就会出现如下提示:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Forwarding    http://36772918.ngrok.com -&amp;gt; 127.0.0.1:80           
Forwarding    https://36772918.ngrok.com -&amp;gt; 127.0.0.1:80          
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;按照提示，可以通过那两个二级域名来浏览web服务。&lt;/p&gt;
&lt;p&gt;以上验证只需要输入一次，下次可以直接使用如下命令来运行&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ngrok 80
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;ngrok其他用法&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;自定义二级域名&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;使用自定义的字符串代替系统分配的数字&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ngrok -subdomain mysubd 80
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;开启密码保护&lt;/p&gt;
&lt;p&gt;ngrok -httpauth &amp;ldquo;user:password&amp;rdquo; 80&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;TCP隧道&lt;/p&gt;
&lt;p&gt;ngrok tcp 22&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>梦 20141118</title>
      <link>https://unixetc.com/post/dream-20141118/</link>
      <pubDate>Wed, 19 Nov 2014 11:19:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/dream-20141118/</guid>
      <description>&lt;p&gt;最近在玩《天龙八部3D》手游，做梦就和这个有关。&lt;/p&gt;
&lt;p&gt;PC与手游的天龙我一直都是玩的少林，不知道为什么，阿弥陀佛！&lt;/p&gt;
&lt;p&gt;梦境中和几个旧友组队刷副本，貌似是七八层的塔，从低向高刷怪，小怪刷完后终于见到boss了，但是貌似抗不住，大家都从顶层被k到地面，最后大家合力将塔扳倒了，希望能有点作用。&lt;/p&gt;
&lt;p&gt;可悲催的时，boss掉到地面上毛事儿都没有，并且高抗高攻，谁都扛不出！！！  艹&lt;/p&gt;
&lt;p&gt;最后只能找肉厚的引着跑，剩下的人将塔由重新竖起来，-_-!&lt;/p&gt;
&lt;p&gt;完后把boss引过来，它就自己去顶层待着了，嘘~~  大家都松了一口气！&lt;/p&gt;
&lt;p&gt;突然发现队伍中有一个好久不见的朋友，名叫江龙旦，记得以前还是一个嫩嫩的小白脸，现在也是胡子拉碴的大汉了！！ 感叹岁月不饶人啊！&lt;/p&gt;
&lt;p&gt;哦，对了，貌似刷副本是公司的任务，所以才有了这回事，算是结合现实了吧&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Shadowsock使用实例</title>
      <link>https://unixetc.com/post/shadowsocks-usage/</link>
      <pubDate>Thu, 13 Nov 2014 11:13:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/shadowsocks-usage/</guid>
      <description>&lt;h3 id=&#34;windows下使用shadowsocks&#34;&gt;Windows下使用shadowsocks&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;安装设置Shadowsocks for Windows&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;推荐&lt;strong&gt;Shadowsocks for Windows&lt;/strong&gt;，项目地址 &lt;a href=&#34;https://github.com/clowwindy/shadowsocks-csharp&#34;&gt;https://github.com/clowwindy/shadowsocks-csharp&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;下载后打开即可，参考以下设置：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Server IP 服务器IP
Server Port 服务器端口
Password 密码
Encryption 加密类型，推荐aes-256-cfb
Proxy Port 代理端口
Remarks 备注
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;完成设置即可。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;使用&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;推荐以下组合：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Firefox+AutoProxy&lt;/li&gt;
&lt;li&gt;Chrome+SwitchSharp&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;代理服务器信息：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;代理地址:127.0.0.1
端口:1080
代理方式:socks5
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;配置&lt;strong&gt;切换规则&lt;/strong&gt;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;勾选:在线规则列表
勾选:AutoProxy兼容列表
URL中输入:http://autoproxy-gfwlist.googlecode.com/svn/trunk/gfwlist.txt
情景模式选择上一步创建的模式.
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;android使用shadowsocks影梭&#34;&gt;Android使用shadowsocks(影梭)&lt;/h3&gt;
&lt;p&gt;影梭下载地址： &lt;a href=&#34;https://play.google.com/store/apps/details?id=com.github.shadowsocks&#34;&gt;https://play.google.com/store/apps/details?id=com.github.shadowsocks&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>修改树莓派Swap</title>
      <link>https://unixetc.com/post/modify-the-raspberry-pi-swap-size/</link>
      <pubDate>Thu, 30 Oct 2014 14:30:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/modify-the-raspberry-pi-swap-size/</guid>
      <description>&lt;p&gt;树莓派的swap大小在&lt;code&gt;/etc/dphys-swapfile&lt;/code&gt;中定义，默认为100M&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pi@raspi:~$ cat /etc/dphys-swapfile 
CONF_SWAPSIZE=1000
pi@raspi:/mnt$ free -h
         total       used       free     shared    buffers     cached
Mem:          437M        36M       401M         0B       2.1M        12M
-/+ buffers/cache:        22M       415M
Swap:          99M         0B        99M
pi@raspi:/mnt$ 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;可以自己修改&lt;code&gt;CONF_SWAPSIZE&lt;/code&gt;的值，单位为兆(MB)&lt;/p&gt;
&lt;p&gt;修改后重启树莓派生效，如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pi@raspi:~$ cat /etc/dphys-swapfile 
CONF_SWAPSIZE=1000
pi@raspi:~$ free -h
             total       used       free     shared    buffers     cached
Mem:          437M        53M       383M         0B       7.9M        23M
-/+ buffers/cache:        22M       415M
Swap:         999M         0B       999M&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>功率单位mW与dBm换算</title>
      <link>https://unixetc.com/post/unit-of-power-mw-and-dbm-conversion/</link>
      <pubDate>Mon, 27 Oct 2014 10:17:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/unit-of-power-mw-and-dbm-conversion/</guid>
      <description>&lt;p&gt;功率/电平（dBm):放大器的输出能力，一般单位为W、mW、dBm。dBm是取1mw作基准值，以分贝表示的绝对功率电平。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;换算公式：&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;电平（dBm）=10lgW
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;示例：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;5W  → 10lg5000  = 37dBm&lt;/li&gt;
&lt;li&gt;10W → 10lg10000 = 40dBm&lt;/li&gt;
&lt;li&gt;20W → 10lg20000 = 43dBm&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;从上不难看出，功率每增加一倍，电平值增加3dBm&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;功率单位mW和dBm的换算表&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/db_dbm.png&#34; alt=&#34;mW和dBm的换算表&#34; title=&#34;mW和dBm的换算表&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>mapinfo用图片制作地图文件</title>
      <link>https://unixetc.com/post/picture-converted-to-tab-map-file/</link>
      <pubDate>Thu, 16 Oct 2014 23:18:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/picture-converted-to-tab-map-file/</guid>
      <description>&lt;p&gt;&lt;strong&gt;获取图片&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;以百度地图为例，制作户县县城范围&lt;/p&gt;
&lt;p&gt;用截图软件，将需要的范围截图保存，如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/hx_img.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;制作TAB&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;用Mapinfo打开图片(hx.png)，会提示是否注册，选择注册(Register)&lt;/p&gt;
&lt;p&gt;然后出现图片注册界面&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/img_reg.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;简单说一下原理问题。&lt;/p&gt;
&lt;p&gt;在图片上找最少3个坐标，然后对应3个实际经纬度信息，为什么最少3个？因为三点确定一个平面嘛！&lt;/p&gt;
&lt;p&gt;下来录入经纬度信息，点击Add，在图片上点一个点，按照提示输入对应的经纬度，如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/add_long_lat.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;经纬度信息可以使用GoogleEarth获得。&lt;/p&gt;
&lt;p&gt;以下是制作完成的情况&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/img_reg_2.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;点击完成后，就会生成一个同名的tab文件(hx.tab)。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>CentOS中Crontab安装和使用</title>
      <link>https://unixetc.com/post/install-crontab-on-centos-and-usage/</link>
      <pubDate>Mon, 22 Sep 2014 19:22:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/install-crontab-on-centos-and-usage/</guid>
      <description>&lt;h4 id=&#34;安装crontab&#34;&gt;安装crontab:&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;[root@CentOS ~]# yum install vixie-cron
[root@CentOS ~]# yum install crontabs
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;说明：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;vixie-cron软件包是cron的主程序；&lt;/li&gt;
&lt;li&gt;crontabs软件包是用来安装、卸装、或列举用来驱动 cron 守护进程的表格的程序。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;cron 是linux的内置服务，但它不自动起来，可以用以下的方法启动、关闭这个服务：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;/sbin/service crond start //启动服务
/sbin/service crond stop //关闭服务
/sbin/service crond restart //重启服务
/sbin/service crond reload //重新载入配置
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;查看crontab服务状态：&lt;code&gt;service crond status&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;手动启动crontab服务：&lt;code&gt;service crond start&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;查看crontab服务是否已设置为开机启动，执行命令：&lt;code&gt;ntsysv&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;加入开机自动启动:&lt;code&gt;chkconfig --level 35 crond on&lt;/code&gt;&lt;/p&gt;
&lt;h4 id=&#34;rontab命令&#34;&gt;rontab命令&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;功能说明：&lt;/strong&gt;
设置计时器。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;语法：&lt;/strong&gt;
crontab [-u &amp;lt;用户名称&amp;gt;][配置文件] 或 crontab [-u &amp;lt;用户名称&amp;gt;][-elr]&lt;/p&gt;
&lt;h4 id=&#34;补充说明&#34;&gt;补充说明：&lt;/h4&gt;
&lt;p&gt;cron是一个常驻服务，它提供计时器的功能，让用户在特定的时间得以执行预设的指令或程序。只要用户会编辑计时器的配置文件，就可以使用计时器的功能。其配置文件格式如下：
Minute Hour Day Month DayOFWeek Command&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;参数:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;-e 　编辑该用户的计时器设置。
-l 　列出该用户的计时器设置。
-r 　删除该用户的计时器设置。
-u&amp;lt;用户名称&amp;gt; 　指定要设定计时器的用户名称。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;crontab-格式&#34;&gt;crontab 格式&lt;/h4&gt;
&lt;p&gt;基本格式 :&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;* *　 *　 *　 *　　command
分　时　日　月　周　 命令
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;第1列表示分钟1～59 每分钟用*或者 */1表示&lt;/li&gt;
&lt;li&gt;第2列表示小时1～23（0表示0点）&lt;/li&gt;
&lt;li&gt;第3列表示日期1～31&lt;/li&gt;
&lt;li&gt;第4列表示月份1～12&lt;/li&gt;
&lt;li&gt;第5列标识号星期0～6（0表示星期天）&lt;/li&gt;
&lt;li&gt;第6列要运行的命令&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;crontab文件的一些例子：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;30 21 * * * /usr/local/etc/rc.d/lighttpd restart
上面的例子表示每晚的21:30重启apache。

45 4 1,10,22 * * /usr/local/etc/rc.d/lighttpd restart
上面的例子表示每月1、10、22日的4 : 45重启apache。

10 1 * * 6,0 /usr/local/etc/rc.d/lighttpd restart
上面的例子表示每周六、周日的1 : 10重启apache。

0,30 18-23 * * * /usr/local/etc/rc.d/lighttpd restart
上面的例子表示在每天18 : 00至23 : 00之间每隔30分钟重启apache。

0 23 * * 6 /usr/local/etc/rc.d/lighttpd restart
上面的例子表示每星期六的11 : 00 pm重启apache。

* */1 * * * /usr/local/etc/rc.d/lighttpd restart
每一小时重启apache

* 23-7/1 * * * /usr/local/etc/rc.d/lighttpd restart
晚上11点到早上7点之间，每隔一小时重启apache

0 11 4 * mon-wed /usr/local/etc/rc.d/lighttpd restart
每月的4号与每周一到周三的11点重启apache

0 4 1 jan * /usr/local/etc/rc.d/lighttpd restart
一月一号的4点重启apache

*/30 * * * * /usr/sbin/ntpdate 210.72.145.44
每半小时同步一下时间
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;crontab命令主要参数&#34;&gt;crontab命令主要参数&lt;/h4&gt;
&lt;p&gt;　　-e ：编辑用户的crontab。&lt;/p&gt;
&lt;p&gt;　　-l　：列出用户的crontab的内容。&lt;/p&gt;
&lt;p&gt;　　-r　：删除用户的crontab的内容。&lt;/p&gt;
&lt;p&gt;　　执行crontab -e，将自动打开编辑器，你可以编辑自己的crontab文件，语法和 /etc/crontab 文件一样，不同的只是，不必再指出执行的用户，编辑后保存即可。&lt;/p&gt;
&lt;p&gt;　　crontab -l用来查看自己的crontab文件内能，crontab -r删除自己的crontab。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>下载Chrome离线安装包</title>
      <link>https://unixetc.com/post/download-the-chrome-offline-installation-package/</link>
      <pubDate>Sat, 30 Aug 2014 08:30:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/download-the-chrome-offline-installation-package/</guid>
      <description>&lt;p&gt;Chrome离线安装包下载地址：&lt;/p&gt;
&lt;p&gt;正式版 &lt;a href=&#34;http://www.google.com/chrome/eula.html?hl=zh-CN&amp;amp;standalone=1&#34;&gt;http://www.google.com/chrome/eula.html?hl=zh-CN&amp;amp;standalone=1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;测试版 &lt;a href=&#34;http://www.google.com/chrome/eula.html?hl=zh-CN&amp;amp;standalone=1&amp;amp;extra=betachannel&#34;&gt;http://www.google.com/chrome/eula.html?hl=zh-CN&amp;amp;standalone=1&amp;amp;extra=betachannel&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;开发版 &lt;a href=&#34;http://www.google.com/chrome/eula.html?hl=zh-CN&amp;amp;standalone=1&amp;amp;extra=devchannel&#34;&gt;http://www.google.com/chrome/eula.html?hl=zh-CN&amp;amp;standalone=1&amp;amp;extra=devchannel&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;下载文件名为&lt;strong&gt;ChromeStandaloneSetup.exe&lt;/strong&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Excel单元格插入换行符</title>
      <link>https://unixetc.com/post/excel-cell-insert-a-newline/</link>
      <pubDate>Wed, 20 Aug 2014 18:20:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/excel-cell-insert-a-newline/</guid>
      <description>&lt;p&gt;一般情况下，单元格插入换行符可以使用&lt;strong&gt;Alt+Enter&lt;/strong&gt;来实现&lt;/p&gt;
&lt;p&gt;但如果需要批量操作的话，那么可以使用 **CHAR(10)**来表示换行符&lt;/p&gt;
&lt;p&gt;实例如下，一看就懂！&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/3447757799.png&#34; alt=&#34;char(10)&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Linux下CLI模式使用Dropbox</title>
      <link>https://unixetc.com/post/cli-model-of-linux-using-dropbox/</link>
      <pubDate>Tue, 19 Aug 2014 08:19:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/cli-model-of-linux-using-dropbox/</guid>
      <description>&lt;h3 id=&#34;下载dropbox&#34;&gt;下载Dropbox&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;32-bit:&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd ~ &amp;amp;&amp;amp; wget -O - &amp;quot;https://www.dropbox.com/download?plat=lnx.x86&amp;quot; | tar xzf -
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;64-bit:&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd ~ &amp;amp;&amp;amp; wget -O - &amp;quot;https://www.dropbox.com/download?plat=lnx.x86_64&amp;quot; | tar xzf -
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;连接到dropbox&#34;&gt;连接到Dropbox&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;~/.dropbox-dist/dropboxd
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;按照提示，在浏览器中打开链接，确认授权。&lt;/p&gt;
&lt;h3 id=&#34;cli模式使用dropbox&#34;&gt;CLI模式使用Dropbox&lt;/h3&gt;
&lt;p&gt;下载执行脚本:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;wget https://www.dropbox.com/download?dl=packages/dropbox.py
chmod +x dropbox.py
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;dropbox.py使用&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;root@hkvps:~# ./dropbox.py help
Dropbox command-line interface
commands:
Note: use dropbox help &amp;lt;command&amp;gt; to view usage for a specific command.

 status       get current status of the dropboxd
 help         provide help
 puburl       get public url of a file in your dropbox
 stop         stop dropboxd
 running      return whether dropbox is running
 start        start dropboxd
 filestatus   get current sync status of one or more files
 ls           list directory contents with current sync status
 autostart    automatically start dropbox at login
 exclude      ignores/excludes a directory from syncing
 lansync      enables or disables LAN sync&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>VC运行库全集</title>
      <link>https://unixetc.com/post/vc-runtime-library-collection/</link>
      <pubDate>Fri, 15 Aug 2014 15:15:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/vc-runtime-library-collection/</guid>
      <description>&lt;p&gt;&lt;strong&gt;VC运行库全集&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;VC2005,VC2008,VC2010,VC2013&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;VC++ Redistributable Package Collection&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;VCRP:
    |   
    +---vcpp_2005
    |       vcredist_x86.exe       
    +---vcpp_2008
    |       vcredist_x86.exe      
    +---vcpp_2010
    |       vcredist_x64.exe
    |       vcredist_x86.exe       
    +---vcpp_2012
    |       vcredist_x64.exe
    |       vcredist_x86.exe
    |       vozqco_70591.exe   
    \---vcpp_2013
        vcredist_arm.exe
        vcredist_x64.exe
        vcredist_x86.exe
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;VC运行库下载地址&lt;strong&gt;&lt;a href=&#34;https://dotbbq.pipipan.com/fs/18418398-315802255&#34;&gt;https://dotbbq.pipipan.com/fs/18418398-315802255&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>树莓派中使用TL-WN725N</title>
      <link>https://unixetc.com/post/use-tl-wn725n-in-raspberry-pi/</link>
      <pubDate>Tue, 12 Aug 2014 18:12:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/use-tl-wn725n-in-raspberry-pi/</guid>
      <description>&lt;p&gt;Raspbian版本 &lt;strong&gt;2014-01-07-wheezy-raspbian.img&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;下载地址为&lt;a href=&#34;http://cdn.lyq.wiki/res/8188eu-20140616.tar.gz&#34;&gt;http://cdn.lyq.wiki/res/8188eu-20140616.tar.gz&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;首先固网链接树莓派，通过SSH登录&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;wget http://cdn.lyq.wiki/res/8188eu_31024_614.zip
unzip 8188eu_31024_614.zip
sudo mv 8188eu.ko /lib/modules/`uname -r`/kernel/drivers/net/wireless
sudo chown root:root /lib/modules/`uname -r`/kernel/drivers/net/wireless/8188eu.ko
sudo mv rtl8188eufw.bin /lib/firmware/rtlwifi/
sudo chown root:root /lib/firmware/rtlwifi/rtl8188eufw.bin
sudo depmod -a
sudo modprobe 8188eu
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后编辑&lt;code&gt;/etc/netwok/interfaces&lt;/code&gt;，添加以下内容&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;allow-hotplug wlan0
auto wlan0

iface wlan0 inet manual
wpa-roam /etc/mywpa.conf
iface default inet dhcp
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;新建&lt;code&gt;mywpa.conf&lt;/code&gt;写入链接配置&lt;code&gt;vi /etc/mywpa.conf&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;network={
ssid=&amp;quot;YOUR SSID&amp;quot;
proto=RSN
key_mgmt=WPA-PSK
pairwise=CCMP TKIP
group=CCMP TKIP
psk=&amp;quot;YOUR PASSWORD&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;重启系统&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>树莓派安装Tonido打造个人云服务</title>
      <link>https://unixetc.com/post/raspberry-pi-install-tonido-build-personal-cloud/</link>
      <pubDate>Tue, 12 Aug 2014 18:12:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/raspberry-pi-install-tonido-build-personal-cloud/</guid>
      <description>&lt;h3 id=&#34;安装tonido&#34;&gt;安装Tonido&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;sudo mkdir /usr/local/tonido
cd /usr/local/tonido
sudo wget http://patch.codelathe.com/tonido/live/installer/armv6l-rpi/tonido.tar.gz
sudo tar -zxvf tonido.tar.gz
./tonido.sh start
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;浏览器打开http://ip:10001开始注册设置 &lt;strong&gt;ip&lt;/strong&gt;为树莓派的地址&lt;/p&gt;
&lt;h3 id=&#34;安装多媒体解码器&#34;&gt;安装多媒体解码器&lt;/h3&gt;
&lt;p&gt;Tonido支持在线播放音频，但需要安装设置解码器&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd /usr/local/tonido
sudo apt-get install ffmpeg
sudo ln -s /usr/bin/ffmpeg ffmpeg.exe
sudo ln -s /usr/bin/ffmpeg ffmpegv.exe
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;设置开机启动&#34;&gt;设置开机启动&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;下载脚本文件&lt;strong&gt;tonido&lt;/strong&gt; &lt;code&gt;wget http://cdn.lyq.wiki/res/tonido&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;设置脚本权限
sudo cp tonido /etc/init.d/
sudo chmod +x /etc/init.d/tonido&lt;/li&gt;
&lt;li&gt;安装脚本
sudo update-rc.d tonido defaults&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;客户端下载&#34;&gt;客户端下载&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Tonido Sync for Windows&lt;/strong&gt; &lt;a href=&#34;http://www.tonido.com/download.php?TonidoSync.exe&#34;&gt;http://www.tonido.com/download.php?TonidoSync.exe&lt;/a&gt;
&lt;strong&gt;Tonido Sync for Mac&lt;/strong&gt; &lt;a href=&#34;http://www.tonido.com/download.php?TonidoSync.dmg&#34;&gt;http://www.tonido.com/download.php?TonidoSync.dmg&lt;/a&gt;
&lt;strong&gt;Tonido Sync for Linux&lt;/strong&gt; &lt;a href=&#34;http://www.tonido.com/download.php?TonidoSyncSetup_i686.deb&#34;&gt;http://www.tonido.com/download.php?TonidoSyncSetup_i686.deb&lt;/a&gt;
&lt;strong&gt;Tonido for iPhone&lt;/strong&gt; &lt;a href=&#34;http://itunes.apple.com/us/app/tonido/id388726418?mt=8&#34;&gt;http://itunes.apple.com/us/app/tonido/id388726418?mt=8&lt;/a&gt;
&lt;strong&gt;Tonido for iPad&lt;/strong&gt; &lt;a href=&#34;http://itunes.apple.com/us/app/tonido/id388726418?mt=8&#34;&gt;http://itunes.apple.com/us/app/tonido/id388726418?mt=8&lt;/a&gt;
&lt;strong&gt;Tonido for Android&lt;/strong&gt; &lt;a href=&#34;https://play.google.com/store/apps/details?id=com.tonido.android&#34;&gt;https://play.google.com/store/apps/details?id=com.tonido.android&lt;/a&gt;
&lt;strong&gt;Tonido for Windows Phone&lt;/strong&gt; &lt;a href=&#34;http://www.windowsphone.com/en-us/store/app/tonido/4eeacbe9-7405-47cc-acd0-f418471f992a&#34;&gt;http://www.windowsphone.com/en-us/store/app/tonido/4eeacbe9-7405-47cc-acd0-f418471f992a&lt;/a&gt;
&lt;strong&gt;Tonido for BlackBerry&lt;/strong&gt; &lt;a href=&#34;http://appworld.blackberry.com/webstore/content/18126?lang=en&#34;&gt;http://appworld.blackberry.com/webstore/content/18126?lang=en&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Centos7下安装NTFS-3G</title>
      <link>https://unixetc.com/post/centos7-install-ntfs-3g/</link>
      <pubDate>Sun, 10 Aug 2014 08:10:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/centos7-install-ntfs-3g/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://unixetc.com/post/centos7-installation-guide/&#34;&gt;Centos7安装指南&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;安装ntfs-3g&#34;&gt;安装NTFS-3G&lt;/h3&gt;
&lt;p&gt;下载&lt;strong&gt;ntfs-3g_ntfsprogs-2014.2.15.tgz&lt;/strong&gt; &lt;a href=&#34;http://cdn.lyq.wiki/res/ntfs-3g_ntfsprogs-2014.2.15.tgz&#34;&gt;http://cdn.lyq.wiki/res/ntfs-3g_ntfsprogs-2014.2.15.tgz&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#tar zxf ntfs-3g_ntfsprogs-2014.2.15.tgz
#cd ntfs-3g_ntfsprogs-2014.2.15
#make
#make install
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;如果make无法成功的话，请重新安装gcc &lt;code&gt;yum install gcc&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;使用ntfs-3g&#34;&gt;使用NTFS-3G&lt;/h3&gt;
&lt;p&gt;临时挂载window分区：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#mkdir /mnt/windowsc/
#mount -t ntfs-3g /dev/sda1 /mnt/windosc/
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;编辑fstab开机挂载分区，可以参考&lt;a href=&#34;https://unixetc.com/post/fstab-automatically-mount-partitions/&#34;&gt;通过fstab自动挂载分区&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;/dev/sda1 /mnt/windowsc ntfs-3g defaults 0 0
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a href=&#34;http://www.tuxera.com/community/ntfs-3g-download/&#34;&gt;NTFS-3G主页&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>CentOS7安装指南</title>
      <link>https://unixetc.com/post/centos7-installation-guide/</link>
      <pubDate>Sat, 09 Aug 2014 08:09:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/centos7-installation-guide/</guid>
      <description>&lt;p&gt;下载Centos7安装镜像: &lt;a href=&#34;http://mirrors.aliyun.com/centos/7.0.1406/isos/x86_64/CentOS-7.0-1406-x86_64-GnomeLive.iso&#34;&gt;http://mirrors.aliyun.com/centos/7.0.1406/isos/x86_64/CentOS-7.0-1406-x86_64-GnomeLive.iso&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;将下载后的镜像写入U盘:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#dd if=CentOS-7.0-1406-x86_64-GnomeLive.iso of=/dev/sdb bs=4M &amp;amp;&amp;amp; sync
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;关闭电脑，从U盘启动。&lt;/p&gt;
&lt;p&gt;进入桌面后，点击&lt;strong&gt;Install to Hard Drive&lt;/strong&gt;开始安装。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/co7i15.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;选择语言&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这里选择&lt;strong&gt;简体中文(中国)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/co7i01.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;安装信息摘要&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这里需要设置四部分内容：&lt;strong&gt;日期和时间&lt;/strong&gt;、&lt;strong&gt;键盘&lt;/strong&gt;、&lt;strong&gt;安装位置&lt;/strong&gt;、&lt;strong&gt;网络和主机名&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/co7i02.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;设置&lt;strong&gt;安装目标和位置&lt;/strong&gt;,选择本地磁盘，然后勾选&lt;strong&gt;我要配置分区&lt;/strong&gt;以自定义分区信息。&lt;/p&gt;
&lt;p&gt;点击&lt;strong&gt;完成&lt;/strong&gt;进入&lt;strong&gt;手动分区&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/co7i03.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;在左侧选择具体磁盘分区，右边编辑挂载信息，然后点击&lt;strong&gt;更新设置&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/co7i04.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;以下为编辑/home挂载点信息：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/co7i05.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;下图为编辑后的分区信息，点击左上角&lt;strong&gt;完成&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/co7i06.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;查看&lt;strong&gt;更改摘要&lt;/strong&gt;，确认没问题了就点击&lt;strong&gt;接受更改&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/co7i07.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;设置&lt;strong&gt;网络和主机名&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/co7i08.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;完成设置后，点击右下角&lt;strong&gt;开始安装&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/co7i09.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;用户设置&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/co7i10.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;设置&lt;strong&gt;ROOT密码&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/co7i11.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;创建用户&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/co7i12.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;所有配置完成后，等待安装结束。。。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/co7i13.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;提示安装完成，点击右下角&lt;strong&gt;Quit&lt;/strong&gt;退出。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/co7i14.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Centos7配置grub添加windows引导菜单</title>
      <link>https://unixetc.com/post/centos7-configuration-grub-to-add-the-windows-boot-menu/</link>
      <pubDate>Sat, 09 Aug 2014 08:09:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/centos7-configuration-grub-to-add-the-windows-boot-menu/</guid>
      <description>&lt;p&gt;进入&lt;code&gt;/etc/grub.d/&lt;/code&gt;目录&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#cd /etc/grub.d/
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;新建&lt;code&gt;15_Windows&lt;/code&gt;文件，写入以下内容：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#! /bin/sh -e
echo &amp;quot;#Adding Windows&amp;quot; &amp;gt;&amp;amp;2
cat &amp;lt;&amp;lt; EOF
menuentry &amp;quot;Windows&amp;quot; {
set root=(hd0,1)
chainloader +1
}
EOF
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;其中(hd0,1)是本地磁盘windows主扇区号，可以通过&lt;code&gt;fdisk -l&lt;/code&gt;来查看确定。&lt;/p&gt;
&lt;p&gt;设定文件权限&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#chmod 755 15_Windows
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;编辑&lt;code&gt;/etc/default/grub&lt;/code&gt;来设定菜单等待时间&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;GRUB_TIMEOUT=2
GRUB_DISTRIBUTOR=&amp;quot;$(sed &#39;s, release .*$,,g&#39; /etc/system-release)&amp;quot;
GRUB_DEFAULT=saved
GRUB_DISABLE_SUBMENU=true
GRUB_TERMINAL_OUTPUT=&amp;quot;console&amp;quot;
GRUB_CMDLINE_LINUX=&amp;quot;vconsole.keymap=us crashkernel=auto  vconsole.font=latarcyrheb-sun16 rhgb quiet&amp;quot;
GRUB_DISABLE_RECOVERY=&amp;quot;true&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;修改&lt;strong&gt;GRUB_TIMEOUT&lt;/strong&gt;值即可。&lt;/p&gt;
&lt;p&gt;设置Windows为默认启动项&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#grub2-set-default &amp;quot;windows&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;然后运行以下命令，使以上修改生效：&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# grub2-mkconfig -o /boot/grub2/grub.cfg&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>华为C8817L解锁与Root</title>
      <link>https://unixetc.com/post/huawei-c8817l-unlock-and-root/</link>
      <pubDate>Thu, 07 Aug 2014 18:17:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/huawei-c8817l-unlock-and-root/</guid>
      <description>&lt;h3 id=&#34;解锁&#34;&gt;解锁&lt;/h3&gt;
&lt;p&gt;解锁Bootloader首先需要获得解锁码，以下为官方解锁页：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;获取解锁码&lt;/strong&gt; &lt;a href=&#34;http://www.emui.com/plugin.php?id=unlock&amp;amp;mod=detail&#34;&gt;http://www.emui.com/plugin.php?id=unlock&amp;amp;mod=detail&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/unlock_sumbit.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;提交成功后会获得16位的解锁码。&lt;/p&gt;
&lt;p&gt;下载以下两个文件：&lt;/p&gt;
&lt;p&gt;c8817l驱动 &lt;a href=&#34;http://pan.baidu.com/s/1jG3fBhW&#34;&gt;http://pan.baidu.com/s/1jG3fBhW&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;google adb工具包 &lt;a href=&#34;http://pan.baidu.com/s/1dDpI77b&#34;&gt;http://pan.baidu.com/s/1dDpI77b&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;安装好驱动城区，解开adb工具包，cmd进入adb包目录。&lt;/p&gt;
&lt;p&gt;关机，同时按住&lt;strong&gt;音量下&lt;/strong&gt;和&lt;strong&gt;电源键&lt;/strong&gt;开机，进入到fastboot模式。&lt;/p&gt;
&lt;p&gt;usb链接电脑，参考以下解锁：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/unlock_c8817l.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;其中&lt;code&gt;fastboot oem unlock&lt;/code&gt;后为16位解锁码&lt;/p&gt;
&lt;p&gt;解锁成功后手机会自动重启。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;进入开发者模式&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;关于&lt;/strong&gt;-&amp;gt;点击4次&lt;strong&gt;版本号&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;root&#34;&gt;Root&lt;/h3&gt;
&lt;p&gt;360一键root,其他不多说了！&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>结合Jekyll与Github Page建立免费博客</title>
      <link>https://unixetc.com/post/create-a-free-blog-with-jekyll-and-github-page/</link>
      <pubDate>Wed, 16 Jul 2014 07:16:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/create-a-free-blog-with-jekyll-and-github-page/</guid>
      <description>&lt;h3 id=&#34;安装jekyll&#34;&gt;安装Jekyll&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://unixetc.com/post/install-jekyll-on-windows/&#34;&gt;Windows下安装Jekyll&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://unixetc.com/post/install-jekyll-on-debian/&#34;&gt;Debian下安装Jekyll&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;jekyll使用&#34;&gt;Jekyll使用&lt;/h3&gt;
&lt;p&gt;待补充&lt;/p&gt;
&lt;h3 id=&#34;将jekyll内容发布到github&#34;&gt;将Jekyll内容发布到Github&lt;/h3&gt;
&lt;p&gt;首先登录Github，新建一个&lt;code&gt;用户名.github.com&lt;/code&gt;的&lt;strong&gt;repositories&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;然后将该 Repositories clone到本地文件夹。&lt;/p&gt;
&lt;p&gt;在本地文件夹生成Jekyll站点，然后使用&lt;code&gt;jekyll server&lt;/code&gt;生成内容。&lt;/p&gt;
&lt;p&gt;下来将生成后的内容发布到Github&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git add --all
git commit -m &amp;quot;Update&amp;quot;
git remote add origin git@github.com:用户名/用户名.github.com.git
git push origin master
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;设置自定义域名&#34;&gt;设置自定义域名&lt;/h3&gt;
&lt;p&gt;在Jekyll站点目录中新建CNAME文件，写入域名&lt;/p&gt;
&lt;p&gt;然后将域名&lt;code&gt;A记录&lt;/code&gt;指向github提供的ip地址&lt;code&gt;204.232.175.78或207.97.227.245&lt;/code&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>创建固定大小的文件</title>
      <link>https://unixetc.com/post/create-a-fixed-size-file/</link>
      <pubDate>Thu, 10 Jul 2014 07:10:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/create-a-fixed-size-file/</guid>
      <description>&lt;p&gt;有时我们需要新建指定大小的文件，很多人可能使用压缩软件的分割功能，分割出指定大小的文件。&lt;/p&gt;
&lt;p&gt;其实操作系统本身自带的命令就可以胜任以上任务。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Windows&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;新建名为1G-File，大小1G的文件&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;fsutil file createnew 1G-File 1073741824
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Linux&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;新建名为2G-File，大小为2G的文件&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;dd if=/dev/zero  of=./2G-File bs=1M count=2048&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Typecho主题aquan</title>
      <link>https://unixetc.com/post/typecho-theme-aquan/</link>
      <pubDate>Tue, 24 Jun 2014 12:23:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/typecho-theme-aquan/</guid>
      <description>&lt;p&gt;最近恢复了博客，弄了个新皮亮相，欢迎大家围观！&lt;/p&gt;
&lt;p&gt;名称:aquan
平台:typecho
预览图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/aquan_review.webp&#34; alt=&#34;aquan&#34;&gt;&lt;/p&gt;
&lt;p&gt;下载 &lt;a href=&#34;http://cdn.lyq.wiki/res/aquan_theme.zip&#34;&gt;aquan_theme.zip&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>树莓派配置VNC</title>
      <link>https://unixetc.com/post/raspberry-pi-configuration-vnc/</link>
      <pubDate>Tue, 11 Mar 2014 00:23:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/raspberry-pi-configuration-vnc/</guid>
      <description>&lt;p&gt;&lt;strong&gt;安装VNC Server&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$sudo apt-get install tightvncserver
$sudo apt-get install ttf-wqy-microhei //安装中文字体
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;使用VNC Server&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$vncserver -geometry 1024x768 //分辨率，推荐960x640，或者640x480
$vncserver -kill :1  //结束vncserver进程
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Real VNC Viewer&lt;/strong&gt;链接方法： 192.168.1.2:1&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/raspi_vnc_viewer.webp&#34; alt=&#34;VNC&#34; title=&#34;VNC&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>树莓派修改软件源</title>
      <link>https://unixetc.com/post/raspberry-pi-modify-software-source/</link>
      <pubDate>Mon, 10 Mar 2014 12:31:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/raspberry-pi-modify-software-source/</guid>
      <description>&lt;p&gt;中国国内推荐阿里云的开源镜像服务，地址为&lt;a href=&#34;http://mirrors.aliyun.com/&#34;&gt;http://mirrors.aliyun.com/&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;vi /etc/apt/sources.list
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;将默认的raspbian.org源注释(#)掉，加入阿里云的raspbian源&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;deb http://mirrors.aliyun.com/raspbian/raspbian/ jessie main non-free contrib
deb-src http://mirrors.aliyun.com/raspbian/raspbian/ jessie main non-free contrib
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;更新系统&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;apt-get update&amp;amp;&amp;amp;apt-get upgrade -y&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>HDMI简介</title>
      <link>https://unixetc.com/post/hdmi-description/</link>
      <pubDate>Tue, 04 Mar 2014 13:12:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/hdmi-description/</guid>
      <description>&lt;h3 id=&#34;什么是hdmi&#34;&gt;什么是HDMI&lt;/h3&gt;
&lt;p&gt;高清晰度多媒体接口（High Definition Multimedia Interface，简称HDMI）是一种全数字化图像和声音传送接口，可以传送未压缩的音频及视频信号。HDMI可用于机顶盒、DVD播放机、个人计算机、电视游乐器、综合扩大机、数字音响与电视机等设备。HDMI可以同时传送音频和影音信号，由于音频和视频信号采用同一条电缆，大大简化了系统线路的安装难度。&lt;/p&gt;
&lt;p&gt;HDMI是被设计来取代较旧的模拟影音传送接口如SCART或RCA等端子的。它支持各类电视与计算机图像格式，包括SDTV、HDTV视频画面，再加上多声道数字音频。&lt;/p&gt;
&lt;h3 id=&#34;hdmi规格&#34;&gt;HDMI规格&lt;/h3&gt;
&lt;p&gt;HDMI分为A、B、C、D四种规格。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/hdmitype.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;HDMI A Type&lt;/p&gt;
&lt;p&gt;HDMI A Type应用于HDMI1.0版本，总共有19pin, 规格为4.45 mm × 13.9 mm，为最常见的HDMI接头规格, 相对等于DVI Single-Link传输。在HDMI 1.2a之前, 最大能传输165MHz的TMDS, 所以最大传输规格只能在于1600x1200(TMDS 162.0 MHz)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;HDMI B Type&lt;/p&gt;
&lt;p&gt;应用于HDMI1.0版本，规格为4.45 mm × 21.2 mm，总共有29pin, 可传输HDMI A type两倍的TMDS数据量, 相对等于DVI Dual-Link传输, 用于传输高分辨率(WQXGA 2560x1600以上)，&lt;strong&gt;此类接口未应用在任何产品中&lt;/strong&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;HDMI C Type&lt;/p&gt;
&lt;p&gt;俗称&lt;strong&gt;Mini HDMI&lt;/strong&gt;，应用于HDMI1.3版本，总共有19pin, 可以说是缩小版的HDMI A type, 规格为2.42 mm × 10.42 mm，但脚位定义有所改变。 主要是用在便携式设备上, 例如DV、数码相机、便携式多媒体播放机等。由于大小所限，一些显卡会使用mini-HDMI，用家须使用转接头转成标准大小的Type A再连接显示屏。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;HDMI D Type&lt;/p&gt;
&lt;p&gt;也称为&lt;strong&gt;Micro HDMI&lt;/strong&gt;应用于HDMI1.4版本，总共有19pin, 规格为2.8 mm × 6.4 mm，但脚位定义有所改变。Micro HDMI接口将比现在19针Mini HDMI版接口小50％左右，可为相机、手机等便携设备带来最高1080p的分辨率支持及最快5GB的传输速度。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>树莓派与DNSPod动态域名解析</title>
      <link>https://unixetc.com/post/raspberry-pi-and-dnspod-dynamic-dns/</link>
      <pubDate>Mon, 03 Mar 2014 03:03:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/raspberry-pi-and-dnspod-dynamic-dns/</guid>
      <description>&lt;p&gt;&lt;strong&gt;所需条件&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Raspberry Pi&lt;/li&gt;
&lt;li&gt;TP-Link路由器&lt;/li&gt;
&lt;li&gt;DNSPod帐户&lt;/li&gt;
&lt;li&gt;域名&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;配置路由器&#34;&gt;配置路由器&lt;/h3&gt;
&lt;p&gt;进入路由器的&lt;strong&gt;DHCP服务器&lt;/strong&gt;-&amp;gt;&lt;strong&gt;静态地址分配&lt;/strong&gt;菜单，为Raspberry Pi分配静态IP地址，例如：&lt;code&gt;192.168.1.200&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;进入路由器的&lt;strong&gt;安全功能&lt;/strong&gt;-&amp;gt;&lt;strong&gt;远端WEB管理&lt;/strong&gt;菜单，设置&lt;code&gt;WEB管理端口&lt;/code&gt;为一个&lt;strong&gt;非80&lt;/strong&gt;值，例如82&lt;/p&gt;
&lt;p&gt;进入路由器的&lt;strong&gt;转发规则&lt;/strong&gt;-&amp;gt;&lt;strong&gt;DMZ主机&lt;/strong&gt;菜单，将&lt;code&gt;DMZ主机IP地址&lt;/code&gt;设置为Raspberry Pi的ip地址，然后启用保存。&lt;/p&gt;
&lt;h3 id=&#34;设置dnspod动态域名解析&#34;&gt;设置DNSPod动态域名解析&lt;/h3&gt;
&lt;p&gt;首先登录DNSPod网页管理域名，将二级域名&lt;code&gt;www&lt;/code&gt; 的&lt;code&gt;A记录&lt;/code&gt;解析到路由器外网IP(可通过路由器管理首页查询，或者通过浏览ip138.com来获得)&lt;/p&gt;
&lt;p&gt;注：一级域名请解析**@**的A记录。&lt;/p&gt;
&lt;p&gt;下载&lt;strong&gt;DNSPod官方客户端Lite&lt;/strong&gt; &lt;a href=&#34;https://support.dnspod.cn/Support/api&#34;&gt;https://support.dnspod.cn/Support/api&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;解压后双击打开登录，从右侧信息列表中也可以看到本机最新IP，点击相应域名后的&lt;strong&gt;动态解析&lt;/strong&gt;按钮，在动态解析设置中右键点击相应的动态记录启用即可，关闭&lt;strong&gt;DNSPod官方客户端Lite&lt;/strong&gt;。&lt;/p&gt;
&lt;h3 id=&#34;设置raspberry-pi&#34;&gt;设置Raspberry Pi&lt;/h3&gt;
&lt;p&gt;安装Web服务器软件(Nginx)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#apt-get install nginx
#/etc/init.d/nginx start
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;内网可以通过浏览`http://192.168.1.129&amp;quot;来检查Nginx是否正常运行。&lt;/p&gt;
&lt;p&gt;浏览&lt;a href=&#34;https://gist.githubusercontent.com/chuangbo/833369&#34;&gt;https://gist.githubusercontent.com/chuangbo/833369&lt;/a&gt;，下载动态域名解析脚本(pypod.py)&lt;/p&gt;
&lt;p&gt;编辑&lt;code&gt;pypod.py&lt;/code&gt;修改以下内容：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;login_email=&amp;quot;email&amp;quot;, # DSNPod帐户邮箱
login_password=&amp;quot;password&amp;quot;, # DSNPod帐户密码
domain_id=100, # 域名id
record_id=100, # 记录id
sub_domain=&amp;quot;www&amp;quot;, # 子域名
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;其中&lt;strong&gt;域名id&lt;/strong&gt;与&lt;strong&gt;记录id&lt;/strong&gt;可以通过以下命令获取：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;curl -k https://dnsapi.cn/Domain.List -d &amp;quot;login_email=xxx&amp;amp;login_password=xxx&amp;quot;
curl -k https://dnsapi.cn/Record.List -d &amp;quot;login_email=xxx&amp;amp;login_password=xxx&amp;amp;domain_id=xxx&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;提示：如果你使用了&lt;strong&gt;www&lt;/strong&gt;子域名，则需要获取&lt;strong&gt;www&lt;/strong&gt;的记录id，如果使用一级域名(@)，则需要获取**@**的记录id。&lt;/p&gt;
&lt;p&gt;编辑完&lt;code&gt;pypod.py&lt;/code&gt;保存退出，使用以下命令运行：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#python pypod.py
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;现在可以通过域名来浏览Raspberry Pi上的Web内容了。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;pypod.py开机运行&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;添加&lt;code&gt;/usr/bin/python /home/pi/pypod.py&lt;/code&gt;到**/etc/rc.local**。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>树莓派安装Python开发环境与GPIO库</title>
      <link>https://unixetc.com/post/raspberry-pi-install-python-development-environment-and-gpio-library/</link>
      <pubDate>Sun, 02 Mar 2014 12:31:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/raspberry-pi-install-python-development-environment-and-gpio-library/</guid>
      <description>&lt;p&gt;&lt;strong&gt;安装python&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$sudo apt-get install python-dev
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;更新&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$sudo easy_install -U distribute
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;安装python-pip&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$sudo apt-get install python-pip
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;添加国内pypi镜像&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在&lt;strong&gt;~/.pip/pip.conf&lt;/strong&gt;中添加&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[global]
index-url = http://mirrors.aliyun.com/pypi/simple/
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;安装python的GPIO库&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$sudo pip install rpi.gpio&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>开始使用树莓派</title>
      <link>https://unixetc.com/post/starting-use-raspberry-pi/</link>
      <pubDate>Fri, 28 Feb 2014 12:28:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/starting-use-raspberry-pi/</guid>
      <description>&lt;h3 id=&#34;安装系统&#34;&gt;安装系统&lt;/h3&gt;
&lt;p&gt;从官网下载系统镜像，推荐Raspbian&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://downloads.raspberrypi.org/raspbian_latest&#34;&gt;http://downloads.raspberrypi.org/raspbian_latest&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;将下载后的zip文件解压，得到&lt;strong&gt;2014-01-07-wheezy-raspbian.img&lt;/strong&gt;文件。&lt;/p&gt;
&lt;p&gt;准备一张SD卡，最好容量大于4GB，Class10&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;将镜像写入SD卡&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux下推荐使用&lt;code&gt;dd&lt;/code&gt;名来写入镜像&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;使用&lt;code&gt;fdisk -l&lt;/code&gt;检查分区信息，比如sd卡设备为**/dev/sdb**，使用以下命令写入：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#dd if=2014-01-07-wheezy-raspbian.img of=/dev/sdb bs=1M
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Windows下推荐使用&lt;strong&gt;Win32DiskImager&lt;/strong&gt;写入镜像&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Win32DiskImager下载地址：&lt;a href=&#34;http://sourceforge.net/projects/win32diskimager/&#34;&gt;http://sourceforge.net/projects/win32diskimager/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;下载后打开软件，选择好镜像文件与USB设备，然后点击&lt;strong&gt;Write&lt;/strong&gt;写入。&lt;/p&gt;
&lt;h3 id=&#34;开机进入系统&#34;&gt;开机进入系统&lt;/h3&gt;
&lt;p&gt;将已写入系统的SD卡插入Raspberry Pi，通过固网链接路由器，然后使用USB供电启动。&lt;/p&gt;
&lt;p&gt;正常启动后，板载的&lt;strong&gt;ACT&lt;/strong&gt;，&lt;strong&gt;PWR&lt;/strong&gt;、&lt;strong&gt;FDX&lt;/strong&gt;、&lt;strong&gt;LNK&lt;/strong&gt;、&lt;strong&gt;100&lt;/strong&gt;五个指示灯均点亮。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;通过SSH连接Raspberry Pi&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;查看Raspberry Pi IP地址&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#nmap -sP 192.168.1/24
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;检查出MAC后标注(Raspberry Pi Foundation)的即为Raspberry Pi主机。&lt;/p&gt;
&lt;p&gt;然后通过SSH来链接主机&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#ssh 192.168.1.127
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;用户名为&lt;strong&gt;pi&lt;/strong&gt;，默认密码为&lt;strong&gt;raspberry&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Widnows下推荐使用&lt;a href=&#34;http://www.chiark.greenend.org.uk/~sgtatham/putty/&#34; title=&#34;PuTTY: a free telnet/ssh client&#34;&gt;Putty&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;设置raspberry&#34;&gt;设置Raspberry&lt;/h3&gt;
&lt;p&gt;运行设置工具&lt;code&gt;sudo raspi-config&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;选择&lt;code&gt;Expand Filesystem&lt;/code&gt;扩展文件系统&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Change User Passwd&lt;/code&gt; 修改默认用户&lt;code&gt;pi&lt;/code&gt;的密码，当然也可以在系统中使用&lt;code&gt;passwd&lt;/code&gt;命令来更改。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Advanced Options&lt;/code&gt;-&amp;gt;&lt;code&gt;Hostname&lt;/code&gt; 修改主机名&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Overclock&lt;/code&gt; 超频，建议900Mhz&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Kindle Paperwhite越狱</title>
      <link>https://unixetc.com/post/kindle-paperwhite-jailbreak/</link>
      <pubDate>Thu, 27 Feb 2014 12:17:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/kindle-paperwhite-jailbreak/</guid>
      <description>&lt;h3 id=&#34;越狱&#34;&gt;越狱&lt;/h3&gt;
&lt;p&gt;下载kindle-jailbreak-1.8.N.zip解压，将得到的kindle-5.4-jailbreak.zip再解压，然后把解压出的三个文件放到KPW根目录&lt;/p&gt;
&lt;p&gt;然后更新系统，主页-菜单-设置-菜单-更新您的kindle&lt;/p&gt;
&lt;p&gt;底部显示**** JAILBREAK ****即表示越狱成功！&lt;/p&gt;
&lt;h3 id=&#34;安装mkk&#34;&gt;安装MKK&lt;/h3&gt;
&lt;p&gt;下载kindle-mkk-20140214.zip解压，将Update_mkk-20140214-k5-ALL_install.bin复制到KPW根目录更新系统&lt;/p&gt;
&lt;h3 id=&#34;安装kual&#34;&gt;安装KUAL&lt;/h3&gt;
&lt;p&gt;下载KUAL-v2.3.zip 解压，将KUAL-KDK-2.0.azw2放到documents文件夹，点击图标即可运行KUAL&lt;/p&gt;
&lt;h3 id=&#34;安装终端&#34;&gt;安装终端&lt;/h3&gt;
&lt;p&gt;下载kterm-0.7.zip解压，然后将kterm文件夹复制到KPW根目录下的extensions，即可通过KUAL来打开kterm。&lt;/p&gt;
&lt;p&gt;**提示：**双指点击唤醒菜单。&lt;/p&gt;
&lt;h3 id=&#34;安装usbnetwork&#34;&gt;安装USBNetwork&lt;/h3&gt;
&lt;p&gt;解压kindle-usbnet-0.15.N.zip，将update_usbnet_0.15.N_install_touch_pw.bin放到根目录，然后更新系统安装，完成后可通过KUAL来打开USBNetwork。&lt;/p&gt;
&lt;p&gt;通过USBNetwork来链接PC，有时需要安装驱动，在这里提供&lt;code&gt;undrivers.inf&lt;/code&gt;文件，安装时选择该文件即可。&lt;/p&gt;
&lt;p&gt;以上所有文件下载地址： &lt;a href=&#34;http://pan.baidu.com/s/1eQdzU6Y&#34;&gt;http://pan.baidu.com/s/1eQdzU6Y&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>入手树莓派1 Model B</title>
      <link>https://unixetc.com/post/starting-raspberry-pi-1-model-b/</link>
      <pubDate>Wed, 26 Feb 2014 12:21:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/starting-raspberry-pi-1-model-b/</guid>
      <description>&lt;p&gt;刚刚入手Raspberry Pi 1 Model B&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;配置详情&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Broadcom BCM2835 SoC full HD multimedia applications processor&lt;/li&gt;
&lt;li&gt;700MHz low power ARM1176JZ-F applications processor&lt;/li&gt;
&lt;li&gt;Broadcom VideoCore IV, OpenGL ES 2.0, 1080p30 h.264/MPEG-4 AVC high profile decoder&lt;/li&gt;
&lt;li&gt;512MB SDRAM&lt;/li&gt;
&lt;li&gt;10/100 Ethernet RJ 45 on board network&lt;/li&gt;
&lt;li&gt;Storage via SD/ MMC/ SDIO card slot&lt;/li&gt;
&lt;li&gt;Dual USB connector&lt;/li&gt;
&lt;li&gt;HDMI (rev 1.3 &amp;amp; 1.4) composite RCA (PAL and NTSC)&lt;/li&gt;
&lt;li&gt;3.5mm jack, HDMI&lt;/li&gt;
&lt;li&gt;Linux operating system&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;正面图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/raspif.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;背面图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/raspib.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Ubuntu下安装VPN</title>
      <link>https://unixetc.com/post/install-vpn-on-ubuntu/</link>
      <pubDate>Sun, 23 Feb 2014 12:23:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/install-vpn-on-ubuntu/</guid>
      <description>&lt;p&gt;&lt;strong&gt;安装pptpd&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#apt-get install pptpd 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;IP设置&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#vi /etc/pptpd.conf 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;添加以下内容:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;localip 192.18.0.1
remoteip 192.168.0.200-230
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;设置DNS&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#vi/etc/ppp/pptpd-options
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;添加以下内容：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ms-dns 192.168.1.1
ms-dns 8.8.8.8
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;添加用户&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#vi /etc/ppp/chap-secrets
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;添加以下内容:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;name * passwd *
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;重启vpn&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#/etc/init.d/pptpd restart 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;允许ip4访问外网&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#vi /etc/sysctl.conf

net.ipv4.ip_forward=1 //取消本行前注释符(*)

#sysctl -p&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Qemu for windows 使用实例</title>
      <link>https://unixetc.com/post/qemu-for-windows-usages/</link>
      <pubDate>Tue, 11 Feb 2014 12:21:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/qemu-for-windows-usages/</guid>
      <description>&lt;p&gt;&lt;strong&gt;下载安装QEMU for Windows&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://qemu.weilnetz.de/w32/&#34;&gt;32Bit下载地址&lt;/a&gt;
&lt;a href=&#34;http://qemu.weilnetz.de/w64/&#34;&gt;64Bit下载地址&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;双击下载后的exe文件完成安装。&lt;/p&gt;
&lt;h3 id=&#34;qemu-for-windows使用&#34;&gt;QEMU for Windows使用&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;直接启动QEMU&lt;/p&gt;
&lt;p&gt;qemu-system-i386&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;加载光盘镜像&lt;/p&gt;
&lt;p&gt;qemu-system-i386 -cdrom image.iso&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;创建磁盘镜像&lt;/p&gt;
&lt;p&gt;qemu-img create disk.img 100M&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;加载磁盘镜像&lt;/p&gt;
&lt;p&gt;qemu-system-i386 -hdd disk.img&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;指定内存大小与CPU数&lt;/p&gt;
&lt;p&gt;qemu-system-i386 -m 256M -smp 2 -hdd disk.img&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;同时加载磁盘镜像与光盘镜像，并且从光盘镜像启动&lt;/p&gt;
&lt;p&gt;qemu-system-i386 -cdrom image.iso -hdd disk.img -boot d&lt;/p&gt;
&lt;p&gt;其中-boot后面的d代表从光盘启动，可用引导项：a, b (软驱 1,2), c (第一块硬盘), d (第一个CD-ROM), n-p (从网络启动), 默认为第一块硬盘。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;注释&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;以上qemu-system-i386命令，为启动i386虚拟环境命令，同样qemu可以模拟其他环境，可使用命令如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;qemu-system-aarch64.exe
qemu-system-aarch64w.exe
qemu-system-alpha.exe
qemu-system-alphaw.exe
qemu-system-arm.exe
qemu-system-armw.exe
qemu-system-cris.exe
qemu-system-crisw.exe
qemu-system-i386.exe
qemu-system-i386w.exe
qemu-system-lm32.exe
qemu-system-lm32w.exe
qemu-system-m68k.exe
qemu-system-m68kw.exe
qemu-system-microblaze.exe
qemu-system-microblazeel.exe
qemu-system-microblazeelw.exe
qemu-system-microblazew.exe
qemu-system-mips.exe
qemu-system-mips64.exe
qemu-system-mips64el.exe
qemu-system-mips64elw.exe
qemu-system-mips64w.exe
qemu-system-mipsel.exe
qemu-system-mipselw.exe
qemu-system-mipsw.exe
qemu-system-moxie.exe
qemu-system-moxiew.exe
qemu-system-or32.exe
qemu-system-or32w.exe
qemu-system-ppc.exe
qemu-system-ppc64.exe
qemu-system-ppc64w.exe
qemu-system-ppcemb.exe
qemu-system-ppcembw.exe
qemu-system-ppcw.exe
qemu-system-s390x.exe
qemu-system-s390xw.exe
qemu-system-sh4.exe
qemu-system-sh4eb.exe
qemu-system-sh4ebw.exe
qemu-system-sh4w.exe
qemu-system-sparc.exe
qemu-system-sparc64.exe
qemu-system-sparc64w.exe
qemu-system-sparcw.exe
qemu-system-unicore32.exe
qemu-system-unicore32w.exe
qemu-system-x86_64.exe
qemu-system-x86_64w.exe
qemu-system-xtensa.exe
qemu-system-xtensaeb.exe
qemu-system-xtensaebw.exe
qemu-system-xtensaw.exe    &lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>VPS优化</title>
      <link>https://unixetc.com/post/optimization-vps/</link>
      <pubDate>Sat, 01 Feb 2014 12:31:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/optimization-vps/</guid>
      <description>&lt;h3 id=&#34;pdksh替代bash&#34;&gt;pdksh替代bash&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;$sudo apt-get install pdksh
$sudo vi /etc/shells
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;添加/bin/pdksh到/etc/shells文件&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$chsh -s /bin/pdksh
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;重新登录即可。&lt;/p&gt;
&lt;h3 id=&#34;修改ssh端口&#34;&gt;修改SSH端口&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;#vi /etc/ssh/sshd_config    
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;将Port 22中的22改为自定义数字即可&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# /etc/init.d/ssh restart
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;dropbear替代openssh&#34;&gt;dropbear替代openssh&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;$sudo apt-get install dropbear
$sudo /etc/init.d/ssh stop
$sudo vi /etc/default/dropbear
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;修改NO_START=&lt;strong&gt;0&lt;/strong&gt;,修改DROPBEAR_PORT为自定义端口号&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$sudo /etc/init.d/dropbear start
$sudo apt-get remove openssh-server
$sudo apt-get autoremove
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;关闭多余的tty&#34;&gt;关闭多余的TTY&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Ubuntu 12.04 server&lt;/strong&gt;如下操作&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#cd /etc/init/
#mv tty2.conf tty2.conf.bak
#mv tty3.conf tty2.conf.bak
#mv tty4.conf tty2.conf.bak
#mv tty5.conf tty2.conf.bak
#mv tty6.conf tty2.conf.bak
#reboot
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Debian 7&lt;/strong&gt;如下操作&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#vi /etc/inittab
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;找到如下行&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1:2345:respawn:/sbin/getty 38400 tty1
2:23:respawn:/sbin/getty 38400 tty2
3:23:respawn:/sbin/getty 38400 tty3
4:23:respawn:/sbin/getty 38400 tty4
5:23:respawn:/sbin/getty 38400 tty5
6:23:respawn:/sbin/getty 38400 tty6
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;将不需要的行注释掉(#)即可，重启完成。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>BitTorrent Sync使用实例</title>
      <link>https://unixetc.com/post/bittorrent-sync-usages/</link>
      <pubDate>Tue, 21 Jan 2014 01:21:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/bittorrent-sync-usages/</guid>
      <description>&lt;p&gt;BitTorrent Sync是BitTorrent Inc推出的一款多平台同步工具，支持Windows、Linux、MAC、FreeBSD、IOS、Android、Windows Phone，还有许多NAS设备。&lt;/p&gt;
&lt;p&gt;具体的功能介绍请转至官网 &lt;a href=&#34;https://www.getsync.com/intl/zh_cn/features&#34;&gt;https://www.getsync.com/intl/zh_cn/features&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;下载地址 &lt;a href=&#34;https://www.getsync.com/intl/zh_cn/platforms/desktop&#34;&gt;https://www.getsync.com/intl/zh_cn/platforms/desktop&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在此提供镜像下载&lt;a href=&#34;http://www.getos.org/btsync/&#34;&gt;http://www.getos.org/btsync/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;安装bittorrent-sync&#34;&gt;安装BitTorrent Sync&lt;/h3&gt;
&lt;p&gt;Windows版本，双击下载后的&lt;strong&gt;EXE&lt;/strong&gt;文件安装。&lt;/p&gt;
&lt;p&gt;Linux版，解压下载后的&lt;strong&gt;btsync_i386.tar.gz&lt;/strong&gt;，运行即可&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;tar zxvf btsync_i386.tar.gz
cp btsync /usr/bin
./btsync
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后可以通过&lt;code&gt;127.0.0.1:8888&lt;/code&gt;来进行设置管理&lt;/p&gt;
&lt;p&gt;为了安全期间，不推荐使用默认配置，建议自定义端口&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;btsync --dump-sample-config&amp;gt;bs.conf
vi bs.conf
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;找到如下内容，将&lt;code&gt;8888&lt;/code&gt;修改为自定义端口号&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;quot;webui&amp;quot; :
{
    &amp;quot;listen&amp;quot; : &amp;quot;0.0.0.0:8888&amp;quot; // remove field to disable WebUI
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后通过以下命令加载自定义配置文件&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;btsync --config bs.conf
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;p&gt;Windows版与Linux版的软件界面大致相同，以下以linux为例说明。&lt;/p&gt;
&lt;h3 id=&#34;配置bittorrent-sync&#34;&gt;配置BitTorrent Sync&lt;/h3&gt;
&lt;p&gt;第一次使用&lt;strong&gt;BitTorrent Sync&lt;/strong&gt;需要进行一系列设置，如下所示：&lt;/p&gt;
&lt;p&gt;设置管理员账号以及密码 *&lt;strong&gt;Windows不需要&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/btsync_config_1.webp&#34; alt=&#34;设置管理员账号以及密码&#34; title=&#34;设置管理员账号以及密码&#34;&gt;&lt;/p&gt;
&lt;p&gt;账号设定完成后&lt;strong&gt;BitTorrent Sync&lt;/strong&gt;会提示登录以继续使用，登录后继续下面设置。&lt;/p&gt;
&lt;p&gt;然后是使用条款和Pro版本试用(30天)提示，直接同意。&lt;/p&gt;
&lt;p&gt;下来选择连接设备，一般选择&lt;strong&gt;This is my first Sync device&lt;/strong&gt;，如果你已经在其他设备上安装了&lt;strong&gt;BitTorrent Sync&lt;/strong&gt;，并且需要将该设备的内容全部同步到新设备，可以选择&lt;strong&gt;Link a device already running Sync&lt;/strong&gt;，这个在后边再讲。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/btsync_config_2.webp&#34; alt=&#34;连接设备&#34; title=&#34;连接设备&#34;&gt;&lt;/p&gt;
&lt;p&gt;接下来创建身份信息(Create identity)，设定一个名称。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/btsync_config_3.webp&#34; alt=&#34;Create identity&#34; title=&#34;Create identity&#34;&gt;&lt;/p&gt;
&lt;p&gt;完成后即可使用。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>VPS下自动备份文件和数据库</title>
      <link>https://unixetc.com/post/automatic-backup-files-and-database-on-vps/</link>
      <pubDate>Mon, 13 Jan 2014 01:13:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/automatic-backup-files-and-database-on-vps/</guid>
      <description>&lt;p&gt;新建脚本，名为&lt;strong&gt;autoback.sh&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#vi autoback.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;脚本(autoback.sh)内容如下:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#!/bin/sh

#备份网站目录/home/www/
tar zcvf /home/backup/www$(date + &amp;quot;%Y%m%d&amp;quot;).tar.gz /home/www/*

#备份数据库 www
/usr/local/mysql/bin/mysqldump -uroot -ppassword dbname &amp;gt; /home/backup/dbname$(date +&amp;quot;%Y%m%d&amp;quot;).sql

#删除三天前的备份
cd /home/backup/
rm -f *$(date -d -3day +&amp;quot;%Y%m%d&amp;quot;)*
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;将脚本(autoback.sh)添加到自动执行任务列表:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#chmod +x autoback.sh
#crontab -e
59 23 * * * /root/autoback.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://db.tt/i3IUvwPq&#34; title=&#34;注册Dropbox&#34;&gt;推荐注册Dropbox&lt;/a&gt;&lt;/strong&gt;，参考**&lt;a href=&#34;https://unixetc.com/post/cli-model-of-linux-using-dropbox/&#34;&gt;Linux下CLI模式使用Dropbox&lt;/a&gt;**，将备份文件自动同步到Dropbox。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Typecho主题Logs</title>
      <link>https://unixetc.com/post/typecho-theme-logs/</link>
      <pubDate>Mon, 23 Dec 2013 21:23:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/typecho-theme-logs/</guid>
      <description>&lt;p&gt;弄了个Typecho主题，名为&lt;strong&gt;Logs&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;预览:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/logs_review.webp&#34; alt=&#34;Logs&#34;&gt;&lt;/p&gt;
&lt;p&gt;基本完善，有个别可能需要小修改，先贴出来分享给看得上的人&lt;/p&gt;
&lt;p&gt;本站就是使用的这个主题，所以就不贴预览图了&lt;/p&gt;
&lt;p&gt;Update 2014/01/02&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;边栏添加搜索框&lt;/li&gt;
&lt;li&gt;优化一些代码&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Update 2013/12/25&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;修改导航栏UI&lt;/li&gt;
&lt;li&gt;启用友链插件，更改友链以及广告链接输出方式，友链插件地址&lt;a href=&#34;http://www.imhan.com/archives/typecho-links/&#34;&gt;http://www.imhan.com/archives/typecho-links/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Update 2013/12/22&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;评论ui完善&lt;/li&gt;
&lt;li&gt;添加favicon.ico&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;下载 &lt;a href=&#34;https://dotbbq.pipipan.com/dir/18418398-34172445-2a9b98/&#34;&gt;Logs1.1.zip&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>修复grub引导</title>
      <link>https://unixetc.com/post/repair-grub-boot/</link>
      <pubDate>Thu, 12 Dec 2013 12:13:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/repair-grub-boot/</guid>
      <description>&lt;p&gt;笔记本原来安装的Linux/Windows XP双系统，今天重新安装了Windows7，但是开机的grub引导被搞掉了，找了下grub的man看了半天，摸索出来如何修复原来的grub引导。&lt;/p&gt;
&lt;p&gt;首先，使用Linux live cd引导系统，然后按照以下操作：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;检查分区信息&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ubuntu@ubuntu:~$ sudo -s
root@ubuntu:~# lsblk 
NAME    MAJ:MIN RM   SIZE RO TYPE MOUNTPOINT
sda       8:0    0 465.8G  0 disk 
├─sda1    8:1    0    40G  0 part 
├─sda2    8:2    0     1K  0 part 
├─sda5    8:5    0     4G  0 part [SWAP]
├─sda6    8:6    0    20G  0 part 
├─sda7    8:7    0    20G  0 part 
├─sda8    8:8    0   100G  0 part 
├─sda9    8:9    0   200G  0 part 
└─sda10   8:10   0  81.8G  0 part 
sr0      11:0    1   1.6G  0 rom  /cdrom
loop0     7:0    0   1.5G  1 loop /rofs
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;以上的sda6是我的/home目录，根目录为sda7&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;挂载相应分区，重新安装grub&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;root@ubuntu:~# mount /dev/sda7 /mnt/
root@ubuntu:~# mount /dev/sda6 /mnt/home/
root@ubuntu:~# grub-install --root-directory=/mnt/ /dev/sda
Installation finished. No error reported.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;至此所有操作完成，重启后即可看到原来的引导菜单。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Kindle Paperwhite安装多看阅读</title>
      <link>https://unixetc.com/post/kindle-paperwhite-with-duokan/</link>
      <pubDate>Sat, 12 Oct 2013 12:01:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/kindle-paperwhite-with-duokan/</guid>
      <description>&lt;h3 id=&#34;安装多看阅读&#34;&gt;安装多看阅读&lt;/h3&gt;
&lt;p&gt;下载地址: &lt;a href=&#34;http://bbs.xiaomi.cn/forum-679-1.html&#34;&gt;http://bbs.xiaomi.cn/forum-679-1.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;将下载的zip包解压，安装方法如下:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Kindle原系统下，连接USB线到PC，拷贝1个文件夹和2个文件到Kindle磁盘。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;将DK_System文件夹拷贝至Kindle根目录&lt;/li&gt;
&lt;li&gt;将MOBI8_DEBUG文件拷贝至Kindle根目录&lt;/li&gt;
&lt;li&gt;将duokan.mobi文件拷贝至Kindle的documents目录&lt;/li&gt;
&lt;li&gt;然后弹出Kindle磁盘，断开USB线。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;直到在原系统能看见一本新书 《duokan 安装文档》。&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;在原系统下打开 《duokan 安装文档》（备注：机器要是竖屏而不是横屏）。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;在文档的中间看到Install按钮， 点击该按钮，按照屏幕上的提示进行安装。&lt;/p&gt;
&lt;h3 id=&#34;屏保&#34;&gt;屏保&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;大小: 758x1024&lt;/li&gt;
&lt;li&gt;格式: PNG&lt;/li&gt;
&lt;li&gt;色调: 黑白&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;存放目录\DK_System\xKindle\res\ScreenSaver\&lt;/p&gt;
&lt;p&gt;Kindle Paperwhite预置壁纸 &lt;a href=&#34;http://vdisk.weibo.com/s/u6MCqFbm65gX2&#34;&gt;http://vdisk.weibo.com/s/u6MCqFbm65gX2&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;字典&#34;&gt;字典&lt;/h3&gt;
&lt;p&gt;字典结构: .dz .idx .ifo 三个文件&lt;/p&gt;
&lt;p&gt;字典存放目录\DK_System\xKindle\res\dict\&lt;/p&gt;
&lt;p&gt;词典下载:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;新华字典 &lt;a href=&#34;http://vdisk.weibo.com/s/u6MCqFbm65h9Z&#34;&gt;http://vdisk.weibo.com/s/u6MCqFbm65h9Z&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;朗道字典 &lt;a href=&#34;http://vdisk.weibo.com/s/u6MCqFbm65gYe&#34;&gt;http://vdisk.weibo.com/s/u6MCqFbm65gYe&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;牛津字典 &lt;a href=&#34;http://vdisk.weibo.com/s/u6MCqFbm65gY6&#34;&gt;http://vdisk.weibo.com/s/u6MCqFbm65gY6&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;古汉语常用字典 &lt;a href=&#34;http://vdisk.weibo.com/s/u6MCqFbm65gY1&#34;&gt;http://vdisk.weibo.com/s/u6MCqFbm65gY1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;格林斯字典 &lt;a href=&#34;http://vdisk.weibo.com/s/u6MCqFbm65gYm&#34;&gt;http://vdisk.weibo.com/s/u6MCqFbm65gYm&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;编辑\DK_System\xKindle\res\dict\dict.dat可以自定义索引顺序，如下:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;/mnt/us/DK_System/xKindle/res/dict/oxford-gb-formated.ifo
/mnt/us/DK_System/xKindle/res/dict/Collins5.ifo
/mnt/us/DK_System/xKindle/res/dict/langdao-ec-gb.ifo
/mnt/us/DK_System/xKindle/res/dict/ghycycd.ifo
/mnt/us/DK_System/xKindle/res/dict/xhzd.ifo&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>JavaScript数组使用实例</title>
      <link>https://unixetc.com/post/examples-javascript-array/</link>
      <pubDate>Tue, 24 Sep 2013 12:59:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/examples-javascript-array/</guid>
      <description>&lt;p&gt;GF办公用需要一个小系统，原要求是VBA实现，不过我没弄过那玩意儿。C语言倒是熟悉，但CLI的东西她使用不方便。&lt;/p&gt;
&lt;p&gt;于是做一个web系统，php比较熟悉，不过她的工作不能使用外网，额滴神！最后还是选择了用javascript实现，现学现卖吧。&lt;/p&gt;
&lt;p&gt;由于不能使用数据库，所以需要构建一个三维数组来存储数据，以下是javascript中数组使用的一些实例。&lt;/p&gt;
&lt;p&gt;定义数组并赋值&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;var jz = newArry();
jz[0] = 10;
jz[1] = &amp;quot;hello&amp;quot;;
jz[2] = 23.4;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;以上是一个简单的一维数组，其中三个值分别为:&lt;code&gt;10&lt;/code&gt;整数，&lt;code&gt;hello&lt;/code&gt;字符串,&lt;code&gt;23.4&lt;/code&gt;浮点数，可以通过以下方法使用&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;alert(&amp;quot;jz[0] is &amp;quot;+jz[0]+&amp;quot;\n jz[1] is &amp;quot;+jz[1]+&amp;quot;\n jz[2] is &amp;quot;+jz[2]);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;二维数组的定义方法:为一维数组的单个值赋予数组值，那么就可以构成二维数组&lt;/p&gt;
&lt;p&gt;实例&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;var jz = newArry();
jz[0] = newArry(1,2);
jz[1] = newArry(3,4);
jz[2] = newArry(5,6);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;可以通过&lt;code&gt;jz[0][0]&lt;/code&gt;、&lt;code&gt;jz[0][1]&lt;/code&gt;、&lt;code&gt;jz[0][2]&lt;/code&gt;来访问。&lt;/p&gt;
&lt;p&gt;以下是一个简单的三维数组实例&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;var jz newArry();
jz[0] = newArry([100,200],[300,400],[500,600])
jz[1] = newArry([&#39;str1&#39;,&#39;str2&#39;],[&#39;str3&#39;,&#39;str4&#39;],[&#39;str5&#39;,&#39;str6&#39;]);
jz[2] = newArry([2.24,3.2],[12.9,89.01],[38.04,7.6]);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;方位方法如&lt;code&gt;jz[0][1][0]&lt;/code&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Windows下Jekyll乱码问题</title>
      <link>https://unixetc.com/post/jekyll-chinese-garbled-windows/</link>
      <pubDate>Sat, 21 Sep 2013 19:21:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/jekyll-chinese-garbled-windows/</guid>
      <description>&lt;p&gt;在Ruby目录中搜索&lt;strong&gt;convertible.rb&lt;/strong&gt;，找到大概27行如下内容:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;self.content = File.read(File.join(base, name))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;替换为&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;self.content = File.read(File.join(base, name), :encoding =&amp;gt; &#39;utf-8&#39;) 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;在windows环境变量中，添加以下两个环境变量&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;LANG=zh_CN.UTF-8
LC_ALL=zh_CN.UTF-8&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>为Jekyll站点添加rss.xml</title>
      <link>https://unixetc.com/post/add-rssxml-to-the-jekyll-site/</link>
      <pubDate>Wed, 18 Sep 2013 09:18:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/add-rssxml-to-the-jekyll-site/</guid>
      <description>&lt;p&gt;在网站根目录中新建&lt;code&gt;rss.xml&lt;/code&gt;文件，写入以下内容：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/jekyll_rss.webp&#34; alt=&#34;rss.xml 代码&#34; title=&#34;rss.xml 代码&#34;&gt;&lt;/p&gt;
&lt;p&gt;参考以上代码，其中的域名等信息自定义。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Vim Markdown语法高亮</title>
      <link>https://unixetc.com/post/vim-markdown-syntax-highlighting/</link>
      <pubDate>Tue, 17 Sep 2013 17:17:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/vim-markdown-syntax-highlighting/</guid>
      <description>&lt;p&gt;&lt;strong&gt;安装插件&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;插件下载地址:&lt;a href=&#34;https://github.com/plasticboy/vim-markdown/archive/master.tar.gz&#34;&gt;https://github.com/plasticboy/vim-markdown/archive/master.tar.gz&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;安装方法：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$mkdir ~/.vim/
$cd ~/.vim
$tar --strip=1 -zxf vim-markdown-master.tar.gz
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Vim开启语法高亮&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;编辑&lt;code&gt;~/.vimrc&lt;/code&gt;，写入&lt;strong&gt;syntax on&lt;/strong&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>将Wordpress数据转换为Jekyll文件</title>
      <link>https://unixetc.com/post/wordpress-converted-to-jekyll/</link>
      <pubDate>Sun, 15 Sep 2013 19:15:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/wordpress-converted-to-jekyll/</guid>
      <description>&lt;p&gt;这里使用的工具名为&lt;strong&gt;Exitwp&lt;/strong&gt;，项目主页为&lt;a href=&#34;https://github.com/thomasf/exitwp&#34; title=&#34;Exitwp home page&#34;&gt;https://github.com/thomasf/exitwp&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;安装exitwp&#34;&gt;安装Exitwp&lt;/h3&gt;
&lt;p&gt;必备组件&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Python&lt;/li&gt;
&lt;li&gt;html2text&lt;/li&gt;
&lt;li&gt;PyYAML&lt;/li&gt;
&lt;li&gt;Beautiful soup&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ubuntu下安装软件:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# aptitude install python git build-essential
# aptitude install python-pip python-yaml python-bs4 python-html2text
# aptitude install libyaml-dev python-dev libxml2-utils
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;安装exitwp-1&#34;&gt;安装Exitwp&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;git clone https://github.com/thomasf/exitwp
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;###使用Exitwp转换wordpress数据&lt;/p&gt;
&lt;p&gt;首先，登录wordpress后台，使用自带的导出工具将wordpress导出为xml文件&lt;/p&gt;
&lt;p&gt;将导出的xml文件下载，复制到 ./exitwp/wordpress-xml/&lt;/p&gt;
&lt;p&gt;进入 ./exitwp/wordpress-xml/，使用xmllint格式化xml文件&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;xmllint --format wp.xml
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;最后，执行exitwp.py脚本来处理xml文件&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;python exitwp.py
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;生成的md文件，存放在 ./exitwp/build/&lt;/p&gt;
&lt;h3 id=&#34;后续的工作&#34;&gt;后续的工作&lt;/h3&gt;
&lt;p&gt;将处理后的md文件复制出来，拷贝至jekyll站点的_post目录，然后使用&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;jekyll serve
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;生成预览，按照提示处理有问题的md文件，直至OK！&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>fstab自动挂载分区</title>
      <link>https://unixetc.com/post/fstab-automatically-mount-partitions/</link>
      <pubDate>Sun, 08 Sep 2013 19:18:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/fstab-automatically-mount-partitions/</guid>
      <description>&lt;p&gt;使用&lt;code&gt;fdisk -l&lt;/code&gt;查看分区信息&lt;/p&gt;
&lt;p&gt;以下为需要自动挂载的分区:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;分区       |      格式
------------------------------
/dev/sd1   |    NTFS
/dev/sd5   |    NTFS
/dev/sd6   |    NTFS
/dev/sd7   |    NTFS
/dev/sd8   |    NTFS
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;新建挂载目录&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#mkdir /media/{a,b,c,d,e}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;编辑fstab文件&lt;code&gt;vi /etc/fstab&lt;/code&gt;写入以下内容&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;/dev/sda1 /media/a ntfs-3g defaults,iocharset=gb2312 0 0
/dev/sda5 /media/b ntfs-3g defaults,iocharset=gb2312 0 0
/dev/sda6 /media/c ntfs-3g defaults,iocharset=gb2312 0 0
/dev/sda7 /media/d ntfs-3g defaults,iocharset=gb2312 0 0
/dev/sda8 /media/e ntfs-3g defaults,iocharset=gb2312 0 0
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;说明:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;/dev/sdax      表示分区&lt;/li&gt;
&lt;li&gt;/mnt/xxx       表示挂载点&lt;/li&gt;
&lt;li&gt;vat/ntfs-3g    表示分区格式&lt;/li&gt;
&lt;li&gt;iocharset=xxx  设置字符集,为了支持windows中文目录，应设为&lt;strong&gt;gb2312&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Debian下安装Jekyll</title>
      <link>https://unixetc.com/post/install-jekyll-on-debian/</link>
      <pubDate>Fri, 06 Sep 2013 19:16:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/install-jekyll-on-debian/</guid>
      <description>&lt;h3 id=&#34;安装rvm&#34;&gt;安装Rvm&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;$sudo aptitude install curl
$curl -L get.rvm.io | bash -s stable
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;加载Rvm&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$source ~/.rvm/scripts/rvm
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;检查安装必备组件&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$rvm requirements
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;安装-ruby-193&#34;&gt;安装 Ruby 1.9.3&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;$rvm install 1.9.3
$ruby -v
$gem -v
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;更改Gem软件源&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$gem sources -a http://ruby.taobao.org/
$gem sources -r http://rubygems.org/
$gem sources -l
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;安装jekyll&#34;&gt;安装Jekyll&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;$gem install jekyll
$jekyll -v
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;打完收工!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>使用SSH密匙登录Github</title>
      <link>https://unixetc.com/post/use-the-ssh-key-to-login-github/</link>
      <pubDate>Tue, 03 Sep 2013 19:23:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/use-the-ssh-key-to-login-github/</guid>
      <description>&lt;h3 id=&#34;生成ssh密匙文件&#34;&gt;生成ssh密匙文件&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;ssh-keygen -t rsa -C &amp;quot;user@domain.com&amp;quot;   
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;接下来会提示输入密码，推荐自定义密码，当然也可以置空&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Enter passphrase(empty for no passphrase):
Enter same passphrase again:
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;完成后会在用户目录下的.ssh文件夹中新建&lt;!-- raw HTML omitted --&gt;id_rsa&lt;!-- raw HTML omitted --&gt;与&lt;!-- raw HTML omitted --&gt;is_rsa.pub&lt;!-- raw HTML omitted --&gt;两个文件。&lt;/p&gt;
&lt;h3 id=&#34;添加ssh密匙到github用户&#34;&gt;添加ssh密匙到github用户&lt;/h3&gt;
&lt;p&gt;登录至github.com,点击右上角的&lt;strong&gt;Account Settings&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在左侧选择&lt;strong&gt;SSH Keys&lt;/strong&gt;菜单，然后在右侧点击&lt;strong&gt;Add SSH Key&lt;/strong&gt;按钮&lt;/p&gt;
&lt;p&gt;将上一步生成的&lt;strong&gt;id_rsa.pub&lt;/strong&gt;文件内容复制进去保存。&lt;/p&gt;
&lt;h3 id=&#34;本地连接至githubcom&#34;&gt;本地连接至github.com&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;ssh -T git@github.com
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;如果前面设置了passphrase，那么就按照提示输入passphrase。如果置空的话，就直接点击&lt;strong&gt;回车&lt;/strong&gt;。成功后会有如下提示：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Hi wrchiu! You`ve successfully authenticated, but GitHub does note provide shell access.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;参考以上设置完成后，以后git push时就不需要每次输入密码了！&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>阿朗BTS开启40个邻区</title>
      <link>https://unixetc.com/post/alcatel-lucent-bts-open-40-neighbor-lists/</link>
      <pubDate>Sun, 01 Sep 2013 09:01:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/alcatel-lucent-bts-open-40-neighbor-lists/</guid>
      <description>&lt;p&gt;阿朗基站默认未开启40个邻区功能，如果fci表的15、16页已经加满，再需要添加多的邻区关系就得设置打开40个邻区。&lt;/p&gt;
&lt;h3 id=&#34;编辑cell2-series-2-cell表单&#34;&gt;编辑cell2 (SERIES 2 CELL)表单&lt;/h3&gt;
&lt;p&gt;登录阿朗OMP平台，进入OMP Shell，输入&lt;strong&gt;apxrcv&lt;/strong&gt;，然后按照提示输入表单名cell2&lt;/p&gt;
&lt;p&gt;cell2只需提供基站号，设置为整个基站的功能&lt;/p&gt;
&lt;p&gt;查看cell2表单的 &lt;strong&gt;12页&lt;/strong&gt;，找到 &lt;strong&gt;FORTY NGBR&lt;/strong&gt; 项，经该项值设置为 &lt;strong&gt;y&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;编辑ceqface-cell-equipage-face表单&#34;&gt;编辑ceqface (CELL EQUIPAGE FACE)表单&lt;/h3&gt;
&lt;p&gt;进入&lt;strong&gt;ceqafce&lt;/strong&gt;表单，这里得提供具体的扇区号，然后查看第 &lt;strong&gt;9&lt;/strong&gt;页，找到 &lt;strong&gt;Maximum Neighbor List Number Sent to Mobile&lt;/strong&gt;，将其设置为 &lt;strong&gt;40&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;编辑fci-face-code-information表单&#34;&gt;编辑fci (FACE CODE INFORMATION)表单&lt;/h3&gt;
&lt;p&gt;进入&lt;strong&gt;fci&lt;/strong&gt;表，这里需要设置具体的扇区号，然后查看第 &lt;strong&gt;21&lt;/strong&gt;页，找到如下行：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Expanded (40) Neighbor Lists Enable .................. 569) n
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;编辑改行，将后面的值设为 &lt;strong&gt;y&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;经过以上设置，所对应的扇区40个邻区列表功能正常开启，现在就可以在19页继续添加邻区了。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>卸载linux旧内核</title>
      <link>https://unixetc.com/post/uninstall-the-old-linux-kernel/</link>
      <pubDate>Tue, 13 Aug 2013 23:13:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/uninstall-the-old-linux-kernel/</guid>
      <description>&lt;p&gt;当linux内核更新后，开机的GRUB引导菜单中会存在新旧内核多个引导菜单，当新内核使用稳定后，我们可以将旧的内核删除以减少开机引导项，以下是在fedora与ubuntu中删除旧内核的方法，其他的YUM系或APT系系统可以参考参考&lt;/p&gt;
&lt;p&gt;fedora中删除旧内核:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[aquan@localhost ~]$ uname -r
2.6.32-220.13.1.el6.i686
[aquan@localhost ~]$ rpm -qa|grep kernel
kernel-2.6.32-220.13.1.el6.i686
kernel-2.6.32-220.el6.i686
kernel-firmware-2.6.32-220.13.1.el6.noarch
dracut-kernel-004-256.el6_2.1.noarch
[aquan@localhost ~]$ sudo yum remove kernel-2.6.32-220.el6.i686
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;ubunu中删除旧内核:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo apt-get purge ~ilinux-image-.*\(\!`uname -r`\)&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Linux下部署goAgent</title>
      <link>https://unixetc.com/post/linux-deployment-goagent/</link>
      <pubDate>Thu, 30 May 2013 15:30:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/linux-deployment-goagent/</guid>
      <description>&lt;h3 id=&#34;准备工作&#34;&gt;准备工作&lt;/h3&gt;
&lt;p&gt;下载Google Appengine SDK For Pyahont与goAgent&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1.Google App Engine SDK for Python
https://developers.google.com/appengine/downloads?hl=zh-CN#Google_App_Engine_SDK_for_Python

2.goagent
https://code.google.com/p/goagent/
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;下载后解压，将goagent文件夹放到google_appengine目录下，目录结构如下:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;~/google_appengine/goagent-goagent-d488f2
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;准备好Google Application_ID与两步验证密码,如何申请问&lt;a href=&#34;http://google.com&#34;&gt;Google&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;配置goagent&#34;&gt;配置goagent&lt;/h3&gt;
&lt;p&gt;编辑&lt;strong&gt;~/google_appengine/goagent-goagent-d488f2/local/proxy.ini&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;填写正确的appid，在此建议将profile由默认的&lt;code&gt;google_cn&lt;/code&gt;改为&lt;code&gt;google_hk&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;参考以下步骤执行：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;aquan@edge ~/google_appengine $ python appcfg.py update goagent-goagent-d4488f2/server/python/
07:03 PM Host: appengine.google.com
07:03 PM Application: wrchiublog; version: 1
07:03 PM 
Starting update of app: wrchiublog, version: 1
07:03 PM Getting current resource limits.
Email: wrchiu@126.com  //在此填写googleid
Password for wrchiu@126.com:    //此处填写两步验证密码，而不是帐号密码
07:04 PM Scanning files on local disk.
07:04 PM Cloning 1 static file.
07:04 PM Cloning 6 application files.
07:04 PM Uploading 1 files and blobs.
07:04 PM Uploaded 1 files and blobs
07:04 PM Compilation starting.
07:04 PM Compilation completed.
07:04 PM Starting deployment.
07:04 PM Checking if deployment succeeded.
07:04 PM Deployment successful.
07:04 PM Checking if updated app version is serving.
07:04 PM Completed update of app: wrchiublog, version: 1
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;完成后，在**~/google_appengine/goagent-goagent-d488f2/local/**目录下运行goAgent&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ python proxy.py&amp;amp;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;**注意:**在更新app时出现如下错误&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;aquan@edge ~/google_appengine $ python appcfg.py update goagent-goagent-d4488f2/server/python/
07:00 PM Host: appengine.google.com
Error parsing yaml file:
Unable to assign value &#39;your_appid&#39; to attribute &#39;application&#39;:
Value &#39;your_appid&#39; for application does not match expression &#39;^(?:(?:[a-z\d\-]{1,100}\~)?(?:(?!\-)[a-z\d\-\.]{1,100}:)?(?!-)[a-z\d\-]{0,99}[a-z\d])$&#39;
  in &amp;quot;goagent-goagent-d4488f2/server/python/app.yaml&amp;quot;, line 1, column 14
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;按照提示修改&lt;strong&gt;goagent-goagent-d4488f2/server/python/app.yaml&lt;/strong&gt;中的application为正确的appid&lt;/p&gt;
&lt;p&gt;至此Linux下goAgent部署完成!&lt;/p&gt;
&lt;p&gt;&lt;em&gt;在此提供包含goagent的压缩包&lt;a href=&#34;http://pan.baidu.com/share/link?shareid=472887&amp;amp;uk=1493434283&#34;&gt;http://pan.baidu.com/share/link?shareid=472887&amp;amp;uk=1493434283&lt;/a&gt;(goagent 3.0.1)&lt;/em&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Ubuntu Server中安装VNC Server</title>
      <link>https://unixetc.com/post/install-vnc-server-on-ubuntu-server/</link>
      <pubDate>Sat, 11 May 2013 15:11:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/install-vnc-server-on-ubuntu-server/</guid>
      <description>&lt;p&gt;安装所有软件&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#aptitude install openbox firefox ttf-wqy-microhei
#aptitude install vnc4server
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;设置openbox启动&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#update-alternatives --config x-session-manager
然后选择openbox-session
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;设置vncserver密码:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#vncpasswd
Password: ******
Verify:*****
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;运行vncserver&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# vncserver  //运行
# vncserver -kill :1  //终止
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;编辑~/.vnc/xstartup文件&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#vi ~/.vnc/xstartup
#!/bin/sh

# Uncomment the following two lines for normal desktop:
# unset SESSION_MANAGER
# exec /etc/X11/xinit/xinitrc

[ -x /etc/vnc/xstartup ] &amp;amp;&amp;amp; exec /etc/vnc/xstartup
[ -r $HOME/.Xresources ] &amp;amp;&amp;amp; xrdb $HOME/.Xresources
xsetroot -solid grey
vncconfig -iconic &amp;amp;
x-terminal-emulator -geometry 80x24+10+10 -ls -title &amp;quot;$VNCDESKTOP Desktop&amp;quot; &amp;amp;
x-window-manager &amp;amp;
startx&amp;amp; //添加此行
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;链接VNC&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#vncserver :8
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;链接时需要输入 ip:8&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Debian使用apt-spy选择最佳源</title>
      <link>https://unixetc.com/post/debian-use-apt-spy-to-select-the-best-source/</link>
      <pubDate>Thu, 09 May 2013 05:09:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/debian-use-apt-spy-to-select-the-best-source/</guid>
      <description>&lt;p&gt;&lt;strong&gt;安装apt-spy&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#apt-get install apt-spy
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;使用apt-spy选择最佳源&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#apt-spy update
#apt-spy -d stable -a asia -t 3
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;结果保存在&lt;code&gt;/etc/apt/sources.list.d/apt-spy.list&lt;/code&gt;，可手动替换到&lt;code&gt;/etc/apt/sources.list&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;apt-spy选项:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;-d 系统版本，可选stable,testing,unstable&lt;/li&gt;
&lt;li&gt;-a 区域,如asia,europe等，可用项可cat /etc/apt-spy.conf&lt;/li&gt;
&lt;li&gt;-t 超时阀值(s)，可筛掉长时间不响应的地址&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>NokiaN900产品码</title>
      <link>https://unixetc.com/post/product-codes-of-nokia-n900/</link>
      <pubDate>Fri, 26 Apr 2013 22:26:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/product-codes-of-nokia-n900/</guid>
      <description>&lt;p&gt;电池仓贴纸上面的CODE即是&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;0595085: N900 RX-51 TMN (Telecomunicacoes Moveis Nacionais S.A.*) PT V1 - Black&lt;/li&gt;
&lt;li&gt;0582648: RX-51 Belgium&lt;/li&gt;
&lt;li&gt;0584571: RX-51 Croatia Makedonia&lt;/li&gt;
&lt;li&gt;0584572: RX-51 Czech&lt;/li&gt;
&lt;li&gt;0591362: RX-51 Estonia&lt;/li&gt;
&lt;li&gt;0574180: RX-51 France&lt;/li&gt;
&lt;li&gt;0574383: RX-51 Germany&lt;/li&gt;
&lt;li&gt;0591474: RX-51 Hungary&lt;/li&gt;
&lt;li&gt;0591474: RX-51 Hungary&lt;/li&gt;
&lt;li&gt;0574385: RX-51 Italy&lt;/li&gt;
&lt;li&gt;0583516: RX-51 Light Swap&lt;/li&gt;
&lt;li&gt;0582647: RX-51 MENA&lt;/li&gt;
&lt;li&gt;0585168: RX-51 Montenegro Greece&lt;/li&gt;
&lt;li&gt;0582645: RX-51 Netherlands&lt;/li&gt;
&lt;li&gt;0582644: RX-51 Poland&lt;/li&gt;
&lt;li&gt;0574386: RX-51 Russia&lt;/li&gt;
&lt;li&gt;0574179: RX-51 Scandinavia Finland Sweden&lt;/li&gt;
&lt;li&gt;0587236: RX-51 Scandinavia Norway Denmark&lt;/li&gt;
&lt;li&gt;0584570: RX-51 Slovakia&lt;/li&gt;
&lt;li&gt;0584570: RX-51 Slovakia&lt;/li&gt;
&lt;li&gt;0574384: RX-51 Spain Portugal&lt;/li&gt;
&lt;li&gt;0584598: RX-51 Swap&lt;/li&gt;
&lt;li&gt;0584598: RX-51 Swap&lt;/li&gt;
&lt;li&gt;0587813: RX-51 Swap France&lt;/li&gt;
&lt;li&gt;0587810: RX-51 Swap Russia&lt;/li&gt;
&lt;li&gt;0587812: RX-51 Swap USA&lt;/li&gt;
&lt;li&gt;0560826: RX-51 UK Ireland&lt;/li&gt;
&lt;li&gt;0580952: RX-51 USA&lt;/li&gt;
&lt;li&gt;0593611: UK CV&lt;/li&gt;
&lt;li&gt;0595421: Vodafone UK GB Contract black&lt;/li&gt;
&lt;li&gt;1.2009.42.2(發布)&lt;/li&gt;
&lt;li&gt;0574383: RX-51 Germany&lt;/li&gt;
&lt;li&gt;0574383: RX-51 Germany&lt;/li&gt;
&lt;li&gt;1.2009.44.1(發布)&lt;/li&gt;
&lt;li&gt;0595085: N900 RX-51 TMN (Telecomunicacoes Moveis Nacionais S.A.*) PT V1 - Black&lt;/li&gt;
&lt;li&gt;0582648: RX-51 Belgium&lt;/li&gt;
&lt;li&gt;0584571: RX-51 Croatia Makedonia&lt;/li&gt;
&lt;li&gt;0584572: RX-51 Czech&lt;/li&gt;
&lt;li&gt;0591362: RX-51 Estonia&lt;/li&gt;
&lt;li&gt;0574180: RX-51 France&lt;/li&gt;
&lt;li&gt;0574383: RX-51 Germany&lt;/li&gt;
&lt;li&gt;0591474: RX-51 Hungary&lt;/li&gt;
&lt;li&gt;0574385: RX-51 Italy&lt;/li&gt;
&lt;li&gt;0583516: RX-51 Light Swap&lt;/li&gt;
&lt;li&gt;0582647: RX-51 MENA&lt;/li&gt;
&lt;li&gt;0585168: RX-51 Montenegro Greece&lt;/li&gt;
&lt;li&gt;0582645: RX-51 Netherlands&lt;/li&gt;
&lt;li&gt;0582644: RX-51 Poland&lt;/li&gt;
&lt;li&gt;0574386: RX-51 Russia&lt;/li&gt;
&lt;li&gt;0574179: RX-51 Scandinavia Finland Sweden&lt;/li&gt;
&lt;li&gt;0587236: RX-51 Scandinavia Norway Denmark&lt;/li&gt;
&lt;li&gt;0584570: RX-51 Slovakia&lt;/li&gt;
&lt;li&gt;0574384: RX-51 Spain Portugal&lt;/li&gt;
&lt;li&gt;0584598: RX-51 Swap&lt;/li&gt;
&lt;li&gt;0587813: RX-51 Swap France&lt;/li&gt;
&lt;li&gt;0587810: RX-51 Swap Russia&lt;/li&gt;
&lt;li&gt;0587812: RX-51 Swap USA&lt;/li&gt;
&lt;li&gt;0593709: RX-51 Switzerland&lt;/li&gt;
&lt;li&gt;0560826: RX-51 UK Ireland&lt;/li&gt;
&lt;li&gt;0580952: RX-51 USA&lt;/li&gt;
&lt;li&gt;0593611: UK CV&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;li&gt;0593611: N900 RX-51 Country Variant United Kingdom GB V1 Black&lt;/li&gt;
&lt;li&gt;0595085: N900 RX-51 TMN (Telecomunicacoes Moveis Nacionais S.A.*) PT V1 - Black&lt;/li&gt;
&lt;li&gt;0582648: RX-51 Belgium&lt;/li&gt;
&lt;li&gt;0584571: RX-51 Croatia Makedonia&lt;/li&gt;
&lt;li&gt;0584572: RX-51 Czech&lt;/li&gt;
&lt;li&gt;0591362: RX-51 Estonia&lt;/li&gt;
&lt;li&gt;0574180: RX-51 France&lt;/li&gt;
&lt;li&gt;0574383: RX-51 Germany&lt;/li&gt;
&lt;li&gt;0591474: RX-51 Hungary&lt;/li&gt;
&lt;li&gt;0574385: RX-51 Italy&lt;/li&gt;
&lt;li&gt;0582647: RX-51 MENA&lt;/li&gt;
&lt;li&gt;0585168: RX-51 Montenegro Greece&lt;/li&gt;
&lt;li&gt;0582645: RX-51 Netherlands&lt;/li&gt;
&lt;li&gt;0582644: RX-51 Poland&lt;/li&gt;
&lt;li&gt;0574386: RX-51 Russia&lt;/li&gt;
&lt;li&gt;0574179: RX-51 Scandinavia Finland Sweden&lt;/li&gt;
&lt;li&gt;0587236: RX-51 Scandinavia Norway Denmark&lt;/li&gt;
&lt;li&gt;0584570: RX-51 Slovakia&lt;/li&gt;
&lt;li&gt;0574384: RX-51 Spain Portugal&lt;/li&gt;
&lt;li&gt;0593709: RX-51 Switzerland&lt;/li&gt;
&lt;li&gt;0560826: RX-51 UK Ireland&lt;/li&gt;
&lt;li&gt;0580952: RX-51 USA&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;li&gt;0583566: RX-51 Australia&lt;/li&gt;
&lt;li&gt;0583566: RX-51 Australia&lt;/li&gt;
&lt;li&gt;0582648: RX-51 Belgium&lt;/li&gt;
&lt;li&gt;0584571: RX-51 Croatia Makedonia&lt;/li&gt;
&lt;li&gt;0584572: RX-51 Czech&lt;/li&gt;
&lt;li&gt;0591362: RX-51 Estonia&lt;/li&gt;
&lt;li&gt;0574180: RX-51 France&lt;/li&gt;
&lt;li&gt;0574383: RX-51 Germany&lt;/li&gt;
&lt;li&gt;0591474: RX-51 Hungary&lt;/li&gt;
&lt;li&gt;0583572: RX-51 Indonesia,Vietnam,Cambodia&lt;/li&gt;
&lt;li&gt;0583572: RX-51 Indonesia,Vietnam,Cambodia&lt;/li&gt;
&lt;li&gt;0574385: RX-51 Italy&lt;/li&gt;
&lt;li&gt;0582647: RX-51 MENA&lt;/li&gt;
&lt;li&gt;0582647: RX-51 MENA&lt;/li&gt;
&lt;li&gt;0585168: RX-51 Montenegro Greece&lt;/li&gt;
&lt;li&gt;0582645: RX-51 Netherlands&lt;/li&gt;
&lt;li&gt;0583569: RX-51 Philippines&lt;/li&gt;
&lt;li&gt;0583569: RX-51 Philippines&lt;/li&gt;
&lt;li&gt;0583569: RX-51 Philippines&lt;/li&gt;
&lt;li&gt;0582644: RX-51 Poland&lt;/li&gt;
&lt;li&gt;0574386: RX-51 Russia&lt;/li&gt;
&lt;li&gt;0574179: RX-51 Scandinavia Finland Sweden&lt;/li&gt;
&lt;li&gt;0587236: RX-51 Scandinavia Norway Denmark&lt;/li&gt;
&lt;li&gt;0583571: RX-51 Singapore&lt;/li&gt;
&lt;li&gt;0583571: RX-51 Singapore&lt;/li&gt;
&lt;li&gt;0584570: RX-51 Slovakia&lt;/li&gt;
&lt;li&gt;0598090: RX-51 South-Asia(Nepal,Sri Lanka)&lt;/li&gt;
&lt;li&gt;0598090: RX-51 South-Asia(Nepal,Sri Lanka)&lt;/li&gt;
&lt;li&gt;0582646: RX-51 South Africa&lt;/li&gt;
&lt;li&gt;0582646: RX-51 South Africa&lt;/li&gt;
&lt;li&gt;0574384: RX-51 Spain Portugal&lt;/li&gt;
&lt;li&gt;0593709: RX-51 Switzerland&lt;/li&gt;
&lt;li&gt;0599194: RX-51 Taiwan&lt;/li&gt;
&lt;li&gt;0599194: RX-51 Taiwan&lt;/li&gt;
&lt;li&gt;0583568: RX-51 Thailand&lt;/li&gt;
&lt;li&gt;0583568: RX-51 Thailand&lt;/li&gt;
&lt;li&gt;0583568: RX-51 Thailand&lt;/li&gt;
&lt;li&gt;0560826: RX-51 UK Ireland&lt;/li&gt;
&lt;li&gt;0591467: RX-51 Ukraine&lt;/li&gt;
&lt;li&gt;0580952: RX-51 USA&lt;/li&gt;
&lt;li&gt;0599195 HK（即全球版）&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>使用wget下载整站</title>
      <link>https://unixetc.com/post/download-the-entire-station-using-wget/</link>
      <pubDate>Sun, 21 Apr 2013 04:21:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/download-the-entire-station-using-wget/</guid>
      <description>&lt;p&gt;命令实例:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$wget -r -p -np -k -e robots=off -U &amp;quot;Mozilla/5.0 (Windows; U; Windows NT 5.1; zh-CN; rv:1.9.1.6) Gecko/20091201 Firefox/3.5.6&amp;quot; &amp;quot;http://baidu.com&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;参数解释:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;-r,--recursive 递归下载
-p, --page-requisites 下载显示HTML文件的所有图片
-np, --no-parent 不要追溯到父目录
-k, --convert-links 转换非相对链接为相对链接
-e,–execute=COMMAND 执行一个 “.wgetrc”命令
robots=off 无视robots.txt
-U, --user-agent=AGENT 设定代理的名称为 AGENT
&amp;quot;Mozilla/5.0 (Windows; U; Windows NT 5.1; zh-CN; rv:1.9.1.6) Gecko/20091201 Firefox/3.5.6&amp;quot; 伪装agent&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Archlinux下修改网卡名称</title>
      <link>https://unixetc.com/post/archlinux-modify-the-network-adapter-name/</link>
      <pubDate>Wed, 06 Mar 2013 03:06:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/archlinux-modify-the-network-adapter-name/</guid>
      <description>&lt;p&gt;刚刚安装了Archlinux，用的archlinux-2013.03.01-dual.iso镜像，最新的systemd将网卡名更改了，不在是原来默认的eth0/wlan0&lt;/p&gt;
&lt;p&gt;我的ifconfig -a输出如下:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;enp9s0: flags=4098 mtu 1500
ether 04:7d:7b:f8:25:9d txqueuelen 1000 (Ethernet)
RX packets 0 bytes 0 (0.0 B)
RX errors 0 dropped 0 overruns 0 frame 0
TX packets 0 bytes 0 (0.0 B)
TX errors 0 dropped 0 overruns 0 carrier 0 collisions 0

lo: flags=73mtu 65536
inet 127.0.0.1 netmask 255.0.0.0
inet6 ::1 prefixlen 128 scopeid 0x10
loop txqueuelen 0 (Local Loopback)
RX packets 0 bytes 0 (0.0 B)
RX errors 0 dropped 0 overruns 0 frame 0
TX packets 0 bytes 0 (0.0 B)
TX errors 0 dropped 0 overruns 0 carrier 0 collisions 0

wlp3s0: flags=4098mtu 1500
ether 88:9f:fa:f8:c3:06 txqueuelen 1000 (Ethernet)
RX packets 0 bytes 0 (0.0 B)
RX errors 0 dropped 0 overruns 0 frame 0
TX packets 0 bytes 0 (0.0 B)
TX errors 0 dropped 0 overruns 0 carrier 0 collisions 0&amp;lt;/pre&amp;gt; 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;怎么将网卡名改回原来的eth0/wlan0呢？如下操作即可:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#cd /usr/lib/udev/rules.d/
#mv 80-net-name-slot.rules 80-net-name-slot.rules.bak
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;如果&lt;code&gt;/usr/lib/udev/rules.d/&lt;/code&gt;目录没有如上文件，那就在&lt;code&gt;/etc/udev/rules.d/&lt;/code&gt;找，完成后重启电脑即可！&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Archlinux安装笔记</title>
      <link>https://unixetc.com/post/archlinux-installation-notes/</link>
      <pubDate>Thu, 03 Jan 2013 01:03:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/archlinux-installation-notes/</guid>
      <description>&lt;p&gt;&lt;strong&gt;下载ArchLinux镜像&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;下载archlinux-2012.12.01-dual.iso，可以将其刻录到CD引导启动，或者使用dd命令将其写入到USB设备。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;http://mirrors.163.com/archlinux/iso/2012.12.01/archlinux-2012.12.01-dual.iso.torrent&#34;&gt;http://mirrors.163.com/archlinux/iso/2012.12.01/archlinux-2012.12.01-dual.iso.torrent&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;完成后重启电脑进入到Archlinux CD开始进行安装。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;设置网络连接&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;整个安装过程，本机需要连接互联网以下载所需文件，在此推荐使用网线连接自动获取IP，如果是这样那么当你进入到archlinux时网络已经连接成功了，可以使用ping来查看是否成功&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#ping -c 5 aotee.com
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;如果不是自动获取IP，可以参考以下相关命令设置网络连接：&lt;/p&gt;
&lt;p&gt;开启|关闭网络设备&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# ip link set eth0 up
# ip link set eth0 down
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;自动获取IP(DHCP)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# dhcpcd eth0
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;查看状态&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# ip addr show dev eth0
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;如果是无线网卡，请&lt;a href=&#34;https://wiki.archlinux.org/index.php/Wireless_Setup_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)&#34;&gt;参考这里&lt;/a&gt;进行设置。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;设置键盘布局&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#loadkeys us
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;准备硬盘分区&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;设置硬盘分区时可以使用自己熟悉的工具进行操作，以下是我的分区方案&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;/dev/sda9 /boot
/dev/sda10 swap
/dev/sda11 /
/dev/sda12 /home
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;我使用LinuxMint LiveCD的磁盘工具进行分区，分区完成后可以使用&lt;strong&gt;lsblk /dev/sda&lt;/strong&gt;来查看结果。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;格式化分区&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;参考以下命令对已有的分区进行格式化&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#mkfs -t ext2 /dev/sda9
#mkfs -t ext4 /dev/sda11
#mkfs -t ext4 /dev/sda12
#mkswap /dev/sda10
#swapon /dev/sda10
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;挂载分区&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;系统根分区(/)需要挂载至/mnt目录，如果还有其他分区还需要在/mnt下新建相应目录进行挂载&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#mount /dev/sda11 /mnt
#mkdir /mnt/{boot,home}
#mount /dev/sda9 /mnt/boot
#mount /dev/sda12 /mnt/home
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;安装基本系统&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;编辑/etc/pacman.d/mirrorlist取消掉想要使用的镜像地址前的注视符(#)刷新软件包列表：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# pacman -Syy
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;安装基本系统&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# pacstrap /mnt base base-devel
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;安装引导程序&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# pacstrap /mnt grub-bios
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h3 id=&#34;配置系统&#34;&gt;配置系统&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;生成fstab&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#genfstab -p /mnt &amp;gt;&amp;gt;/mnt/etc/fstab
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;chroot 到新系统&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#arch-chroot /mnt
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;设置hostname&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#echo edge40 &amp;gt;&amp;gt;/etc/hostname
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;设置时区&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#ln -s /usr/share/zoneinfo/Asia/Shanghai /etc/localtime
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;本地化设置&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;编辑/etc/locale.conf，写入LANG=&amp;quot;zh_CN.UTF-8&amp;rdquo;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#vi /etc/locale.conf
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;编辑/etc/locale.gen 去掉所有zh开头行的注释，然后执行以下命令使之生效&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#locale-gen
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;创建初始 ramdisk 环境&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#mkinitcpio -p linux
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;设置GRUB&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;需要搜索其它操作系统，请先用&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# pacman -S os-prober //安装 os-prober
#grub-mkconfig -o /boot/grub/grub.cfg
#grub-install --target=i386-pc --recheck /dev/sda
#cp /usr/share/locale/en@quot/LC_MESSAGES/grub.mo /boot/grub/locale/en.mo
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;退出archlinux cd完成安装&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#exit
#umount /mnt/{boot,home}
#umount /mnt
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后重启系统并以 root 账号登陆。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Cinnarch安装全过程</title>
      <link>https://unixetc.com/post/installation-cinnarch/</link>
      <pubDate>Fri, 23 Nov 2012 11:23:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/installation-cinnarch/</guid>
      <description>&lt;p&gt;Cinnarch是一个新的linux发行版，基于Archlinux以Cinnamon为默认桌面系统，对于想体验Archlinux但对于全新的安装方法无法把握的朋友，Cinnarch不失为一个良好的选择。&lt;/p&gt;
&lt;p&gt;以下为安装Cinnarch的一次全过程，以供需要的朋友参考。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;下载Cinnarch&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;首先从官网下载Cinnarch镜像，地址为 &lt;a href=&#34;http://www.cinnarch.com/try-it/&#34;&gt;http://www.cinnarch.com/try-it/&lt;/a&gt; ，按照需要下载32Bit或者64Bit的，下载方式有直接下载(iso)与通过BT种子(torrent)下载两种方式。&lt;/p&gt;
&lt;p&gt;将下载后的镜像刻入CD，放入光驱后重启以进入LiveCD即可。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;安装Cinnarch&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;进入到LiveCD后会弹出一个Welcome弹窗，可以点击其中的CLI Installer开始安装，或者先使用系统(Try it)，需要安装时在系统菜单中找到Cinnarch Installer CLI点击打开，也可以开始安装。&lt;/p&gt;
&lt;p&gt;打开安装程序前，请确认电脑已经可以联网使用，因为一切软件包都是实时从mirror下载的，并且安装好的系统和archlinux一样，可以滚动升级(Rolling upgrade)。&lt;/p&gt;
&lt;p&gt;打开安装程序，首先提示更新软件list，更新完成后会出现一个welcome的对话框，确认后进入到安装主菜单，如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;0 Set Language and Keyboard
1 Set Time and Date
2 Prepare Hard Drive
3 Select Source
4 Install System
5 Configure System
6 Exit Install 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;设置语言与键盘 (Set Language and Keyboard)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;选择进入设置菜单，在此主要设置语言选项，键盘布局可以不设置，采用默认即可。 语言设置为zh_CN.UTF-8 设置键盘布局(Set Keymap)时可以直接选择返回主菜单(Return to Main Menu)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;设置时间与日期(Set Time And Date)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;此项用于设置时间与日期，此项下面有三个子菜单：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1 Select Region and Timezone
2 Set Time and Date
3 Return to Main Menu
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;第一项菜单用于设置区域与时区，此次区域(Region)设置为Asia，时区(Timezone)设置为Chongqing(或者Beijing/Shanghai)&lt;/p&gt;
&lt;p&gt;接下来是设置时间与日期(Set Time and Date)，进入该子菜单后，会有一个提示对话框：Do you want to use UTC for your clock?&lt;/p&gt;
&lt;p&gt;以上提示为，当需要设置UTC时间请选择Yes，使用本地时间(Localtime)则选择No，在此推荐使用本地时间(Localtime)，完成后返回主菜单。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;准备硬盘(Prepare Hard Drive)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在此以本机硬盘作为示例，以下是为linux所准备的分区详情&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;dev/sda9  /boot
/dev/sda10 swap
/dev/sda11 /
/dev/sda12 /home
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;选择主菜单第二项后，进入到磁盘操作的子菜单，如下&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1 Auto-Prepare(erases the ENTIRE hard drive)
2 Partition Hard Drives
3 Create Software Raid,Lvm2 and Luks encryption
4 Set Filesystem Mountpoints
5 Return to Main Menu
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;第一项为自动分区，对于本地硬盘只用来安装linux的新手用户，可以悬在该项，程序会将全部的硬盘用于linux安装。&lt;/p&gt;
&lt;p&gt;第二项为手动操作，对于想要自定义分区的用户可以选择该项。&lt;/p&gt;
&lt;p&gt;第三项为设置分区挂载点，对于已经设置好的分区磁盘，选择该项开始设置各个分区的挂载点，由于我的本地分区信息已经建立完成(参考1)，所以选择该项开始挂载分区。&lt;/p&gt;
&lt;p&gt;首先会提示挂载交换分区(Swap)，在此选择/dev/sda10 接着是擦除提示，选择是(Yes)，然后按照提示设置标签(LABEL)和扩展选项，其中标签必须设置，扩展选项按照自定义设置，如果不知道怎样设置可以选择默认(置空)。&lt;/p&gt;
&lt;p&gt;交换分区(Swap)设置完成后，接下来提示设置跟分区(/)，在此选择/dev/sda11 接下来是选择文件系统类型(filesystem)、设置标签(LABEL)和磁盘扩展选项，按照自定义设置即可。&lt;/p&gt;
&lt;p&gt;至此已经设置了交换分区(Swap)与跟分区(/)，这两个分区设置完成已经可以进行安装了，Cinnarchon同样也是这样预置的，如果没有其他挂载分区设置，就可以选择完成(DONE)来使此次设置生效。&lt;/p&gt;
&lt;p&gt;但是我已经为用户分区(/home)预留了/dev/sda12，所以还需要将其挂载至系统，选择/dev/sda12开始设置用户分区(/home) 接下来是选择文件系统类型(filesystem)、设置标签(LABEL)和磁盘扩展选项，按照自定义设置即可。&lt;/p&gt;
&lt;p&gt;同样，参考用户分区(/home)设置，将/dev/sda9挂载至引导分区(/boot)，完成后返回磁盘操作子菜单，选择完成(DONE)使设置生效。&lt;/p&gt;
&lt;p&gt;下面是提示磁盘分区名方式，建议选择第三项&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;FSUUID  /dev/disk/by-uuid/&amp;lt;uuid&amp;gt;
FSLABEL /dev/disk/by-label/&amp;lt;label&amp;gt;
KERNEL  /dev/&amp;lt;kernelname&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;选择软件源(Select Source)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;进入到选择镜像(Choose Mirror)子菜单选择需要使用的镜像地址，国内推荐ustc与163的源 &lt;code&gt;http://mirrors.163.com&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;安装系统(install system)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;点击开始安装系统&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;配置系统(coonfigure system)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;第二个提示对话框，选择是否从usb启动，在此是本机安装所以选择否(NO)，然后选择自己熟悉的编辑器，从nano与vi中选择一个。&lt;/p&gt;
&lt;p&gt;进入到配置子菜单，按照提示设置：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Desktop-User          Create your user
Hostname              Your computer`s name
Root-Password         Set the root password
/etc/mkinitcpio.conf  (Optional)Initramfs Config
Return                Return to Main Menu
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;配完成后开始设置生效，接下来设置引导系统类型(boot system type)，有以下三个选项：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;GRUB2        BIOS(Comon)
UEFI_x86_64 x86_64 UEFI
UEFI_i386   i386 UEFI
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;在此选择grub2，UEFI貌似用于window8公用系统。&lt;/p&gt;
&lt;p&gt;然后选择grub安装位置，由于本地只有一个磁盘，所以选择/dev/sda，grub安装完成后所有的安装均完成，选择主菜单的退出安装(exit install)。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>WebOS资源分享</title>
      <link>https://unixetc.com/post/webos-resource-sharing/</link>
      <pubDate>Mon, 20 Aug 2012 12:59:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/webos-resource-sharing/</guid>
      <description>&lt;p&gt;对于WebOS还是继续看好，但是出于使用习惯和需求，将已经闲置了两个多月的HP TouchPad出手，新入手了台iPad2 Wifi (32nm)。&lt;/p&gt;
&lt;p&gt;以下分享一些关于HP TouchPad的WebOS资源，以方便需要的朋友 以下为目录说明:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;G:WebOS
├─8%及12%无法通过一键修砖 *关于刷机不过的处理方法
├─cm7alpha3.5 *CM7 for HP TouchPad
├─cm9alpha2 *CM7 for HP TouchPad
├─patchs *一些补丁备份，便于安装
├─soft *收集的一些HP TouchPad软件
├─touchpad免激活 *HP TouchPad免激活工具
├─WQI *WebOS Quick Install
└─zoopda-elite-TP *Zoopda eLite发布的DIY ROM for HP TouchPad
calibre-0.8.22.msi *电子书管理编辑软件
KSMediaStreamer_v1.0.7.msi *流媒体分享软件
NovacomInstaller_x86.msi *驱动程序(Windows)
patch.txt *Preware补丁推荐
Splashtop_Streamer_Win_v1.6.0.1.exe *远程桌面服务程序
TBaccess.exe *TBaccess PC端
UniversalNovacomInstaller.jar *驱动程序(Linux)
webOS Nation Moboot.zip *MoBoot主题文件
webosdoctorp305hstnhwifi.jar *HP TouchPad官网3.0.5 ROM
WifiMediaSync.msi *媒体文件同步工具
手动删除android.txt *手动删除CM方法

G:WebOScm7alpha3.5
ACMEInstaller
ACMEUninstaller
gapps-gb-20110828-signed.zip
moboot_0.3.5.zip
novacom.exe
update-cm-7.1.0-tenderloin-a3.5-fullofbugs.zip
update-cwm_tenderloin-1012.zip
XRONified_vB2.9.1_odex_01032012.zip

G:WebOScm9alpha2
ACMEInstaller2
ACMEUninstaller
gapps-ics-20120429-signed.zip
moboot_0.3.5.zip
novacom.exe
update-cm-9.0.0-RC0-Touchpad-alpha2-fullofbugs.zip
update-cwm_tenderloin-1012.zip

G:WebOSpatchs
ca.canucksoftware.filemgr_2.0.7_all.ipk
ca.canucksoftware.homebrew-js-service-framework_1.0.0_all.ipk
ca.canucksoftware.systoolsmgr_1.0.5_all.ipk
cacanucksoftwareinternalz_15.ipk

G:WebOSsoft
ca.canuckcoding.comicshelfhd_1.3.0_all.ipk
chomper.sys.lsmime_0.1.0_armv7.ipk
com.8bitdevelopment.wifimediasync_3.0.5_all.ipk
com.amwityga.tpnews_1.0.0_all.ipk
com.aol.engadgetHD_1.0.5_all_Touchpad.ipk
com.hedami.musicplayerremix_2.5.5_all.ipk
com.hp.palm.renren_01.00.022_all.ipk
com.ingloriousapps.glimpse_1.2.3_all.ipk
com.ingloriousapps.notesplus-untestedalpha_0.3.1_all.ipk
com.kalemsoft.ksmplayera_0.5.3_tp.ipk
com.l337tech.internet-radio-hd-pro_0.0.2_all.ipk
com.menaka.mvnc_2.0.0_all.ipk
com.mporting.ime.zh-cn.patch_3.0.4_all.ipk
com.noteday.opencoursehd_1.0.0_all.ipk
com.omastudios.filemanager_1.7.0_all.ipk
com.oscillicious.sodasynthhd_1.0.2_all.ipk
com.picsel.app.smartoffice_1.8.5_all.ipk
com.qq.palmqzone_1.0.0_all.ipk
com.sina.touchpadweibo_1.0.1_all.ipk
com.smilepig.sohutv_0.0.7_all.ipk
com.splashtop.remote.webos_1.0.3_all.ipk
com.syllogithm.webosrdpc_0.2.5_all.ipk
com.tencent.qq_1.0.0_all.ipk
com.tudou.video_2.0.0_all.ipk
com.wordpress.mobilecoder.touchplayer_1.0.6a_all.ipk
com.xuepx.justradio.hd_2.0.3_all.ipk
com.youku.touchpad_2.0.0_beta3.ipk
de.thg_.usbflashmount_0.1.0_all.ipk
org.webosinternals.preware_1.8.5_arm.ipk
org.webosinternals.preware_1.9.12_arm.ipk

G:WebOStouchpad免激活
devicetool-tp
devicetool-tp.jar
devicetool.bat
readme.txt

G:WebOSWQI
WebOSQuickInstall-4.2.0.jar
WebOSQuickInstall-4.3.1.jar
WebOSQuickInstall-4.4.0.jar 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a href=&#34;http://pan.baidu.com/share/link?shareid=308749&amp;amp;uk=1493434283&#34;&gt;下载地址&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Linux Live USB制作工具</title>
      <link>https://unixetc.com/post/linux-liveusb-tools/</link>
      <pubDate>Mon, 13 Aug 2012 18:12:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/linux-liveusb-tools/</guid>
      <description>&lt;p&gt;现在大多数的Linux发行版都支持Live方式，即可直接运行体验无需安装。&lt;/p&gt;
&lt;p&gt;Linux Live又分为LiveCD和LiveUSB，前者是通过光盘(CD/DVD)方式直接运行，后者则是通过USB设备(U盘/移动硬盘)来运行。&lt;/p&gt;
&lt;p&gt;以下介绍几款Linux Live USB制作工具，个人推荐Linux Live USB Creator!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注:需要主板BIOS开启USB Boot功能。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Universal USB Installer&lt;/strong&gt; &lt;a href=&#34;http://www.pendrivelinux.com&#34;&gt;http://www.pendrivelinux.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;1，选择Linux版本，勾选后面的Download the iso(Optional).则从互联网下载所选镜像。
2，选择本地镜像文件(iso)。
3，选择将要写入的USB设备，勾选Show all Drives可以看到所有本地磁盘，需要写入移动硬盘就需要勾选此项。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;UNetbootin&lt;/strong&gt; &lt;a href=&#34;http://unetbootin.sourceforge.net&#34;&gt;http://unetbootin.sourceforge.net&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;1，选择镜像源，从网络下载或者本地iso文件
2，在类型中选择usb设备或者硬盘，然后在驱动器栏选择具体的盘符。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;LinuxLive USB Creator&lt;/strong&gt; &lt;a href=&#34;http://www.linuxliveusb.com/&#34;&gt;http://www.linuxliveusb.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;1，选择需要写入的USB设备
2，选择安装源（ISO文件、光驱、网路下载）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Image Writer for Microsoft Windows (Win32DiskImager)&lt;/strong&gt; &lt;a href=&#34;https://launchpad.net/win32-image-writer&#34;&gt;https://launchpad.net/win32-image-writer&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这个操作相对很简单，并且只单一的适用于img镜像文件，如Meego就是采用这种发行方式&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;万能的dd&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;最喜欢这个方法了！ 使用lsblk查看u盘设备名，如/dev/sdb，例如镜像文件名为linux.iso，使用以下命令将镜像文件写入U盘&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#dd if=linux.iso of=/dev/sdb&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>修改iPhone的Cydia源</title>
      <link>https://unixetc.com/post/edit-the-cydia-software-source/</link>
      <pubDate>Mon, 18 Jun 2012 06:18:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/edit-the-cydia-software-source/</guid>
      <description>&lt;p&gt;越狱后的ios设备cydia为必装平台，但是在软件源管理中，大家可能会发现一些源通过cydia无法编辑,比如Cydia/Telesphoreo。&lt;/p&gt;
&lt;p&gt;我现在入手一部iPhone 4 CDMA版，通过OTA写号使用。在安装sbsettings的时候，一直提示size mismatch而未能安装成功。网上看了看大家的经历，这样的问题最终定位都是某个软件源不匹配造成，试着删除或者更新就可以解决。&lt;/p&gt;
&lt;p&gt;但是我发现机子买回来，里面有两个源是无法编辑的，一个是上面提到的Cydia/Telesphoreo，另一个就是维维网的源。经过我在cydia下编辑删除，试遍了其他的源的删除，但都是不可以成功安装sbsettings。于是我觉得应该是剩下的那两个不可编辑源的问题，由于Cydia/Telesphoreo是Cydia初始安装的源，应该不会有问题，那就需要编辑删除维维网的源了，但是在cydia的源管理下它是不可编辑的。&lt;/p&gt;
&lt;p&gt;最后让我找到了办法，既然在cydia下不可以编辑，那么在ssh下呢，只要找到该源的文件，那就可以编辑了，经过判断查找，最终定位到&lt;code&gt;/private/etc/apt/sources.list.d/&lt;/code&gt;目录，在该目录下存放着一些软件源文件(.list)。因为ios采用和debian相同的软件管理软件apt-get，那么他的软件源管理方式应该类似。基于以上经验，最终定位到了&lt;code&gt;/private/etc/apt/sources.list.d/&lt;/code&gt;目录。&lt;/p&gt;
&lt;p&gt;具体解决步骤如下：&lt;/p&gt;
&lt;p&gt;进入到&lt;code&gt;/private/etc/apt/sources.list.d/&lt;/code&gt;目录，将里面除了cydia.list文件，其他的全部删除。然后编辑cydia.list文件，只留下一行&lt;code&gt;deb http://apt.saurik.com/&lt;/code&gt; 即可，保存之。&lt;/p&gt;
&lt;p&gt;手机上打开cydia，重新刷新软件源。然后按需添加需要的第三方源。&lt;/p&gt;
&lt;p&gt;至于如何编辑cydia目录，一般可以使用itools等软件，但是这样比较繁琐。简单直接的方法是通过ssh连接手机进行操作，可参考&lt;a href=&#34;https://unixetc.com/post/iphone-and-ssh/&#34;&gt;通过SSH连接IOS设备&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;aPhone:~ root# cd /private/etc/apt/sources.list.d/
aPhone:/private/etc/apt/sources.list.d root# ls -l
total 24
-rwxr-xr-x 1 root wheel 259 May 25 23:01 appvv.list*
-rw-r--r-- 1 root wheel 357 Jun 16 13:59 cydia.list
-rw-r--r-- 1 root wheel 227 May 25 23:01 saurik.list
aPhone:/private/etc/apt/sources.list.d root# cat cydia.list
deb http://apt.saurik.com/ ios/690.10 main
deb http://apt.178.com/ ./
deb http://download.voicecloud.cn/cydia/ ./
deb http://cydia.zodttd.com/repo/cydia/ stable main
deb http://repo666.ultrasn0w.com/ ./
deb http://mi.baidu.com/ ./
deb http://apt.thebigboss.org/repofiles/cydia/ stable main
deb http://apt.modmyi.com/ stable main
deb http://apt.25pp.com/ ./&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>HP Veer刷机中遇到的12%卡死问题</title>
      <link>https://unixetc.com/post/twelve-percent-problem-on-hp-veer/</link>
      <pubDate>Mon, 28 May 2012 15:28:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/twelve-percent-problem-on-hp-veer/</guid>
      <description>&lt;p&gt;对于webos系统，我是由衷的赞美，但是相应的硬件确实有待商榷。&lt;/p&gt;
&lt;p&gt;去年就入手了一部HP Veer 4G，体验了一个星期就转手了，因为我手中已经有了HP Touchpad。&lt;/p&gt;
&lt;p&gt;前几天朋友再次邮寄Veer给我，自己玩不转，也不想玩了，所以让给我倒腾去吧。拿到手第一感觉就是，这货儿也太不爱惜了，机子用的就没法看，好在屏幕还贴膜着，要不更不知道会咋样。&lt;/p&gt;
&lt;p&gt;拿到手的机子是商家当时发货时的系统，被搞的乌七八糟，于是重新找rom下载之。&lt;/p&gt;
&lt;p&gt;以前自己用的那个感觉刷原厂rom就很好，但是现在想试着找找看有没有不错的第三方rom，煮机网看了下，发现现在有个stay版的，看起来做的确实不错，于是下载安装之。&lt;/p&gt;
&lt;p&gt;刷机时由于懒惰，用了一个一键清除工具，没有使用系统自带的擦除功能，导致存储上出了问题，u盘功能不能使用了。想着不用管重新刷过就是，没想到碰到了从来没有过的12%卡死问题，刷了N多次还是不能过12%。&lt;/p&gt;
&lt;p&gt;网上看了看一些经验，像重新安装驱动，换一台电脑试试等等，都没有用。&lt;/p&gt;
&lt;p&gt;最后在webos-internals.org上找到了方法，地址在这里&lt;a href=&#34;http://www.webos-internals.org/wiki/How_To_Recover&#34;&gt;http://www.webos-internals.org/wiki/How_To_Recover&lt;/a&gt;，里面列出了几个不能正常recovery的实例，参考里面的Doctor disconnects at 8%条目，就可以解决刷机12%的问题。
从里面说明来看，造成这些问题的主要原因就是存储问题，所以可能是由于我使用了一键清除工具的原因。&lt;/p&gt;
&lt;p&gt;主要步骤如下：&lt;/p&gt;
&lt;p&gt;1，重启手机，进入到recovery模式下(Power+音量上）
2，使用novacom刷入uImage&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#novacom boot mem://&amp;lt; nova-installer-image-broadway.uImage
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;其中的uImage文件，可以从官网的rom中提取，下载.tar格式的rom文件，用7zip打开&lt;/p&gt;
&lt;p&gt;3，使用novaterm连接系统，进入cli，重新修复存储系统&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#lvm.static vgscan --ignorelockingfailure
#lvm.static vgchange -ay --ignorelockingfailure
#mkdosfs -f 1 -s 64 /dev/store/media
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Windows下novaterm的目录为C:\Program Files\Palm Incterminal\novaterm.bat&lt;/p&gt;
&lt;p&gt;完成以上步骤，就可以重启进入recovery重新刷机了。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>离羣索居</title>
      <link>https://unixetc.com/post/leave-friends-alone/</link>
      <pubDate>Thu, 26 Apr 2012 14:26:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/leave-friends-alone/</guid>
      <description>&lt;p&gt;朋友间距离太近，就少了应有的礼貌，但如果距离太远了，就会多了不必要的客气。&lt;/p&gt;
&lt;p&gt;我也搞不清自己属于哪个，可能居中靠前点吧。对于熟识的朋友，我很容易和其达到厮混的状态，会下意识的匿藏彼此的隔阂（很小的那种）。相对而言，如果许久不曾联系，或者相处的距离较远的朋友们，那么我们之间就多了更多的客气，有时这种客气让我自己的都厌恶，总觉得是小小的虚伪，但现况就是这样，它存在既是有理。&lt;/p&gt;
&lt;p&gt;突然有以上的感触，是因为听《现象七十二变》，罗大佑的词写的确实不错，佩服!&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;在这个五千年的悠久历史里面&lt;/p&gt;
&lt;p&gt;成功与失败多少都有一点&lt;/p&gt;
&lt;p&gt;&amp;hellip;&amp;hellip;&lt;/p&gt;
&lt;p&gt;就像我看到文明车辆横冲直撞&lt;/p&gt;
&lt;p&gt;我不懂大家心中作何感想&lt;/p&gt;
&lt;p&gt;&amp;hellip;&amp;hellip;&lt;/p&gt;
&lt;p&gt;眼看着高楼盖得越来越高&lt;/p&gt;
&lt;p&gt;我们的人情味却越来越薄&lt;/p&gt;
&lt;p&gt;朋友之间越来越有礼貌&lt;/p&gt;
&lt;p&gt;只因为大家见面越来越少&lt;/p&gt;
&lt;p&gt;&amp;hellip;&amp;hellip;.&lt;/p&gt;
&lt;p&gt;就像彩色的电视变得更加花俏&lt;/p&gt;
&lt;p&gt;能辨别黑白的人越来越少&lt;/p&gt;
&lt;p&gt;&amp;hellip;&amp;hellip;&lt;/p&gt;
&lt;p&gt;但是生活不能像在演戏&lt;/p&gt;
&lt;p&gt;你戴着面具如何面对自己&lt;/p&gt;
&lt;p&gt;或许你将会真的发现一些奇迹&lt;/p&gt;
&lt;p&gt;只要你抛开一些面子问题&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>不要吝啬您的程度副词</title>
      <link>https://unixetc.com/post/do-not-save-your-degree-adverb/</link>
      <pubDate>Mon, 23 Apr 2012 04:23:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/do-not-save-your-degree-adverb/</guid>
      <description>&lt;p&gt;最近一直在赶着看《明朝那些事儿》，其实这个以前断断续续看了不少了，不过有丢下时间很长，最近又从头来过，已经看到崇祯中期了，用文中的话来说，大明公司已经没救了，倒闭只是时间问题。&lt;/p&gt;
&lt;p&gt;看这本书给我的感觉很深，最重要的一点是“运动是普遍存在的”，呵呵，这个听起来好像和《明》不搭边，不过我最感触的想法就是这个。看着明史上那些沉沉浮浮，有光辉有龌龊，但是这些对于我来说，那仅仅是一件事儿，他们已经随着时间而远去，现在仅作为茶余饭后的谈资。《明》中对于很多人物都作了中肯的评价，不能说是完全的，因为作者也不打包票。纵观这些作者口中的“猛人”，他们都是有过光辉的。作者在形容他们时，不吝的使用了大量程度副词，这样的描述给人物以入木三分的刻画，让他们的形象突出很明显。回头想想整本书，完全是一种以“人物连环画”的方式铺开，各个人物的时间段错落有致，偶尔还有几个追溯性的故事。&lt;/p&gt;
&lt;p&gt;回到标题，请不要吝啬您的程度副词。我们在平时的陈述时，对于人物或者事物的评价，尽可能的搭配以贴切的形容词，这样的陈述会很靠谱。但是，同样请在贴切的形容词前加上最适合的程度副词，这样会让你的陈述入读者三分，会最大的渲染您对事物或者人物的感情，让读者最大程度的身同体会。比如，你说一件事不靠谱，但是仅仅不靠谱有点贫乏，无以表达最真看法，你可以加上“十分”，十分不靠谱，这样听起来就够味儿了。&lt;/p&gt;
&lt;p&gt;其实，我要说的意思是有倾向性的，完整的意思是“当你在赞美的时候，不要吝啬您的程度副词”。对于词性来言，我是比较倾向于褒义词的。我觉得，越多的褒义词会使我们的生活更加美好（注意这也是褒义词），所以在平时的言谈中，我不喜欢那些让人们产生不好情绪的词条，因为人们的情绪是互相渲染的。如果您觉得自身的渲染力比较强，那么请不要吝啬的您的赞美，让更多的赞美充斥着我们的生活，这是一种美好的享受。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>NokiaN900设置无线链接</title>
      <link>https://unixetc.com/post/nokia-n900-set-up-wireless/</link>
      <pubDate>Sun, 22 Apr 2012 12:40:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/nokia-n900-set-up-wireless/</guid>
      <description>&lt;p&gt;首页点击左上角网络区域&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://unixetc.com/imgs/3989903888.webp&#34; alt=&#34;915222263.webp&#34;&gt;&lt;/p&gt;
&lt;p&gt;进入网络设置&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://unixetc.com/imgs/3531008835.webp&#34; alt=&#34;2062123496.webp&#34;&gt;&lt;/p&gt;
&lt;p&gt;在网络设置中，可以选择wifi或者GPRS链接&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://unixetc.com/imgs/3040336154.webp&#34; alt=&#34;2811909545.webp&#34;&gt;&lt;/p&gt;
&lt;p&gt;点击GPRS的话，将使用运营商的数据业务，点击wifi节点名的话，会出现输入密码提示，输入密码连接完成&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://unixetc.com/imgs/3147522416.webp&#34; alt=&#34;1151275348.webp&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>MySQL使用实例</title>
      <link>https://unixetc.com/post/mysql-usages/</link>
      <pubDate>Thu, 19 Apr 2012 14:19:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/mysql-usages/</guid>
      <description>&lt;p&gt;误删除了vps上的phpmyadmin，不得已翻阅了半天mysql指南，以下是一些mysql使用实例&lt;/p&gt;
&lt;h3 id=&#34;连接管理&#34;&gt;连接管理&lt;/h3&gt;
&lt;p&gt;链接数据库&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mysql -h localhost -u root -p
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;退出数据库&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mysql&amp;gt;quit;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;数据库管理&#34;&gt;数据库管理&lt;/h3&gt;
&lt;p&gt;查看数据库&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mysql&amp;gt;show databases;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;建立数据库&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mysql&amp;gt;create database name;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;备份(导出)数据库&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mysqldump -u username -p database &amp;gt; backup_db.sql
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;还原(导入)数据库&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mysql -u username -p database &amp;lt; backup_db.sql
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;用户管理&#34;&gt;用户管理&lt;/h3&gt;
&lt;p&gt;添加用户&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mysql&amp;gt;grant all privileges on databasename.* &#39;username&#39;@&#39;localhost&#39; identified by &#39;userpassword&#39; with grant optiton;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;删除用户&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mysql&amp;gt;drop user username;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;修改密码&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mysql&amp;gt;set password for &#39;username&#39;@&#39;localhost&#39; = password(&#39;userpassword&#39;);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;一个创建数据库并添加专用用户的示例:&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mysql&amp;gt; create database wp;
Query OK, 1 row affected (0.01 sec)

mysql&amp;gt; show databases;
+--------------------+
| Database         |
+--------------------+
| information_schema |
| mysql              |
| wp                 |
+--------------------+
3 rows in set (0.00 sec)

mysql&amp;gt; use up
ERROR 1049 (42000): Unknown database &#39;up&#39;
mysql&amp;gt; use wp;
Database changed
mysql&amp;gt; show tables;
Empty set (0.00 sec)

mysql&amp;gt; grant select,insert,update,delete,create,drop
    -&amp;gt; on wordpress.*
    -&amp;gt; to &#39;wordpress&#39;@&#39;localhost&#39;
    -&amp;gt; identified by &#39;passwd&#39;;
Query OK, 0 rows affected (0.03 sec)&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>N900超频与刷9G-Home</title>
      <link>https://unixetc.com/post/n900-overclock-and-brush-9ghome/</link>
      <pubDate>Sun, 08 Apr 2012 14:18:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/n900-overclock-and-brush-9ghome/</guid>
      <description>&lt;p&gt;&lt;strong&gt;什么是9G-home?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在linux中/home为用户主用目录，N900默认为/home分配的空间大概1.9G左右，而为了刷Android等第三方系统，我们需要更大的/home来存放文件，所以改变/home目录大小称之为XG-home(x有3/5/6/9等)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;刷9G Home&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;下载9G-home刷机包:http://pan.baidu.com/share/link?shareid=1527292529&amp;amp;uk=1493434283&lt;/p&gt;
&lt;p&gt;打开CMD，进入到flasher目录，输入如下命令（具体依照本机目录输入）:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;flasher-3.5.exe -F 9ghomeemmc.bin -f
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;出现提示&lt;strong&gt;Suitable USB device not found,waiting.&lt;/strong&gt; 时，关闭手机，按住U键连接数据线，等待cmd提示开始写入时可放开U键，等待提示完成。 &lt;strong&gt;不要开机，切记！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;接着重新刷Rom文件，即COMBIND那个文件。&lt;strong&gt;继续别开机！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;N900超频&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;接下来刷入超频包，以下是几个不同等级的超频包&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;zImage-700mhz&lt;/li&gt;
&lt;li&gt;zImage-750mhz&lt;/li&gt;
&lt;li&gt;zImage-800mhz&lt;/li&gt;
&lt;li&gt;zImage-850mhz-450dsp&lt;/li&gt;
&lt;li&gt;zImage-900mhz&lt;/li&gt;
&lt;li&gt;zImage-900mhz-500dsp&lt;/li&gt;
&lt;li&gt;zImage-930mhz&lt;/li&gt;
&lt;li&gt;zImage-930mhz-500dsp&lt;/li&gt;
&lt;li&gt;zImage-950mhz&lt;/li&gt;
&lt;li&gt;zImage-950mhz-500dsp&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;下载地址:http://pan.baidu.com/share/link?shareid=1567324549&amp;amp;uk=1493434283&lt;/p&gt;
&lt;p&gt;这里以超750MHz为例&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;flasher-3.5.exe -k zImage-750mhz -f
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;等到提示完成后，开机即可。 给大家贴出前后两张对比图&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/752251483.webp&#34; alt=&#34;n900_bf_oc.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/1611504914.webp&#34; alt=&#34;n900_af_oc.png&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Nokia N900 and Android</title>
      <link>https://unixetc.com/post/nokia-n900-and-android/</link>
      <pubDate>Sat, 07 Apr 2012 14:27:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/nokia-n900-and-android/</guid>
      <description>&lt;p&gt;感谢&lt;strong&gt;NITDroid Project&lt;/strong&gt; 的辛苦工作，使&lt;strong&gt;N900&lt;/strong&gt;更加的神机！&lt;/p&gt;
&lt;p&gt;使用Nitdroid刷入Android后，系统运行在/home目录，所以/home必须空间足够，N900默认的为 1.9G是不可以的，需要增大/home的容量，推荐参考N900超频和刷9G-home,将/home增大到9G&lt;/p&gt;
&lt;h3 id=&#34;添加软件源&#34;&gt;添加软件源&lt;/h3&gt;
&lt;p&gt;确保已添加以下软件源，一般前四个系统已经添加，没有的自己添加。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;名称：Nokia Applications
网址：https://downloads.maemo.nokia.com/fremantle/ssu/apps/
发布：./
组件：空

名称：Nokia System Software Updats
网址：https://downloads.maemo.nokia.com/fremantle/ssu/mr0
发布：./
组件：空

名称：Ovi
网址：https://downloads.maemo.nokia.com/fremantle1.2/ovi/
发布：./
组件：空

名称：maemo.org
网址：http://repository.maemo.ory/extras/
发布：frmantle−1.3
组件：free non−free

名称：Fremantle Extras−testing
网址：http://repository.maemo.org/extras-testing/
发布：fremantle
组件：free non−free

名称：Fremantle Extras−devel
网址：http://repository.maemo.org/extras-devel/
发布：fremantle
组件：free non−free
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;开刷&#34;&gt;开刷&lt;/h3&gt;
&lt;p&gt;下载N12_UMay.tar.bz2与nitdroid-kernel-2.6.28-07_rc3_armel.deb&lt;/p&gt;
&lt;p&gt;115网盘下载地址: &lt;a href=&#34;http://u.115.com/file/aqpmpqhl&#34;&gt;http://u.115.com/file/aqpmpqhl&lt;/a&gt; &lt;a href=&#34;http://u.115.com/file/dna7jt6r&#34;&gt;http://u.115.com/file/dna7jt6r&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;最新的文件在官网的&lt;a href=&#34;http://downloads.nitdroid.com/e-yes/&#34;&gt;http://downloads.nitdroid.com/e-yes/&lt;/a&gt;页，如发现跟新可自行下载最新版本 注意，网盘中提供的N12_UMay.tar.bz2已经解压为N12_UMay.tar，官网的下载后自行解压&lt;/p&gt;
&lt;p&gt;将两个文件拷贝至USB连接模式下的根目录，即**/home/user/MyDocs/**&lt;/p&gt;
&lt;p&gt;建议通过SSH连接N900，在PC上使用&lt;strong&gt;Putty&lt;/strong&gt;操作，要么就在手机上运行&lt;strong&gt;x-terminal&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# apt-get install nitdroid-installer
# mkdir /and
# mount /home /and
# cd /and
# tar xvf /home/user/MyDocs/N12_UMay.tar #注意这里已经是.tar格式
# dpkg -i /home/user/MyDocs/nitdroid-kernel-2.6.28-07_rc3_armel.deb
# reboot
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;重启后会出现多系统选择,1为Maemo,2为Nitdroid&lt;/p&gt;
&lt;p&gt;N900的android菜单映射:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;电源键=锁屏
长按电源键=关机/重启菜单
照相键=返回
长按照相键=最近使用的程序
锁屏键=选项&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Nokia N900 and SSH</title>
      <link>https://unixetc.com/post/nokia-n900-and-ssh/</link>
      <pubDate>Mon, 02 Apr 2012 14:12:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/nokia-n900-and-ssh/</guid>
      <description>&lt;p&gt;N900采用的maemo是基于debian的linux系统，通过自带的application manager管理软件时，操作体验还有待改进，所以这里推荐通过ssh连接，使用cli来进行相应操作。
需要在手机端安装OpenSSH来开启SSH服务，在application manager的system目录下，找到&lt;strong&gt;openssh Client and Server&lt;/strong&gt;安装，当然如果你不需要在手机端进行SSH登陆的话，那可以只安装server即可。
安装时会提示输入密码，这个就是以后连接手机SSH的服务密码。
安装完成后SSH server会默认启动，现在你可以通过wifi连接局域网，然后需要知道自己当前的IP（可以通过Tp-link后台查看，或者手机端安装&lt;strong&gt;Personal IP Address&lt;/strong&gt;开显示)，再推荐安装&lt;strong&gt;SSH Status and Swither&lt;/strong&gt;，可以在手机的status显示SSH状态，并管理SSH server启动/停止。
&lt;img src=&#34;https://unixetc.com/imgs/698163850.webp&#34; alt=&#34;ssh status&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后推荐使用Putty进行链接，在CLI模式下管理软件，可以在&lt;a href=&#34;http://maemo.org/&#34;&gt;http://maemo.org/&lt;/a&gt;上查看软件目录以及简介，通过&lt;code&gt;apt-get install&lt;/code&gt;命令来安装，以下为一些apt-get使用简介&lt;/p&gt;
&lt;p&gt;使用方法:
apt-get [选项] 命令
apt-get [选项] install|remove pkg1 [pkg2 &amp;hellip;]
apt-get [选项] source pkg1 [pkg2 &amp;hellip;]&lt;/p&gt;
&lt;p&gt;命令:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;update - 更新软件列表
upgrade - 升级软件
install - 安装软件(pkg 是软件名)
remove - 删除软件
autoremove - 自动删除一些无效的软件
purge - 删除软件并清理配置
source - 下载软件源码
build-dep - 配置软件源码的build-dependencies
dist-upgrade - 升级系统
clean - 清除建立的软件包列表
autoclean - 同上
check - 校验软件包是否有异常
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;选项:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;-h  输出help信息
-d  仅下载软件包
-y  安装是对所有的提示选择Yes
-u  显示已经升级的软件列表
-b  下载源码后开始构建
-V  显示详细的版本号
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;通过本地包安装软件，命令为&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;dpkg -i pkg.deb
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>删除不需要的iPhone语言文件</title>
      <link>https://unixetc.com/post/remove-unnecessary-iphone-language-file/</link>
      <pubDate>Mon, 02 Apr 2012 12:34:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/remove-unnecessary-iphone-language-file/</guid>
      <description>&lt;p&gt;首先，需要iPhone已经越狱，并且安装了OpenSSH&lt;/p&gt;
&lt;p&gt;脚本文件下载：&lt;a href=&#34;http://cdn.lyq.wiki/res/langpack2.2.zip&#34;&gt;http://cdn.lyq.wiki/res/langpack2.2.zip&lt;/a&gt;，解压出脚本文件langpack2.2.sh&lt;/p&gt;
&lt;p&gt;通过itools或者其他管理软件，将脚本文件复制到/var/mobile目录&lt;/p&gt;
&lt;p&gt;通过&lt;a href=&#34;https://unixetc.com/post/iphone-and-ssh/&#34;&gt;ssh连接手机&lt;/a&gt;，进入/var/mobile目录开始操作
&lt;strong&gt;注意：此时请关闭手机的定时锁屏功能，以防意外终止操作而失败！！&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#chmod 777 langpack2.2.sh   //为脚本添加执行权限
#./langpack2.2.sh  //运行脚本
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;开始搜索语言包文件，等待。。。。。&lt;/p&gt;
&lt;p&gt;搜索到所有语言包后，开始提示是否删除。&lt;/p&gt;
&lt;p&gt;根据提示，输入y或者n来确定所要删除的语言包，根据需要筛选。&lt;/p&gt;
&lt;p&gt;所有选择完成后，会提示所有将要删除的语言包，再次确认删除与否（y或n），开始删除过程。。。&lt;/p&gt;
&lt;p&gt;删除完成后，会提示所删除的语言包数量，并且提示是否删除该脚本文件&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注意：进行完以上操作后，建议马上修改SSH密码，以防止感染蠕虫病毒！！&lt;/strong&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>N900软件管理</title>
      <link>https://unixetc.com/post/nokia-n900-software-manager/</link>
      <pubDate>Sat, 31 Mar 2012 13:31:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/nokia-n900-software-manager/</guid>
      <description>&lt;p&gt;###通过自带的application manager（软件管理）安装
打开application manager，首次会自动更新软件列表，然后可以在download目录中按分类安装软件。
###通过apt-get在线安装
使用apt-get前提为已经安装了rootsh（可通过第一种方法安装），打开 x terminal&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$sudo gainroot /*切换到root帐户*/
#apt-get install pkg /*安装pkg*/ 
#apt-get install pkg1,pkg2 /*安装多个软件*/ 
#apt-get remove pkg /*卸载软件*/ 
#apt-get remove –purge pkg /*卸载并清除配置文件*/ 
#apt-get update /*更新软件源*/ 
#apt-get upgrade /*更新软件*/ 
#apt-get dist-upgrade /*更新系统*/ 
#apt-get clean /*清除软件列表以节省空间*/
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;###通过dpkg安装本地软件包(.deb)&lt;/p&gt;
&lt;p&gt;可以通过数据线，先将下载的软件包拷贝到机子内，然后使用dpkg来安装&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#dpkg -i pkg.deb 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;可以在这里&lt;a href=&#34;http://repository.maemo.org/&#34;&gt;http://repository.maemo.org/&lt;/a&gt;下载官方的.deb包进行安装&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Nokia N900系统优化脚本</title>
      <link>https://unixetc.com/post/system-optimization-script-for-nokia-n900/</link>
      <pubDate>Wed, 28 Mar 2012 13:28:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/system-optimization-script-for-nokia-n900/</guid>
      <description>&lt;p&gt;Nokia N900系统优化脚本，更加省电，操作更加流畅！&lt;/p&gt;
&lt;p&gt;脚本下载地址&lt;a href=&#34;http://cdn.lyq.wiki/res/speedpatch-ALTERNATIVE.tar.gz.rar&#34;&gt;http://cdn.lyq.wiki/res/speedpatch-ALTERNATIVE.tar.gz.rar&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;使用方法： 通过USB连接手机，将脚本传到磁盘根目录(/home/user/MyDocs)，以下操作可以使用XT或者SSH连接电脑进行(Root权限下)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#cd /home/user/MyDocs
#tar xzvf speedpatch-ALTERNATIVE.tar.gz
#mkdir /wp-content/local/sbin
#cp /root/.profile /root/.profile.bak
#cp ./.profile_root /root/.profile
#cp ./.profile /home/user/
#cp ./speedpatch /etc/event.d/
#cp ./cgroup_clean /wp-content/local/sbin
#chmod +rwx /wp-content/local/sbin/cgroup_clean
#rm ./.profile_root
#rm ./.profile
#rm ./speedpatch
#rm ./cgroup_clean
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;应用transition.ini文件:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1.使用theme-customizer&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#cp /home/user/MyDocs/transitions.ini /opt/theme-customizer
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;2.使用系统默认主题&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#cp /home/user/MyDocs/transitions.ini /wp-content/share/hildon-desktop/
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;3.删除优化脚本&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#cp /root/.profile.bak /root/.profile
#rm /etc/event.d/speedpatch
#rm /home/user/.profile
#rm /wp-content/local/sbin/cgroup_clean&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>LNMP使用实例</title>
      <link>https://unixetc.com/post/lnmp-usages/</link>
      <pubDate>Fri, 23 Mar 2012 12:32:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/lnmp-usages/</guid>
      <description>&lt;h3 id=&#34;安装lnmp&#34;&gt;安装LNMP&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;更新系统&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#yum check-update
#yum update
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;安装Screen&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#yum install screen
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;开始安装Lnmp&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#screen -S lnmp
#wget -c http://soft.vpser.net/lnmp/lnmp0.8.tar.gz //最新版请查阅lnmp官网
#tar zxvf lnmp0.8.tar.gz
#./lnmp0.8/centos.sh | tee lnmp.log //输出log文件，以备出错时查阅
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;接下来按照提示设定域名和MysQL密码，程序会自动下载相关程序，而后编译安装&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;安装PureFTP&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#./lnmp0.8/pureftp.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;按提示输入MySQL和Ftp管理员密码，安装完成后可以通过&lt;code&gt;http://vpsip/ftp/&lt;/code&gt;来登录管理ftp帐号&lt;/p&gt;
&lt;h3 id=&#34;使用lnmp&#34;&gt;使用Lnmp&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;添加虚拟主机&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#/root/vhost.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;按照提示填入域名、目录、rewrite规则文件，如下所示：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;root@buyvm256:~#/root/vhost.sh
=========================================================================
Add Virtual Host for LNMP V0.9  ,  Written by Licess 
=========================================================================
LNMP is a tool to auto-compile &amp;amp; install Nginx+MySQL+PHP on Linux 
This script is a tool to add virtual host for nginx 
For more information please visit http://www.lnmp.org/

=========================================================================
Please input domain:  //添加域名
(Default domain: www.lnmp.org):xxx.com
===========================
domain=xxx.com
===========================
Do you want to add more domain name? (y/n)  //添加更多域名
y
Type domainname,example(bbs.vpser.net forums.vpser.net luntan.vpser.net):
www.xxx.com
===========================
domain list=www.xxx.com
===========================
Please input the directory for the domain:xxx.com :  //网站目录
(Default directory: /home/wwwroot/xxx.com):
===========================
Virtual Host Directory=/home/wwwroot/xxx.com
===========================
===========================
Allow Rewrite rule? (y/n)  //重写规则
===========================
y
Please input the rewrite of programme :
wordpress,discuz,typecho,sablog,dabr rewrite was exist.
(Default rewrite: other):wordpress  //选择重写规则
===========================
You choose rewrite=wordpress
===========================
===========================
Allow access_log? (y/n)  //是否记录log
===========================
n

Press any key to start create virtul host...
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后，登录&lt;code&gt;http://vpsip/ftp/&lt;/code&gt;添加ftp帐号，&lt;code&gt;http://vpsip/phpmyadmin/&lt;/code&gt;编辑数据库&lt;/p&gt;
&lt;p&gt;**注意：**开通ftp时，记着添加到www用户组&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;修改虚拟主机配置&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;创建好的虚拟主机，配置文件目录为/wp-content/local/nginx/conf/vhost/，文件名为domain.conf，如下所示：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;aquan@buyvm256:~$ cat /usr/local/nginx/conf/vhost/xxx.com.conf 

server
        {
                listen       80;   //端口
                server_name xxx.com www.xxx.com;   //域名
                index index.html index.htm index.php default.html default.htm default.php;  //索引文件
                root  /home/wwwroot/xxx.com;   //目录

                include wordpress.conf;
                location ~ .*\.(php|php5)?$
                        {
                                try_files $uri =404;
                                fastcgi_pass  unix:/tmp/php-cgi.sock;
                                fastcgi_index index.php;
                                include fcgi.conf;
                        }

                location ~ .*\.(gif|jpg|jpeg|png|bmp|swf)$
                        {
                                expires      30d;
                        }

                location ~ .*\.(js|css)?$
                        {
                                expires      12h;
                        }

                access_log off;
        }
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;主机配置文件修改后，使用如下命令重新加载配置使之生效&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#/etc/init.d/nginx reload
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;删除虚拟主机&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;删除/wp-content/local/nginx/conf/vhost/下对应配置文件(.conf)，再删除/home/wwwroot/下的本地目录&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;一些其他问题&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;设置虚拟主机目录权限&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#chown -R www /home/wwwroot/vps.aotee.com
#chmod -R 777 /home/wwwroot/vps.aotee.com&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>诺基亚n900快捷键</title>
      <link>https://unixetc.com/post/nokia-n900-shortcuts/</link>
      <pubDate>Tue, 20 Mar 2012 13:20:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/nokia-n900-shortcuts/</guid>
      <description>&lt;ol&gt;
&lt;li&gt;Ctrl + Backspace：如果在一个程序里，用了后会回到多程序选择画面。&lt;/li&gt;
&lt;li&gt;Ctrl + C：复制&lt;/li&gt;
&lt;li&gt;Ctrl + V：粘贴&lt;/li&gt;
&lt;li&gt;Ctrl + X：剪贴&lt;/li&gt;
&lt;li&gt;Ctrl + A：全选&lt;/li&gt;
&lt;li&gt;Ctrl + 左箭头：回到第一个字或一句话的最前边&lt;/li&gt;
&lt;li&gt;Ctrl + 右箭头：回到最后一个字或一句话的最后边&lt;/li&gt;
&lt;li&gt;Ctrl + N：网页浏览器里打开一个新窗口&lt;/li&gt;
&lt;li&gt;Ctrl + R：网页浏览器里重读此页&lt;/li&gt;
&lt;li&gt;Ctrl + B：网页浏览器里打开一个书签&lt;/li&gt;
&lt;li&gt;Ctrl + D：网页浏览器里增加一个书签&lt;/li&gt;
&lt;li&gt;Ctrl + 回车：在电子邮件里发送一个邮件&lt;/li&gt;
&lt;li&gt;Ctrl + R：在电子邮件里回复一个邮件&lt;/li&gt;
&lt;li&gt;Ctrl + Shift（白色上箭头：管大写的）+P：屏幕截图功能(目录&lt;code&gt;/home/user/MyDocs/.images/Screenshots/&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Ctrl + Shift + O：可以启动网页浏览器竖屏功能&lt;/li&gt;
&lt;li&gt;Backspace：后退功能，回到前一个浏览页面&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>iPhone and SSH</title>
      <link>https://unixetc.com/post/iphone-and-ssh/</link>
      <pubDate>Sun, 18 Mar 2012 12:13:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/iphone-and-ssh/</guid>
      <description>&lt;h3 id=&#34;安装openssh&#34;&gt;安装OpenSSH&lt;/h3&gt;
&lt;p&gt;首先iPhone已经越狱并且安装了&lt;strong&gt;Cydia&lt;/strong&gt;，具体教程可以&lt;a href=&#34;http://www.google.com&#34;&gt;Google&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;打开Cydia，管理-软件源，点击右上角编辑，然后点击左上角添加，增加178的软件源&lt;code&gt;http://apt.178.com&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;添加后Cydia会自动更新软件包，然后在搜索里使用openssh为关键词进行搜索安装。&lt;/p&gt;
&lt;p&gt;默认有root和mobile两个用户名，密码均为&lt;strong&gt;alpine&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;手机端ssh管理&#34;&gt;手机端SSH管理&lt;/h3&gt;
&lt;p&gt;在Cydia上搜索安装&lt;strong&gt;iSSH&lt;/strong&gt;安装&lt;/p&gt;
&lt;h4 id=&#34;修改ssh密码&#34;&gt;修改SSH密码&lt;/h4&gt;
&lt;p&gt;建议修改原始密码&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#passwd root
#passwd mobile
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;pc通过ssh连接iphone&#34;&gt;PC通过SSH连接iPhone&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;iPhone接入wifi网络，在电脑端使用Putty或者WinSCP来链接iPhone&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;USB连接PC，下载iTools，打开iTools点击手机管理栏的最底下&lt;strong&gt;高级功能&lt;/strong&gt;，打开&lt;strong&gt;ssh通道&lt;/strong&gt;。下来PC端可以通过ip:127.0.0.1来连接iPhone了。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
  </channel>
</rss>