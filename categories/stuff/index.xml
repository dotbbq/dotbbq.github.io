<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>STUFF on UNIXETC</title>
    
    
    
    <link>/categories/stuff/</link>
    <description>Recent content in STUFF on UNIXETC</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 11 Aug 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/categories/stuff/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Windows10下访问WSL目录</title>
      <link>/post/access-wsl-directory-in-windows10/</link>
      <pubDate>Tue, 11 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/access-wsl-directory-in-windows10/</guid>
      <description>
        
          
          
          
        
        
        
          Windows10下访问WSL目录的方法其实很简单，如下所示:
➜ post git:(master) explorer.exe . 即可通过文件浏览器打开当前目录。
          
        
        </description>
    </item>
    
    <item>
      <title>Joplin配置坚果云WebDAV同步</title>
      <link>/post/joplin-jianguoyun-webdav/</link>
      <pubDate>Thu, 06 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/joplin-jianguoyun-webdav/</guid>
      <description>
        
          
          
          
        
        
        
          Joplin是一款开源的笔记软件，功能十分强大，支持多种同步方式，本文简介如何为joplin设置坚果云的webdav同步。
首先，登录坚果云网页版，进入账户信息-&amp;gt;安全选项，在第三方应用管理中点击添加应用，输入自定义名称(joplin)，点击生成密码。
然后打开joplin, 工具-&amp;gt;选项-&amp;gt;同步设置，参考如下设置：
 同步目标:WebDAV WebDAV URL:https://dav.jianguoyun.com/dav/joplin/ ##建议添加目录joplin，否则用根目录的话会提示404失败 WebDAV 用户名: 坚果云用户名 WebDAV 密码 : 上一步生成的应用密码  然后检查同步配置提示成功即可，建议在高级选项中将最大并发连接数设置为2。
          
        
        </description>
    </item>
    
    <item>
      <title>Nginx V2ray and WebSocket</title>
      <link>/post/nginx-v2ray-websocket/</link>
      <pubDate>Thu, 30 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/nginx-v2ray-websocket/</guid>
      <description>
        
          
          
          
        
        
        
          安装v2ray/nginx v2ray安装可以参考Ubuntu中v2ray客户端配置实例.
Nginx安装推荐使用OneinStack一键安装脚本
准备好使用的域名，这里以v.fuckgfw.cn为例。
v2ray/nginx服务端配置 v2ray安装好后，服务端配置/etc/v2ray/config.json如下:
{ &amp;quot;inbounds&amp;quot;: [{ &amp;quot;port&amp;quot;: 99999, //代理端口号 &amp;quot;listen&amp;quot;: &amp;quot;127.0.0.1&amp;quot;, &amp;quot;protocol&amp;quot;: &amp;quot;vmess&amp;quot;, &amp;quot;settings&amp;quot;: { &amp;quot;clients&amp;quot;: [{ &amp;quot;id&amp;quot;: &amp;quot;5c1eed18-fse4-41fs-9as9-e85s45bds9ef&amp;quot;, &amp;quot;level&amp;quot;: 1, &amp;quot;alterId&amp;quot;: 64 }] }, &amp;quot;streamSettings&amp;quot;: { &amp;quot;network&amp;quot;: &amp;quot;ws&amp;quot;, &amp;quot;wsSettings&amp;quot;: { &amp;quot;path&amp;quot;: &amp;quot;/fcgfw&amp;quot; //代理目录 } } }], &amp;quot;outbounds&amp;quot;: [{ &amp;quot;protocol&amp;quot;: &amp;quot;freedom&amp;quot;, &amp;quot;settings&amp;quot;: {} }, { &amp;quot;protocol&amp;quot;: &amp;quot;blackhole&amp;quot;, &amp;quot;settings&amp;quot;: {}, &amp;quot;tag&amp;quot;: &amp;quot;blocked&amp;quot; }], &amp;quot;routing&amp;quot;: { &amp;quot;rules&amp;quot;: [{ &amp;quot;type&amp;quot;: &amp;quot;field&amp;quot;, &amp;quot;ip&amp;quot;: [&amp;quot;geoip:private&amp;quot;], &amp;quot;outboundTag&amp;quot;: &amp;quot;blocked&amp;quot; }] } } 使用OneinStack一键脚本新建一个站点，域名为v.fuckgfw.cn，采用SSL加密模式，完成后编辑/usr/local/nginx/conf/vhost/v.fuckgfw.cn.conf文件
参考以下修改：
          
        
        </description>
    </item>
    
    <item>
      <title>斐讯N1系统信息和UNIXBENCH跑分</title>
      <link>/post/phicomm-n1-unixbench-score-and-system-information/</link>
      <pubDate>Mon, 02 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/phicomm-n1-unixbench-score-and-system-information/</guid>
      <description>
        
          
          
          
        
        
        
          系统信息 alair@aml:~ $ inxi -F System: Host: aml Kernel: 5.5.0-rc6-aml-s9xxx aarch64 bits: 32 Console: tty 0 Distro: Ubuntu 18.04.4 LTS Machine: No /sys/class/dmi; using dmidecode: dmidecode is not installed. CPU: Quad core ARMv8 rev 4 (v8l) (-MCP-) (ARM) clock speeds: max: 1512 MHz 1: 1512 MHz 2: 1512 MHz 3: 1512 MHz 4: 1512 MHz Graphics: Card: Failed to Detect Video Card! Display Server: N/A driver: N/A tty size: 254x72 Advanced Data: N/A out of X Audio: Card AMLGX driver: AMLGX Sound: ALSA v: k5.
          
        
        </description>
    </item>
    
    <item>
      <title>YandexDisk命令行客户端</title>
      <link>/post/yandex-disk-console-client-for-linux/</link>
      <pubDate>Sat, 29 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/yandex-disk-console-client-for-linux/</guid>
      <description>
        
          
          
          
        
        
        
          Linux的Yandex.Disk控制台客户端使您可以在Yandex.Disk上管理文件，而无需使用窗口界面或支持WebDAV的程序。
与WebDAV连接相比，使用控制台客户端的优势：
 Low system resource requirements. Faster file reading and writing speeds. Faster syncing with the Yandex.Disk server. Manage files offline.  控制台客户端可以安装在以下操作系统上：
 Ubuntu Linux 8.04 及以上版本 Debian 5 及以上版本 Fedora 9 及以上版本 Red Hat Enterprise Linux 6 及以上版本 CentOS 6 及以上版本  安装客户端 要自动安装客户端，请使用命令进行快速软件包安装。
.deb软件包 安装示例
echo &amp;quot;deb http://repo.yandex.ru/yandex-disk/deb/ stable main&amp;quot; | sudo tee -a /etc/apt/sources.list.d/yandex-disk.list &amp;gt; /dev/null wget http://repo.yandex.ru/yandex-disk/YANDEX-DISK-KEY.GPG -O- | sudo apt-key add - sudo apt-get update sudo apt-get install -y yandex-disk 要手动安装客户端，请从下面的相应链接下载相应版本的软件包。
          
        
        </description>
    </item>
    
    <item>
      <title>CentOS安装Hugo</title>
      <link>/post/centos-install-hugo-via-repo/</link>
      <pubDate>Tue, 04 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/centos-install-hugo-via-repo/</guid>
      <description>
        
          
          
          
        
        
        
          Hugo是由Go语言实现的静态网站生成器。简单、易用、高效、易扩展、快速部署。
新建hugo.repo文件，sudo vi /etc/yum.repos.d/hugo.repo，填入以下内容。
[daftaupe-hugo] name=Copr repo for hugo owned by daftaupe baseurl=https://copr-be.cloud.fedoraproject.org/results/daftaupe/hugo/epel-7-$basearch/ type=rpm-md skip_if_unavailable=True gpgcheck=1 gpgkey=https://copr-be.cloud.fedoraproject.org/results/daftaupe/hugo/pubkey.gpg repo_gpgcheck=0 enabled=1 保存后更新安装Hugo
sudo yum update sudo yum install hugo -y 
          
        
        </description>
    </item>
    
    <item>
      <title>Gnome美化简介</title>
      <link>/post/gnome-landscaping-guide/</link>
      <pubDate>Sun, 08 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/gnome-landscaping-guide/</guid>
      <description>
        
          
          
          
        
        
        
          安装必要软件 sudo apt install gnome-tweak-tool chrome-gnome-shell 安装Gnome Shell Extensions 使用Firefox浏览https://extensions.gnome.org/，第一次访问根据提示安装Firefox插件，如下图:
安装完成后，访问https://extensions.gnome.org/搜索安装以下三个GnomeShellExtension
 User Themes 加载用户主题，加载目录为~/.local/share/themes Dash to Dock 定制 Dash/Dock Gnome Global Application Menu Gnome全局菜单  安装方法如下，进入到扩展详情后，点击标题后的开关，按照提示安装即可
安装主题 访问https://www.gnome-look.org/，在GTK3 Themes分类下下载主题，下载后解压拷贝至~/.local/share/themes下，然后打开gnome-tweak，在外观中即可选择已安装的主题。
在~/.local/share/下新建themes、icons和fonts三个目录，分别对应主题、图标、字体，这些资源都可以在https://www.gnome-look.org/找得到。
以下为本人的桌面截图，仅供参考：
          
        
        </description>
    </item>
    
    <item>
      <title>在Linux中安装Windows字体</title>
      <link>/post/linux-install-windows-fonts/</link>
      <pubDate>Thu, 21 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/linux-install-windows-fonts/</guid>
      <description>
        
          
          
          
        
        
        
          使用的系统为Ubuntu 19.10，Windows系统分区lable为sys
参考如下操作：
alair@e6440:~$ sudo mkdir /usr/share/fonts/winfonts [sudo] alair 的密码： alair@e6440:~$ sudo cp /media/alair/sys/Windows/Fonts/* /usr/share/fonts/winfonts/ alair@e6440:~$ sudo rm -rf /usr/share/fonts/winfonts/*.fon alair@e6440:~$ sudo mkfontscale alair@e6440:~$ sudo mkfontdir alair@e6440:~$ sudo fc-cache 打完收工！
          
        
        </description>
    </item>
    
    <item>
      <title>Armbian更改软件源</title>
      <link>/post/armbian-change-software-source/</link>
      <pubDate>Tue, 05 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/armbian-change-software-source/</guid>
      <description>
        
          
          
          
        
        
        
          上一篇文章介绍了如何在斐迅N1上安装Armbian，现在介绍如何更改软件源为国内镜像。
编辑/etc/apt/sources.list替换为以下内容：
deb https://mirrors.tuna.tsinghua.edu.cn/debian/ buster main contrib non-free # deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ buster main contrib non-free deb https://mirrors.tuna.tsinghua.edu.cn/debian/ buster-updates main contrib non-free # deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ buster-updates main contrib non-free deb https://mirrors.tuna.tsinghua.edu.cn/debian/ buster-backports main contrib non-free # deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ buster-backports main contrib non-free deb https://mirrors.tuna.tsinghua.edu.cn/debian-security buster/updates main contrib non-free # deb-src https://mirrors.tuna.tsinghua.edu.cn/debian-security buster/updates main contrib non-free deb http://ftp.debian.org/debian jessie-backports main 接着编辑/etc/apt/sources.list.d/armbian.list ，替换为以下内容：
deb http://mirrors.tuna.tsinghua.edu.cn/armbian/ buster main buster-utils buster-desktop 保存后，刷新缓存更新系统：
sudo apt update sudo apt upgrade -y 
          
        
        </description>
    </item>
    
    <item>
      <title>斐讯N1安装Armbian</title>
      <link>/post/phicomm-n1-install-armbian/</link>
      <pubDate>Sun, 03 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/phicomm-n1-install-armbian/</guid>
      <description>
        
          
          
          
        
        
        
          最近入手斐讯N1一枚，买的是白色未拆封，到手版本为V2.19_0307_NS，刚好省了降级的麻烦，以下为斐讯N1安装armbian操作过程。
开启adb调试模式 将N1通过HDMI连接显示器，将鼠标插到N1的USB口上，开机后用鼠标点击系统版本:V2.19_0307_NS区域，多次点击后会出现提示&amp;quot;开启adb调试模式&amp;rdquo;，即可。
从此下载minimal_adb_fastboot，下载后安装。
准备刷机U盘 准备一个不小区8G的U盘，下载镜像写入工具balenaEtcher，下载后安装。
下载Armbian镜像，在此以Armbian_5.98_Aml-g12_Debian_buster_dev_5.4.0-rc4_20191025.img.xz为例，镜像为debian最新版，不带桌面系统。如果需要其他的可以从此处自行下载。
Armbian_5.98_Aml-g12_Debian_buster_dev_5.4.0-rc4_20191025.img.xz
将下载后的镜像文件用balenaEtcher写入U盘，写入完成后先别拔掉U盘，进入到BOOT分区，找到uEnv.ini文件，将dtb_name行改为如下内容：
 dtb_name=/dtb/amlogic/meson-gxl-s905d-phicomm-n1.dtb
 然后退出U盘备用。
如果你的BOOT分区下/dtd/amlogic/目录中没有meson-gxl-s905d-phicomm-n1.dtb文件，那么可以点击meson-gxl-s905d-phicomm-n1.dtb下载放入相应目录即可。
从U盘引导Armbian 将制作好的系统U盘插到靠近HDMI一侧的U口，另外一个U口插入双公头的刷机线连接电脑，将N1通过HDMI连接显示器，并且插好网线然后开机。
开机后可以从显示器上看到盒子的IP地址，电脑上运行Minimal ADB and Fastboot，然后输入adb connect 192.168.1.54命令连接盒子，连接成功后会有如下提示：
 connected to 192.168.1.54:5555
 然后输入adb shell reboot update开始从U盘引导Armbian系统，盒子重启后成功引导armbian，此时可以将usb刷机线拔掉，插入一个外接键盘，开始后面操作。
Armbian系统默认账号为root，密码为1234，按照提示输入账号信息进行登录，登录后会有更改默认密码提示，按照提示更改默认密码。
接下来会有新建账号提示:
Creating a new user account. Press &amp;lt;Ctrl-C&amp;gt; to abort Please provide a username (eg. your forename): 可以按照该提示新建账号，或者按Ctrl+c终止，继续用root账号登录。
将Armbian安装到N1中 以上只是从U盘成功引导登录Armbian，接下来我们将Armbian安装到N1内置存储(eMMC)，即可拔掉U盘了。
如果是通过root登录的话，那么直接运行root目录下install.sh即可安装，如下：
 root@aml:~# ./install. sh Start script create MBR and filesystem /dev/mmcblk1 Start backup u-boot default 4＋0 records in 4＋0 records out 4194304 bytes（4.
          
        
        </description>
    </item>
    
    <item>
      <title>一加3t和树莓派UNIXBench跑分对比</title>
      <link>/post/oneplus3t-and-raspberry-pi-unixbench-score-comparison/</link>
      <pubDate>Sat, 07 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/oneplus3t-and-raspberry-pi-unixbench-score-comparison/</guid>
      <description>
        
          
          
          
        
        
        
          一加3T 一加3T运行的是UbuntuTouch系统
一加3T系统信息 phablet@ubuntu-phablet:~$ inxi -F Resuming in non X mode: xrandr not found. For package install advice run: inxi --recommends System: Host: android Kernel: 3.18.31-halium-gca027546546e-01041-g7961eb763e61 aarch64 (32 bit) Desktop: N/A Distro: Ubuntu 16.04 xenial Machine: No /sys/class/dmi; using dmidecode: dmidecode is not installed. CPU: Quad core AArch64 Processor rev 1 (aarch64) (-MCP-) (ARM) clock speeds: max: 2188 MHz 1: 1593 MHz 2: 1593 MHz 3: 1593 MHz 4: 1593 MHz Graphics: Card: Failed to Detect Video Card!
          
        
        </description>
    </item>
    
    <item>
      <title>Vivo Y913精简版线刷包</title>
      <link>/post/vivo-y913-simplify-version-brush-pack/</link>
      <pubDate>Fri, 06 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/vivo-y913-simplify-version-brush-pack/</guid>
      <description>
        
          
          
          
        
        
        
          刷机所需文件：
 vivo_Y913_RevA_PD1304CV_A_1.18.4.7z A版线刷包 vivo_Y913_RevB_PD1304CV_B_2.2.1.7z B版线刷包 vivo_driver_v2.0.0.3.7z VIVO手机驱动  提示:解压密码为alair
如何判断Y913版本？ 关机，按住电源减+电源键进入FASTBOOT MODE，Version字段中PD1304CV后为版本号，分为A和B。
安装Y913驱动 下载驱动软件安装，完成后打开，按照提示安装adb驱动，其他两个可选。
Y913刷机  将手机关机，进入FASTBOOT模式连接电脑 下载对应版本的刷机包，解压后进入BrushPack目录，打开Fastboot刷机工具，将同目录下的flash_all.bat拖放到Fastboot刷机工具窗口，点击开始刷机，按照提示刷机完成后手机自动重启。  
          
        
        </description>
    </item>
    
    <item>
      <title>一加3T安装UbuntuTouch</title>
      <link>/post/oneplus-3t-install-ubuntutouch/</link>
      <pubDate>Sun, 01 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/oneplus-3t-install-ubuntutouch/</guid>
      <description>
        
          
          
          
        
        
        
          本文介绍了如何在一加3T上安装UbuntuTouch系统。
          
        
        </description>
    </item>
    
    <item>
      <title>西数Mycloud破解应用安装</title>
      <link>/post/wd-mycloud-gen2-enable-apps-installtion/</link>
      <pubDate>Mon, 19 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/wd-mycloud-gen2-enable-apps-installtion/</guid>
      <description>
        
          
          
          
        
        
        
          感谢俄罗斯大神Fox_exe提供破解方法以及软件。
破解方法：
 登录网页版后台 在URL后输入以下内容： javascript:APP_INSTALL_FUNCTION=1; APPS_EULA=1; check_app_eula(); 备用方法 按[ctrl] + [shift] + [i], 进入 &amp;ldquo;Console&amp;rdquo; , 输入以下内容按回车键： APP_INSTALL_FUNCTION=1; APPS_EULA=1; check_app_eula(); 进入应用页，安装&amp;quot;WD_Crack&amp;rdquo;，下载地址。 刷新页面后就可以安装其他三方app。  一些三方软件
以下为部分软件清单，详细清单请转至下载目录&amp;raquo;
 WDMyCloud_AcronisTrueImage_2015.bin WDMyCloud_Adminer_4.2.5.bin WDMyCloud_Arcus_2.5325088.bin WDMyCloud_BitTorrentSync_2.3.8.bin WDMyCloud_ChrootedDebian_8.0-1.bin WDMyCloud_CustomAppList_0.5.bin WDMyCloud_DVBLink_5.50.bin WDMyCloud_Dropbox_2.00.bin WDMyCloud_IceCast_1.04.bin WDMyCloud_Joomla_1.03.bin WDMyCloud_MediaWiki_1.23.15.bin WDMyCloud_QuikFynd2_2.0.1.bin WDMyCloud_Sitebar_3-1.bin WDMyCloud_SqueezeCenter_1.03.bin WDMyCloud_Transmission_2.92-2.bin WDMyCloud_UtilsUpdate-extras_1.0.0.bin WDMyCloud_UtilsUpdate_17.bin WDMyCloud_WDFacebook_0.1.bin WDMyCloud_WDSleepFix_1.0.bin WDMyCloud_WDTimeline_0.1.bin WDMyCloud_WordPress_1.03.bin WDMyCloud_WordPress_4.7.2.bin WDMyCloud_WordPress_4.7.bin WDMyCloud_Z-Way-Server_2.22.bin WDMyCloud_aMule_1.05.bin WDMyCloud_abFiles_1.55.bin WDMyCloud_cdc-acm_0.1.bin WDMyCloud_clamAV_1.12.bin WDMyCloud_cops_1.0.1.bin WDMyCloud_git_1.40.bin WDMyCloud_hamachi_2.1.0.174.bin WDMyCloud_nzbget_1.23.bin WDMyCloud_pawfaliki_0.5.2-2.bin WDMyCloud_phormer_3.3.1-1.bin WDMyCloud_phpBB_1.03.bin WDMyCloud_phpMyAdmin_4.0.10.18.bin WDMyCloud_phpSysInfo_3.2.6-2.bin WDMyCloud_plexmediaserver_1.16.0.1226.bin
 
          
        
        </description>
    </item>
    
    <item>
      <title>如何判断西数MyCloud是第几代</title>
      <link>/post/western-digital-my-cloud-version-judgment-method/</link>
      <pubDate>Sat, 17 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/western-digital-my-cloud-version-judgment-method/</guid>
      <description>
        
          
          
          
        
        
        
          西数MyCloud共出了两代，那么如何判断呢？
看系统版本 第一代的是3.x/4.x，第二代的是2.x
看CPU信息 SSH登录MyCloud后，通过cat /proc/cpuinfo检查CPU信息
 第一代是Comcerto 2000 EVM 第二代是 Marvell Armada 375 (Device Tree)   
          
        
        </description>
    </item>
    
    <item>
      <title>UbuntuTouch更换国内源</title>
      <link>/post/ubuntu-touch-change-mirror/</link>
      <pubDate>Sun, 04 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/ubuntu-touch-change-mirror/</guid>
      <description>
        
          
          
          
        
        
        
          在一加3T上安装完UbuntuTouch后，参考此文开启SSH登录。
接下来就是更换软件源了，国内推荐USTC和清华大学开源镜像。
通过vi /etc/apt/sources.list 编辑软件源,然后在vi中通过以下命令进行替换操作：
:%s/ports.ubuntu.com/mirrors.tuna.tsinghua.edu.cn/g  保存后即可。
          
        
        </description>
    </item>
    
    <item>
      <title>通过SSH访问UbuntuTouch</title>
      <link>/post/shell-access-ubuntu-touch-via-ssh/</link>
      <pubDate>Thu, 01 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/shell-access-ubuntu-touch-via-ssh/</guid>
      <description>
        
          
          
          
        
        
        
          本文介绍了如何通过ssh来访问ubuntutouch设备。
          
        
        </description>
    </item>
    
    <item>
      <title>找回windows10照片查看器</title>
      <link>/post/retrieve-windows10-photo-viewer/</link>
      <pubDate>Sun, 28 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/retrieve-windows10-photo-viewer/</guid>
      <description>
        
          
          
          
        
        
        
          Windows10中可以通过修改注册表的方法找回照片查看器。
新建ton.reg注册表文件，内容如下：
Windows Registry Editor Version 5.00 ; Change Extension&#39;s File Type [HKEY_CURRENT_USER\Software\Classes\.jpg] @=&amp;quot;PhotoViewer.FileAssoc.Tiff&amp;quot; ; Change Extension&#39;s File Type [HKEY_CURRENT_USER\Software\Classes\.jpeg] @=&amp;quot;PhotoViewer.FileAssoc.Tiff&amp;quot; ; Change Extension&#39;s File Type [HKEY_CURRENT_USER\Software\Classes\.gif] @=&amp;quot;PhotoViewer.FileAssoc.Tiff&amp;quot; ; Change Extension&#39;s File Type [HKEY_CURRENT_USER\Software\Classes\.png] @=&amp;quot;PhotoViewer.FileAssoc.Tiff&amp;quot; ; Change Extension&#39;s File Type [HKEY_CURRENT_USER\Software\Classes\.bmp] @=&amp;quot;PhotoViewer.FileAssoc.Tiff&amp;quot; ; Change Extension&#39;s File Type [HKEY_CURRENT_USER\Software\Classes\.tiff] @=&amp;quot;PhotoViewer.FileAssoc.Tiff&amp;quot; ; Change Extension&#39;s File Type [HKEY_CURRENT_USER\Software\Classes\.ico] @=&amp;quot;PhotoViewer.FileAssoc.Tiff&amp;quot;  保存后，双击运行即可，然后右键打开方式中即可看到照片查看器。
          
        
        </description>
    </item>
    
    <item>
      <title>Debian10中sudo配置</title>
      <link>/post/sudo-configuration-in-debian10/</link>
      <pubDate>Wed, 10 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/sudo-configuration-in-debian10/</guid>
      <description>
        
          
          
          
        
        
        
          Debian10中/etc/sudoers中提示了需要通过visudo来编辑该文件，如下：
 This file MUST be edited with the &amp;lsquo;visudo&amp;rsquo; command as root.
 但奇葩的是系统中没有visudo命令，apt搜索也搜不到，-_-!
因此只能通过以下方法来编辑：
#echo &amp;quot;alair ALL=(ALL:ALL) ALL&amp;quot; &amp;gt;&amp;gt; /etc/sudoers  保存后用户alair就可以使用sudo命令来进行root权限操作了。
          
        
        </description>
    </item>
    
    <item>
      <title>Ubuntu/Widnows双系统时间不一致解决方法</title>
      <link>/post/ubuntu-windows-dual-system-time-is-inconsistent/</link>
      <pubDate>Tue, 09 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/ubuntu-windows-dual-system-time-is-inconsistent/</guid>
      <description>
        
          
          
          
        
        
        
          安装Ubuntu和Windows双系统的情况下，Ubuntu的时间总会和Windows的时间相差8小时，原因在于widows认为BIOS时间是本地时间，Ubuntu认为BIOS时间是UTC时间，即协调世界时(Universal Time Coordinated)，是由国际无线电咨询委员会规定和推荐,并由国际时间局(BIH)负责保持的以秒为基础的时间标度。
UTC相当于本初子午线(即经度0度)上的平均太阳时，过去曾用格林威治平均时(GMT)来表示。北京时间比UTC时间早8小时，以1999年1月1日0000UTC为例，UTC时间是零点，北京时间为1999年1月1日早上8点整。所以我们在时间上面相隔了8个小时。这个时候bios的时间和系统的时间当然是不一致，一个代表UTC时间，一个代表CST(＋8时区)，即上海的时间。
 旧版Ubuntu（Ubuntu10左右）：  编辑/etc/default/rcS 将UTC=yes改成UTC=no
 新版Ubuntu（Ubuntu16.04）：  新版Ubuntu使用systemd作为管理系统，时间由timedatectl来管理，以下为修改方法：
$sudo timedatectl set-local-rtc 1  重启完成。
          
        
        </description>
    </item>
    
    <item>
      <title>CentOS7安装ffsend快速分享文件</title>
      <link>/post/centos7-install-ffsend-to-share-files/</link>
      <pubDate>Thu, 04 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/centos7-install-ffsend-to-share-files/</guid>
      <description>
        
          
          
          
        
        
        
          Firefox Send是什么？ Firefox Send是一个简单、私密的文件分享服务，使用Firefox Send端到端加密分享文件，链接到期即焚。分享更私密，文件到期真正无痕迹。
安装ffsend ffsend是一款Firefox Send的客户端，支持多种操作系统(Linux、Windows、MacOS&amp;hellip;)
以下为CentOS7安装ffsend实例：
#wget https://glare.now.sh/timvisee/ffsend/linux-x64-static -o /usr/local/bin/ffsend #chmod +x /usr/local/bin/ffsend  其他版本安装可以参考ffsend官网和ffsend官方下载
ffsend使用方法 上传文件
ffsend upload fenix.apk Upload complete https://send.firefox.com/download/4cecb9c1ab628f8e/#m5is-YRSfnBIQ-pBaSds0A  高级上传
 指定下再限制20
输入密码加密文件
在上传之前归档文件
将共享链接复制到剪贴板
在浏览器中打开共享链接
 ffsend upload --downloads 20 --password --archive --copy --open fenix.apk Password: ****** https://send.firefox.com/download/4cecb9c1ab628f8e/#m5is-YRSfnBIQ-pBaSds0A  上传到自定义主机
ffsend u -h https://example.com/ my-file.txt https://example.com/#sample-share-url  下载文件
ffsend download https://send.firefox.com/download/4cecb9c1ab628f8e/#m5is-YRSfnBIQ-pBaSds0A  
          
        
        </description>
    </item>
    
    <item>
      <title>Linux中转换图片为webp格式</title>
      <link>/post/convert-images-to-webp-in-linux/</link>
      <pubDate>Tue, 11 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/convert-images-to-webp-in-linux/</guid>
      <description>
        
          
          
          
        
        
        
          安装WebP Ubuntu中可以使用以下命令安装WebP
$sudo apt install webp  其他Linux系统，可以从这里下载对应压缩包，如下：
wget https://storage.googleapis.com/downloads.webmproject.org/releases/webp/libwebp-1.0.2-linux-x86-64.tar.gz  解压后得到以下文件：
$tar zxf libwebp-1.0.2-linux-x86-64.tar.gz $cd libwebp-1.0.2-linux-x86-64 $cd bin $ll total 12M -rwxr-xr-x 1 100 users 679K Jan 15 12:47 anim_diff -rwxr-xr-x 1 100 users 923K Jan 15 12:47 anim_dump -rwxr-xr-x 1 100 users 2.4M Jan 15 12:47 cwebp -rwxr-xr-x 1 100 users 915K Jan 15 12:47 dwebp -rwxr-xr-x 1 100 users 2.3M Jan 15 12:47 get_disto -rwxr-xr-x 1 100 users 703K Jan 15 12:47 gif2webp -rwxr-xr-x 1 100 users 2.
          
        
        </description>
    </item>
    
    <item>
      <title>Termux开启扩展快捷键</title>
      <link>/post/termux-extra-keys-row/</link>
      <pubDate>Tue, 11 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/termux-extra-keys-row/</guid>
      <description>
        
          
          
          
        
        
        
          打开Termux，从屏幕左边缘向右滑动，打开抽屉菜单，然后长按KEYBOARD，即可打开扩展快捷键。
          
        
        </description>
    </item>
    
    <item>
      <title>Termux编辑软件源</title>
      <link>/post/termux-edit-sources.list/</link>
      <pubDate>Mon, 10 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/termux-edit-sources.list/</guid>
      <description>
        
          
          
          
        
        
        
          vi /data/data/com.termux/files/usr/etc/apt/sources.list
将 https://termux.net 替换成 https://mirrors.ustc.edu.cn/termux，保存退出即可。
你也可以使用 sed 命令进行文本替换：
sed -i &#39;s,https://termux.net,https://mirrors.ustc.edu.cn/termux,&#39; $PREFIX/etc/apt/sources.list  更新
pkg update pkg upgrade 
          
        
        </description>
    </item>
    
    <item>
      <title>Ubuntu中v2ray客户端配置实例</title>
      <link>/post/v2ray-client-configuration-example-in-ubuntu/</link>
      <pubDate>Sat, 18 May 2019 09:00:00 +0000</pubDate>
      
      <guid>/post/v2ray-client-configuration-example-in-ubuntu/</guid>
      <description>
        
          
          
          
        
        
        
          推荐使用WebSocket传输模式，详细配置可参考Nginx V2ray and WebSocket.
首先使用bash &amp;lt;(curl -L -s https://install.direct/go.sh)来快捷安装v2ray，如下：
root@vm:~# bash &amp;lt;(curl -L -s https://install.direct/go.sh) Installing V2Ray v4.18.0 on x86_64 Downloading V2Ray: https://github.com/v2ray/v2ray-core/releases/download/v4.18.0/v2ray-linux-64.zip % Total % Received % Xferd Average Speed Time Time Time Current Dload Upload Total Spent Left Speed 100 608 0 608 0 0 581 0 --:--:-- 0:00:01 --:--:-- 581 100 10.5M 100 10.5M 0 0 172k 0 0:01:02 0:01:02 --:--:-- 194k Extracting V2Ray package to /tmp/v2ray. Archive: /tmp/v2ray/v2ray.
          
        
        </description>
    </item>
    
    <item>
      <title>VMware安装Alpine Linux实例</title>
      <link>/post/vmware-installs-alpine-linux-instance/</link>
      <pubDate>Tue, 14 May 2019 12:59:00 +0000</pubDate>
      
      <guid>/post/vmware-installs-alpine-linux-instance/</guid>
      <description>
        
          
          
          
        
        
        
          AlpineLinux介绍 Alpine 的意思是“高山的”，比如 Alpine plants高山植物，Alpine skiing高山滑雪、the alpine resort阿尔卑斯山胜地。
Alpine Linux 网站首页注明“Small！Simple！Secure！Alpine Linux is a security-oriented, lightweight Linux distribution based on musl libc and busybox.”概括了以下特点：
 小巧：基于Musl libc和busybox，和busybox一样小巧，最小的Docker镜像只有5MB； 安全：面向安全的轻量发行版； 简单：提供APK包管理工具，软件的搜索、安装、删除、升级都非常方便。 适合容器使用：由于小巧、功能完备，非常适合作为容器的基础镜像。  准备工作 安装VMware虚拟机软件，新建虚拟机，配置如下：
下载AlpineLinux镜像文件alpine-standard-3.9.4-x86_64.iso，下载地址: https://www.alpinelinux.org/downloads/ 设置虚拟机光驱挂载镜像文件alpine-standard-3.9.4-x86_64.iso。
开始安装Alpine Linux 启动虚拟机，开始从光驱引导系统，进入系统后，输入root登录，然后输入setup-alpine开始启动安装程序。
下来设置键盘布局(us)、主机名(vm)以及网络配置：
接着设置时区(timezone)
然后是网络代理和网络时间同步(NTP)设置
接下里选择软件源镜像(mirrors)，我选择了兰州大学的镜像：
然后选择SSH服务程序，设置安装磁盘以及使用方式，完成安装后会提示**Installation is complete. Please reboot.**至此安装完成。
安装Awesome桌面 添加普通用户 #adduser alair  启用Community Repository vi /etc/apk/repositories编辑软件源配置，去掉其中Community Repository前面的注释符(#)
apk update&amp;amp;&amp;amp;apk upgrade更新软件。
安装awesome 使用以下命令安装awesome、lua、feh和lxterminal
#apk add awesome lua feh lxterminal  其他桌面应用可以按需添加，比如firefox, gnumeric, xchat, gimp, pidgin, geany, vim等。
          
        
        </description>
    </item>
    
    <item>
      <title>Mplayer和N900镜头</title>
      <link>/post/mplayer-and-the-n900-cameras/</link>
      <pubDate>Sat, 04 May 2019 17:05:01 +0000</pubDate>
      
      <guid>/post/mplayer-and-the-n900-cameras/</guid>
      <description>
        
          
          
          
        
        
        
          诺基亚N900有前后两个镜头，前置640x480(0.3M)后置848*480(0.4M)，这两个镜头都是V4L2设备，分别对应**/dev/video0和/dev/video1**，因此可以方便的通过mplayer或gstreamer；来访问它们。
 Video4Linux或V4L是一个视频截取及设备输出API，以及Linux的驱动程序框架，支持很多USB摄像头、电视调谐卡以及其他设备。 V4L2是V4L的第二个版本。Video4Linux2修复了一些设计上的程序错误，最先在2.5.X版的核心中出现。Video4Linux2的驱动程序包含了一个对Video4Linux1应用程序的兼容模式，虽然支持并不完整，并且建议在V4L2模式下使用Video4Linux1设备。
 mplayer访问镜头：
$ mplayer tv:// -tv device=/dev/video0 # 后置镜头 $ mplayer tv:// -tv device=/dev/video1 # 前置镜头  如果使用前置镜头，建议使用镜像模式-vf mirror
$ mplayer tv:// -tv device=/dev/video1 -vf mirror 
          
        
        </description>
    </item>
    
    <item>
      <title>NokiaN900刷机方法</title>
      <link>/post/nokia-n900-installation-firmware/</link>
      <pubDate>Wed, 01 May 2019 12:14:00 +0000</pubDate>
      
      <guid>/post/nokia-n900-installation-firmware/</guid>
      <description>
        
          
          
          
        
        
        
          刷机工具以及固件文件下再地址见文章末尾。
首先安装刷机工具maemo flasher，然后下载固件，固件分以下两个文件，下载地址https://blbl.dev/NokiaN900/index.html
 emmc(vanilla) firmware(combined)  切记，先刷emmc再刷firmware，并且两次刷机中间不可以开机。
将手机关机，然后按住键盘上的u键，再用数据线将手机链接电脑，这是手机会显示NOKIA字样界面，并且右上角显示有USB图标，即进入刷机模式。
首先写入EMMC文件，命令如下flasher-3.5 -F emmc.bin -f，以下为linux下操作实例，以供参考
alair@zb14:~/下载$ sudo flasher-3.5 -F RX-51_2009SE_10.2010.13-2.VANILLA_PR_EMMC_MR0_ARM.bin -f [sudo] alair 的密码： flasher v2.5.2 (Oct 21 2009) Image &#39;mmc&#39;, size 255947 kB Version RX-51_2009SE_10.2010.13-2.VANILLA USB device found found at bus 002, device address 012. Found device RX-51, hardware revision 2204 NOLO version 1.4.14 Version of &#39;sw-release&#39;: RX-51_2009SE_21.2011.38-1_PR_MR0 Booting device into flash mode. Suitable USB device not found, waiting. USB device found found at bus 002, device address 013.
          
        
        </description>
    </item>
    
    <item>
      <title>NokiaN900删除不必要的软件</title>
      <link>/post/n900-removes-unnecessary-software-and-games/</link>
      <pubDate>Tue, 30 Apr 2019 13:40:00 +0000</pubDate>
      
      <guid>/post/n900-removes-unnecessary-software-and-games/</guid>
      <description>
        
          
          
          
        
        
        
          NokiaN900自带的软件不少，还有一些游戏，以下为这些软件的删除方式。
首先，建议安装rootsh以获取ROOT权限，然后在xTermianl进行以下操作。
   名称 说明 删除命令     Mahjong 游戏 apt-get remove -y osso-mahjong   Chess 游戏 apt-get remove -y gnuchess   Blocks 游戏 apt-get remove -y maemoblocks   Marbles 游戏 apt-get remove -y osso-lmarbles   AP News 软件 apt-get remove -y ap-installer   Docs To Go 软件 apt-get remove -y dtg-installer   Sketch 画图 apt-get remove -y osso-sketch   Backup 备份 apt-get remove -y osso-backup   PDF reader PDF阅读 apt-get remove -y osso-pdf-viewer   RSS RSS订阅 apt-get remove -y osso-rss-feed-reader   Notes 记事本 apt-get remove -y osso-notes   Amazon Amazon安装快捷方式 rm /usr/share/maemo-installer-utils/amazon.
          
        
        </description>
    </item>
    
    <item>
      <title>N900安装最新版Nemo</title>
      <link>/post/nokia-n900-install-nemo/</link>
      <pubDate>Sun, 28 Apr 2019 15:56:00 +0000</pubDate>
      
      <guid>/post/nokia-n900-install-nemo/</guid>
      <description>
        
          
          
          
        
        
        
          准备
 安装最新uboot 一张至少4g以上的TF卡  下载地址http://releases.nemomobile.org/releases/ 以最新目录为例，下载http://releases.nemomobile.org/releases/latest/images/nemo-armv7hl-n900/里的nemo-armv7hl-n900-mmcblk0p.raw.bz2 解压出raw文件，然后改后缀为img。Windows下用Win32DiskImager将镜像文件写入TF卡。 Linux下可以使用dd命令直接写入，不需要改后缀名：
alair@e6440:/media/alair/bak/downloads$ sudo dd if=nemo-armv7hl-n900-mmcblk0p.raw of=/dev/sdc bs=1M [sudo] alair 的密码： 记录了3640+1 的读入 记录了3640+1 的写出 3816816641 bytes (3.8 GB, 3.6 GiB) copied, 185.35 s, 20.6 MB/s  Windwos中用winscp在你的N900的/etc/bootmenu.d/新建一个40-nemo.item文件，贴入以下内容：
ITEM_NAME=&amp;quot;Mer-Nemo Mobile&amp;quot; ITEM_ID=&amp;quot;nemo&amp;quot; ITEM_DEVICE=&amp;quot;${EXT_CARD}p3&amp;quot; ITEM_KERNEL=&amp;quot;uImage&amp;quot; ITEM_FSTYPE=&amp;quot;vfat&amp;quot; ITEM_CMDLINE=&amp;quot;root=/dev/mmcblk0p1 rootwait ro console=ttyO2,115200n8 console=tty0 omapfb.vram=0:2M,1:2M,2:2M mtdoops.mtddev=2 quiet&amp;quot; ITEM_OMAPATAG=1  Linux系统下可以直接SSH连接N900进行操作。 然后root运行
u-boot-update-bootmenu  关机，插入TF卡，然后推开键盘开机，选Mer-Nemo Mobile进入即可。
          
        
        </description>
    </item>
    
    <item>
      <title>再次入手NokiaN900</title>
      <link>/post/start-with-nokian900-again/</link>
      <pubDate>Mon, 22 Apr 2019 11:20:00 +0000</pubDate>
      
      <guid>/post/start-with-nokian900-again/</guid>
      <description>
        
          
          
          
        
        
        
          时隔八年，再次入手Nokia N900
系统截图 Nokia N900配置    参数 属性     网络 GSM / HSPA   2G bands GSM 850 / 900 / 1800 / 1900   3G bands HSDPA 900 / 1700 / 2100   速率 HSPA 10.2/2 Mbps   GPRS Class 32   EDGE Class 32   发布 2009, August. Released 2009, November   状态 停产   外观尺寸 110.
          
        
        </description>
    </item>
    
    <item>
      <title>魅族PRO 5安装Ubuntu Touch系统</title>
      <link>/post/meizu-pro-5-installs-ubuntu-touch-system/</link>
      <pubDate>Sat, 20 Apr 2019 19:37:00 +0000</pubDate>
      
      <guid>/post/meizu-pro-5-installs-ubuntu-touch-system/</guid>
      <description>
        
          
          
          
        
        
        
          首先，下载以下几个文件:
 魅族PRO 5国行出厂刷机包 Download 魅族PRO 5国际版刷机包 Download Fastboot工具 Download SuperSU Download Busybox Download RootBrowser Download  刷出厂版ROM 给魅族PRO 5刷出厂版ROM，请将出厂版ROM的文件名命名为“update.zip”，把它放在手机内置存储根目录，同时按住音量增加和电源，等待数秒，直至手机重启至Recovery模式。手机成功重启至Recovery模式后，手机屏幕将显示以下画面：
点击“开始”按钮刷机。
打开Root权限 刷机完成后，我们进入刚刚刷入的系统，登录你的Flyme帐户，然后，在“设置-指纹和安全”里开启系统的Root权限。Root权限开启成功后，手机将重启一次。
安装SuperSU 安装SuperSU并打开，选择“极客”模式并进入，SuperSU将提示你更新二进制文件，以“常规方式”安装即可。
在安装二进制文件的过程中，SuperSU将申请Root权限，请同意申请。
更新过二进制文件后，请重启手机。
安装Busybox 安装Busybox并打开，点击屏幕右下角的“INSTALL”按钮。 在安装的过程中，Busybox将申请系统的Root权限，请同意申请（此时Root授权将由SuperSU接管）。
如果Busybox的安装一切顺利，其安装日志如下：
修改系统标识 安装并打开RootBrowser，导航至以下目录：
 /dev/block/platform/15570000.ufs/by-name/ 找到文件：proinfo，点击文件，选择“Open as…”，选择“Text file”，再选择“RB Text Editor”。
 这期间，RootBrowser将申请系统的Root权限，请同意申请。
在“proinfo”里找到以下行： machine_type=M576_mobile_public 将其改为： machine_type=M576_intl_official 如下：
改过之后请保存更改，然后退出RootBrowser，重启手机。 手机重启过之后，请再次在RootBrowser里查看proinfo的状态。如果“machine_type=”后的文本为“M576_intl_official”，则说明我们的操作成功了。
刷国际版ROM 将国际版Flyme的刷机包命名为“update.zip”，将其放置在手机内置存储的根目录。 同时按住手机的音量增加键和电源键，等待数秒，直至手机重启到Recovery。 刷机的步骤和给魅族PRO 5刷出厂版系统一样，在Recovery里点“开始”按钮即可。 刷机完成后，国际版Flyme的桌面如下：
解锁bootloader 同时按住手机的音量减小键和电源键，等待数秒，直至其重启到Fastboot模式。 将手机通过数据线连接到计算机（请保证Fastboot驱动已经正确安装），进入Fastboot工具文件夹，在文件资源管理器里按住Shift键的同时单击鼠标右键，选择“在此处打开Powershell窗口”，并在Powershell里执行以下命令： ./fastboot oem unlock 成功解锁后，手机屏幕的右下角将显示“unlocked”字样如下：
安装Ubuntu Touch 进入https://github.com/ubports/ubports-installer，下载适应版本的UBports Installer安装程序 打开ubports installer，点击“Select device manually”按钮，在机型列表里选择“Meizu PRO 5”。
          
        
        </description>
    </item>
    
    <item>
      <title>通过SSH Over USB管理树莓派Zero</title>
      <link>/post/raspberry-pi-zero-with-ssh-over-usb/</link>
      <pubDate>Fri, 19 Apr 2019 09:46:00 +0000</pubDate>
      
      <guid>/post/raspberry-pi-zero-with-ssh-over-usb/</guid>
      <description>
        
          
          
          
        
        
        
          树莓派Zero因为相对来说太小巧，没有提供初始化的网卡，所以我们除了通过串口连接以外，树莓派Zero也提供了USB直接连接的方式。即通过Ethernet Gadget模式来连接pc，并进行ssh连接。
 Ethernet Gadget模式即USB网卡模式，比较常见的就是我们通过android手机的usb接口对pc进行网络共享的一种手段。一般电脑都会自动识别这种设备，并开启网卡进行共享。
 修改配置文件 为了进行USB连接，我们需要修改BOOT文件夹下的config.txt与cmdline.txt配置文件。 首先在config.txt最末行处换行添加如下代码，打开usb网卡模式：
dtoverlay=dwc2  其次在cmdline.txt文件中找到rootwait字段，并在其后面空格添加如下信息，在打开系统时开启USB网卡模式。
modules-load=dwc2,g_ether  在boot分区新建ssh文件，以打开ssh访问功能。
touch ssh  通过usb连接设备 树莓派zero有两个MicroUSB口，一个是电源插口，职司供电的功能，另外一个就是USB接口，它除了供电以外还提供OTG的功能，我们也是通过这个接口来连接PC。 此时我们可以通过以下代码连接树莓派zero：
ssh pi@raspberrypi.local  但此时ip段为DHCP模式获取，如果我们希望通过ip来连接，则我们需要给树莓派的usb网卡设置ip。
设置USB网卡的IP 我们可以通过ifconfig -a来查看我们现在的网卡设备，此时我们可以看到，USB0网卡设备，我们就是通过该设备连接的pc，所以我们需要设置该网卡的ip。
sudo nano /etc/network/interfaces  打开网卡配置界面，在最末行添加如下代码来设置固定IP：
allow-hotplug usb0 iface usb0 inet static address 192.168.7.2 netmask 255.255.255.0 network 192.168.7.0 broadcast 192.168.7.255 gateway 192.168.7.1  然后重启usb0网卡：
sudo ifdown usb0 sudo ifup usb0 ifconfig usb0  但树莓派此时实际上是从机，我们需要通过设置pc主机的ip来让树莓派0的usb网卡真正运作起来，那么我们对刚才的usb设备设置如下IP：
 IP: 192.168.7.1 掩码: 255.255.255.0 路由: 192.168.7.1
 此时我们就可以通过ip来进行ssh连接了：
          
        
        </description>
    </item>
    
    <item>
      <title>查出VPS流量消耗元凶</title>
      <link>/post/find-the-vps-traffic-consumption-culprit/</link>
      <pubDate>Thu, 11 Apr 2019 22:23:00 +0000</pubDate>
      
      <guid>/post/find-the-vps-traffic-consumption-culprit/</guid>
      <description>
        
          
          
          
        
        
        
          上月不知什么原因VPS流量提前消耗完了，然后通知这月10号重新reset，于是只能临时开了一个月的locvps进行过渡。好不容易熬到昨儿，reset后赶紧把数据和站点又搬回来。 今儿偶尔登录vps，突然发现流量消耗咋一直很高，两天不到就消耗了170G，额滴神呐!查看详细使用统计，发现从昨儿reset以来，OUT bps一直维持在19M左右，瞬间脑袋瓜嗡嗡的！
于是赶紧动手找找，看看消耗流量的元凶到底是谁？
首先，安装iftop来检查网络使用情况。官网在这里http://www.ex-parrot.com/~pdw/iftop/，CentOS安装方法如下：
yum install -y flex byacc libpcap ncurses ncurses-devel libpcap-devel #安装需求软件 wget http://www.ex-parrot.com/~pdw/iftop/download/iftop-0.17.tar.gz tar zxf iftop-0.17.tar.gz cd iftop-0.17 ./configure make &amp;amp;&amp;amp; make install  安装完成后，可以通过iftop来运行，建议加上-P参数，显示使用端口信息，如下：
主界面中左侧为本地端，右侧为远端，中间的&amp;lt;=和=&amp;gt;表示流量方向。 下面的TX：发送流量/RX：接收流量/TOTAL：总流量/Cumm：运行iftop到目前时间的总流量/peak：流量峰值/rates：分别表示过去 2s 10s 40s 的平均流量
从上图来看，本地IP一直在向一个140.249.34.53发送数据，从peak统计来看，速率在22.3Mb左右，和网站统计相符。 知道端口后，可以通过 netstat -ntlup|grep 端口号来查看具体进程，没有的话可以通过yum install net-tools来安装。
我试着查了下这个IP，发现是山东青岛的，再通过IP反查域名，真想才出来了，原来是百度云的相关IP。这才想起来，我安装了BaiduPCS-Go百度网盘客户端，用来对vps数据进行备份，原来搞鬼的是这个东西。找到元凶就好办了，首先把这个IP给禁了iptables -A INPUT -p tcp -s 140.249.34.53 -j DROP 禁完后，实时流量一下子就降了下来，如下所示：
而后将BaiduPCS-Go删除，以绝后患！
          
        
        </description>
    </item>
    
    <item>
      <title>多路由器同局域网组网实例</title>
      <link>/post/multiple-routers-and-lan-networking-instances/</link>
      <pubDate>Thu, 24 Jan 2019 11:24:00 +0000</pubDate>
      
      <guid>/post/multiple-routers-and-lan-networking-instances/</guid>
      <description>
        
          
          
          
        
        
        
          装修的时候，家里卧室阳台和客厅均预留网口，共6个，所有的网线都汇集在楼梯下的弱电箱里，但是当时没注意到弱电箱过小，后期装宽带才发现，一堆线占了很多地方，电信的光猫塞进去都不方便。
出于无奈只能买了个外置机柜，9U的，刚好放到楼梯地下不占地方。于是将光猫、主路由和NAS都塞了进去。
最终家里的网络布局如下： 其中，RB750为主路由，IP为192.168.1.11，是为了和光猫的192.168.1.1区分开。下挂R6300和R6200俩AP，一个MyCloud NAS，一个小米电视。
一楼客厅的R6300v2为主AP，采用AP模式链接，IP为192.168.1.2，刷的梅林固件，下挂俩树莓派。
二楼书桌上的R6200v2也采用AP模式链接，不过是默认固件，IP为192.168.1.3。
以上都为超五类网线链接，这样就可以做到全家设备同局域网共享访问，相互间都是1G速率。
          
        
        </description>
    </item>
    
    <item>
      <title>CentOS7安装L2TP VPN</title>
      <link>/post/centos7-install-l2tp-vpn/</link>
      <pubDate>Mon, 10 Dec 2018 12:10:00 +0000</pubDate>
      
      <guid>/post/centos7-install-l2tp-vpn/</guid>
      <description>
        
          
          
          
        
        
        
          Centos7安装VPN 下载安装脚本:
wget http://cdn.lyq.wiki/vpnscripts/vpninstall  执行安装脚本
chmod+x vpninstall ./vpninstall  安装完成后提示如下:
IPsec VPN server is now ready for use! Connect to your new VPN with these details: Server IP: 181.53.149.126 IPsec PSK: EMc6SpQHaBgZCnvNtLX Username: vpnuser Password: FzfpNGofpRdkBj2B Write these down. You&#39;ll need them to connect!  以上为安装完成后提示的帐号信息，其中用户名(username)、密码(passowrd)和IPsec PSK密匙(IPsec PSK)为随即生成。
如果为了方便，以上帐号信息可以参考以下方法自定义：
[root@hwcsh ~]# vi /etc/ipsec.secrets #编辑PSK %any %any : PSK &amp;quot;EMc6SpQHaBgZCnvNtLX&amp;quot; [root@hwcsh ~]# vi /etc/ppp/chap-secrets #编辑帐户信息 &amp;quot;vpnuser&amp;quot; l2tpd &amp;quot;FzfpNGofpRdkBj2B&amp;quot; * [root@hwcsh ~]#systemctl restart ipsec xl2tpd #重启服务  iPhone6配置L2TP VPN 设置-&amp;gt;VPN-&amp;gt;添加VPN配置，类型选择L2TP，然后参考下图设置。
          
        
        </description>
    </item>
    
    <item>
      <title>搬瓦工被墙后免费更换IP</title>
      <link>/post/bwg-replace-main-ip-after-blocked/</link>
      <pubDate>Mon, 15 Oct 2018 10:15:00 +0000</pubDate>
      
      <guid>/post/bwg-replace-main-ip-after-blocked/</guid>
      <description>
        
          
          
          
        
        
        
          忙了一天没注意看邮件，下午才发现站点宕机，登录BWG后台检查系统运行正常，使用Ping.pePing了下才发现，可能IP被墙了。
查看Ping的结果，发现国外线路都可以浏览，国内线路丢包全是100%，看来凉凉咯！
于是网上找了下解决方案，发现BWG免费提供更换IP服务，每五周使用一次。
登录BWG后台，然后浏览https://kiwivm.64clouds.com/main-exec.php?mode=blacklistcheck，点击TestMainIP进行检查。
此页面会显示当前服务器IP以及是否被墙。
如上提示，IP BLOCKED表示已经被封，点击下面的Replace Main IP更换IP，更换IP后再次浏览上面网站，即可显示IP NOT BLOCKED表示未被封锁。
注意：该功能每五周可以使用一次，且行且珍惜！
          
        
        </description>
    </item>
    
    <item>
      <title>一加3T售后刷机包</title>
      <link>/post/oneplus-3t-after-sale-rom/</link>
      <pubDate>Sat, 13 Oct 2018 10:23:00 +0000</pubDate>
      
      <guid>/post/oneplus-3t-after-sale-rom/</guid>
      <description>
        
          
          
          
        
        
        
          首先下载以下两个文件包：
 一加3T9008驱动 Download 一加3T售后恢复包 Download  然后，将手机完全关机，按住音量+不放，将手机和电脑连接，此时手机还是黑屏状态，电脑会有设备连接提示音。
我的电脑-&amp;gt;右键管理-&amp;gt;设备管理器，打开查看，第一次使用会在其他设备下出现QHSUSB_BULK带黄色感叹号的未知设备，右键点击更新驱动，手动选择刷机驱动包里面的驱动目录进行安装，如果不行的话可以使用360驱动大师进行识别安装，安装完成后会出现类似以下的设备驱动:
其中Qualcomm HS-USB QDLoader 9008(COM4)的新设备，就是正常驱动后的手机，俗称高通9008模式。
将下载的一加3T售后恢复包解压后，打开其中的MsmDownloadTool V3.0.exe开始刷机
正常识别COM设备后，点击Start开始刷机，完成后自动重启。
          
        
        </description>
    </item>
    
    <item>
      <title>MikroTik RB750Gr3系统升级</title>
      <link>/post/rb750gr3-system-upgrade/</link>
      <pubDate>Mon, 01 Oct 2018 11:21:00 +0000</pubDate>
      
      <guid>/post/rb750gr3-system-upgrade/</guid>
      <description>
        
          
          
          
        
        
        
          自动升级 进入路由器管理界面，通过System-&amp;gt;Auto Upgrade功能自动升级。
或者使用Winbox连接，通过System-&amp;gt;Auto Upgrade功能自动升级
自动升级不了的，刷不出最新系统的继续看下面手动升级。
手动升级 官方系统下载页面https://mikrotik.com/download
本次以RB750gr3为例，官方显示了以下四个系统版本
 5.26 (Legacy) 6.40.9 (Long-term) 6.43.2 (Stable) 6.44beta9 (Testing)  我的RB750gr3当前版本为6.41，通过自动升级刷新不出来最新版本，因此只能手动升级。
RB750gr3为MMIPS构架，从下载页面找到相应的构架。
其中MMIPS后面就备注着hEX (RB750Gr3), RBMxx点击下载**Main package**，格式为**.npk**文件。
通过Winbox连接路由器，将下载的npk文件拖放到File菜单，上传完成后如下所示。
然后system-&amp;gt;reboot重启系统完成更新，更新后版本号可以通过Winbox标题栏看到。
提醒:Router OS 6.45.6 for RB750gr3系统包国内网盘**下载地址**
          
        
        </description>
    </item>
    
    <item>
      <title>为路由器增加虚拟内存</title>
      <link>/post/add-virtual-memory-to-the-router/</link>
      <pubDate>Mon, 10 Sep 2018 09:10:00 +0000</pubDate>
      
      <guid>/post/add-virtual-memory-to-the-router/</guid>
      <description>
        
          
          
          
        
        
        
          本文介绍，如何在安装了梅林固件的路由器上，增加虚拟内存，以运行需求资源较大的软件。
下载swap.tar.gz 下载地址 https://github.com/koolshare/koolshare.github.io/tree/acelan_softcenter_ui/swap ，下载swap.tar.gz文件。
安装插件 进入路由器后台，软件中心-&amp;gt;离线安装,选择刚才下载的swap.tar.gz，上传并安装。
准备U盘 准备一个新的U盘，使用diskgen格式化为ext2/3/4格式，插入路由器USB接口。
设置虚拟内存 进入路由器管理后台，软件中心-&amp;gt;虚拟内存，设置大小后点击创建swap
创建完成后自动启用，再次进入swap插件即可看到使用信息
          
        
        </description>
    </item>
    
    <item>
      <title>V2ray使用实例</title>
      <link>/post/v2ray-use-case/</link>
      <pubDate>Mon, 20 Aug 2018 18:18:00 +0000</pubDate>
      
      <guid>/post/v2ray-use-case/</guid>
      <description>
        
          
          
          
        
        
        
          Project V 提供了单一的内核和多种界面操作方式。内核（V2Ray）用于实际的网络交互、路由等针对网络数据的处理，而外围的用户界面程序提供了方便直接的操作流程。 V2Ray 的主要作用是根据用户的配置，对于传入的网络连接进行一定处理，然后发往指定的服务器。它是一个命令行程序，可以接受一个 JSON 格式的配置文件。
VPS安装服务端 使用下面命令一键安装:
bash &amp;lt;(curl -L -s https://install.direct/go.sh)  或者从https://github.com/v2ray/v2ray-core/releases下载预编译包进行安装。
安装完成后，使用service v2ray start启动v2ray服务。
Windows安装本地端 从https://github.com/v2ray/v2ray-core/releases下载Windows客户端，解压后编辑config.json文件，内容如下：
{ &amp;quot;inbound&amp;quot;: { &amp;quot;port&amp;quot;: 1080, // 监听端口 &amp;quot;protocol&amp;quot;: &amp;quot;socks&amp;quot;, // 入口协议为 SOCKS 5 &amp;quot;domainOverride&amp;quot;: [&amp;quot;tls&amp;quot;,&amp;quot;http&amp;quot;], &amp;quot;settings&amp;quot;: { &amp;quot;auth&amp;quot;: &amp;quot;noauth&amp;quot; //socks的认证设置，noauth 代表不认证，由于 socks 通常在客户端使用，所以这里不认证 } }, &amp;quot;outbound&amp;quot;: { &amp;quot;protocol&amp;quot;: &amp;quot;vmess&amp;quot;, // 出口协议 &amp;quot;settings&amp;quot;: { &amp;quot;vnext&amp;quot;: [ { &amp;quot;address&amp;quot;: &amp;quot;10.0.0.1&amp;quot;, // 服务器地址，请修改为你自己的服务器 ip 或域名 &amp;quot;port&amp;quot;: 31892, // 服务器端口 &amp;quot;users&amp;quot;: [ { &amp;quot;id&amp;quot;: &amp;quot;3efd584f-8a7d-43af-9c75-35266df4ceb0&amp;quot;, // 用户 ID，必须与服务器端配置相同 &amp;quot;alterId&amp;quot;: 64 // 此处的值也应当与服务器相同 } ] } ] } } }  以上的id和alterId，在vps上使用cat /etc/v2ray/config.
          
        
        </description>
    </item>
    
    <item>
      <title>一加3T安装MIUI10</title>
      <link>/post/oneplus3t-miui10/</link>
      <pubDate>Thu, 19 Jul 2018 21:22:00 +0000</pubDate>
      
      <guid>/post/oneplus3t-miui10/</guid>
      <description>
        
          
          
          
        
        
        
          首先，十分感谢HitoLiu辛苦劳动，才有了Oneplus3T的MIUI10
刷机前先确认H2OS版本，由于H大的MIUI10是基于Android 7，所以要是基于Android7系的话，则可以直接刷，要是基于Android8的话，就得先降级。
一加3T安卓8降级安卓7 基于Android8的手机，下载下面降级包，通过系统内自带升级功能，手动选择该包进行降级。
一加3T Android 8降级Android 7刷机包 https://dotbbq.pipipan.com/fs/18418398-315801567
或者在这里下载Android7的底包，刷入底包即可 https://ciux.org/oneplus3t-base-firmware.html
降级完成后，开始解锁刷入第三方recovery来刷机。
推荐使用一加3/3T工具包(OnePlus3/3T Unified ToolKit)，使用方法**点击这里**
一加3T MIUI10刷机流程  解锁  手机端设置-&amp;gt;开发者选项，打开OEM解锁和USB调试。
连接手机和电脑，打开工具包选择2) Unlock - ReLock Bootloader，下一步选择1解锁。
手机按照提示选择YES解锁
 刷入TWRP Recovery  重启手机，选择Fastboot模式，连接手机和电脑，选择5) Flash - Boot TWRP Recovery，刷入TWRP
 刷入MIUI10  进入TWRP Recovery，挂载MTP，将MIUI10刷机包拷入手机，然后进行卡刷。
双清后重启即可！
官方更新说明 因MIUI官方开始全部适配安卓8，7.1的MIUI在11月2号官方已经正式停更了，目前这版MIUI是MIUI官方发布的最后一个安卓7.1版本，也是目前 最完善的一版。 如果不出意外的话，这也是一加3/3T安卓7.1 MIUI的最后一版。后续就是准备给一加3/3T上安卓O或以上的MIUI了，基本完善后我会优先发在群里 给机油门尝鲜。安卓O的MIUI最快也要半个月以上，且第一版难免bug多，耐心等待别催，只要我手上的3T还没坏就会一直把MIUI维护下去。 8.10.22及以上的MIUI无需双清可直接刷本版MIUI升级，8.10.22以下的需要双清升级。  8.11.3更新日志
1.同步MIUI官方最后一版安卓7.1的MIUI的更新 2.修复新版附加设置-交换返回与多任务键无效的bug  8.11.2更新日志：
1.同步MIUI的更新 2.解决WiFi mac地址问题 3.解决WiFi认证问题 4.修复了一些其他已知bug 5.附加设置更新，全新的界面，加入色温调节，省电模式，性能模式等等  8.10.28更新日志：
1.同步MIUI官方第392周更新 2.修复了一些已知bug 这次不是简单的同步更新，而是完全的重制，除了修复以前的一些已知bug外，流畅度也有大幅度的提升，并且还增加了很多新功能，比如 人脸解锁、AI相机等等，还有很多细节上的变化，应该能让你爽到脱肛的那种。 注意注意注意！这个包更改幅度较大，必须双清刷，否则可能出现各种程序报错！如果data分区被加密则需要格式化data！！否则可能会 一直卡在开机动画不能进系统！  8.
          
        
        </description>
    </item>
    
    <item>
      <title>GRUB引导ISO镜像</title>
      <link>/post/grub-boot-iso-image-file/</link>
      <pubDate>Sun, 08 Jul 2018 17:18:00 +0000</pubDate>
      
      <guid>/post/grub-boot-iso-image-file/</guid>
      <description>
        
          
          
          
        
        
        
          家里电脑安装了双系统(Xubuntu+Windows7)，平时一直不关机，开着TeamViewer便于在办公室远程操作。
这次不知怎么回事儿，远程掉了，回家一看Windows意外关机，再开机直接蓝屏。
由于为了省资源，关闭了系统保护，没法进行还原，多次试着拯救都没能解决，无限蓝屏……
手头刚好没有WinPE的U盘，没法ghost恢复或重装Windows，只有xubuntu可用，一筹莫展。
突然想到grub是否可以引导iso？ 网上找了下，还真可以，于是下载了个WinPE镜像文件，打算通过grub来引导以修复Windows。
具体操作如下：
安装grub-imageboot
alair@e6440:~$ apt search memdisk 正在排序... 完成 全文搜索... 完成 grub-imageboot/bionic,bionic 0.6 all boot iso, harddisk and floppy images with grub2 and syslinux memdisk alair@e6440:~$ sudo apt install grub-imageboot [sudo] alair 的密码： 正在读取软件包列表... 完成 正在分析软件包的依赖关系树 正在读取状态信息... 完成 将会同时安装下列软件： syslinux-common 下列【新】软件包将被安装： grub-imageboot syslinux-common 升级了 0 个软件包，新安装了 2 个软件包，要卸载 0 个软件包，有 4 个软件包未被升级。 需要下载 1,176 kB 的归档。 解压缩后会消耗 3,684 kB 的额外空间。 您希望继续执行吗？ [Y/n] y 获取:1 http://mirrors.cqu.edu.cn/ubuntu bionic/main amd64 syslinux-common all 3:6.
          
        
        </description>
    </item>
    
    <item>
      <title>Excel文件大小异常核查</title>
      <link>/post/excel-file-size-abnormal-check/</link>
      <pubDate>Sun, 10 Jun 2018 16:10:00 +0000</pubDate>
      
      <guid>/post/excel-file-size-abnormal-check/</guid>
      <description>
        
          
          
          
        
        
        
          有时候明明excel文件中没多少内容，但是文件体积却很大，在此分享一个检查解决的方法。
将excel文件后缀名改为zip，用压缩软件将其打开，定位到xl\worksheets\目录，可以看到各个sheet的体积大小，如下:
找到其中体积最大的，定位到该sheet
首先将所有内容全选并粘贴为文字。
然后将内容排序后，全选下面的空白行邮件删除，将条件格式全部删除，这样应该就OK了！
          
        
        </description>
    </item>
    
    <item>
      <title>Ubuntu配置Livepatch服务</title>
      <link>/post/canonical-livepatch-service/</link>
      <pubDate>Fri, 25 May 2018 05:25:00 +0000</pubDate>
      
      <guid>/post/canonical-livepatch-service/</guid>
      <description>
        
          
          
          
        
        
        
          CLS(Canonical Livepatch Service)是Ubuntu母公司Canonical提供的一项服务，该服务可以为处于LTS的Ubuntu版本提供内核关键补丁修复，而不需要重新启动系统，特别适用于用作Server的系统。
使用CLS的前提是必须注册一个Ubuntu帐号，地址为https://login.ubuntu.com/+login
注册完成后，即可访问CLS主页https://www.ubuntu.com/server/livepatch进行登录配置。
登陆后选择用户类型，一般个人用户选择Ubuntu User，然后点击Get your Livepatch token获取密匙
按照下一步提示进行操作，启用CLS服务。
运行完成后即成功启用CLS服务。
检查CLS服务配置状态可以使用以下命令:
alair@e6440:~$ sudo canonical-livepatch status --verbose client-version: 8.0.2 machine-id: 08e0*****************750db machine-token: 4753a054c*****************a2eb84c7 architecture: x86_64 cpu-model: Intel(R) Core(TM) i5-4310M CPU @ 2.70GHz last-check: 2018-05-25T19:55:15.537634075+08:00 boot-time: 2018-05-25T19:47:51+08:00 uptime: 14m43s status: - kernel: 4.15.0-22.24-generic running: true livepatch: checkState: checked patchState: nothing-to-apply version: &amp;quot;&amp;quot; fixes: &amp;quot;&amp;quot; 
          
        
        </description>
    </item>
    
    <item>
      <title>XiunoBBS Nginx伪静态规则</title>
      <link>/post/xiunobbs-nginx-pseudo-static/</link>
      <pubDate>Tue, 06 Feb 2018 12:16:00 +0000</pubDate>
      
      <guid>/post/xiunobbs-nginx-pseudo-static/</guid>
      <description>
        
          
          
          
        
        
        
          XiunoBBS是一款非常流行的轻论坛程序
以下为XiunoBBS Nginx伪静态规则代码，添加到相应的nginx配置文件中即可。
location ~* \.(htm)$ { rewrite &amp;quot;^(.*)/(.+?).htm(.*?)$&amp;quot; $1/index.php?$2.htm$3 last; } 
          
        
        </description>
    </item>
    
    <item>
      <title>IOS10越狱工具Meridian</title>
      <link>/post/meridian-jailbreak/</link>
      <pubDate>Mon, 22 Jan 2018 10:28:00 +0000</pubDate>
      
      <guid>/post/meridian-jailbreak/</guid>
      <description>
        
          
          
          
        
        
        
          Meridian是一款IOS10.0~10.3.3系列越狱工具支持所有64bit设备。
支持设备清单：
 iPhone 7 &amp;amp; 7+ iPhone 6S &amp;amp; 6S+ iPhone 6 &amp;amp; 6+ iPhone SE iPhone 5S iPad Air 1 and 2 iPad (2017) iPad Mini 2, 3, and 4 iPad Pro 1 and 2 (12.9&amp;rdquo; and 10.5&amp;rdquo;) iPod Touch 6th Gen  安装说明：
点击网站“下载”按钮下载IPA；
使用Cydia Impactor将IPA安装到您的设备上；
在设置-&amp;gt;常规-&amp;gt;配置文件和设备管理中信任证书；
打开应用程序，然后单击开始按钮。
国内网盘下载
 Meridian public beta5 Cydia Impactor for Windows  相关网站
 Meridian官网 https://meridian.sparkes.zone/ Cydia Impactor官网 http://www.cydiaimpactor.com/  
          
        
        </description>
    </item>
    
    <item>
      <title>将静态站点部署到Coding.net</title>
      <link>/post/deploy-the-static-site-to-the-coding-net/</link>
      <pubDate>Sat, 25 Nov 2017 11:25:00 +0000</pubDate>
      
      <guid>/post/deploy-the-static-site-to-the-coding-net/</guid>
      <description>
        
          
          
          
        
        
        
          本站是基于https://github.com/wendal/gor生成的静态站点。
下面介绍如何将静态站点部署到coding.net上。
注册coding并新建项目 首先注册coding.net，注册完后新建项目。
项目名称为*.coding.me，以此格式新建的项目可以使用Coding Pages服务。
Pages服务设置 建立完成后，在项目设置中找到Pages服务服务进行设置。
 部署来源  选择master分支
 自定义域名  添加自定义域名，建议同时添加domain.com和www.domain.com，并且设置一个为首选项，另一个跳转到首选项。然后将自己的域名CNAME指向pages.coding.me
 强制HTTPS访问  打开该选项，则为你的域名自动申请设置** Let&amp;rsquo;s Encrypt**证书，并开启**https**访问。
 Hosted by Coding Pages  新站点都会有coding pages跳转页，按照Hosted by Coding Pages说明，在首页添加规定连接后，可以提交申请不显示跳转页。
使用Git部署站点 首先推荐配置SSH公钥以便于操作。
$ ssh-keygen -t rsa -C &amp;quot;name@domain.com&amp;quot; //在此设置为coding.net帐号邮箱 Generating public/private rsa key pair. Enter file in which to save the key (/c/Users/dotbbq/.ssh/id_rsa): Created directory &#39;/c/Users/dotbbq/.ssh&#39;. Enter passphrase (empty for no passphrase): Enter same passphrase again: Your identification has been saved in /c/Users/dotbbq/.
          
        
        </description>
    </item>
    
    <item>
      <title>RB750gr3快速设置</title>
      <link>/post/mikrotik-rb750gr3-quickset/</link>
      <pubDate>Wed, 22 Nov 2017 11:22:00 +0000</pubDate>
      
      <guid>/post/mikrotik-rb750gr3-quickset/</guid>
      <description>
        
          
          
          
        
        
        
          开箱照 以下为开箱照
RB750快速设置 首先下载Winbox，下载地址，将1口连接光猫，2口连接电脑。
下载打开后，软件会自动搜索到路由器MAC，登录名为admin，密码为空，点击connect登录。
登录后点击Quick Set进行快速设置，完成后应用即可。如下图：
注意以上我把路由器地址设置为192.168.1.11是为了和光猫192.168.1.1区分开。
          
        
        </description>
    </item>
    
    <item>
      <title>梅林固件安装Shadowsocks</title>
      <link>/post/merlin-install-shadowsocks/</link>
      <pubDate>Sun, 19 Nov 2017 11:19:00 +0000</pubDate>
      
      <guid>/post/merlin-install-shadowsocks/</guid>
      <description>
        
          
          
          
        
        
        
          登录路由器后台，系统管理&amp;gt;系统设置，将Enable SSH设置为LAN only。
通过SSH登录路由器，参考以下执行，在此推荐Putty。
#cd /tmp #wget https://github.com/hq450/fancyss_history_package/raw/master/fancyss_arm/shadowsocks_4.1.1.tar.gz #tar -zxvf shadowsocks_4.1.1.tar.gz #cd shadowsocks #chmod +x install.sh #./install.sh 2017年11月19日 14:40:36: 固件平台【koolshare merlinarmv7l】符合安装要求，开始安装插件！ 2017年11月19日 14:40:36: 清理旧文件 2017年11月19日 14:40:36: 开始复制文件！ 2017年11月19日 14:40:36: 复制相关二进制文件！ 2017年11月19日 14:40:42: 创建一些二进制文件的软链接！ 2017年11月19日 14:40:42: 复制ss的脚本文件！ 2017年11月19日 14:40:44: 复制网页文件！ 2017年11月19日 14:40:44: 移除安装包！ 2017年11月19日 14:40:44: 为新安装文件赋予执行权限... 2017年11月19日 14:40:44: 设置一些默认值 2017年11月19日 14:40:47: 一点点清理工作... 2017年11月19日 14:40:47: 插件安装成功，你为什么这么屌？！ 2017年11月19日 14:40:47: 更新完毕，请等待网页自动刷新！  完成后重启路由器，在软件中心中即可看到影梭已经安装成功！
          
        
        </description>
    </item>
    
    <item>
      <title>按需安装Office2016组件</title>
      <link>/post/install-office2016-components-on-demand/</link>
      <pubDate>Fri, 20 Oct 2017 11:21:00 +0000</pubDate>
      
      <guid>/post/install-office2016-components-on-demand/</guid>
      <description>
        
          
          
          
        
        
        
          所需软件  Office 2016 下载地址 ed2k://|file|cn_office_professional_plus_2016_x86_x64_dvd_6969182.iso|2588266496|27EEA4FE4BB13CD0ECCDFC24167F9E01|/ office2016install.zip 下载地址 https://pan.baidu.com/s/1jIMOFfK DAEMON Tools Lite 下载地址 https://www.daemon-tools.cc/chn/downloads  步骤 1、下载Office2016和DAEMON Tools Lite，安装DAEMON Tools Lite，将office2016镜像(iso)文件挂载到虚拟光驱。
2、下载office2016install.zip后解压，得到setup.exe和configuration.xml两个文件
打开configuration.xml，文件内容如下
&amp;lt;Configuration&amp;gt; &amp;lt;Add SourcePath=&amp;quot;G:\&amp;quot; OfficeClientEdition=&amp;quot;64&amp;quot; &amp;gt; &amp;lt;Product ID=&amp;quot;ProPlusRetail&amp;quot;&amp;gt; &amp;lt;Language ID=&amp;quot;zh-CN&amp;quot; /&amp;gt; &amp;lt;ExcludeApp ID=&amp;quot;Groove&amp;quot; /&amp;gt; &amp;lt;ExcludeApp ID=&amp;quot;InfoPath&amp;quot; /&amp;gt; &amp;lt;ExcludeApp ID=&amp;quot;Lync&amp;quot; /&amp;gt; &amp;lt;ExcludeApp ID=&amp;quot;OneNote&amp;quot; /&amp;gt; &amp;lt;ExcludeApp ID=&amp;quot;Outlook&amp;quot; /&amp;gt; &amp;lt;ExcludeApp ID=&amp;quot;Publisher&amp;quot; /&amp;gt; &amp;lt;ExcludeApp ID=&amp;quot;SharePointDesigner&amp;quot; /&amp;gt; &amp;lt;/Product&amp;gt; &amp;lt;/Add&amp;gt; &amp;lt;/Configuration&amp;gt;   SourcePath 是安装源目录，此处为虚拟光驱G盘 OfficeClientEdition 为构架版本，此处为64位，也可以设置为32位 Language 为安装语言，此处为中文简体 ExcludeApp 表示不需要安装的组件，此处去掉了Groove、InfoPath、Lync、OneNote、Outlook、Publisher、SharePointDesigner，剩下的为Word、Excel、powerpoint和access进行安装。  在当前目录下以管理员身份CMD，运行下面命令开始安装：
setup.exe /configure configuration.
          
        
        </description>
    </item>
    
    <item>
      <title>Typecho登录时提示AccessDenied</title>
      <link>/post/typecho-login-access-denied/</link>
      <pubDate>Tue, 03 Oct 2017 10:03:00 +0000</pubDate>
      
      <guid>/post/typecho-login-access-denied/</guid>
      <description>
        
          
          
          
        
        
        
          Typecho安装完成后，登录后提示Access Denied，解决方法如下：
找到php.ini文件，我的在/usr/local/php/etc/php.ini
将cgi.fix_pathinfo的值改为1即可
重启php
service php-fpm restart  完了！
          
        
        </description>
    </item>
    
    <item>
      <title>Linux下修复分辨率显示异常</title>
      <link>/post/linux-fix-resolution-display-exception/</link>
      <pubDate>Sat, 26 Aug 2017 18:26:00 +0000</pubDate>
      
      <guid>/post/linux-fix-resolution-display-exception/</guid>
      <description>
        
          
          
          
        
        
        
          家里放了台老旧的台式机，显卡是GTX 660Ti，windows下必须安装特定的驱动版本才能显示最佳分辨率(1680x1050)，如果更新到最新的Nvidia驱动，反而显示器无法正常显示(1024x768)。
没想到，这种情况在Linux下依然存在，不论是安装Debian还是Linux Mint或者Ubuntu，默认都是1024x768。
网上找到了修复分辨率异常的方法，整理如下。
检查当前显卡硬件情况 $ lspci |grep VGA 01:00.0 VGA compatible controller: NVIDIA Corporation GK104 [GeForce GTX 660 Ti] (rev a2)  可以看到，显卡硬件识别正常。
检查显卡分辨率情况 $ xrandr Screen 0: minimum 320 x 200, current 1024 x 768, maximum 8192 x 8192 VGA-1 disconnected (normal left inverted right x axis y axis) DVI-I-1 connected primary 1024x768+0+0 (normal left inverted right x axis y axis) 0mm x 0mm 1024x768 60.00* 800x600 60.
          
        
        </description>
    </item>
    
    <item>
      <title>一加3T开启黑白屏模式</title>
      <link>/post/oneplus3t-switch-on-black-and-white-screen-mode/</link>
      <pubDate>Mon, 21 Aug 2017 18:21:00 +0000</pubDate>
      
      <guid>/post/oneplus3t-switch-on-black-and-white-screen-mode/</guid>
      <description>
        
          
          
          
        
        
        
          一加5发布后，唯一让我眼红的就是那块屏幕，还有类似于水墨屏的阅读体验。
其实一加3T中也可以使用黑白屏模式，在开发者模式中可以找到设置。
设置-&amp;gt;开发者选项-&amp;gt;模拟颜色空间-&amp;gt;全色盲。
          
        
        </description>
    </item>
    
    <item>
      <title>sitemap-generators使用实例</title>
      <link>/post/sitemap-generators-usage/</link>
      <pubDate>Sun, 13 Aug 2017 23:23:00 +0000</pubDate>
      
      <guid>/post/sitemap-generators-usage/</guid>
      <description>
        
          
          
          
        
        
        
          sitemap-generators是一款Sitemap生成工具，使用它可以生成符合sitemap.org规范的Sitemap文件，以便于提交给各个网站工具平台。
项目地址 &amp;amp;&amp;amp; 下载地址
下载sitemap_gen_1.5.tar.gz解压，得到以下内容：
root@bwgzl:~/sitemap_gen# ls -lh total 140K -r--r----- 1 502 502 22 Jun 17 2005 AUTHORS -r--r--r-- 1 502 502 2.6K Jul 19 2007 ChangeLog -r--r----- 1 502 502 1.8K Jun 17 2005 COPYING -rw-r--r-- 1 502 502 6.4K Jul 19 2007 example_config.xml -rw-r----- 1 502 502 1.6K Jun 26 2007 example_urllist.txt drwxr-xr-x 23 root root 4.0K Aug 3 14:25 getos.org -rw-r--r-- 1 502 502 244 Jul 19 2007 PKG-INFO -r--r--r-- 1 502 502 1.
          
        
        </description>
    </item>
    
    <item>
      <title>Dropbox脚本工具DropboxUploader</title>
      <link>/post/powerful-dropbox-scripting-tool-dropbox-uploader/</link>
      <pubDate>Fri, 28 Jul 2017 17:28:00 +0000</pubDate>
      
      <guid>/post/powerful-dropbox-scripting-tool-dropbox-uploader/</guid>
      <description>
        
          
          
          
        
        
        
          Dropbox Uploader是一款专为Dropbox开发的BASH脚本，可以实现上传、下载、删除、列出文件清单、在线分享、同步和备份等功能。
它使用BASH脚本语言写成，只需要cURL即可使用。
项目主页 GiHub project page.
为什么使用此脚本?
 绿色轻便:使用BASH脚本语言写成，仅仅需要cURL一个软件(curl是一个数据传输工具，大部分linux发行版均会内置该软件)。 安全: 不需要提供帐号密码，该脚本使用官方API进行验证。  更多的扩展信息和使用技巧请参考官方wiki，该wiki同时提供Dropbox Uploader相关的使用实例和脚本。
特性  跨平台 支持官方Dropbox API v2 无需密码 简单的配置提示 分块文件上传 递归文档下载 递归文档上传 Shell通配符扩展 (仅上传) 删除/移动/重命名/拷贝/列出/分享文件 创建分享连接 监视变化  安装配置DropboxUploader 使用git拷贝官方仓库：
git clone https://github.com/andreafabrizi/Dropbox-Uploader.git 或者直接下载脚本：
curl &amp;#34;https://raw.githubusercontent.com/andreafabrizi/Dropbox-Uploader/master/dropbox_uploader.sh&amp;#34; -o dropbox_uploader.sh 给脚本添加执行权限并运行：
$chmod +x dropbox_uploader.sh $./dropbox_uploader.sh 第一次运行dropbox_uploader时，会有鉴权提示，按照提示在https://www.dropbox.com/developers/apps新建api app，然后在app管理页找到Generated access token创建access token，将access token粘贴到DropboxUploader提示行按回车键，随后会提示成功接入Dropbox。配置文件保存在~/.dropbox_uploader。
使用DropboxUploader DropboxUploader语法非常简单:
./dropbox_uploader.sh [PARAMETERS] COMMAND... [%%]: 可选参数 &amp;lt;%%&amp;gt;: 必须参数 可使用命令:
  upload &amp;lt;LOCAL_FILE/DIR &amp;hellip;&amp;gt; &amp;lt;REMOTE_FILE/DIR&amp;gt;
上传本地文件或目录到Dropbox。
          
        
        </description>
    </item>
    
    <item>
      <title>Linux下批量转换PNG和JPG</title>
      <link>/post/batch-conversion-png-and-jpg-under-linux/</link>
      <pubDate>Mon, 17 Jul 2017 07:17:00 +0000</pubDate>
      
      <guid>/post/batch-conversion-png-and-jpg-under-linux/</guid>
      <description>
        
          
          
          
        
        
        
          我们用到的软件名为imagemagick，一款强大的图片处理软件。
Debian系使用apt-get install imagemagick来安装，Fedora系通过yum install imagemagick来安装。
其他系统可以到官方下载页进行下载安装 https://www.imagemagick.org/script/download.php
安装完成后，可以通过convert tst.jpg tsg.png将JPG文件转换为PNG，反之亦可。
下来进行批量替换：
root@bwgzl:/data/wwwroot/getos.org/images# ll total 188 drwxr-xr-x 2 www www 4096 Aug 4 15:48 ./ drwxr-xr-x 27 www www 4096 Aug 4 15:32 ../ -rw-r--r-- 1 www www 18778 Aug 4 15:43 clip_image002.jpg -rw-r--r-- 1 www www 17637 Aug 4 15:43 clip_image004.jpg -rw-r--r-- 1 www www 28075 Aug 4 15:43 clip_image006.jpg -rw-r--r-- 1 www www 30916 Aug 4 15:43 clip_image008.jpg -rw-r--r-- 1 www www 13538 Aug 4 15:43 clip_image010.
          
        
        </description>
    </item>
    
    <item>
      <title>p7zip使用实例</title>
      <link>/post/p7zip-usage/</link>
      <pubDate>Fri, 16 Jun 2017 23:12:00 +0000</pubDate>
      
      <guid>/post/p7zip-usage/</guid>
      <description>
        
          
          
          
        
        
        
          以下是CentOS7中7za的使用实例,CentOS下安装p7zip可以参考此文
[root@localhost ~]# 7za 7-Zip (a) [64] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21 p7zip Version 16.02 (locale=en_US.UTF-8,Utf16=on,HugeFiles=on,64 bits,1 CPU x64) Usage: 7za &amp;lt;command&amp;gt; [&amp;lt;switches&amp;gt;...] &amp;lt;archive_name&amp;gt; [&amp;lt;file_names&amp;gt;...] [&amp;lt;@listfiles...&amp;gt;] &amp;lt;Commands&amp;gt; a : Add files to archive b : Benchmark d : Delete files from archive e : Extract files from archive (without using directory names) h : Calculate hash values for files i : Show information about supported formats l : List contents of archive rn : Rename files in archive t : Test integrity of archive u : Update files to archive x : eXtract files with full paths &amp;lt;Switches&amp;gt; -- : Stop switches parsing -ai[r[-|0]]{@listfile|!
          
        
        </description>
    </item>
    
    <item>
      <title>一加3/3T工具包</title>
      <link>/post/oneplus3-3t-unified-toolkit/</link>
      <pubDate>Thu, 15 Jun 2017 16:15:00 +0000</pubDate>
      
      <guid>/post/oneplus3-3t-unified-toolkit/</guid>
      <description>
        
          
          
          
        
        
        
          工具菜单如下：
 Title OnePlus 3/3T Unified ToolKit v5.0U by @ahmed_radaideh ====================== = Menu = ====================== Enter a Number to select a Task. 1) Install USB Drivers On PC 2) Unlock - ReLock Bootloader 3) Check Device Status 4) Check Bootloader Status 5) Flash - Boot TWRP Recovery 6) Flash - Boot Stock Recovery 7) Push Systemless Root 8) Push Debloater Script 9) Wipe Cache Your Device 10) Force Decryption Device [WIPE] 11) Get Logs your Device 12) Restart Menu 13) Check for new Version 14) XDA Thread 15) Donate!
          
        
        </description>
    </item>
    
    <item>
      <title>修复东芝U盘写保护</title>
      <link>/post/fix-toshiba-u-disk-write-protection/</link>
      <pubDate>Sat, 10 Jun 2017 16:10:00 +0000</pubDate>
      
      <guid>/post/fix-toshiba-u-disk-write-protection/</guid>
      <description>
        
          
          
          
        
        
        
          一直以来都是使用U盘安装Linux，光盘镜像通过dd写入U盘。最近需要安装elementary，下载镜像后发现系统推荐使用Rufus来写入U盘，这个工具以前没试过所以试了下，确实挺快的。
不过在安装完elementary后，想将U盘重新恢复格式化出问题了，使用DiskGenius无法进行操作，使用系统自带的磁盘管理也没法操作，包括Linux下的GParted也不行，都提示U盘被写保护了，-__-!
万般无奈只能想到量产工具，下面分享使用到的两款软件：
 ChipGenius Restore  ChipGenius是一款U盘信息检测软件，通过它可以来查看U盘主控信息，我的这款U盘芯片信息如下：
设备描述: [G:]USB 大容量存储设备(TOSHIBA TransMemory-Mx)设备类型: 大容量存储设备协议版本: USB 3.00当前速度: 极速(SuperSpeed)电力消耗: 504mAUSB设备ID: VID = 0930 PID = 6545设备序列号: FFFFFFFFFFFFEE20F000BC99设备供应商: TOSHIBA　设备名称: TransMemory-Mx设备修订版: 0110产品制造商: TOSHIBA　产品型号: TransMemory-Mx产品修订版: PMAP　主控厂商: Phison(群联)　主控型号: PS2251-03(PS2303) - F/W 02.08.53 [2014-01-02]闪存识别码: 983AA892 - Toshiba(东芝) TC58NVG7T2JTA00 [TLC-8K]Restore是群联官方提供的一款恢复工具，可以进行低级格式化和修复。
          
        
        </description>
    </item>
    
    <item>
      <title>在Linux中运行Android软件</title>
      <link>/post/anbox-run-android-applications-on-linux/</link>
      <pubDate>Fri, 09 Jun 2017 06:09:00 +0000</pubDate>
      
      <guid>/post/anbox-run-android-applications-on-linux/</guid>
      <description>
        
          
          
          
        
        
        
          想要在PC上运行Android软件就需要模拟器，Windows版的Android模拟器软件很多，但是Linux平台的就不多了，今天推荐一款Linux下的Android模拟器软件Anbox
Anbox官方介绍为Android in a Box,Run Android applications on any GNU/Linux operating system.
Anbox现在还处于测试阶段，很多功能还不完善和稳定，请谨慎使用。
安装Anbox 首先得安装Snaps,官方地址为https://snapcraft.io/
LinuxMint中安装Snaps和必须包
sudo apt install snapd sudo apt install pulseaudio  接下来按照官方指南安装Anbox
snap install --classic anbox-installer &amp;amp;&amp;amp; anbox-installer  我试着通过snap来安装一直存在权限问题，一般权限不能运行snap install --classic anbox-installer，root运行完snap install --classic anbox-installer后，但运行anbox-installer又提示不能使用root权限，一般权限根本无法运行anbox-installer，搞了半天都没有成功，于是就有了下文。
通过常规方法安装Anbox
wget https://raw.githubusercontent.com/anbox/anbox-installer/master/installer.sh -O anbox-installer chmod +x ./anbox-installer ./anbox-installer  安装完成后会有重启系统的提示
 To ensure all changes made to your system you should now reboot your system. If you don&amp;rsquo;t do this no Android applications will show up in the system application launcher.
          
        
        </description>
    </item>
    
    <item>
      <title>CentOS7安装使用p7zip</title>
      <link>/post/centos7-installation-and-use-p7zip/</link>
      <pubDate>Tue, 06 Jun 2017 06:06:00 +0000</pubDate>
      
      <guid>/post/centos7-installation-and-use-p7zip/</guid>
      <description>
        
          
          
          
        
        
        
          在此只推荐从源码安装p7zip，下载地址 http://www.7-zip.org/download.html
源码在这里下载 https://sourceforge.net/projects/p7zip/files/p7zip/
wget https://sourceforge.net/projects/p7zip/files/p7zip/16.02/p7zip_16.02_src_all.tar.bz2 tar jxf p7zip_16.02_src_all.tar.bz2 cd p7zip_16.02 make make install 使用p7zip
[root@localhost ~]# 7za  7-Zip (a) [64] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21 p7zip Version 16.02 (locale=en_US.UTF-8,Utf16=on,HugeFiles=on,64 bits,1 CPU x64) Usage: 7za &amp;lt;command&amp;gt; [&amp;lt;switches&amp;gt;...] &amp;lt;archive_name&amp;gt; [&amp;lt;file_names&amp;gt;...] [&amp;lt;@listfiles...&amp;gt;] &amp;lt;Commands&amp;gt; a : Add files to archive b : Benchmark d : Delete files from archive e : Extract files from archive (without using directory names) h : Calculate hash values for files i : Show information about supported formats l : List contents of archive rn : Rename files in archive t : Test integrity of archive u : Update files to archive x : eXtract files with full paths 压缩文件
          
        
        </description>
    </item>
    
    <item>
      <title>树莓派显示天气信息</title>
      <link>/post/weather-according-to-raspberry-pi/</link>
      <pubDate>Thu, 25 May 2017 15:12:00 +0000</pubDate>
      
      <guid>/post/weather-according-to-raspberry-pi/</guid>
      <description>
        
          
          
          
        
        
        
          在此介绍一个国外网友的树莓派项目RARP，Weather According to Raspberry Pi
顾名思义，Weather According to Raspberry Pi是一个有关天气信息的项目，该项目通过采集Raspberry Pi和Sense HAT的数据，来显示相关的天气信息，比如温度、湿度、压力等
项目地址http://coded2.herokuapp.com/weather/
代码国内下载地址http://cdn.lyq.wiki/res/warp_final.zip
下载后解压，得到main.py和gauge2.html两个文件，其中main.py需要Python3运行，gauge2.html是最终的显示文件
安装相关软件
sudo apt-get install python3 sudo apt-get install python3-pip pip3 install flask  打开Sense HAT仿真器，在程序菜单中，打开后如下图示:
下来，运行下载的python脚本
python3 main.py  正常情况下，会提示一个端口为5000的web服务正在运行
在浏览器中浏览localhost:5000或者127.0.0.1:5000，最终的浏览如下图
三个图表分别显示温度、压力和湿度，这三者的信息均来自Sense HAT 模拟器而不是真正的Sense HAT硬件。
如果需要采集Sense HAT扩展板的数据，需要将Sense HAT附加板和Raspberry Pi相连，具体信息参考官网 https://www.raspberrypi.org/products/sense-hat/
然后修改代码，打开main.py文件，找到如下行
from sense_emu import SenseHat  修改为
from sense_hat import SenseHat  保存后，重新运行python3 main.py，此时采集的数据就来自真实的SenseHAT硬件。
          
        
        </description>
    </item>
    
    <item>
      <title>在Citrix中使用本机输入法</title>
      <link>/post/native-input-method-is-used-in-citrix/</link>
      <pubDate>Tue, 16 May 2017 15:16:00 +0000</pubDate>
      
      <guid>/post/native-input-method-is-used-in-citrix/</guid>
      <description>
        
          
          
          
        
        
        
          进入到Citrix安装目录C:\Program Files (x86)\Citrix\ICA Client
启用本地输入法
wfica32.exe /localime:on  禁用本地输入法
wfica32.exe /localime:off  以上输入完后会有弹窗提示是否成功。
除了通过运行命令行程序来更改，也可以通过修改注册表来实现
HKLM配置位置 HKEY_LOCAL_MACHINE\SOFTWARE\Citrix\ICA Client\Engine\Lockdown Profiles\All Regions\Lockdown\Virtual Channels\Keyboard HKCU配置位置 HKEY_CURRENT_USER\Software\Citrix\ICA Client\Engine\Lockdown Profiles\All Regions\Lockdown\Virtual Channels\Keyboard #设置LocalIME = 1 or 0 #disable=0, enable=1,留空使用其他位置的设置  注意HKLM和HKCU必须同时修改，64位操作系统注册表键值在WOW64节点下
          
        
        </description>
    </item>
    
    <item>
      <title>理解Linux中Shell初始化文件和用户Profiles文件</title>
      <link>/post/understand-linux-shell-initialization-files-and-user-profiles-files/</link>
      <pubDate>Tue, 25 Apr 2017 14:25:00 +0000</pubDate>
      
      <guid>/post/understand-linux-shell-initialization-files-and-user-profiles-files/</guid>
      <description>
        
          
          
          
        
        
        
          Linux是一个多用户、实时共享的操作系统，意味着不止一个用户可以登录同一个系统。系统管理员通过任务管理来分配不同用户的权限，比如安装、升级、卸载应用程序，运行编译程序，文件查看、编辑等等。
Linux允许通过两种主要方式来创建用户环境：系统级(全局)和用户级(个人)。一般情况下，Linux系统都会运行基本shell程序，当用户登录成功后shell会在初始化时根据某些文件开创建环境。
Linux中的Shell初始化 当Shell被调用时，会有一些初始化/启动文件被启用，它们的主要作用是为shell本身或用户设定运行环境，包含一些函数、	变量、别名等等。
Shell可以读取以下两种初始化文件:
 系统级启动文件 – 包含一些应用于户所有用户的全局配置，一般存在于**/etc**目录中，如 **/etc/profiles** 、**/etc/bashrc** 或者 **/etc/bash.bashrc**。 用户级启动文件 – 包含一些应用于单用户的配置文件，一般存放在各个用户目录，这些配置可以覆盖系统级全局配置，如**.profiles**、 **.bash_profile**、 **.bashrc** 和 **.bash_login**.  Shell存在三种调用模式：
1. 交互式登录Shell 当用户成功登录系统后调用该Shell,使用**/bin/login**登录，随后读取**/etc/passwd**文件。
当启动交互式shell后，将读取**/etc/profile**文件以及特定的用户文件**~/.bash_profile**
login as: pi pi@pi.raspi.in&amp;#39;s password: The programs included with the Debian GNU/Linux system are free software; the exact distribution terms for each program are described in the individual files in /usr/share/doc/*/copyright. Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent permitted by applicable law.
          
        
        </description>
    </item>
    
    <item>
      <title>python-pip安装实例</title>
      <link>/post/python-pip-installation/</link>
      <pubDate>Thu, 20 Apr 2017 14:28:00 +0000</pubDate>
      
      <guid>/post/python-pip-installation/</guid>
      <description>
        
          
          
          
        
        
        
          Python-pip 是一个现代的，通用的 Python包管理工具。提供了对 Python 包的查找、下载、安装、卸载的功能。
以下为多个操作系统平台下Python-pip安装方法
通用方法 通过get-pip.py文件来安装，建议Windows用户使用，前提是你必须首先安装Python。
版本要求Python 2 &amp;gt;=2.7.9 或Python 3 &amp;gt;=3.4，可从官网下载http://www.python.org/
然后下载get-pip.py
下载地址 https://bootstrap.pypa.io/get-pip.py
通过python get-pip.py命令来进行安装。
Linux下通过软件管理工具来安装Python-pip Fedora21   Python2
sudo yum upgrade python-setuptools sudo yum install python-pip python-wheel   Python3
sudo yum install python3 python3-wheel   Fedora22   Python2
sudo dnf upgrade python-setuptools sudo dnf install python-pip python-wheel   Python3
sudo dnf install python3 python3-wheel   CentOS/RHEL 首先得启用EPEL repository,可参考此文
  EPEL 6/EPEL 7
          
        
        </description>
    </item>
    
    <item>
      <title>树莓派动态IP更新器</title>
      <link>/post/raspberrypi-dynamic-ip-updater/</link>
      <pubDate>Wed, 19 Apr 2017 21:28:00 +0000</pubDate>
      
      <guid>/post/raspberrypi-dynamic-ip-updater/</guid>
      <description>
        
          
          
          
        
        
        
          这是一个python3的脚本，每隔10分钟监控一次IP地址，如果发生变化则会通过AutoRemote消息通知你。 关于AutoRemote的使用可参考这里
这里推荐使用ipgetter来获取外网IP，地址为https://github.com/phoemur/ipgetter
安装ipgetter
sudo apt-get install python3 pip sudo pip3 install ipgetter 你可以从以下地址获取每个通知设备的AutoRemote所需google key
​	http://autoremotejoaomgcd.appspot.com/?key=[it&amp;rsquo;s the part that is here]
以下为python3脚本:
import ipgetter import urllib.request import requests currentIP = ipgetter.myip() #AutoRemote function to send a notification YOUR_KEY goes here def sendAR(x): AR_key = &amp;#39;YOUR_KEY&amp;#39; AR_url = &amp;#39;http://autoremotejoaomgcd.appspot.com/sendmessage?key=&amp;#39;+ AR_key +&amp;#39;&amp;amp;message=IP%20&amp;#39; message = AR_url + x response = urllib.request.urlopen(message).read() print(x)	#check the internet and check if previous file is present try: requests.
          
        
        </description>
    </item>
    
    <item>
      <title>Linux开启TCP BBR算法</title>
      <link>/post/linux_enable_tcp_bbr/</link>
      <pubDate>Mon, 17 Apr 2017 14:28:00 +0000</pubDate>
      
      <guid>/post/linux_enable_tcp_bbr/</guid>
      <description>
        
          
          
          
        
        
        
          Linux Kernel 4.9+已经支持tcp_bbr拥塞控制算法，因此建议将内核升级为最新版。
将内核升级到最新版 Debian/Ubuntu升级最新内核 最新内核下载地址 http://kernel.ubuntu.com/~kernel-ppa/mainline
下载安装新内核
wget http://kernel.ubuntu.com/~kernel-ppa/mainline/v4.10.10/linux-image-4.10.10-041010-generic_4.10.10-041010.201704120813_amd64.deb` dpkg -i linux-image-4.10.10-041010-generic_4.10.10-041010.201704120813_amd64.deb 更新GRUB并且重启
update-grub reboot Centos 7 升级最新内核 内核下载地址 http://elrepo.org/linux/kernel/el7/x86_64/RPMS/
安装最新内核
rpm --import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org rpm -Uvh http://www.elrepo.org/elrepo-release-7.0-2.el7.elrepo.noarch.rpm yum --enablerepo=elrepo-kernel install kernel-ml -y 检查内核是否安装完成
rpm -qa | grep kernel
更新GRUB并重启主机
egrep ^menuentry /etc/grub2.cfg | cut -f 2 -d \&amp;#39; grub2-set-default 0 #default 0表示第一个内核设置为默认运行, 选择最新内核就对了 reboot http://elrepo.org/linux/kernel/下e15、e16分别对应Centos5、Centos6，可参考以上安装
开启BBR 重启后uname -r 检查内核版本是不是4.9+
然后执行以下操作
echo &amp;#34;net.core.default_qdisc=fq&amp;#34; &amp;gt;&amp;gt; /etc/sysctl.conf echo &amp;#34;net.ipv4.tcp_congestion_control=bbr&amp;#34; &amp;gt;&amp;gt; /etc/sysctl.conf sysctl -p sysctl net.
          
        
        </description>
    </item>
    
    <item>
      <title>使用手机远程控制树莓派GPIO</title>
      <link>/post/use-your-phone-to-remotely-control-raspberrypi/</link>
      <pubDate>Thu, 13 Apr 2017 14:14:00 +0000</pubDate>
      
      <guid>/post/use-your-phone-to-remotely-control-raspberrypi/</guid>
      <description>
        
          
          
          
        
        
        
          必备条件：
 树莓派已联网 安装官方镜像 只支持Raspberry Pi 2/3 Model B 只支持Android手机 安装Java8  安装官方镜像Raspbian 下载地址 https://www.raspberrypi.org/downloads/
安装Java8 sudo apt install oracle-java8-jdk  下载Marsiot到树莓派
wget http://www.marsiot.com/download/marsiot.jar  下载Marsiot到手机，安装
http://www.marsiot.com/download/marsiot.apk
在树莓派上运行Marsiot
pi@raspi:~ $ sudo java -jar marsiot.jar Current version &amp;lt;101&amp;gt; More help: sudo java -jar marsiot.jar help Connect to www.marsiot.com... Connected ok! GPIO init... GPIO init ok! ID-CODE:c1fa PASS-CODE：11c6  记住以上ID-CODE、PASS-CODE
在手机上打开火星互联,事件中心时间轴上会显示所有新加入设备，以ID-CODE区分，找到你对应的设备点击，按照提示输入PASS-CODE即可连接。
连接后可以在我的设备中看到已连接的设备，点击通用视图即可实时监控GPIO端口状态。
          
        
        </description>
    </item>
    
    <item>
      <title>Linux下设置IP、网关、掩码、MAC和DNS</title>
      <link>/post/linux-set-ip-netmask-gateway-mac-dns/</link>
      <pubDate>Mon, 20 Mar 2017 13:20:00 +0000</pubDate>
      
      <guid>/post/linux-set-ip-netmask-gateway-mac-dns/</guid>
      <description>
        
          
          
          
        
        
        
          先用ifconfig来查看所有活动网络接口
eth0 Link encap:Ethernet HWaddr b8:27:eb:1b:63:a8 inet addr:192.168.1.6 Bcast:192.168.1.255 Mask:255.255.255.0 inet6 addr: fe80::6502:67ff:89b:b2fd/64 Scope:Link UP BROADCAST RUNNING MULTICAST MTU:1500 Metric:1 RX packets:43239 errors:0 dropped:24 overruns:0 frame:0 TX packets:30644 errors:0 dropped:0 overruns:0 carrier:0 collisions:0 txqueuelen:1000 RX bytes:25068614 (23.9 MiB) TX bytes:5993030 (5.7 MiB) lo Link encap:Local Loopback inet addr:127.0.0.1 Mask:255.0.0.0 inet6 addr: ::1/128 Scope:Host UP LOOPBACK RUNNING MTU:65536 Metric:1 RX packets:1961 errors:0 dropped:0 overruns:0 frame:0 TX packets:1961 errors:0 dropped:0 overruns:0 carrier:0 collisions:0 txqueuelen:1 RX bytes:160232 (156.
          
        
        </description>
    </item>
    
    <item>
      <title>Windows10开启Linux子系统</title>
      <link>/post/windows10-enabled-linux-subsystem/</link>
      <pubDate>Fri, 10 Mar 2017 11:13:00 +0000</pubDate>
      
      <guid>/post/windows10-enabled-linux-subsystem/</guid>
      <description>
        
          
          
          
        
        
        
          打开功能 设置-系统-应用和功能，右侧下拉到底，点击“相关设置”下的“程序和功能”
在打开的“程序和功能”左侧菜单中，找到“启用或关闭windows功能”，点击打开。
在接下来的“windows功能”菜单中，下拉勾选“适用于linux的windows子系统（beta）”，确认后重启系统。
开启开发人员模式 设置-更新和安全-针对开发人员，在右侧打开“开发人员模式”
安装linux子系统 Win+R输入cmd回车，打开cmd
输入“bash”按照提示安装设置用户名密码即可使用。
然后就可以使用ubuntu提供的linux子系统了。
          
        
        </description>
    </item>
    
    <item>
      <title>Termux软件包管理</title>
      <link>/post/termux-package-management/</link>
      <pubDate>Thu, 09 Mar 2017 13:19:00 +0000</pubDate>
      
      <guid>/post/termux-package-management/</guid>
      <description>
        
          
          
          
        
        
        
          首次安装Termux后，内含一个基础系统，包括apt软件包管理功能，并且集成了一些busybox系统工具。
其余的软件包可使用apt进行安装管理，命令如下：
apt update  更新可用软件包清单。
apt search &amp;lt;query&amp;gt;  按名称搜索可用软件。
apt install &amp;lt;package&amp;gt;  安装软件
apt upgrade  更新所有可更新软件。
apt show &amp;lt;package&amp;gt;  显示软件信息
apt list  列出可用软件清单
apt list --installed  列出所有已安装软件清单
apt remove &amp;lt;package&amp;gt;  卸载已安装软件
Apt是基于dpkg格式的软件管理工具，一般没必要直接使用dpkg来进行操作，不过以下两个例子可以参考：
dpkg -L &amp;lt;package&amp;gt;  列出已安装软件
dpkg --verify  验证已安装软件的完整性
更多信息请检阅apt manual page (通过apt install man来安装)
          
        
        </description>
    </item>
    
    <item>
      <title>修复树莓派PATH变量</title>
      <link>/post/fix-raspberry-path-variable/</link>
      <pubDate>Fri, 03 Mar 2017 13:13:00 +0000</pubDate>
      
      <guid>/post/fix-raspberry-path-variable/</guid>
      <description>
        
          
          
          
        
        
        
          使用lnmp一键工具安装完nmp后，重启进入系统就提示bash command not found
然后试了试service,who等命令也无法使用
只有最基本的系统命令ls,cat等可以用
看来安装lnmp后，我的PATH变量被动了
先临时修改下PATH，便于后面操作
export PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin:$PATH  然后检查~/.profile,/etc/profile是否存在，存在
检查其中的PATH赋值是否异常
经过排查，发现/etc/profile中的PATH赋值异常，修改之重启OK！
在此分享正确的原始~/.profile和/etc/profile文件
~/.profile 内容
# ~/.profile: executed by the command interpreter for login shells. # This file is not read by bash(1), if ~/.bash_profile or ~/.bash_login # exists. # see /usr/share/doc/bash/examples/startup-files for examples. # the files are located in the bash-doc package. # the default umask is set in /etc/profile; for setting the umask # for ssh logins, install and configure the libpam-umask package.
          
        
        </description>
    </item>
    
    <item>
      <title>七牛云qshell工具批量操作</title>
      <link>/post/qiniu-batch-operation/</link>
      <pubDate>Sun, 12 Feb 2017 23:23:00 +0000</pubDate>
      
      <guid>/post/qiniu-batch-operation/</guid>
      <description>
        
          
          
          
        
        
        
          为了方便管理七牛云，官方放出了一个工具-qshell
 qshell是利用七牛文档上公开的API实现的一个方便开发者测试和使用七牛API服务的命令行工具。
 使用qshell可以方便的进行批量操作，包括批量上传、批量下载、批量删除等等……
首先，从https://u18418398.pipipan.com/fs/18418398-314035000下载官方提供的qshell，里面包含多个平台。
 qshell_linux_386	Linux 32位系统 qshell_linux_amd64	Linux 64位系统 qshell_linux_arm	Linux ARM CPU qshell_windows_386.exe	Windows 32位系统 qshell_windows_amd64.exe	Windows 64位系统 qshell_darwin_386	Mac 32位系统，这种系统很老了 qshell_darwin_amd64	Mac 64位系统，主流的系统  解压后，将对应的版本软件放到自定义目录
在此以windows版实例操作
帐号设置 使用qshell前，需要进行帐号验证，可以通过qshell account ak sk格式来进行验证，其中ak和sk对应个人面板-&amp;gt;密匙管理中的AccessKey/SecretKey
qshell account yW!DRel0y8ERbjw%so^?X8 6pfC4OlL$TZtjpNuR4bLxRsD  设置完成后，可以通过qshell account来查看已设置帐号详情
qshell account AccessKey:yW!DRel0y8ERbjw%so^?X8 SecretKey:6pfC4OlL$TZtjpNuR4bLxRsD  设置完帐号后，我们就可以使用qshell对帐号对应的空间进行操作
列出当前帐号下所有空间 qshell buckets cname  cname为空间名
列出空间中所有文件 qshell listbucket cname cname.list.txt  cname为空间名,cname.list.txt为结果输出文件。
批量上传 qshell qupload up.cfg  up.cfg上传操作配置文件，如下：
{ &amp;quot;src_dir&amp;quot; : &amp;quot;D:\\abc&amp;quot;, &amp;quot;bucket&amp;quot; : &amp;quot;cname&amp;quot; }  src_dir为本地文件夹，Wdinwos下必须使用如上格式
          
        
        </description>
    </item>
    
    <item>
      <title>树莓派可用的PCD8544库</title>
      <link>/post/pcd8544-library-for-raspberry-pi/</link>
      <pubDate>Fri, 20 Jan 2017 11:20:00 +0000</pubDate>
      
      <guid>/post/pcd8544-library-for-raspberry-pi/</guid>
      <description>
        
          
          
          
        
        
        
          Nokia 3310/5110显示器基于PCD8544，在此分享一个树莓派可用的PCD8544库
使用该库之前，需要安装wiringPi,安装方法可参考树莓派连接DHT11采集温度与湿度
项目地址：
https://github.com/binerry/RaspberryPi/tree/master/libraries/c/PCD8544  可通过github download直接下载,不能访问github的，用以下连接下载
http://cdn.lyq.wiki/res/Raspberry.Pi_PCD8544.Library.zip  解压后，可得到一个c源码和一个h头文件
PCD8544.c PCD8544.h  以及samples文件夹下的三个示例
pcd8544_rpi.c pcd8544_test.c pcd8544_test2.c  按照下图所示连接好树莓派和显示器
 RST —— 复位 接GPIO 0 CE —— 片选 接GPIO 1 或 不接 DC —— 数据/指令选择 接GPIO 2 DIN —— 串行数据线 接GPIO 3 CLK —— 串行时钟线 接GPIO 5 （因为我的GPIO 4已经接了一个DHT11传感器） VCC —— 电源输入 接3.3v BL —— 背光控制端 接3.3v GND —— 地线 接地  编译三个示例程序
cc -o pcd8544_test pcd8544_test.c ../PCD8544.c -L/usr/local/lib -lwiringPi cc -o pcd8544_test2 pcd8544_test2.
          
        
        </description>
    </item>
    
    <item>
      <title>黑莓9630使用中国电信4G卡</title>
      <link>/post/blackberry-9630-use-ctcc-4g-card/</link>
      <pubDate>Mon, 02 Jan 2017 01:02:00 +0000</pubDate>
      
      <guid>/post/blackberry-9630-use-ctcc-4g-card/</guid>
      <description>
        
          
          
          
        
        
        
          准备工作 Alt + Shift + H进入帮帮我界面
进入后，不要退出，注意以下三个信息
 应用程序版本 7.1.0.649 （1886） PIN 3045e17c 正常运行时间 173秒  注意!注意!注意 一定不要退出以上界面，因为运行时间会变动，如果退出了，重新进入查看运行时间
计算解锁码 使用软件工具或者网页版工具计算，网址在这里 http://www.kealin.net/Escreen/Index.html
按照提示，输入PIN、OS Version、Uptime
底下会出现响应时长的解锁码，有1day到30days
一般我们就用一下下，选择一天解锁码，如果你需要长时间使用，可以选择较长时间的解锁码
解锁码也可以使用软件来获取，可以使用BBctrl、BerryBox，请自行搜索。
进入工程模式(Engineering Screen Contents) 注意，前面的帮帮我没有退出，在该界面下输入你所获得的解锁码
如果退出了，重新进入查看运行时间，按照新的时间重新获取解锁码
输入正确后，即可进入工程模式(engineering screen contents)
设置 在工程模式下按以下顺序来操作
Radio Engineering Screens(MULTI) -&amp;gt; 3GPP Radio Engineering Screens -&amp;gt; GCF -&amp;gt; SIM Electrical Test Mode On
点击最后一个菜单后手机自动重启，然后启动完即可使用4G手机卡。
          
        
        </description>
    </item>
    
    <item>
      <title>Debian下安装Zbook14无线网卡驱动</title>
      <link>/post/zbook14-install-wireless-driver-under-debian/</link>
      <pubDate>Wed, 17 Aug 2016 08:17:00 +0000</pubDate>
      
      <guid>/post/zbook14-install-wireless-driver-under-debian/</guid>
      <description>
        
          
          
          
        
        
        
          首先查看无线网卡型号
alair@zb14:~$ lspci|grep less 02:00.0 Network controller: Intel Corporation Wireless 7260 (rev 73)  搜索Inter相关固件 ​ alair@zb14:~$ apt-cache search iwlwifi firmware-iwlwifi - Binary firmware for Intel Wireless cards
安装之 ​ alair@zb14:~$ apt-get install firmware-iwlwifi
重启完事儿！
          
        
        </description>
    </item>
    
    <item>
      <title>HSTS域名更换实例</title>
      <link>/post/hsts-domain-name-replacement-examples/</link>
      <pubDate>Fri, 01 Jul 2016 17:21:00 +0000</pubDate>
      
      <guid>/post/hsts-domain-name-replacement-examples/</guid>
      <description>
        
          
          
          
        
        
        
          新入手了its0k.com，原来的alair.cn还继续使用
在这里需要将alair.cn重定向到its0k.com
第一次只是将nginx配置文件中的alair.cn全部替换为its0k.com，通过its0k.com浏览新站完全没问题
但是试着从alair.cn跳转浏览新站，浏览器出现了证书安全告警，告警具体原因为证书未包含alair.cn域名，我才想起来旧域名alair.cn已经添加进了HSTS列表，因此不能简单的只为新域名签名，而是需要证书签名时包含新旧两个域名。
重新签名了证书，包含以下四个域名
its0k.com www.its0k.com alair.cn www.alair.cn  以下为更改完成后的nginx配置文件，请注意名相关的部分
server { listen 443 ssl http2; ssl_certificate /root/ssls/its0k.crt; ssl_certificate_key /root/ssls/its0k.key; ssl_session_timeout 60m; ssl_protocols TLSv1 TLSv1.1 TLSv1.2; ssl_ciphers ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-RC4-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:RC4-SHA:!aNULL:!eNULL:!EXPORT:!DES:!3DES:!MD5:!DSS:!PKS; ssl_prefer_server_ciphers on; ssl_session_cache builtin:1000 shared:SSL:10m; ssl_dhparam /etc/ssl/certs/dhparam.pem; add_header Strict-Transport-Security &amp;quot;max-age=63072000; includeSubdomains; preload&amp;quot;; add_header X-Frame-Options &amp;quot;DENY&amp;quot;; ssl_stapling on; ssl_stapling_verify on; resolver 8.8.8.8 8.8.4.4 valid=300s; resolver_timeout 5s; server_name its0k.com www.its0k.com alair.cn www.alair.cn; access_log off; index index.html index.htm; include /usr/local/nginx/conf/rewrite/ps.conf; root /data/wwwroot/its0k.com/compiled; error_page 403 404 500 503 505 = https://its0k.
          
        
        </description>
    </item>
    
    <item>
      <title>ubuntu修改grub引导菜单</title>
      <link>/post/ubuntu-modify-the-grub-boot-menu/</link>
      <pubDate>Mon, 27 Jun 2016 17:42:00 +0000</pubDate>
      
      <guid>/post/ubuntu-modify-the-grub-boot-menu/</guid>
      <description>
        
          
          
          
        
        
        
          先运行update-grub命令生成一次grub配置，顺便查看一下识别出来的引导菜单内容
root@alairpc:~# update-grub Generating grub configuration file ... Found linux image: /boot/vmlinuz-4.4.0-21-generic Found initrd image: /boot/initrd.img-4.4.0-21-generic Found memtest86+ image: /boot/memtest86+.elf Found memtest86+ image: /boot/memtest86+.bin Found Windows 7 (loader) on /dev/sda1 done root@alairpc:~#  注意看，以上共有5个菜单项，最后一个是windows7
接下来我们来看看gurb配置文件/etc/default/grub
root@alairpc:~# cat /etc/default/grub # If you change this file, run &#39;update-grub&#39; afterwards to update # /boot/grub/grub.cfg. # For full documentation of the options in this file, see: # info -f grub -n &#39;Simple configuration&#39; GRUB_DEFAULT=4 #GRUB_HIDDEN_TIMEOUT=0 GRUB_HIDDEN_TIMEOUT_QUIET=true GRUB_TIMEOUT=3 GRUB_DISTRIBUTOR=`lsb_release -i -s 2&amp;gt; /dev/null || echo Debian` GRUB_CMDLINE_LINUX_DEFAULT=&amp;quot;quiet splash&amp;quot; GRUB_CMDLINE_LINUX=&amp;quot;locale=zh_CN&amp;quot; # Uncomment to enable BadRAM filtering, modify to suit your needs # This works with Linux (no patch required) and with any kernel that obtains # the memory map information from GRUB (GNU Mach, kernel of FreeBSD .
          
        
        </description>
    </item>
    
    <item>
      <title>Let&#39;s encrypt 证书快速生成脚本</title>
      <link>/post/letsencrypt-certificate-quickly-generate-script/</link>
      <pubDate>Mon, 09 May 2016 15:28:00 +0000</pubDate>
      
      <guid>/post/letsencrypt-certificate-quickly-generate-script/</guid>
      <description>
        
          
          
          
        
        
        
          网站的Let&amp;rsquo;s encrypt证书快到期了，看了官方的续期方法比较繁琐，于是在网上找了找简单方便做法，结果找到了墓地小企鹅写的一个脚本(shell script)，使用这个脚本可以方便的生成以及更新Let&amp;rsquo;s encrypt 证书。
脚本地址 https://github.com/xdtianyu/scripts/tree/master/lets-encrypt
下载脚本
wget https://raw.githubusercontent.com/xdtianyu/scripts/master/lets-encrypt/letsencrypt.conf wget https://raw.githubusercontent.com/xdtianyu/scripts/master/lets-encrypt/letsencrypt.sh  配置
root@rnse:~/lesh# cat letsencrypt.conf # only modify the values, key files will be generated automaticly. ACCOUNT_KEY=&amp;quot;letsencrypt-account.key&amp;quot; DOMAIN_KEY=&amp;quot;alair.key&amp;quot; DOMAIN_DIR=&amp;quot;/data/wwwroot/alair.cn/compiled&amp;quot; DOMAINS=&amp;quot;DNS:alair.cn,DNS:www.alair.cn&amp;quot; #ECC=TRUE #LIGHTTPD=TRUE  按照需要自定义DOMAIN_KEY、DOMAIN_DIR、DOMAINS三部分。
生成证书
root@rnse:~/lesh#chmod +x letsencrypt.sh root@rnse:~/lesh# ./letsencrypt.sh letsencrypt.conf Generate account key... Generating RSA private key, 4096 bit long modulus ..............................++ ....++ e is 65537 (0x10001) Generate domain key... Generating RSA private key, 2048 bit long modulus .
          
        
        </description>
    </item>
    
    <item>
      <title>使用Syncthing在多个设备之间同步文件</title>
      <link>/post/use-syncthing-synchronize-files-between-multiple-devices/</link>
      <pubDate>Fri, 06 May 2016 15:16:00 +0000</pubDate>
      
      <guid>/post/use-syncthing-synchronize-files-between-multiple-devices/</guid>
      <description>
        
          
          
          
        
        
        
          Syncthing是一款开源的多平台同步软件，使用他可以在多个设备间进行文件同步，并且带有版本控制功能。
Syncthing官网地址 **https://syncthing.net/**Github地址 https://github.com/syncthing/syncthing
安装Syncthing Syncthing官网提供多平台安装包，下载地址为 https://github.com/syncthing/syncthing/releases/
并且针对Debian/Ubuntu平台，官方提供了apt-get安装方法
# Add the release PGP keys: curl -s https://syncthing.net/release-key.txt | sudo apt-key add - # Add the &amp;quot;release&amp;quot; channel to your APT sources: echo &amp;quot;deb http://apt.syncthing.net/ syncthing release&amp;quot; | sudo tee /etc/apt/sources.list.d/syncthing.list # Update and install syncthing: sudo apt-get update sudo apt-get install syncthing  运行Syncthing Linux下直接使用syncthing命令运行
syncthing &amp;amp;  Windows下直接打开下载的syncthing.exe文件，而后浏览器自动打开http://127.0.0.1:8384进行设置管理。
管理Syncthing 如果是在VPS上安装Syncthing ,运行syncthing后，只能通过http://127.0.0.1:8384进行管理，我们可以通过以下方法在本地管理。
ssl -L 9891:localhost:8384 root@ip  输入root密码登录成功后，即可本地浏览http://127.0.0.1:9891对VPS上的Synchting进行管理。
添加设备 每个设备均有一个设备标识，可以通过操作-&amp;gt;显示设备标识来查看。
          
        
        </description>
    </item>
    
    <item>
      <title>使用OptiPNG优化压缩图片</title>
      <link>/post/optimize-and-compress-image-by-optipng/</link>
      <pubDate>Sun, 03 Apr 2016 12:34:00 +0000</pubDate>
      
      <guid>/post/optimize-and-compress-image-by-optipng/</guid>
      <description>
        
          
          
          
        
        
        
          因工作需要，得处理一张7872x5904体积为178MB的图片，格式为TIFF。
网上搜了半天，找到一个名为OptiPNG的软件，主要为PNG优化，但也支持TIFF格式。
下面是OptiPNG的官方介绍
 OptiPNG is a PNG optimizer that recompresses image files to a smaller size, without losing any information. This program also converts external formats (BMP, GIF, PNM and TIFF) to optimized PNG, and performs PNG integrity checks and corrections.
 OptiPNG可以将PNG文件重新压缩，压缩后体积变得更小，并且不会丢失任何信息。同时optipng还支持其他格式的图片，如BMP、GIF、PNM和TIFF。
至于OptiPNG的威力如何，请看本次实例
root@raspi:~# ls -lh huxian.tif -rw-r--r-- 1 root root 178M Apr 4 16:54 huxian.tif //原始文件178MB root@raspi:~# optipng huxian.tif ** Processing: huxian.tif Importing TIFF 7872x5904 pixels, 4x8 bits/pixel, RGB+alpha //分辨率7872x5904 Reducing image to 3x8 bits/pixel, RGB Input file size = 186000368 bytes Trying: zc = 9 zm = 8 zs = 0 f = 0 IDAT size = 4273133 Selecting parameters: zc = 9 zm = 8 zs = 0 f = 0 IDAT size = 4273133 Output file: huxian.
          
        
        </description>
    </item>
    
    <item>
      <title>LFTP使用实例</title>
      <link>/post/lftp-use-case/</link>
      <pubDate>Fri, 01 Apr 2016 14:21:00 +0000</pubDate>
      
      <guid>/post/lftp-use-case/</guid>
      <description>
        
          
          
          
        
        
        
          LFTP介绍 lftp是一个功能强大的ftp/http客户端，作者是 Alexander Lukyanov。
lftp支持多种传输协议，如ftp、http、https、sftp、exp等。
如同BASH一样，lftp支持任务管理。并且具备书签管理、内置镜像和多线程传送功能。
使用LFTP 登录服务器 lftp ftp://user:password@ip:port  以上是一个完整的lftp登录示例，其中包含协议(ftp)、用户名(user)、密码(password)、主机(ip)以及端口(port)
默认情况下lftp直接访问ftp服务，默认登录端口为22，因此我们可以使用以下方法来便捷登录主机
lftp user@ip  然后系统会提示输入password，完成后登录成功！
lftp命令行参数 lftp :~&amp;gt; help !&amp;lt;shell-command&amp;gt; (commands) alias [&amp;lt;name&amp;gt; [&amp;lt;value&amp;gt;]] attach [PID] bookmark [SUBCMD] cache [SUBCMD] cat [-b] &amp;lt;files&amp;gt; cd &amp;lt;rdir&amp;gt; chmod [OPTS] mode file... close [-a] [re]cls [opts] [path/][pattern] debug [&amp;lt;level&amp;gt;|off] [-o &amp;lt;file&amp;gt;] du [options] &amp;lt;dirs&amp;gt; exit [&amp;lt;code&amp;gt;|bg] get [OPTS] &amp;lt;rfile&amp;gt; [-o &amp;lt;lfile&amp;gt;] glob [OPTS] &amp;lt;cmd&amp;gt; &amp;lt;args&amp;gt; help [&amp;lt;cmd&amp;gt;] history -w file|-r file|-c|-l [cnt] jobs [-v] [&amp;lt;job_no.
          
        
        </description>
    </item>
    
    <item>
      <title>Linux下查看修改PATH</title>
      <link>/post/linux-check-and-set-the-path/</link>
      <pubDate>Tue, 29 Mar 2016 13:29:00 +0000</pubDate>
      
      <guid>/post/linux-check-and-set-the-path/</guid>
      <description>
        
          
          
          
        
        
        
          什么是PATH? 要搞清什么是PATH，应该先搞清什么是环境变量？
在计算机中，如果需要运行一个软件，那么我们就要找到它所在的位置，但是每次运行程序时如果都要进入到相应目录，那么显然是很繁琐的。于是就有了环境变量，环境变量就是一个系统参数，里面记录了一些目录，运行软件的时候，相关的程序将会按照该目录寻找相关文件。
而在Linux中，系统会有一个默认的PATH环境变量，里面记录了系统级的相关命令目录，比如当我们输入ls、cd、pwd等命令时，我们不需要指定它们所在的目录，因为包含这些命令的系统目录已经写入PATH参数，因而方便我们调用。
查看PATH 在linux中，可以使用export命令来查看所有环境变量，如下：
pi@raspi:~$ export declare -x HOME=&amp;quot;/home/pi&amp;quot; declare -x LANG=&amp;quot;en_GB.UTF-8&amp;quot; declare -x LOGNAME=&amp;quot;pi&amp;quot; declare -x MAIL=&amp;quot;/var/mail/pi&amp;quot; declare -x OLDPWD declare -x PATH=&amp;quot;/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin:/home/pi/bin&amp;quot; declare -x PWD=&amp;quot;/home/pi&amp;quot; declare -x SHELL=&amp;quot;/bin/bash&amp;quot; declare -x SHLVL=&amp;quot;1&amp;quot; declare -x SSH_CLIENT=&amp;quot;101.135.216.146 28249 22&amp;quot; declare -x SSH_CONNECTION=&amp;quot;101.135.216.146 28249 192.168.1.111 22&amp;quot; declare -x SSH_TTY=&amp;quot;/dev/pts/1&amp;quot; declare -x TERM=&amp;quot;xterm&amp;quot; declare -x USER=&amp;quot;pi&amp;quot;  使用echo来查看单独的环境变量
pi@raspi:~$ echo $PATH /bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin:/home/pi/bin  我们可以看到，以上PATH值包含了一些系统命令的目录，而这些目录都用:隔开。
修改PATH 我们可以使用export命令来添加目录，如下：
export PATH=/mydoc:$PATH  以上命令在原有的PATH前添加了/mydoc这个目录，设置完成后的PATH值如下：
pi@raspi:~$ echo $PATH /mydoc:/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin:/home/pi/bin  以上方法修改PATH值，在终端退出后就会失效，因此建议通过修改/etc/profile来设定PATH
          
        
        </description>
    </item>
    
    <item>
      <title>Ubunt下安装H2O</title>
      <link>/post/install-h2o-on-ubuntu/</link>
      <pubDate>Sat, 26 Mar 2016 13:26:00 +0000</pubDate>
      
      <guid>/post/install-h2o-on-ubuntu/</guid>
      <description>
        
          
          
          
        
        
        
          更新系统 apt-get update &amp;amp;&amp;amp; apt-get upgrade -y &amp;amp;&amp;amp; apt-get dist-upgrade -y &amp;amp;&amp;amp; apt-get autoremove --purge -y &amp;amp;&amp;amp; apt-get autoclean -y  安装必备软件 apt-get install locate git cmake build-essential checkinstall autoconf pkg-config libtool python-sphinx wget libcunit1-dev nettle-dev libyaml-dev libuv-dev -y  安装wslay git clone https://github.com/tatsuhiro-t/wslay.git cd wslay/ autoreconf -i automake autoconf ./configure make make install  安装完成后检查lib文件，如下所示：
ls /usr/local/lib/ libuv.a libuv.so.1 libwslay.la libwslay.so.0.0.1 python3.4 libuv.la libuv.so.1.0.0 libwslay.so pkgconfig libuv.so libwslay.a libwslay.so.0 python2.
          
        
        </description>
    </item>
    
    <item>
      <title>小米4C解锁和刷入TWRP Recovery</title>
      <link>/post/mi4c-unlock-and-twrp-recovery/</link>
      <pubDate>Sun, 20 Mar 2016 13:20:00 +0000</pubDate>
      
      <guid>/post/mi4c-unlock-and-twrp-recovery/</guid>
      <description>
        
          
          
          
        
        
        
          时隔三年再次入手小米手机，没想到如今的MIUI已经今非昔比，首先是bootloader锁住了，官方理由是安全，但是作为一个android发烧友，锁bootloader后就无法安装第三方recovery，进而无法体验众多第三方系统了。以下介绍如何解锁小米4C以及刷入第三方TWRP Recovery。 permalink: &amp;lsquo;logs/Mi4C-Unlock-and-TWRP-Recovery.html&amp;rsquo; 时隔三年再次入手小米手机，没想到如今的MIUI已经今非昔比，首先是bootloader锁住了，官方理由是安全，但是作为一个android发烧友，锁bootloader后就无法安装第三方recovery，进而无法体验众多第三方系统了。其次是到处广告，整个系统UI很多处都是广告，额滴个神啊！ 小米穷疯了吧! 无力吐槽啊………………
以下介绍如何解锁小米4C以及刷入第三方TWRP Recovery。
解锁小米4C 小米解锁需要去官方申请，申请提交地址为 http://www.miui.com/unlock/。
录入小米ID以及手机号等信息后，就等着吧……
我等了16天才收到解锁申请通过短信通知。
然后下载官方解锁工具，下载地址为http://www.miui.com/unlock/download.html
打开解锁工具，登录小米帐号，关机长按音量下+电源键进入Fastboot模式。
然后按照提示进行操作，两分钟不到解锁成功！！！
注：如果解锁失败，提示什么帐号不一致啦、手机信息无法获取啦，请到miui官网论坛进行问题提交。
刷入TWRP Recovery 首先下载adb工具包，里面包含需要的软件fastboot，下载地址 http://pan.baidu.com/s/1sjR8ved，下载后点击安装。
然后下载TWRP Recovery镜像文件，下载地址为http://pan.baidu.com/s/1nuugNK9
将下载后的TWRP Recovery镜像文件(.img)拷贝至adb工具包目录，然后CMD模式下进入到adb工具包目录，如下操作：
刷入TWRP Recovery
D:\&amp;gt;fastboot flash recovery libra_ts_twrp_3_0_0_3.img target reported max download size of 536870912 bytes sending &#39;recovery&#39; (51844 KB)... OKAY [ 1.485s] writing &#39;recovery&#39;... OKAY [ 0.481s] finished. total time: 1.971s  重启引导进入TWRP Recovery
D:\&amp;gt;fastboot boot libra_ts_twrp_3_0_0_3.img downloading &#39;boot.img&#39;... OKAY [ 1.494s] booting... OKAY [ 0.
          
        
        </description>
    </item>
    
    <item>
      <title>斐讯K1刷华硕固件</title>
      <link>/post/phicomm-k1-psg-1208-brush-asus-firmware/</link>
      <pubDate>Sat, 20 Feb 2016 12:32:00 +0000</pubDate>
      
      <guid>/post/phicomm-k1-psg-1208-brush-asus-firmware/</guid>
      <description>
        
          
          
          
        
        
        
          在福利吧(fuliba.net)看到斐讯K1路由器免费获得的活动，于是在天猫买了一台，赠送的139铃铛卡也正常激活使用，一个月到期后共140元也正常提了出来。总的来说，没被坑！！！
但是斐讯K1默认的固件确实不敢恭维，于是在网上搜了一通，先刷入Breed，然后通过Breed刷入华硕固件，特整理步骤。
什么是Breed?  这是楼主从去年年中自行设计开发的一个全新的 Bootloader，并用于取代 U-Boot。
此 Bootloader 暂取名为 Breed，不是 U-Boot，也不是 U-Boot 的改进版，是全新、独立的、跟 U-Boot 平级的 Bootloader。
科普一下：
Bootloader 意思为引导加载器，即为用于加载操作系统的程序。它是一大类此类功能程序的统称。现在的 BIOS、UEFI、GRUB、RedBoot、U-Boot、CFE、Breed 等都是 Bootloader。
因此，还是上面那句话，Breed 不是由什么东西改名出来的，这就是一个新的东西。看着有些人的话我真的觉得很搞笑。
此外，由上面两句话，如果想从 Breed 刷到其他任何 Bootloader，例如 U-Boot，请在 Breed 固件更新页面选择更新 Bootloader。。。。。。。。。。。。
 摘自恩山无线论坛Breed作者hackpascal原帖
刷入Breed 适合斐讯K1的Breed下载地址为 http://breed.hackpascal.net/breed-mt7620-reset1.bin
首先进入到斐讯K1的管理后台,192.168.2.1，确保路由器正常使用并且已经配置好联网。
接着，在浏览器地址栏输入http://192.168.2.1/goform/Diagnosis?pingAddr=192.168.2.100|echo&amp;quot;&amp;ldquo;|telnetd回车
浏览器会跳转到网络测试页面，这个不用理会。
打开CMD (WIN+R)，telnet连接路由器
telnet 192.168.2.1  使用路由器管理员帐号登录，默认为admin/admin
下载Breed到路由器
cd /tmp wget http://breed.hackpascal.net/breed-mt7620-reset1.bin  刷入Breed
mtd_write write breed-mt7620-reset1.bin Bootloader  重启路由器
reboot  相关截图：
刷华硕固件 路由器断电，插电时按住Reset键5秒。
网线连接电脑，浏览192.168.1.1进入Breed Web恢复控制台。
左侧菜单点击固件更新，在右侧选择固件文件，开始上传更新。
完成后可能不会自动重启，需要手动断电重启。
注意：有时Reset后，电脑可能无法连接192.168.1.1，可以手动设置网卡参数192.168.1.11/255.255.255.0/192.168.1.1
          
        
        </description>
    </item>
    
    <item>
      <title>Firefox和FoxyProxy</title>
      <link>/post/firefox-and-foxyproxy/</link>
      <pubDate>Sat, 13 Feb 2016 12:13:00 +0000</pubDate>
      
      <guid>/post/firefox-and-foxyproxy/</guid>
      <description>
        
          
          
          
        
        
        
          三年不用Firefox了，最近由于需要进行手机端和电脑端资源同步，chrome在国内不安装谷歌套件无法使用，所以又切换回了firefox。
在安装完成autoproxy后发现，订阅gfwlist.txt一直无法成功，网上找了找消息，说是autoproxy已经跟不上firefox开发脚步，无法继续使用。于是在firefox的addon站点重新找代理插件，最终选定foxyproxy。
以下是foxyproxy设置socks代理，和订阅gfwlist.txt的一些设置方法。
安装foxyproxy 去主页http://getfoxyproxy.org/，安装完成后重启firefox
添加代理服务器 双击地址栏和搜索栏中间的foxyproxy图标，进入到设置
代理服务器选项卡中点击新建代理服务器
常规选项卡中设置代理名称，如ss
代理服务器细节中设置具体参数，以下是我的设置截图，可以参考
设置订阅gfwlist.txt 在模式订阅选项卡中，空白处点击右键，添加新的模式订阅
参考下图设置，注意勾划出来的地方
将foxyproxy的工作模式选择为使用基于其预定义模版的代理服务器。
          
        
        </description>
    </item>
    
    <item>
      <title>windows7开启telnet客户端</title>
      <link>/post/windows7-enable-telnet-client/</link>
      <pubDate>Wed, 10 Feb 2016 12:11:00 +0000</pubDate>
      
      <guid>/post/windows7-enable-telnet-client/</guid>
      <description>
        
          
          
          
        
        
        
          安装完成windows7后，默认可能没有开启telnet功能，这样在cmd下输入telnet时会提示无命令，可以参考下文开启telnet功能。
开始 -&amp;gt; 控制面板 -&amp;gt; 程序和功能
在左侧边栏找到打开或关闭windows功能
在打开的窗口中找到Telnet客户端，勾选，确认。
Over!
          
        
        </description>
    </item>
    
    <item>
      <title>使用net_speeder加速VPS</title>
      <link>/post/use-net-speeder-accelerate-vps/</link>
      <pubDate>Sun, 07 Feb 2016 12:32:00 +0000</pubDate>
      
      <guid>/post/use-net-speeder-accelerate-vps/</guid>
      <description>
        
          
          
          
        
        
        
           当使用国外服务器时，经常会发现，下载速度只有十几k。平时可能不太注意，认为服务器带宽不足，或者自己使用的宽带不给力，其实很有可能原因并不在此。
由于光速的局限性，延迟会比较高（即使光沿直线传播，太平洋一个往返也要一百多毫秒）。并且由于距离较远，途径路由跳数较多，并且网络拥堵的原因。经常会发生丢包的情况。
对于平时使用最广泛的TCP协议来讲，发送端发出包后，接收端会回复ACK，表示自己收到了。用这种机制来保证可靠性。但对于高延迟链路来讲，如果每发送一个包都等待应答，那么大部分时间都在等待数据包到达，而链路则空置了。为此一般会采用滑动窗口技术。即在窗口满之前，发送端一直发送包，然后收到应答后将确认收到的包从窗口中移除。这样可以提高链路利用率。
TCP还有一个特性则是拥塞控制。当发送端检测到链路发生丢包时，则会主动缩小窗口大小以减慢发送速度，避免拥塞。不过对于跳数较多的链路来讲，只要有一个路由不够稳定丢包，就会被发送端判断为拥塞，从而影响网络速度。
为了解决丢包问题，最简单粗暴的方法就是双倍发送，即同一份数据包发送两份。这样的话在服务器带宽充足情况下，丢包率会平方级降低。
这种方式下，直接优点是降低丢包率，直接缺点是耗费双倍流量。一些延伸影响是更容易触发快速恢复逻辑，避免了丢包时窗口缩减过快。一定程度也能提高网络速度。
最近比较忙，空闲时间做了一个最简单的程序，试用效果很好，在一台VPS上测试后发现，未开启时单线程下载、ssh管道速度在十几K级别。开启后可以达到平均300KB+的速度。效果非常明显。但对于不加速就可以跑满带宽的类型来讲（多线程下载），开启后反而由于多出来的无效流量，导致速度减半。所以对于多线程/高速链路，这个方案是不适合的。
目前版本是最简单的逻辑，未来会进行细化（主动触发快速恢复、快速重传等），降低流量浪费，提升加速效果。
目前程序起名net-speeder，相对于修改协议栈来讲，由于后者需要重新升级编译内核，使用用户态程序部署更方便，稳定性更高，兼容性更好。缺点则是性能开销稍大和自由度有损失。总体比较起来，个人使用还是使用用户态程序更合适一些，特别是在虚拟机中使用（OpenVZ，LXC等虚拟机无法自己定制内核）。
 摘自http://www.snooda.com/read/324
net_speeder项目主页 https://github.com/snooda/net-speeder
安装net_speeder apt-get install libnet-dev libpcap-dev -y git clone https://github.com/snooda/net-speeder.git cd net-speeder sh build.sh mv net_speeder /usr/local/bin/  使用net_speeder 使用ifconfig查看网卡端口，我的端口为venet0
nohup net_speeder venet0 &amp;quot;ip&amp;quot; &amp;gt;/dev/null 2&amp;gt;&amp;amp;1 &amp;amp;  添加到开机启动
echo &#39;nohup net_speeder venet0 &amp;quot;ip&amp;quot; &amp;gt;/dev/null 2&amp;gt;&amp;amp;1 &amp;amp;&#39; &amp;gt;&amp;gt; /etc/rc.local 
          
        
        </description>
    </item>
    
    <item>
      <title>查看cp、mv等命令的执行进度</title>
      <link>/post/check-cp-dd-etc-commands-progress/</link>
      <pubDate>Thu, 04 Feb 2016 02:04:00 +0000</pubDate>
      
      <guid>/post/check-cp-dd-etc-commands-progress/</guid>
      <description>
        
          
          
          
        
        
        
          Linux中进行文件拷贝和移动时，我们是看不到具体命令的执行情况，不知道还需要多久才可以执行完成。在此推荐一个软件名为progress，用它可以查看一些命令的具体执行情况，包括进度、时间等等。
该软件的具体解释为Coreutils Progress Viewer，即核心程序进度查看，用它可以监视很多linux程序的执行情况，比如cp、mv、dd、tar,、gzip、cat等等，甚至于firefox的下载进度或者nginx的运行情况。
安装progress progress主页 https://github.com/Xfennec/progress
安装progress方法
git clone https://github.com/Xfennec/progress.git cd progress make make install  使用progress 简单的执行方法
progress  几个示例：
  监控所有可监控软件的执行情况
watch progress -q
  然后进行文件操作即可看到如下内容:
  查看下载进度
watch progress -wc firefox
  查看网页服务器活动情况
progress -c nginx
  
          
        
        </description>
    </item>
    
    <item>
      <title>使用Google Authenticator两步验证加强SSH登录</title>
      <link>/post/use-google-authenticator-set-2step-verification-strengthening-ssh-login/</link>
      <pubDate>Thu, 28 Jan 2016 12:33:00 +0000</pubDate>
      
      <guid>/post/use-google-authenticator-set-2step-verification-strengthening-ssh-login/</guid>
      <description>
        
          
          
          
        
        
        
          Google Authenticator开源版主页 https://github.com/google/google-authenticator
安装Google Authenticator Ubuntu已经包含libpam-google-authenticator软件(Ubuntu 11.10以上版本),可以直接使用apt-get安装
apt-get install libpam-google-authenticator  其他系统可以通过源码编译安装
git clone https://github.com/google/google-authenticator-libpam.git cd google-authenticator-libpam/ ./bootstrap.sh ./configure make make install  注意：在Debian7中执行./configure时可能存在以下错误提示
configure: error: Unable to find the PAM library or the PAM header files  在此需要安装libpam0g-dev和libtool
apt-get -y install libpam0g-dev libtool  设置Google Authenticator 在手机端搜索安装Google Authenticator
google-authenticator Do you want authentication tokens to be time-based (y/n) y  然后出现二维码，使用手机端Google Authenticator扫码,接下来服务器端继续设置
如果没有出现二维码，可以将提示的以**https://www.google.com/chart?**开头的连接复制到浏览器中，就可以看到二维码了
Do you want me to update your &amp;quot;/root/.
          
        
        </description>
    </item>
    
    <item>
      <title>树莓派安装Dnsmasq加速DNS解析</title>
      <link>/post/raspberry-pi-install-dnsmasq-and-dnsmasq-china-list/</link>
      <pubDate>Mon, 18 Jan 2016 21:28:00 +0000</pubDate>
      
      <guid>/post/raspberry-pi-install-dnsmasq-and-dnsmasq-china-list/</guid>
      <description>
        
          
          
          
        
        
        
          天朝的dns服务商尿性不是一般的大，动不动就抽风或者劫持，为了避免这种情况，可以在树莓派上安装Dnsmasq来加速dns解析，提高网络浏览体验。
安装配置dnsmasq apt-get install dnsmasq  配置dnsmasq,vi /etc/dnsmasq.conf
我的配置文件如下：
domain=Raspi2 resolv-file=/etc/resolv.dnsmasq conf-dir=/etc/dnsmasq.d min-port=4096 server=114.114.114.114 server=114.114.115.115 server=223.5.5.5 server=223.6.6.6 server=119.29.29.29 server=182.254.116.116 server=112.124.47.27 server=114.215.126.16 server=101.226.4.6 server=218.30.118.6 server=42.120.21.30 server=199.91.73.222 server=178.79.131.110 server=8.8.8.8 server=8.8.4.4 cache-size=10000  配置完重启dnsmasq服务
service dnsmasq restart  其中的server字段为上游DNS
配置dnsmasq-china-list git clone https://github.com/felixonmars/dnsmasq-china-list.git cd dnsmasq-china-list/ cp *.conf /etc/dnsmasq.d/ service dnsmasq restart  至此设置完成，可以在路由器中将首选dns设为树莓派ip，这样局域网内的所有设备都可以体验dns解析加速了！
          
        
        </description>
    </item>
    
    <item>
      <title>树莓派下安装配置Noip</title>
      <link>/post/install-configure-noip-client-in-raspberry-pi/</link>
      <pubDate>Mon, 11 Jan 2016 12:13:00 +0000</pubDate>
      
      <guid>/post/install-configure-noip-client-in-raspberry-pi/</guid>
      <description>
        
          
          
          
        
        
        
          注册noip 首先在http://noip.com注册账户
然后在主机管理(Manage Hosts)中添加主机(Add A Host)，根据提示设置二级域名，IP可以随意填写。
安装Noip客户端 wget https://www.noip.com/client/linux/noip-duc-linux.tar.gz tar zxf noip-duc-linux.tar.gz cd noip-2.1.9-1 sudo make install  安装过程中，按照提示输入noip帐号信息，时间间隔建议设为5s，默认30s
设置开机启动 在/etc/init.d/中建立noip2脚本
sudo vi /etc/init.d/noip2  脚本内容如下
#! /bin/sh ### BEGIN INIT INFO # Provides: noip2 # Required-Start: $syslog # Required-Stop: $syslog # Default-Start: 2 3 4 5 # Default-Stop: 0 1 6 # Short-Description: noip.com client service ### END INIT INFO # . /lib/lsb/init-functions case &amp;quot;$1&amp;quot; in start) echo &amp;quot;Starting noip2.
          
        
        </description>
    </item>
    
    <item>
      <title>树莓派使用ddclient和DDNS</title>
      <link>/post/raspberry-pi-using-ddclient-and-ddns/</link>
      <pubDate>Thu, 07 Jan 2016 12:31:00 +0000</pubDate>
      
      <guid>/post/raspberry-pi-using-ddclient-and-ddns/</guid>
      <description>
        
          
          
          
        
        
        
          域名解析 首先得有个域名，在域名管理中将域名DNS设为he.net的DNS地址，如下：
ns1.he.net ns2.he.net ns3.he.net ns4.he.net ns5.he.net  然后在http://dns.he.net注册账号，添加域名(Add a new domain)
接下来添加A记录(New A)，勾选允许动态域名解析(Enable entry for dynamic dns)
点击域名后DDNS列中的刷新按钮，新建一个DDNS密匙(Generate a DDNS key.)
安装设置ddclient 在树莓派上安装ddclient
sudo apt-get install ddclient  编辑ddclient配置文件，路径为/etc/ddclient.conf
protocol=dyndns2 use=web,web=myip.dnsomatic.com server=dyn.dns.he.net login=raspi.in password=&#39;ddnskey&#39; www.raspi.in,raspi.in  其中password为设置DDNS时的key
重启ddclient服务
service ddclient restart  验证IP查询结果
sudo ddclient -query use=if, if=eth0 address is 192.168.1.111 use=if, if=lo address is 127.0.0.1 use=web, web=dnspark address is 36.40.143.235 use=web, web=dyndns address is NOT FOUND use=web, web=loopia address is 36.
          
        
        </description>
    </item>
    
    <item>
      <title>SSL安全优化</title>
      <link>/post/ssl-security-optimization/</link>
      <pubDate>Mon, 21 Dec 2015 12:21:00 +0000</pubDate>
      
      <guid>/post/ssl-security-optimization/</guid>
      <description>
        
          
          
          
        
        
        
          先贴出本站的SSL安全评级,测试地址为https://www.ssllabs.com/ssltest/analyze.html?d=alair.cn
以下是本站Nginx配置中关于SSL部分
listen 443 ssl http2; ssl_certificate /etc/letsencrypt/live/alair.cn/fullchain.pem; ssl_certificate_key /etc/letsencrypt/live/alair.cn/privkey.pem; ssl_session_timeout 60m; ssl_protocols TLSv1 TLSv1.1 TLSv1.2; ssl_ciphers ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-RC4-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:RC4-SHA:!aNULL:!eNULL:!EXPORT:!DES:!3DES:!MD5:!DSS:!PKS; ssl_prefer_server_ciphers on; ssl_session_cache builtin:1000 shared:SSL:10m; ssl_dhparam /etc/ssl/certs/dhparam.pem; ssl_stapling on; ssl_stapling_verify on; add_header Strict-Transport-Security &amp;quot;max-age=63072000; includeSubdomains; preload&amp;quot;; add_header X-Frame-Options &amp;quot;DENY&amp;quot;;  说明：
dhparam.pem可以使用openssl dhparam -out dhparam.pem 4096命令生成，这个命令会执行很长时间，也可以将字节数改为2048
          
        
        </description>
    </item>
    
    <item>
      <title>使用免费Let&#39;s Encrypt证书</title>
      <link>/post/use-letsencrypt-free-ssl-certificate/</link>
      <pubDate>Tue, 15 Dec 2015 22:38:00 +0000</pubDate>
      
      <guid>/post/use-letsencrypt-free-ssl-certificate/</guid>
      <description>
        
          
          
          
        
        
        
          在此介绍如何使用Let&amp;rsquo;s Encrypt的免费SSL证书，需要在有管理权限的VPS上操作，然后参考以下方法自签域名证书。
git clone https://github.com/letsencrypt/letsencrypt.git cd letsencrypt mkdir -p /home/webroot/.well-known/acme-challenge #/home/webroot为网站目录 ./letsencrypt-auto certonly --email me@alair.cn -d alair.cn,www.alair.cn --webroot -w /home/webroot --agree-tos #注意email、域名、和网站目录  签发成功后，会提示如/etc/letsencrypt/live/www.alair.cn/fullchain.pem;的证书路径信息。
IMPORTANT NOTES: - Congratulations! Your certificate and chain have been saved at /etc/letsencrypt/live/www.alair.cn/fullchain.pem. Your cert will expire on 2016-03-14. To obtain a new version of the certificate in the future, simply run Let&#39;s Encrypt again. - If like Let&#39;s Encrypt, please consider supporting our work by: Donating to ISRG / Let&#39;s Encrypt: https://letsencrypt.
          
        
        </description>
    </item>
    
    <item>
      <title>使用MD5校验文件</title>
      <link>/post/md5sum-usage/</link>
      <pubDate>Sun, 13 Dec 2015 12:13:00 +0000</pubDate>
      
      <guid>/post/md5sum-usage/</guid>
      <description>
        
          
          
          
        
        
        
          md5sum命令用于生成和校验文件的md5值。它会逐位对文件的内容进行校验。是文件的内容，与文件名无关，也就是文件内容相同，其md5值相同。md5值是一个128位的二进制数据，转换成16进制则是32（128/4）位的进制值。
md5校验，有很小的概率不同的文件生成的md5可能相同。比md5更安全的校验算法还有SHA*系列的。
在网络传输时，我们校验源文件获得其md5sum，传输完毕后，校验其目标文件，并对比如果源文件和目标文件md5 一致的话，则表示文件传输无异常。否则说明文件在传输过程中未正确传输。
md5sum示例 生成文件md5 pi@raspi:~ $ md5sum bs.conf fcd3e1243d1cd5903d4e38c46671b84f bs.conf  md5sum校验是根据文件内容为准，与名称无关，意思是即便文件名修改了，但md5校验值应该不会改变，如下：
pi@raspi:~ $ cp bs.conf bs.conf.bak pi@raspi:~ $ md5sum bs* fcd3e1243d1cd5903d4e38c46671b84f bs.conf fcd3e1243d1cd5903d4e38c46671b84f bs.conf.bak  根据md5校验文件是否更改 一般网上分享的大文件都会附带一个.md5文件，这就是所分享文件的md5值，可以使用-c参数来直接使用.md5文件来检验文件是否完整
pi@raspi:~ $ md5sum bs.conf&amp;gt;bs.conf.md5 pi@raspi:~ $ md5sum -c bs.conf.md5 bs.conf: OK  如上例，将bs.conf的md5值定向到一个bs.conf.md5文件，然后使用md5sum -c bs.conf.md5直接检验相应文件是否完整一致，校验通过的话会输出提示OK，如果文件经过修改，内容已经不一致，则不会通过校验，则会显示FAILED
          
        
        </description>
    </item>
    
    <item>
      <title>使用SCP传输文件</title>
      <link>/post/transfer-files-using-scp/</link>
      <pubDate>Tue, 08 Dec 2015 21:38:00 +0000</pubDate>
      
      <guid>/post/transfer-files-using-scp/</guid>
      <description>
        
          
          
          
        
        
        
          示例：用户名root 地址 2.33.153.67
下载文件 scp root@2.33.153.67:/root/test.mp4 /home/pi/  将服务器上的/root/test.mp4下载到本地/home/pi文件夹
上传文件 scp /home/pi/ok.txt root@2.33.153.67:/root  将本地/home/pi/ok.txt上传至服务器/root文件夹
下载文件夹 scp -r root@2.33.153.67:/root/ebooks /home/pi  将服务器上的/root/ebooks文件夹下载至本地/home/pi下
上传文件夹 scp -r /home/pi/music root@2.33.153.67:/media  将本地/home/pi/music文件夹上传至服务器/media下
          
        
        </description>
    </item>
    
    <item>
      <title>树莓派安装Node.js</title>
      <link>/post/raspberry-pi-install-nodejs/</link>
      <pubDate>Thu, 03 Dec 2015 12:32:00 +0000</pubDate>
      
      <guid>/post/raspberry-pi-install-nodejs/</guid>
      <description>
        
          
          
          
        
        
        
          首先查看树莓派cpu信息
pi@raspi:~ $ cat /proc/cpuinfo processor : 0 model name : ARMv6-compatible processor rev 7 (v6l) BogoMIPS : 2.00 Features : half thumb fastmult vfp edsp java tls CPU implementer : 0x41 CPU architecture: 7 CPU variant : 0x0 CPU part : 0xb76 CPU revision : 7 Hardware : BCM2708 Revision : 000e Serial : 000000004a8acb6d  看清楚cpu构架，是ARMv6
然后在node.js官网下载对应版本的包，下载地址https://nodejs.org/dist/
# wget https://nodejs.org/dist/v4.2.2/node-v4.2.2-linux-arm64.tar.gz # tar zxf node-v4.2.2-linux-arm64.tar.gz # mv node-v4.2.2-linux-arm64 /usr/nodejs422  方便使用期间，做个链接
          
        
        </description>
    </item>
    
    <item>
      <title>Linux下更改时区</title>
      <link>/post/change-timezone-in-centos/</link>
      <pubDate>Mon, 30 Nov 2015 11:30:00 +0000</pubDate>
      
      <guid>/post/change-timezone-in-centos/</guid>
      <description>
        
          
          
          
        
        
        
          Linux中时区代码都在/usr/share/zoneinfo/目录中
首先删除默认时区
#rm /etc/localtime  设定新的时区
#ln -s /usr/share/zoneinfo/Asia/Shanghai /etc/localtime  完成！
          
        
        </description>
    </item>
    
    <item>
      <title>树莓派安装ffmpeg</title>
      <link>/post/raspberry-pi-install-ffmpeg/</link>
      <pubDate>Sat, 07 Nov 2015 21:23:00 +0000</pubDate>
      
      <guid>/post/raspberry-pi-install-ffmpeg/</guid>
      <description>
        
          
          
          
        
        
        
          先安装h264编码器
#!/bin/bash cd /usr/src git clone git://git.videolan.org/x264 cd x264 ./configure --host=arm-unknown-linux-gnueabi --enable-static --disable-opencl make sudo make install  下载源码编译安装ffmpeg
cd /usr/src git clone git://source.ffmpeg.org/ffmpeg.git cd ffmpeg sudo ./configure --arch=armel --target-os=linux --enable-gpl --enable-libx264 --enable-nonfree make sudo make install  由于树莓派原因，这个过程很长……很长…… 建议开screen，然后Ctrl+a+d
          
        
        </description>
    </item>
    
    <item>
      <title>linux下将mp3转换为ogg</title>
      <link>/post/linux-mp3-converted-to-ogg/</link>
      <pubDate>Wed, 21 Oct 2015 11:21:00 +0000</pubDate>
      
      <guid>/post/linux-mp3-converted-to-ogg/</guid>
      <description>
        
          
          
          
        
        
        
          安装软件
apt-get install mpg321 vorbis-tools  使用如下命令转换
mpg321 tweet.mp3 -w raw &amp;amp;&amp;amp; oggenc raw -o tweet.ogg &amp;amp;&amp;amp; rm -rf raw  示例:
root@hkvps:/home/res# mpg321 tweet.mp3 -w raw &amp;amp;&amp;amp; oggenc raw -o tweet.ogg &amp;amp;&amp;amp; rm -rf raw High Performance MPEG 1.0/2.0/2.5 Audio Player for Layer 1, 2, and 3. Version 0.3.2-1 (2012/03/25). Written and copyrights by Joe Drew, now maintained by Nanakos Chrysostomos and others. Uses code from various people. See &#39;README&#39; for more!
          
        
        </description>
    </item>
    
    <item>
      <title>StartSSL免费证书与Nginx配置</title>
      <link>/post/startssl-and-nginx/</link>
      <pubDate>Wed, 14 Oct 2015 12:13:00 +0000</pubDate>
      
      <guid>/post/startssl-and-nginx/</guid>
      <description>
        
          
          
          
        
        
        
          注册StartSSL 打开https://www.startssl.com/，点击Sign-up开始注册
参考上图填写注册信息，然后Continue，会有如下提示，系统会发送验证码到你的注册邮箱
检查注册邮箱，将收到的验证码填写提交，然后会出现如下提示，等待审核。
审核通过后，会收到如下提示邮件，点击其中连接，然后输入邮箱中的验证码完成注册
安装证书 接下来创建私匙
安装证书
安装成功后会有如下提示
验证域名 接下来验证域名，点击Validations Wizard
填写域名
选择验证邮件地址
按照提示输入邮箱接收到的验证码完成验证。
创建证书 选择Certificates Wizard，证书目标选择Web Server SSL/TLS Certificate
接下来新建私匙
点击Skip跳过系统建立步骤，我们自己在VPS上建立CSR文件，参考下图通过openssl命令建立CSR文件
注意，为了便于后期安装配置方便，建议密码置空
完成后，cat出建立好的ciuxsss.csr内容，粘贴提交
接下来添加域名
接下来将文本框中的内容保存为一个**.crt**文件
配置Nginx 贴出我的配置文件，大家参考一下
server { listen 80; location /{ return 301 https://$host$request_uri; } } server { listen 443; #listen 80; #listen [::]:80; server_name ciux.org; index index.html index.htm index.php default.html default.htm default.php; root /home/ciux/compiled; ssl on; ssl_certificate /home/bk/ssl/ciuxsss.crt; ssl_certificate_key /home/bk/ssl/ciuxsss.key; ssl_session_timeout 5m; ssl_protocols SSLv2 SSLv3 TLSv1; ssl_ciphers ALL:!
          
        
        </description>
    </item>
    
    <item>
      <title>Gandi免费SSL证书使用方法</title>
      <link>/post/gandi-free-ssl-certificate-usage/</link>
      <pubDate>Thu, 24 Sep 2015 19:23:00 +0000</pubDate>
      
      <guid>/post/gandi-free-ssl-certificate-usage/</guid>
      <description>
        
          
          
          
        
        
        
          首先澄清此文中的免费不是真的免费，而是新注册或转移域名到Gandi，都可以获得标准版SSL证书一年的免费使用。
符合以上条件的话，可以进行下面操作了！
在Gandi上购买SSL证书，选择标准版，在结算的时候系统会自动判断是否免单，正常情况下会0元结单，完成后接着配置SSL证书。
首先提交CSR，这里需要自己生产CSR。
在此以3c.lc域名为例，在Ubuntu中操作。
openssl req -nodes -newkey rsa:2048 -sha1 -keyout 3clc.key -out 3clc.csr  然后根据提示填写以下内容：
 Country Name (2 letter code) [AU]: #国家代码，中国为CN
State or Province Name (full name) [Some-State]: #省份
Locality Name (eg, city) []: #城市
Organization Name (eg, company) [Internet Widgits Pty Ltd]: #组织名
Organizational Unit Name (eg, section) []: #部门名
Common Name (e.g. server FQDN or YOUR name) []:3c.lc #注意，这里需要填写你的域名。
Email Address []:2b@3c.lc #邮箱
Please enter the following &amp;lsquo;extra&amp;rsquo; attributes
          
        
        </description>
    </item>
    
    <item>
      <title>树莓派开启root登录</title>
      <link>/post/raspberry-pi-allow-root-login/</link>
      <pubDate>Fri, 18 Sep 2015 21:28:00 +0000</pubDate>
      
      <guid>/post/raspberry-pi-allow-root-login/</guid>
      <description>
        
          
          
          
        
        
        
          想要通过ssh登录树莓派进行管理，使用默认的pi用户有时真的不便，对于linux老手来说，可以直接开启root用户ssh登录，这就方便多了，方法如下：
sudo passwd root sudo passwd --unlock root  设置SSH
sudo vi /etc/ssh/sshd_config  将其中的PermitRootLogin without-password改为PermitRootLogin yes，然后重启ssh服务sudo service ssh restart
Over!
          
        
        </description>
    </item>
    
    <item>
      <title>使用Photoshop压缩PNG图片</title>
      <link>/post/photoshop-compressed-png-images/</link>
      <pubDate>Sun, 13 Sep 2015 12:38:00 +0000</pubDate>
      
      <guid>/post/photoshop-compressed-png-images/</guid>
      <description>
        
          
          
          
        
        
        
          Ctrl+O打开PNG文件
图像 -&amp;gt; 调整 -&amp;gt; 色调分离
调整色阶值，边调整边预览，找到图片质量变化最小时候的值
文件 -&amp;gt; 导出 -&amp;gt; 存储为Web所用格式
文件格式选择PNG-8，参考下图全选部分进行调整，完成后保存即可。
          
        
        </description>
    </item>
    
    <item>
      <title>使用ScrollUp添加返回顶部功能</title>
      <link>/post/use-scrollup-to-add-scroll-to-top-feature/</link>
      <pubDate>Tue, 08 Sep 2015 19:28:00 +0000</pubDate>
      
      <guid>/post/use-scrollup-to-add-scroll-to-top-feature/</guid>
      <description>
        
          
          
          
        
        
        
          下载ScrollUp https://github.com/markgoodyear/scrollup
在网页中引用jquery.scrollUp.js、jquery.easing.js、jquery.min.js三个JavaScript脚本，注意顺序
&amp;lt;script src=&amp;quot;jquery.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;script src=&amp;quot;jquery.easing.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;script src=&amp;quot;jquery.scrollUp.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;  然后加入控制代码
&amp;lt;script&amp;gt; $(function () { $.scrollUp(); }); &amp;lt;/script&amp;gt;  以上是最简单的使用方法，还有一种带参数的方法
$(function () { $.scrollUp({ scrollName: &#39;scrollUp&#39;, // Element ID scrollDistance: 300, // Distance from top/bottom before showing element (px) scrollFrom: &#39;top&#39;, // &#39;top&#39; or &#39;bottom&#39; scrollSpeed: 300, // Speed back to top (ms) easingType: &#39;linear&#39;, // Scroll to top easing (see http://easings.net/) animation: &#39;fade&#39;, // Fade, slide, none animationSpeed: 200, // Animation speed (ms) scrollTrigger: false, // Set a custom triggering element.
          
        
        </description>
    </item>
    
    <item>
      <title>Linux下使用grive管理Google Drive</title>
      <link>/post/linux-use-grive-management-google-drive/</link>
      <pubDate>Wed, 26 Aug 2015 18:23:00 +0000</pubDate>
      
      <guid>/post/linux-use-grive-management-google-drive/</guid>
      <description>
        
          
          
          
        
        
        
          找到一个linux下可用的google drive客户端，纯cli操作，值得推荐
grive项目主页 https://github.com/Grive/grive
Ubuntu中下通过PPA安装grive
sudo add-apt-repository ppa:nilarimogard/webupd8 sudo apt-get update sudo apt-get install grive  使用grive同步Google Drive
mkdir googledrive cd googledrive grive -a  第一次运行，会有验证提示，将提示的url代码粘贴到浏览器中验证帐户，完了后将生成的验证代码粘贴到grive进行验证。
          
        
        </description>
    </item>
    
    <item>
      <title>无法使用add-apt-repository命令</title>
      <link>/post/can-not-use-add-apt-repository/</link>
      <pubDate>Sun, 23 Aug 2015 08:23:00 +0000</pubDate>
      
      <guid>/post/can-not-use-add-apt-repository/</guid>
      <description>
        
          
          
          
        
        
        
          在Ubuntu中使用PPA安装软件时，需要用到add-apt-repository命令，但有的VPS系统因为体量原因，可能没有该命令，因此需要通过以下方法来安装：
apt-get install python-software-properties apt-get install software-properties-common 
          
        
        </description>
    </item>
    
    <item>
      <title>树莓派安装配置minidlna</title>
      <link>/post/raspberry-pi-install-minidlna-to-create-digital-media-server/</link>
      <pubDate>Thu, 06 Aug 2015 18:26:00 +0000</pubDate>
      
      <guid>/post/raspberry-pi-install-minidlna-to-create-digital-media-server/</guid>
      <description>
        
          
          
          
        
        
        
          树莓派挂载移动存储 可以挂载移动硬盘或者大容量的U盘，参考以下文章：
 树莓派挂载U盘作为存储分区 fdisk分区实例  安装配置minidlna #sudo apt-get install -y minidlna  编辑minidlna配置文件/etc/minidlna.conf，内容如下：
media_dir=/home/pi/dlnadoc #媒体文件目录 db_dir=/var/lib/minidlna #minidlna通过SQLite来建立媒体库索引，因此需要定义数据库目录 listening_ip=192.168.1.111 #树莓派IP port=8200	#web端口，可以通过ip:port查看索引状态 friendly_name=Raspi_DLNA #服务器命名  重启minidlna服务
sudo service minidlna restart  强制刷新
sudo service minidlna force-reload  查看索引状态,浏览http://192.168.1.111:8200
MiniDLNA status Audio files: 0 Video files: 2 Image files: 0  DLNA客户端 PC
Windows7下将网络设置为家庭网络，完成后刷新，在网络中媒体设备下就可以自动发现Rasp_DLNA。
点击进去就可以使用MediaPlayer来浏览。
Android
VPlayer+ VPlayer uPnP DLNA Plugin
IOS
RushPlayer
          
        
        </description>
    </item>
    
    <item>
      <title>树莓派使用DietPi</title>
      <link>/post/raspberry-pi-use-dietpi/</link>
      <pubDate>Tue, 04 Aug 2015 18:23:00 +0000</pubDate>
      
      <guid>/post/raspberry-pi-use-dietpi/</guid>
      <description>
        
          
          
          
        
        
        
          下载安装DietPi DietPi项目主页 http://dietpi.com/
DietPi下载地址 http://fuzon.co.uk/downloads/DietPi.7z
这个压缩包91MB，解压后的img文件522MB,比官方的小多了。
然后将镜像写入到SD卡中，linux下使用dd
dd if=DietPi_v74.img of=/dev/sdc bs=2M  Windows下使用Win32 Disk Imager，戳这里
写入完成后将SD卡插入树莓派，加电启动。
预设置Wifi链接 首次使用时，可以通过编辑dietpi.txt来进行wifi预设置。
将TF卡插入电脑读卡器，打开对应的磁盘，找到dietpi.txt文件，打开。
找到Wifi_Enabled=0，将其设置为1
然后找到Wifi_SSID和Wifi_KEY分别设置wifi节点名和密码，保存即可。
配置DietPi DietPi默认用户名密码为root dietpi，第一次启动DietPi提示检测升级，按提示操作。
不过由于天朝网路问题，可能升级比较缓慢，建议Ctrl+c终止升级，修改sources.list为朝内镜像。
DietPi默认没有vi,使用nano进行编辑，添加Aliyun源。
deb http://mirrors.aliyun.com/raspbian/raspbian/ wheezy main non-free contrib deb-src http://mirrors.aliyun.com/raspbian/raspbian/ wheezy main non-free contrib  更新软件
apt-get update&amp;amp;&amp;amp;apt-get upgrade -y  然后运行dietpi-config进行配置。
DietPi - Config
 ┌────┤ ---------- DietPi-Config ---------- ├─────┐ │ Hardware : Raspberry Pi 1 (512MB) │ │ │ │ 1 Display Options │ │ 2 Audio Options │ │ 3 Performance Options │ │ 4 Advanced Options │ │ 5 Language/Regional Options │ │ 6 Security Options │ │ 7 Networking Options │ │ 8 AutoBoot Options │ │ 9 Tools │ │ │ │ │ │ &amp;lt;Ok&amp;gt; &amp;lt;Exit&amp;gt; │ │ │ └────────────────────────────────────────────────┘  推荐配置：
          
        
        </description>
    </item>
    
    <item>
      <title>将树莓派数据上传至乐为物联</title>
      <link>/post/sumbit-raspberry-pi-data-to-lewei50/</link>
      <pubDate>Thu, 30 Jul 2015 12:59:00 +0000</pubDate>
      
      <guid>/post/sumbit-raspberry-pi-data-to-lewei50/</guid>
      <description>
        
          
          
          
        
        
        
          进入http://www.lewei50.com/注册登录
添加设备(Add Device) 我的物联 -&amp;gt; 我的设备，添加新设备，类型选择其他，不使用模板。
请自定义设备标识，后面要用到。
添加传感器 我的物联 -&amp;gt; 感器与控制器，新建传感器。
其中标识为提交数据依据，建议英文。
向乐为物联提交数据 lewei.sh代码如下 http://cdn.lyq.wiki/res/lewei.sh
#!/bin/bash LURL=http://www.lewei50.com/api/V1/Gateway/UpdateSensors/01 KEY=&amp;quot;2fasdfsdfsdf9ffadsf62dfbfsdfa1&amp;quot; sys_load=`cat /proc/loadavg | awk &#39;{print $2}&#39;` st=`/usr/bin/sen_t` sh=`/usr/bin/sen_h` for i in 1 2 3 4 5; do sys_temp=`cat /sys/class/thermal/thermal_zone0/temp | awk &#39;{print $1/1000}&#39;` if [[ &amp;quot;${sys_temp}&amp;quot; =~ ^- ]] then sys_temp=&#39;0.0&#39; else echo ${sys_temp} break fi done echo &amp;quot;Printf Values&amp;quot; echo &amp;quot;sys_temp:&amp;quot;${sys_temp} echo &amp;quot;sys_load:&amp;quot;${sys_load} echo &amp;quot;sensor_t:&amp;quot;${st} echo &amp;quot;sensor_h:&amp;quot;${sh} echo &amp;quot;Done!&amp;quot; echo &amp;quot;Sumbit Data to Lewei&amp;quot; curl --request POST ${LURL} --header &amp;quot;userkey:${KEY}&amp;quot; --data &amp;quot;[{&#39;Name&#39;:&#39;load&#39;,&#39;Value&#39;:&#39;${sys_load}&#39;},{&#39;Name&#39;:&#39;temp&#39;,&#39;Value&#39;:&#39;${sys_temp}&#39;},{&#39;Name&#39;:&#39;sd&#39;,&#39;Value&#39;:&#39;${sh}&#39;},{&#39;Name&#39;:&#39;wd&#39;,&#39;Value&#39;:&#39;${st}&#39;}]&amp;quot;  其中LURL后面的01为设备标识,KEY为用户Userkey,JSON数据中的Name对应相应的传感器标识。
          
        
        </description>
    </item>
    
    <item>
      <title>安装Nginx和ngx_pagespeed</title>
      <link>/post/install-nginx-and-ngx_pagespeed-on-vps/</link>
      <pubDate>Fri, 24 Jul 2015 17:24:00 +0000</pubDate>
      
      <guid>/post/install-nginx-and-ngx_pagespeed-on-vps/</guid>
      <description>
        
          
          
          
        
        
        
          VPS配置:
Ubuntu 14.04 x86 RAM 512M SWAP 64M DISK 5G  准备工作 sudo apt-get update&amp;amp;&amp;amp;apt-get upgrade -y sudo apt-get install build-essential zlib1g-dev libpcre3 libpcre3-dev unzip libssl-dev -y  下载ngx_pagespeed cd NPS_VERSION=1.9.32.4 wget https://github.com/pagespeed/ngx_pagespeed/archive/release-${NPS_VERSION}-beta.zip unzip release-${NPS_VERSION}-beta.zip cd ngx_pagespeed-release-${NPS_VERSION}-beta/ wget https://dl.google.com/dl/page-speed/psol/${NPS_VERSION}.tar.gz tar -xzvf ${NPS_VERSION}.tar.gz  安装Nginx cd groupadd www useradd -s /sbin/nologin -g www www NGINX_VERSION=1.8.0 wget http://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz tar -xvzf nginx-${NGINX_VERSION}.tar.gz cd nginx-${NGINX_VERSION}/ ./configure \ --user=www \ --group=www \ --prefix=/usr/local/nginx \ --with-http_stub_status_module \ --with-http_ssl_module \ --with-http_spdy_module \ --with-http_gzip_static_module \ --with-http_sub_module \ --add-module=$HOME/ngx_pagespeed-release-${NPS_VERSION}-beta \ sudo make sudo make install sudo ln -sf /usr/local/nginx/sbin/nginx /usr/bin/nginx  配置/etc/init.
          
        
        </description>
    </item>
    
    <item>
      <title>将百度输入法词库导入倒小狼毫词典</title>
      <link>/post/baidu-input-dictionary-converted-to-rime/</link>
      <pubDate>Thu, 23 Jul 2015 07:23:00 +0000</pubDate>
      
      <guid>/post/baidu-input-dictionary-converted-to-rime/</guid>
      <description>
        
          
          
          
        
        
        
          首先，在百度输入法设置中，将词库导出，选择txt格式
然后下载深蓝词库转换
打开深蓝词库转换，选择百度词库，在转换为类型中选择中州韵，转换文成后保存为另外一个txt文件
然后打开**【小狼毫】用户词典管理**，选择已存在的词典，点击右侧的**导入文本码表**
          
        
        </description>
    </item>
    
    <item>
      <title>将Nginx更换为H2O</title>
      <link>/post/install-h2o-on-bandwagon-vps/</link>
      <pubDate>Tue, 21 Jul 2015 17:31:00 +0000</pubDate>
      
      <guid>/post/install-h2o-on-bandwagon-vps/</guid>
      <description>
        
          
          
          
        
        
        
          安装必须的软件 预备工具软件
#apt-get install autoconf automake m4 build-essential  libssl-dev 必选
#apt-get install openssl libssl-dev  以下为可选包，可自行搜索安装
 libuv libyaml wslay  安装H2O 下载安装最新版h2o https://github.com/h2o/h2o/releases
#wget https://github.com/h2o/h2o/archive/v1.4.1.tar.gz #tar zxf v1.4.1.tar.gz #cd h2o-1.4.1 #cmake -DWITH_BUNDLED_SSL=on . #make #sudo make install  编辑H2O站点配置文件 以下是一个简单的http与https配置文件，可自行参考修改
hosts: &amp;quot;www.example.com&amp;quot;: listen: port: 80 listen: port: 443 ssl: certificate-file: /path/to/server-certificate.crt key-file: /path/to/private-key.crt paths: &amp;quot;/&amp;quot;: file.dir: /path/to/doc-root access-log: /path/to/the/access-log error-log: /path/to/the/error-log pid-file: /path/to/the/pid-file http2-reprioritize-blocking-assets: ON # performance tuning option  启动H2O
          
        
        </description>
    </item>
    
    <item>
      <title>将博客从Typcho转移至Gor</title>
      <link>/post/typecho-converted-to-gor/</link>
      <pubDate>Mon, 20 Jul 2015 17:20:00 +0000</pubDate>
      
      <guid>/post/typecho-converted-to-gor/</guid>
      <description>
        
          
          
          
        
        
        
          缘由 VPS快到期了，不想继续维护，太累，并且香港VPS价格也不菲。
于是打算选择一个静态博客平台，原来用过的不少:jekyll,hexo,gor,pelican，最后决定Gor
选择Gor的理由有两点
 安装方便 执行效率高  安装Gor 参考Gor主页https://github.com/wendal/gor安装Gor
将Typecho文章导出为Markdown文件(.md) Github上有现成的工具typecho-exporter，主页为https://github.com/aneasystone/typecho-exporter
这个工具可以将所有的文章导出为Markdown文件，但是以文章标题为文件名，不利于后期处理，建议使用slug为文件名。
编辑下载的main.py，将75行的p.title = r[1]替换为`p.title = r[2]&#39;，如下:
results = cur.fetchall() for r in results: p = Post() p.id = r[0] p.title = r[2] p.content = r[5] posts.append(p)  原来的r[1]对应typecho_contentsSQL表中的title列，我的r[2]对应slug列，可以根据实际情况更改。
编辑typecho-exporter的config.ini文件，设置数据库访问方式。
运行main.py，完成后会在typecho-exporter目录下生成files文件夹，里面就是导出的Markdown文件。
后期整理 导出后的Markdown没有Gor需要的文件头格式，需要手动整理
这里推荐使用Notepad++批量替换
  查找目标:
  替换为&amp;mdash;\n title: title\ndate: 2015-07-20\ndescription: \npermalink: \ncategories: \ntags: \n&amp;mdash;\n
  记得将查找模式重的扩展打开。
经过以上替换，就大概有了个Gor的Markdown头格式，后面的手动工作就少了多了。
          
        
        </description>
    </item>
    
    <item>
      <title>typecho主题Amaze</title>
      <link>/post/typecho-theme-amaze/</link>
      <pubDate>Fri, 17 Jul 2015 21:23:00 +0000</pubDate>
      
      <guid>/post/typecho-theme-amaze/</guid>
      <description>
        
          
          
          
        
        
        
          typecho主题一枚Amaze,采用Amaze UI框架
注意：
 评论采用多说,直接替换comment.php内容 无页面导航，请将文章数设为999  预览图：
下载地址:http://cdn.lyq.wiki/res/amaze.7z
          
        
        </description>
    </item>
    
    <item>
      <title>Xively与树莓派监控温度与湿度</title>
      <link>/post/use-xively-monitor-raspberry-pi/</link>
      <pubDate>Tue, 14 Jul 2015 14:14:00 +0000</pubDate>
      
      <guid>/post/use-xively-monitor-raspberry-pi/</guid>
      <description>
        
          
          
          
        
        
        
          进入https://www.xively.com/注册登录
添加设备(Add Device) 在Development Devices页面点击Add Device添加设备
填写Device Name和Device Description，将Privacy设定为Public Device
设置API Key 进入Device详情页，在API Keys中点击Add Key添加一个Key,将Permissions中的Read,Create,Update,Delete全部勾选，Label随便填。
向Xively提交数据 在这里通过CURL向xively提交JSON格式的数据
JSON数据格式
{ &amp;quot;datastreams&amp;quot;: [ { &amp;quot;id&amp;quot;: &amp;quot;load&amp;quot;, &amp;quot;current_value&amp;quot;: &amp;quot;9.00&amp;quot; }, { &amp;quot;id&amp;quot;: &amp;quot;temp&amp;quot;, &amp;quot;current_value&amp;quot;: &amp;quot;89.15&amp;quot; } ] }  其中每个id为数据定义的idcurrent_value为提交的值
脚本文件send_xively.sh
#!/bin/bash LOCATION=&#39;/home/pi/xively_data&#39; #Path of Xively JSON DATA file API_KEY=&#39;orxUhgjqSYPDbv5243534tG65464345eArxSVY9pE8ITnE&#39; #API Key FEED_ID=&#39;1354438558&#39; #FEED_ID #################################################### COSM_URL=https://api.xively.com/v2/feeds/${FEED_ID}?timezone=+8 cpu_load=`cat /proc/loadavg | awk &#39;{print $2}&#39;` sen_t=`sudo /home/pi/st` sen_h=`sudo /home/pi/sh` for i in 1 2 3 4 5; do cpu_t=`cat /sys/class/thermal/thermal_zone0/temp | awk &#39;{print $1/1000}&#39;` if [[ &amp;quot;${cpu_t}&amp;quot; =~ ^- ]] then cpu_t=&#39;0.
          
        
        </description>
    </item>
    
    <item>
      <title>使用Replace Pioneer按行分割文本</title>
      <link>/post/use-pioneer-replace-to-segment-the-text-file/</link>
      <pubDate>Fri, 10 Jul 2015 22:38:00 +0000</pubDate>
      
      <guid>/post/use-pioneer-replace-to-segment-the-text-file/</guid>
      <description>
        
          
          
          
        
        
        
          Replace Pioneer下载地址 http://www.mind-pioneer.com/replace/Download.html
安装后打开，Ctrl+O加载文本文件
File -&amp;gt; Save As -&amp;gt; Save to files&amp;ndash;split by lines/chars/bytes
然后选择分割方式，注意批量命名的 # 的个数
          
        
        </description>
    </item>
    
    <item>
      <title>V版本iPhone5C开启中国电信4G</title>
      <link>/post/verzion-iphone5c-open-chinatelecom-4g/</link>
      <pubDate>Fri, 10 Jul 2015 10:27:00 +0000</pubDate>
      
      <guid>/post/verzion-iphone5c-open-chinatelecom-4g/</guid>
      <description>
        
          
          
          
        
        
        
          首先，使用太极越狱将手机越狱 http://www.taig.com/
在Cydia中添加http://apt.chinasnow.net源，搜索安装CommCenter patch for ios8
设置iTunes可以刷入运营商文件(.ipcc)
Win+R打开运行窗口，输入&amp;quot;%ProgramFiles%\iTunes\iTunes.exe&amp;quot; /setPrefInt carrier-testing 1
下载运营商文件http://cdn.lyq.wiki/res/ipccs.zip
打开iTunes，链接手机到电脑，Shift+更新，选择相对应系统版本的运营商文件
完成后重启手机OK！
          
        
        </description>
    </item>
    
    <item>
      <title>将域名从Godaddy转移到万网</title>
      <link>/post/godaddy-domain-transferred-to-the-hichina/</link>
      <pubDate>Tue, 07 Jul 2015 18:27:00 +0000</pubDate>
      
      <guid>/post/godaddy-domain-transferred-to-the-hichina/</guid>
      <description>
        
          
          
          
        
        
        
          准备将ltecn.com从Godaddy转到万网
首先在Godaddy的域名管理中，将域名解锁,将Lock状态设置为Off
然后你会收到一封标题为Domain Status Notification的邮件，提醒你域名状态已经修改为Unlocked
然后将authorization code发送到你的邮箱
Godaddy会发送一封标题为LTECN.COM - Information You Requested的邮件，里面有你的验证码，邮件内容如下：
Customer Account: 888888884 Domain Name: LTECN.COM Authorization Code: f@jje0932!E  接下来在万网中使用以上验证码进行转入操作，订单支付后万网会发送一封标题为万网域名转入确认通知的邮件，点击其中的链接确认转入
下来进入到Godaddy，DOMAINS-&amp;gt;TRANSFERS,在PENDING TRANSFERS OUT会显示正在转出的域名，域名状态列显示Transfer not started. Accept or decline，点击Accept or decline在接下来的提示中选择Accept接受转出。
Godaddy会发送一封标题为Transfer of LTECN.COM的邮件，提醒你转出操作。
稍等片刻Godaddy会发送一封标题为An important notice regarding your transfer of LTECN.COM的邮件，提醒转出成功，并且告知转出的ISP服务商，如下：
Dear Jkrjj csao, This is to confirm that the following domain names have been successfully transferred away from GoDaddy to HICHINA WEB SOLUTIONS LIMITED: LTECN.COM If you have any questions, visit Online Support or call us at (480) 505-8877.
          
        
        </description>
    </item>
    
    <item>
      <title>Typecho主题Limits</title>
      <link>/post/typecho-limits-theme/</link>
      <pubDate>Thu, 02 Jul 2015 17:32:00 +0000</pubDate>
      
      <guid>/post/typecho-limits-theme/</guid>
      <description>
        
          
          
          
        
        
        
          又造了个简单成马咧的主题，分享给大家!
说明
 评论采用多说，请自行替换comments.php内容 没有页面导航，因此请在设置-阅读中，将每页文章数目设大一些(例如:999)  预览图:
下载: Limits.7z
          
        
        </description>
    </item>
    
    <item>
      <title>树莓派连接DHT11采集温度与湿度</title>
      <link>/post/raspberry-pi-by-dht11-collecting-temperature-and-humidity/</link>
      <pubDate>Sun, 21 Jun 2015 16:21:00 +0000</pubDate>
      
      <guid>/post/raspberry-pi-by-dht11-collecting-temperature-and-humidity/</guid>
      <description>
        
          
          
          
        
        
        
          DHT11介绍 DHT11是一款有已校准数字信号输出的温湿度传感器。 精度湿度+-5%RH， 温度+-2℃，量程湿度20-90%RH， 温度0~50℃。
DHT11针脚说明
 VCC	供电 3－5.5VDC DATA	串行数据，单总线 N/A	空脚，请悬空 GND	接地，电源负极  硬件连接 树莓派GPIO针脚说明
DHT11与树莓派链接
VCC连接+3V3 DATA连接GPIO4 GND链接GND
软件部分 安装wiringPi
sudo apt-get install git-core git clone git://git.drogon.net/wiringPi cd wiringPi ./build  如果由于网络原因无法git clone成功，可以从此下载wiringPi http://cdn.lyq.wiki/res/wiringPi_v2.3.1.zip
验证是否安装成功
gpio -v gpio readall  下载编译C语言程序代码
wget http://cdn.lyq.wiki/res/sensor.c gcc -o sensor sensor.c -lwiringPi  运行程序
sudo ./sensor 24,39  输出结果，第一个为湿度，第二个为温度
          
        
        </description>
    </item>
    
    <item>
      <title>Ubuntu下安装Ghost博客系统</title>
      <link>/post/ubuntu-install-ghost-blog-system/</link>
      <pubDate>Sat, 06 Jun 2015 16:26:00 +0000</pubDate>
      
      <guid>/post/ubuntu-install-ghost-blog-system/</guid>
      <description>
        
          
          
          
        
        
        
          安装Nodejs sudo add-apt-repository ppa:chris-lea/node.js sudo apt-get update sudo apt-get install nodejs  检查是否安装成功
root@hkvps:~# node -v v0.10.37 root@hkvps:~# npm -v 1.4.28  安装Ghost Ghost下载地址https://ghost.org/download/
wget https://ghost.org/zip/ghost-0.6.4.zip unzip ghost-0.6.4.zip -d ghost cd ghost npm install --production  运行Ghost
npm start  可以通过127.0.0.1:2368来访问
通过nmp start来运行Ghost，退出后就会停止，因此需要一个方法让Ghost一直运行
让Ghost一直运行 安装forever
npm install forever -g  进入ghost目录，执行以下命令，让Ghost一直运行
NODE_ENV=production forever start index.js  停止ghost
forever stop index.js  查看forever运行列表
forever list  结合Nginx配置域名 安装Nginx
sudo apt-get install nginx  编辑配置文件
          
        
        </description>
    </item>
    
    <item>
      <title>Nginx配置SSL证书</title>
      <link>/post/nginx-configuration-ssl-certificate/</link>
      <pubDate>Mon, 25 May 2015 15:25:00 +0000</pubDate>
      
      <guid>/post/nginx-configuration-ssl-certificate/</guid>
      <description>
        
          
          
          
        
        
        
          申请Wosign免费SSL证书 申请地址: https://www.wosign.com/products/free_ssl.htm
申请成功后，收到类似于aquan.me_sha256_cn.zip的文件,解压后包含如下文件
for Apache.zip for IIS.zip for Nginx.zip for Other Server.zip for Tomcat.zip  其中for Nginx.zip中包含如下两个文件，将其上传到VPS自定义位置。
 1_aquan.me_bundle.crt 2_aquan.me.key  配置Nginx 不多说了，直接贴代码:
#### Add Wosign SSL Start #### listen 443; ssl on; ssl_certificate /usr/local/nginx/ssl/ssl.crt; ssl_certificate_key /usr/local/nginx/ssl/ssl.key; ssl_session_timeout 5m; ssl_protocols SSLv2 SSLv3 TLSv1; ssl_ciphers ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP; ssl_prefer_server_ciphers on; #### Add Wosign SSL End ####  将以上代码插入listen 80;之后。
重启Nginx生效
/etc/init.d/nginx restart  以上设置完成，就可以通过https来浏览网站，同时http也可以浏览。
合并Wosign根证书 有的浏览器会提示不信任证书，可以通过合并Wosign根证书来解决
wget https://www.wosign.com/Root/Bundle_DV_St.crt cat Bundle_DV_St.crt &amp;gt;&amp;gt; /usr/local/nginx/ssl/ssl.crt  设置http跳转https 如果想将http跳转至https，可以进行如下设置:
          
        
        </description>
    </item>
    
    <item>
      <title>Typecho主题Read</title>
      <link>/post/typecho-theme-read/</link>
      <pubDate>Thu, 21 May 2015 15:23:00 +0000</pubDate>
      
      <guid>/post/typecho-theme-read/</guid>
      <description>
        
          
          
          
        
        
        
          闲暇时参考http://www.yinwang.org/修改制作了一个Typecho主题，命名为Read，分享给大家！
预览图:
下载地址:read.zip
          
        
        </description>
    </item>
    
    <item>
      <title>Windows下安装Jekyll</title>
      <link>/post/install-jekyll-on-windows/</link>
      <pubDate>Wed, 20 May 2015 15:20:00 +0000</pubDate>
      
      <guid>/post/install-jekyll-on-windows/</guid>
      <description>
        
          
          
          
        
        
        
          安装Ruby/DevKit 首先从 http://rubyinstaller.org/downloads/ 下载以下两个文件进行安装
 rubyinstaller-1.9.3-p194.exe DevKit-tdm-32-4.5.2-20111229-1559-sfx.exe  Ruby安装在D:\Ruby200, DevKit安装在D:\rubydevkit
打开CMD进入到DevKit目录，开始初始化安装
D:\rubydevkit&amp;gt;ruby dk.rb init [INFO] found RubyInstaller v2.0.0 at d:/Ruby200 Initialization complete! Please review and modify the auto-generated &#39;config.yml&#39; file to ensure it contains the root directories to all of the installed Rubies you want enhanced by the DevKit. D:\rubydevkit&amp;gt;ruby dk.rb install [INFO] Updating convenience notice gem override for &#39;d:/Ruby200&#39; [INFO] Installing &#39;d:/Ruby200/lib/ruby/site_ruby/devkit.rb&#39;  替换Gem源
天朝网路可能会引起gem安装失败，建议更换为ruby.taobao,org源
$gem sources -r http://rubygems.org/ $gem sources -a http://ruby.
          
        
        </description>
    </item>
    
    <item>
      <title>Linux下安装最新版golang</title>
      <link>/post/install-the-last-version-golang-for-linux/</link>
      <pubDate>Mon, 11 May 2015 15:11:00 +0000</pubDate>
      
      <guid>/post/install-the-last-version-golang-for-linux/</guid>
      <description>
        
          
          
          
        
        
        
          ubuntu中可以使用apt-get install golang来安装go，但是版本稍旧
如果需要安装最新版的golang，那就得自己动手咧
安装golang 从官网下载最新版，手动安装
apt-get install build-essential wget https://storage.googleapis.com/golang/go1.4.2.linux-386.tar.gz tar zxf go1.4.2.linux-386.tar.gz cd go/src ./all.bash  设置PATH 安装完成后需要设置PATH才能随地使用go
export PATH=&amp;quot;/root/go/bin:$PATH&amp;quot;  检查版本 go version go version go1.4.2 linux/386 
          
        
        </description>
    </item>
    
    <item>
      <title>使用speedtest-cli测试带宽</title>
      <link>/post/use-speedtest-cli-tests-network-bandwidth/</link>
      <pubDate>Thu, 26 Mar 2015 13:26:00 +0000</pubDate>
      
      <guid>/post/use-speedtest-cli-tests-network-bandwidth/</guid>
      <description>
        
          
          
          
        
        
        
          安装speedtest-cli 安装speedtest-cli方法如下:
sudo apt-get install python-pip sudo pip install speedtest-cli  或
pip install git+https://github.com/sivel/speedtest-cli.git  或
git clone https://github.com/sivel/speedtest-cli.git python speedtest-cli/setup.py install  或
wget -O speedtest-cli https://raw.githubusercontent.com/sivel/speedtest-cli/master/speedtest_cli.py chmod +x speedtest-cli  或
curl -Lo speedtest-cli https://raw.githubusercontent.com/sivel/speedtest-cli/master/speedtest_cli.py chmod +x speedtest-cli  使用speedtest-cli root@MyUbuntuCloud:~# speedtest-cli -h usage: speedtest-cli [-h] [--bytes] [--share] [--simple] [--list] [--server SERVER] [--mini MINI] [--source SOURCE] [--timeout TIMEOUT] [--version] Command line interface for testing internet bandwidth using speedtest.
          
        
        </description>
    </item>
    
    <item>
      <title>fdisk分区实例</title>
      <link>/post/examples-of-fdisk-partition/</link>
      <pubDate>Thu, 19 Mar 2015 12:31:00 +0000</pubDate>
      
      <guid>/post/examples-of-fdisk-partition/</guid>
      <description>
        
          
          
          
        
        
        
          查看磁盘分区详情 直接使用fdisk -l 或者使用fdisk /dev/sda，再使用p命令来查看
Command (m for help): p Disk /dev/sda: 32.2 GB, 32212254720 bytes 255 heads, 63 sectors/track, 3916 cylinders, total 62914560 sectors Units = sectors of 1 * 512 = 512 bytes Sector size (logical/physical): 512 bytes / 512 bytes I/O size (minimum/optimal): 512 bytes / 512 bytes Disk identifier: 0x000657c3 Device Boot Start End Blocks Id System /dev/sda1 * 2048 61868031 30932992 83 Linux /dev/sda2 61870078 62912511 521217 5 Extended /dev/sda5 61870080 62912511 521216 82 Linux swap / Solaris  fdisk命令 fdisk有以下命令可用，其中常用的已简单说明
          
        
        </description>
    </item>
    
    <item>
      <title>推荐几个Xposed模块</title>
      <link>/post/the-xposed-module-is-recommended/</link>
      <pubDate>Sat, 14 Mar 2015 13:23:00 +0000</pubDate>
      
      <guid>/post/the-xposed-module-is-recommended/</guid>
      <description>
        
          
          
          
        
        
        
           MinMinGuard Statusbar Scroll to Top WiFiKeyView SwipeBack  
          
        
        </description>
    </item>
    
    <item>
      <title>入手树莓派2 Model B</title>
      <link>/post/starting-raspberry-pi-2-model-b/</link>
      <pubDate>Thu, 12 Mar 2015 23:12:00 +0000</pubDate>
      
      <guid>/post/starting-raspberry-pi-2-model-b/</guid>
      <description>
        
          
          
          
        
        
        
          树莓派 2 Mode B 配置详情
  A 900MHz quad-core ARM Cortex-A7 CPU
  1GB RAM
  4 USB ports
  40 GPIO pins
  Full HDMI port
  Ethernet port
  Combined 3.5mm audio jack and composite video
  Camera interface (CSI)
  Display interface (DSI)
  Micro SD card slot
  VideoCore IV 3D graphics core
  
          
        
        </description>
    </item>
    
    <item>
      <title>组装ATRIX 4G Laptop Dock和树莓派</title>
      <link>/post/assemble-atrix-4g-pc-docking-and-raspberry-pi/</link>
      <pubDate>Sat, 28 Feb 2015 02:28:00 +0000</pubDate>
      
      <guid>/post/assemble-atrix-4g-pc-docking-and-raspberry-pi/</guid>
      <description>
        
          
          
          
        
        
        
          清单如下：
 Raspberry Pi B+ Laptop Dock for Motorola ATRIX 4G Micro-HDMI 母对母转接头 HDMI-Micro HDMI 公对公连接线 Micro USB 母对母延长线 USB-Micro USB充电线一根  以下为实物图:
操作:
主要是将一个Micro USB母口和一对USB/Micro USb公口相连，然后就可以通过Laptop Dock进行供电，并且链接Laptop Dock键盘。
下图是一张Laptop Dock接口的照片:
以下为USB引脚定义:
 红 电源+ 白 数据- 绿 数据+ 黑 接地  因此需要将Laptop上的Micro USB引出的电路进行改造，将其中的电源接到Micro USB公口上给树莓派供电，将数据接到USB公口上链接键盘，线路改造图示如下:
接下来就是考验动手能力了，完成后的实物图如下：
          
        
        </description>
    </item>
    
    <item>
      <title>树莓派安装TP WN322G&#43;驱动</title>
      <link>/post/raspberry-pi-install-tp-wn322g-drivers/</link>
      <pubDate>Sat, 07 Feb 2015 12:27:00 +0000</pubDate>
      
      <guid>/post/raspberry-pi-install-tp-wn322g-drivers/</guid>
      <description>
        
          
          
          
        
        
        
          首先查看usb设备
pi@raspi ~ $ lsusb Bus 001 Device 002: ID 0424:9514 Standard Microsystems Corp. Bus 001 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub Bus 001 Device 003: ID 0424:ec00 Standard Microsystems Corp. Bus 001 Device 004: ID 0ace:1215 ZyDAS ZD1211B 802.11g  注意，最后一行为无线网卡信息
打开https://wiki.debian.org/WiFi，查看是否有对照型号的固件
安装对应的固件
pi@raspi ~ $ sudo apt-get install zd1211-firmware  完成后使用iwconfig检查是否已经安装成功
pi@raspi ~ $ iwconfig wlan0 IEEE 802.11bg ESSID:off/any Mode:Managed Access Point: Not-Associated Tx-Power=20 dBm Retry long limit:7 RTS thr:off Fragment thr:off Power Management:off lo no wireless extensions.
          
        
        </description>
    </item>
    
    <item>
      <title>使用youtube-dl下载YouTube视频</title>
      <link>/post/use-youtube-dl-to-download-youtube-video/</link>
      <pubDate>Thu, 08 Jan 2015 11:28:00 +0000</pubDate>
      
      <guid>/post/use-youtube-dl-to-download-youtube-video/</guid>
      <description>
        
          
          
          
        
        
        
          什么是youtube-dl youtube-dl是一个简单的下载youtube视频脚本工具，基于Python。
安装youtube-dl 官方安装方法
sudo curl https://yt-dl.org/latest/youtube-dl -o /usr/local/bin/youtube-dl sudo chmod a+x /usr/local/bin/youtube-dl  或者
sudo wget https://yt-dl.org/downloads/latest/youtube-dl -O /usr/local/bin/youtube-dl sudo chmod a+x /usr/local/bin/youtube-dl  还有两种方法:
sudo pip install youtube-dl brew install youtube-dl  使用youtube-dl youtube-dl [OPTIONS] URL [URL...]  youtube-dl官网 https://github.com/rg3/youtube-dl/
          
        
        </description>
    </item>
    
    <item>
      <title>树莓派设置时区和ntp时间同步</title>
      <link>/post/raspberry-pi-set-timezone-and-ntp/</link>
      <pubDate>Fri, 26 Dec 2014 14:23:00 +0000</pubDate>
      
      <guid>/post/raspberry-pi-set-timezone-and-ntp/</guid>
      <description>
        
          
          
          
        
        
        
          设置时区   使用raspi-config设置
raspi-config
  Internationalisation Options -&amp;gt; Change Timezone
 使用tzselect设置
tzselect
  然后根据提示，选择时区
 手动设置**/etc/localtime**
rm /etc/localtime ln -s /usr/share/zoneinfo/Asia/Shanghai /etc/localtime
  安装配置NTP sudo apt-get install ntp ntpdate  编辑ntp配置文件**/etc/ntp.conf**，添加以下内容
server 0.asia.pool.ntp.org server 1.asia.pool.ntp.org server 2.asia.pool.ntp.org server 3.asia.pool.ntp.org  重启ntp服务
service ntp restart 
          
        
        </description>
    </item>
    
    <item>
      <title>Mapinfo中通过SQL查询筛选区域点</title>
      <link>/post/mapinfo-iris-out-points-with-sql-select/</link>
      <pubDate>Wed, 24 Dec 2014 12:24:00 +0000</pubDate>
      
      <guid>/post/mapinfo-iris-out-points-with-sql-select/</guid>
      <description>
        
          
          
          
        
        
        
          Mapinfo中有一批离散点，现在需要把一部分点筛选出来，可以使用SQL查询功能导出。
首先，打开需要筛选的图层：
然后打开装饰层可编辑：
设置不规则图形样式，建议将填充去掉只留下边框：
使用不规则图形圈出所需要的采样点
注意：边线不要压着采样点，被压线的采样点不算做圈选有效。 Map-&amp;gt;Save Cosmetic Objects 保存装饰图层，这里取名123 然后使用SQL查询功能进行查询
SQL查询时，选择需要交叉的两个图层
查询完成后，Table-&amp;gt;Export 导出查询结果 导出时设置参考下图，可选择**.mif**、**.txt**、**.csv**格式 
          
        
        </description>
    </item>
    
    <item>
      <title>Linux VPS中安装Shadowsocks</title>
      <link>/post/linux-vps-install-shadowsocks/</link>
      <pubDate>Sat, 13 Dec 2014 23:12:00 +0000</pubDate>
      
      <guid>/post/linux-vps-install-shadowsocks/</guid>
      <description>
        
          
          
          
        
        
        
          VPS系统版本: Ubuntu 12.04 32bit
最简单的办法 #apt-get install python-pip #pip install shadowsocks  启动Shadowsock
#ssserver -p 4000 -k sss4k -d start  -p后定义端口号，-k后面设定密码，-d start代表以daemon方式启动
 下面是另外一种方法:
安装shadowsocks-libev 先用aptitude show查看libssl-dev版本
aptitude show libssl-dev  然后根据版本执行以下修改：
libssl &amp;gt; 1.0.1
在/etc/apt/sources.list添加下行：
deb http://shadowsocks.org/debian wheezy main  libssl &amp;gt; 0.9.8 但 &amp;lt; 1.0.0
在/etc/apt/sources.list添加下行：
deb http://shadowsocks.org/debian squeeze main  添加GPG
wget http://shadowsocks.org/debian/1D27208A.gpg sudo apt-key add 1D27208A.gpg  添加完成后更新软件源，然后安装shadowsocks
sudo apt-get update sudo apt-get install python-m2crypto sudo apt-get install shadowsocks-libev  配置/管理shadowsocks服务 配置
          
        
        </description>
    </item>
    
    <item>
      <title>树莓派挂载U盘</title>
      <link>/post/raspberry-pi-mount-udisk-as-the-storage-partition/</link>
      <pubDate>Thu, 11 Dec 2014 21:21:00 +0000</pubDate>
      
      <guid>/post/raspberry-pi-mount-udisk-as-the-storage-partition/</guid>
      <description>
        
          
          
          
        
        
        
          树莓派用的是8g的TF卡，想作为小型NAS有点小，存不了多少东西，于是将一个闲置的32G U盘挂载上，当作存储分区
以下为操作过程：
查看磁盘信息
pi@raspberrypi ~ $ sudo fdisk -l Disk /dev/mmcblk0: 7990 MB, 7990149120 bytes 4 heads, 16 sectors/track, 243840 cylinders, total 15605760 sectors Units = sectors of 1 * 512 = 512 bytes Sector size (logical/physical): 512 bytes / 512 bytes I/O size (minimum/optimal): 512 bytes / 512 bytes Disk identifier: 0x000981cb Device Boot Start End Blocks Id System /dev/mmcblk0p1 8192 122879 57344 c W95 FAT32 (LBA) /dev/mmcblk0p2 122880 15605759 7741440 83 Linux Disk /dev/sda: 32.
          
        
        </description>
    </item>
    
    <item>
      <title>树莓派使用Ngrok实例</title>
      <link>/post/raspberry-pi-install-ngrok/</link>
      <pubDate>Wed, 26 Nov 2014 11:26:00 +0000</pubDate>
      
      <guid>/post/raspberry-pi-install-ngrok/</guid>
      <description>
        
          
          
          
        
        
        
          首先在ngrok https://ngrok.com/注册登录
架设已经在树莓派上安装了Nginx，端口为80
那么下载Linux/ARM版ngrok到树莓派，执行如下命令：
ngrok -authtoken UfATi0wi98gGMqQ+/GsP 80  其中UfATi0wi98gGMqQ+/GsP为你的auth token
然后就会出现如下提示:
Forwarding http://36772918.ngrok.com -&amp;gt; 127.0.0.1:80 Forwarding https://36772918.ngrok.com -&amp;gt; 127.0.0.1:80  按照提示，可以通过那两个二级域名来浏览web服务。
以上验证只需要输入一次，下次可以直接使用如下命令来运行
ngrok 80  ngrok其他用法
 自定义二级域名  使用自定义的字符串代替系统分配的数字
ngrok -subdomain mysubd 80    开启密码保护
ngrok -httpauth &amp;ldquo;user:password&amp;rdquo; 80
  TCP隧道
ngrok tcp 22
  
          
        
        </description>
    </item>
    
    <item>
      <title>Shadowsock使用实例</title>
      <link>/post/shadowsocks-usage/</link>
      <pubDate>Thu, 13 Nov 2014 11:13:00 +0000</pubDate>
      
      <guid>/post/shadowsocks-usage/</guid>
      <description>
        
          
          
          
        
        
        
          Windows下使用shadowsocks 安装设置Shadowsocks for Windows
推荐Shadowsocks for Windows，项目地址 https://github.com/clowwindy/shadowsocks-csharp
下载后打开即可，参考以下设置：
Server IP 服务器IP Server Port 服务器端口 Password 密码 Encryption 加密类型，推荐aes-256-cfb Proxy Port 代理端口 Remarks 备注  完成设置即可。
使用
推荐以下组合：
 Firefox+AutoProxy Chrome+SwitchSharp  代理服务器信息：
代理地址:127.0.0.1 端口:1080 代理方式:socks5  配置切换规则:
勾选:在线规则列表 勾选:AutoProxy兼容列表 URL中输入:http://autoproxy-gfwlist.googlecode.com/svn/trunk/gfwlist.txt 情景模式选择上一步创建的模式.  Android使用shadowsocks(影梭) 影梭下载地址： https://play.google.com/store/apps/details?id=com.github.shadowsocks
          
        
        </description>
    </item>
    
    <item>
      <title>修改树莓派Swap</title>
      <link>/post/modify-the-raspberry-pi-swap-size/</link>
      <pubDate>Thu, 30 Oct 2014 14:30:00 +0000</pubDate>
      
      <guid>/post/modify-the-raspberry-pi-swap-size/</guid>
      <description>
        
          
          
          
        
        
        
          树莓派的swap大小在/etc/dphys-swapfile中定义，默认为100M
pi@raspi:~$ cat /etc/dphys-swapfile CONF_SWAPSIZE=1000 pi@raspi:/mnt$ free -h total used free shared buffers cached Mem: 437M 36M 401M 0B 2.1M 12M -/+ buffers/cache: 22M 415M Swap: 99M 0B 99M pi@raspi:/mnt$  可以自己修改CONF_SWAPSIZE的值，单位为兆(MB)
修改后重启树莓派生效，如下：
pi@raspi:~$ cat /etc/dphys-swapfile CONF_SWAPSIZE=1000 pi@raspi:~$ free -h total used free shared buffers cached Mem: 437M 53M 383M 0B 7.9M 23M -/+ buffers/cache: 22M 415M Swap: 999M 0B 999M 
          
        
        </description>
    </item>
    
    <item>
      <title>功率单位mW与dBm换算</title>
      <link>/post/unit-of-power-mw-and-dbm-conversion/</link>
      <pubDate>Mon, 27 Oct 2014 10:17:00 +0000</pubDate>
      
      <guid>/post/unit-of-power-mw-and-dbm-conversion/</guid>
      <description>
        
          
          
          
        
        
        
          功率/电平（dBm):放大器的输出能力，一般单位为W、mW、dBm。dBm是取1mw作基准值，以分贝表示的绝对功率电平。
换算公式：
电平（dBm）=10lgW  示例：
 5W → 10lg5000 = 37dBm 10W → 10lg10000 = 40dBm 20W → 10lg20000 = 43dBm  从上不难看出，功率每增加一倍，电平值增加3dBm
功率单位mW和dBm的换算表
          
        
        </description>
    </item>
    
    <item>
      <title>mapinfo用图片制作地图文件</title>
      <link>/post/picture-converted-to-tab-map-file/</link>
      <pubDate>Thu, 16 Oct 2014 23:18:00 +0000</pubDate>
      
      <guid>/post/picture-converted-to-tab-map-file/</guid>
      <description>
        
          
          
          
        
        
        
          获取图片
以百度地图为例，制作户县县城范围
用截图软件，将需要的范围截图保存，如下：
制作TAB
用Mapinfo打开图片(hx.png)，会提示是否注册，选择注册(Register)
然后出现图片注册界面
简单说一下原理问题。
在图片上找最少3个坐标，然后对应3个实际经纬度信息，为什么最少3个？因为三点确定一个平面嘛！
下来录入经纬度信息，点击Add，在图片上点一个点，按照提示输入对应的经纬度，如下：
经纬度信息可以使用GoogleEarth获得。
以下是制作完成的情况
点击完成后，就会生成一个同名的tab文件(hx.tab)。
          
        
        </description>
    </item>
    
    <item>
      <title>CentOS中Crontab安装和使用</title>
      <link>/post/install-crontab-on-centos-and-usage/</link>
      <pubDate>Mon, 22 Sep 2014 19:22:00 +0000</pubDate>
      
      <guid>/post/install-crontab-on-centos-and-usage/</guid>
      <description>
        
          
          
          
        
        
        
          安装crontab: [root@CentOS ~]# yum install vixie-cron [root@CentOS ~]# yum install crontabs  说明：
 vixie-cron软件包是cron的主程序； crontabs软件包是用来安装、卸装、或列举用来驱动 cron 守护进程的表格的程序。  cron 是linux的内置服务，但它不自动起来，可以用以下的方法启动、关闭这个服务：
/sbin/service crond start //启动服务 /sbin/service crond stop //关闭服务 /sbin/service crond restart //重启服务 /sbin/service crond reload //重新载入配置  查看crontab服务状态：service crond status
手动启动crontab服务：service crond start
查看crontab服务是否已设置为开机启动，执行命令：ntsysv
加入开机自动启动:chkconfig --level 35 crond on
rontab命令 功能说明： 设置计时器。
语法： crontab [-u &amp;lt;用户名称&amp;gt;][配置文件] 或 crontab [-u &amp;lt;用户名称&amp;gt;][-elr]
补充说明： cron是一个常驻服务，它提供计时器的功能，让用户在特定的时间得以执行预设的指令或程序。只要用户会编辑计时器的配置文件，就可以使用计时器的功能。其配置文件格式如下： Minute Hour Day Month DayOFWeek Command
参数:
          
        
        </description>
    </item>
    
    <item>
      <title>Excel单元格插入换行符</title>
      <link>/post/excel-cell-insert-a-newline/</link>
      <pubDate>Wed, 20 Aug 2014 18:20:00 +0000</pubDate>
      
      <guid>/post/excel-cell-insert-a-newline/</guid>
      <description>
        
          
          
          
        
        
        
          一般情况下，单元格插入换行符可以使用Alt+Enter来实现
但如果需要批量操作的话，那么可以使用 **CHAR(10)**来表示换行符
实例如下，一看就懂！
          
        
        </description>
    </item>
    
    <item>
      <title>Linux下CLI模式使用Dropbox</title>
      <link>/post/cli-model-of-linux-using-dropbox/</link>
      <pubDate>Tue, 19 Aug 2014 08:19:00 +0000</pubDate>
      
      <guid>/post/cli-model-of-linux-using-dropbox/</guid>
      <description>
        
          
          
          
        
        
        
          下载Dropbox 32-bit:
cd ~ &amp;amp;&amp;amp; wget -O - &amp;quot;https://www.dropbox.com/download?plat=lnx.x86&amp;quot; | tar xzf -  64-bit:
cd ~ &amp;amp;&amp;amp; wget -O - &amp;quot;https://www.dropbox.com/download?plat=lnx.x86_64&amp;quot; | tar xzf -  连接到Dropbox ~/.dropbox-dist/dropboxd  按照提示，在浏览器中打开链接，确认授权。
CLI模式使用Dropbox 下载执行脚本:
wget https://www.dropbox.com/download?dl=packages/dropbox.py chmod +x dropbox.py  dropbox.py使用
root@hkvps:~# ./dropbox.py help Dropbox command-line interface commands: Note: use dropbox help &amp;lt;command&amp;gt; to view usage for a specific command. status get current status of the dropboxd help provide help puburl get public url of a file in your dropbox stop stop dropboxd running return whether dropbox is running start start dropboxd filestatus get current sync status of one or more files ls list directory contents with current sync status autostart automatically start dropbox at login exclude ignores/excludes a directory from syncing lansync enables or disables LAN sync 
          
        
        </description>
    </item>
    
    <item>
      <title>树莓派中使用TL-WN725N</title>
      <link>/post/use-tl-wn725n-in-raspberry-pi/</link>
      <pubDate>Tue, 12 Aug 2014 18:12:00 +0000</pubDate>
      
      <guid>/post/use-tl-wn725n-in-raspberry-pi/</guid>
      <description>
        
          
          
          
        
        
        
          Raspbian版本 2014-01-07-wheezy-raspbian.img
下载地址为http://cdn.lyq.wiki/res/8188eu-20140616.tar.gz
首先固网链接树莓派，通过SSH登录
wget http://cdn.lyq.wiki/res/8188eu_31024_614.zip unzip 8188eu_31024_614.zip sudo mv 8188eu.ko /lib/modules/`uname -r`/kernel/drivers/net/wireless sudo chown root:root /lib/modules/`uname -r`/kernel/drivers/net/wireless/8188eu.ko sudo mv rtl8188eufw.bin /lib/firmware/rtlwifi/ sudo chown root:root /lib/firmware/rtlwifi/rtl8188eufw.bin sudo depmod -a sudo modprobe 8188eu  然后编辑/etc/netwok/interfaces，添加以下内容
allow-hotplug wlan0 auto wlan0 iface wlan0 inet manual wpa-roam /etc/mywpa.conf iface default inet dhcp  新建mywpa.conf写入链接配置vi /etc/mywpa.conf
network={ ssid=&amp;quot;YOUR SSID&amp;quot; proto=RSN key_mgmt=WPA-PSK pairwise=CCMP TKIP group=CCMP TKIP psk=&amp;quot;YOUR PASSWORD&amp;quot; }  重启系统
          
        
        </description>
    </item>
    
    <item>
      <title>树莓派安装Tonido打造个人云服务</title>
      <link>/post/raspberry-pi-install-tonido-build-personal-cloud/</link>
      <pubDate>Tue, 12 Aug 2014 18:12:00 +0000</pubDate>
      
      <guid>/post/raspberry-pi-install-tonido-build-personal-cloud/</guid>
      <description>
        
          
          
          
        
        
        
          安装Tonido sudo mkdir /usr/local/tonido cd /usr/local/tonido sudo wget http://patch.codelathe.com/tonido/live/installer/armv6l-rpi/tonido.tar.gz sudo tar -zxvf tonido.tar.gz ./tonido.sh start  浏览器打开http://ip:10001开始注册设置 ip为树莓派的地址
安装多媒体解码器 Tonido支持在线播放音频，但需要安装设置解码器
cd /usr/local/tonido sudo apt-get install ffmpeg sudo ln -s /usr/bin/ffmpeg ffmpeg.exe sudo ln -s /usr/bin/ffmpeg ffmpegv.exe  设置开机启动  下载脚本文件tonido wget http://cdn.lyq.wiki/res/tonido 设置脚本权限 sudo cp tonido /etc/init.d/ sudo chmod +x /etc/init.d/tonido 安装脚本 sudo update-rc.d tonido defaults  客户端下载 Tonido Sync for Windows http://www.tonido.com/download.php?TonidoSync.exe Tonido Sync for Mac http://www.tonido.com/download.php?TonidoSync.dmg Tonido Sync for Linux http://www.
          
        
        </description>
    </item>
    
    <item>
      <title>Centos7下安装NTFS-3G</title>
      <link>/post/centos7-install-ntfs-3g/</link>
      <pubDate>Sun, 10 Aug 2014 08:10:00 +0000</pubDate>
      
      <guid>/post/centos7-install-ntfs-3g/</guid>
      <description>
        
          
          
          
        
        
        
          Centos7安装指南
安装NTFS-3G 下载ntfs-3g_ntfsprogs-2014.2.15.tgz http://cdn.lyq.wiki/res/ntfs-3g_ntfsprogs-2014.2.15.tgz
#tar zxf ntfs-3g_ntfsprogs-2014.2.15.tgz #cd ntfs-3g_ntfsprogs-2014.2.15 #make #make install  如果make无法成功的话，请重新安装gcc yum install gcc
使用NTFS-3G 临时挂载window分区：
#mkdir /mnt/windowsc/ #mount -t ntfs-3g /dev/sda1 /mnt/windosc/  编辑fstab开机挂载分区，可以参考通过fstab自动挂载分区
/dev/sda1 /mnt/windowsc ntfs-3g defaults 0 0  NTFS-3G主页
          
        
        </description>
    </item>
    
    <item>
      <title>CentOS7安装指南</title>
      <link>/post/centos7-installation-guide/</link>
      <pubDate>Sat, 09 Aug 2014 08:09:00 +0000</pubDate>
      
      <guid>/post/centos7-installation-guide/</guid>
      <description>
        
          
          
          
        
        
        
          下载Centos7安装镜像: http://mirrors.aliyun.com/centos/7.0.1406/isos/x86_64/CentOS-7.0-1406-x86_64-GnomeLive.iso
将下载后的镜像写入U盘:
#dd if=CentOS-7.0-1406-x86_64-GnomeLive.iso of=/dev/sdb bs=4M &amp;amp;&amp;amp; sync  关闭电脑，从U盘启动。
进入桌面后，点击Install to Hard Drive开始安装。
选择语言
这里选择简体中文(中国)
安装信息摘要
这里需要设置四部分内容：日期和时间、键盘、安装位置、网络和主机名
设置安装目标和位置,选择本地磁盘，然后勾选我要配置分区以自定义分区信息。
点击完成进入手动分区。
在左侧选择具体磁盘分区，右边编辑挂载信息，然后点击更新设置
以下为编辑/home挂载点信息：
下图为编辑后的分区信息，点击左上角完成
查看更改摘要，确认没问题了就点击接受更改
设置网络和主机名
完成设置后，点击右下角开始安装
用户设置
设置ROOT密码
创建用户
所有配置完成后，等待安装结束。。。
提示安装完成，点击右下角Quit退出。
          
        
        </description>
    </item>
    
    <item>
      <title>Centos7配置grub添加windows引导菜单</title>
      <link>/post/centos7-configuration-grub-to-add-the-windows-boot-menu/</link>
      <pubDate>Sat, 09 Aug 2014 08:09:00 +0000</pubDate>
      
      <guid>/post/centos7-configuration-grub-to-add-the-windows-boot-menu/</guid>
      <description>
        
          
          
          
        
        
        
          进入/etc/grub.d/目录
#cd /etc/grub.d/  新建15_Windows文件，写入以下内容：
#! /bin/sh -e echo &amp;quot;#Adding Windows&amp;quot; &amp;gt;&amp;amp;2 cat &amp;lt;&amp;lt; EOF menuentry &amp;quot;Windows&amp;quot; { set root=(hd0,1) chainloader +1 } EOF  其中(hd0,1)是本地磁盘windows主扇区号，可以通过fdisk -l来查看确定。
设定文件权限
#chmod 755 15_Windows  编辑/etc/default/grub来设定菜单等待时间
GRUB_TIMEOUT=2 GRUB_DISTRIBUTOR=&amp;quot;$(sed &#39;s, release .*$,,g&#39; /etc/system-release)&amp;quot; GRUB_DEFAULT=saved GRUB_DISABLE_SUBMENU=true GRUB_TERMINAL_OUTPUT=&amp;quot;console&amp;quot; GRUB_CMDLINE_LINUX=&amp;quot;vconsole.keymap=us crashkernel=auto vconsole.font=latarcyrheb-sun16 rhgb quiet&amp;quot; GRUB_DISABLE_RECOVERY=&amp;quot;true&amp;quot;  修改GRUB_TIMEOUT值即可。
设置Windows为默认启动项
#grub2-set-default &amp;quot;windows&amp;quot;  然后运行以下命令，使以上修改生效：
# grub2-mkconfig -o /boot/grub2/grub.cfg 
          
        
        </description>
    </item>
    
    <item>
      <title>华为C8817L解锁与Root</title>
      <link>/post/huawei-c8817l-unlock-and-root/</link>
      <pubDate>Thu, 07 Aug 2014 18:17:00 +0000</pubDate>
      
      <guid>/post/huawei-c8817l-unlock-and-root/</guid>
      <description>
        
          
          
          
        
        
        
          解锁 解锁Bootloader首先需要获得解锁码，以下为官方解锁页：
获取解锁码 http://www.emui.com/plugin.php?id=unlock&amp;amp;mod=detail
提交成功后会获得16位的解锁码。
下载以下两个文件：
c8817l驱动 http://pan.baidu.com/s/1jG3fBhW
google adb工具包 http://pan.baidu.com/s/1dDpI77b
安装好驱动城区，解开adb工具包，cmd进入adb包目录。
关机，同时按住音量下和电源键开机，进入到fastboot模式。
usb链接电脑，参考以下解锁：
其中fastboot oem unlock后为16位解锁码
解锁成功后手机会自动重启。
进入开发者模式
关于-&amp;gt;点击4次版本号
Root 360一键root,其他不多说了！
          
        
        </description>
    </item>
    
    <item>
      <title>结合Jekyll与Github Page建立免费博客</title>
      <link>/post/create-a-free-blog-with-jekyll-and-github-page/</link>
      <pubDate>Wed, 16 Jul 2014 07:16:00 +0000</pubDate>
      
      <guid>/post/create-a-free-blog-with-jekyll-and-github-page/</guid>
      <description>
        
          
          
          
        
        
        
          安装Jekyll  Windows下安装Jekyll Debian下安装Jekyll  Jekyll使用 待补充
将Jekyll内容发布到Github 首先登录Github，新建一个用户名.github.com的repositories
然后将该 Repositories clone到本地文件夹。
在本地文件夹生成Jekyll站点，然后使用jekyll server生成内容。
下来将生成后的内容发布到Github
git add --all git commit -m &amp;quot;Update&amp;quot; git remote add origin git@github.com:用户名/用户名.github.com.git git push origin master  设置自定义域名 在Jekyll站点目录中新建CNAME文件，写入域名
然后将域名A记录指向github提供的ip地址204.232.175.78或207.97.227.245
          
        
        </description>
    </item>
    
    <item>
      <title>创建固定大小的文件</title>
      <link>/post/create-a-fixed-size-file/</link>
      <pubDate>Thu, 10 Jul 2014 07:10:00 +0000</pubDate>
      
      <guid>/post/create-a-fixed-size-file/</guid>
      <description>
        
          
          
          
        
        
        
          有时我们需要新建指定大小的文件，很多人可能使用压缩软件的分割功能，分割出指定大小的文件。
其实操作系统本身自带的命令就可以胜任以上任务。
Windows
新建名为1G-File，大小1G的文件
fsutil file createnew 1G-File 1073741824  Linux
新建名为2G-File，大小为2G的文件
dd if=/dev/zero of=./2G-File bs=1M count=2048 
          
        
        </description>
    </item>
    
    <item>
      <title>Typecho主题aquan</title>
      <link>/post/typecho-theme-aquan/</link>
      <pubDate>Tue, 24 Jun 2014 12:23:00 +0000</pubDate>
      
      <guid>/post/typecho-theme-aquan/</guid>
      <description>
        
          
          
          
        
        
        
          最近恢复了博客，弄了个新皮亮相，欢迎大家围观！
名称:aquan 平台:typecho 预览图：
下载 aquan_theme.zip
          
        
        </description>
    </item>
    
    <item>
      <title>树莓派配置VNC</title>
      <link>/post/raspberry-pi-configuration-vnc/</link>
      <pubDate>Tue, 11 Mar 2014 00:23:00 +0000</pubDate>
      
      <guid>/post/raspberry-pi-configuration-vnc/</guid>
      <description>
        
          
          
          
        
        
        
          安装VNC Server
$sudo apt-get install tightvncserver $sudo apt-get install ttf-wqy-microhei //安装中文字体  使用VNC Server
$vncserver -geometry 1024x768 //分辨率，推荐960x640，或者640x480 $vncserver -kill :1 //结束vncserver进程  Real VNC Viewer链接方法： 192.168.1.2:1
          
        
        </description>
    </item>
    
    <item>
      <title>树莓派修改软件源</title>
      <link>/post/raspberry-pi-modify-software-source/</link>
      <pubDate>Mon, 10 Mar 2014 12:31:00 +0000</pubDate>
      
      <guid>/post/raspberry-pi-modify-software-source/</guid>
      <description>
        
          
          
          
        
        
        
          中国国内推荐阿里云的开源镜像服务，地址为http://mirrors.aliyun.com/
vi /etc/apt/sources.list  将默认的raspbian.org源注释(#)掉，加入阿里云的raspbian源
deb http://mirrors.aliyun.com/raspbian/raspbian/ jessie main non-free contrib deb-src http://mirrors.aliyun.com/raspbian/raspbian/ jessie main non-free contrib  更新系统
apt-get update&amp;amp;&amp;amp;apt-get upgrade -y 
          
        
        </description>
    </item>
    
    <item>
      <title>树莓派与DNSPod动态域名解析</title>
      <link>/post/raspberry-pi-and-dnspod-dynamic-dns/</link>
      <pubDate>Mon, 03 Mar 2014 03:03:00 +0000</pubDate>
      
      <guid>/post/raspberry-pi-and-dnspod-dynamic-dns/</guid>
      <description>
        
          
          
          
        
        
        
          所需条件
 Raspberry Pi TP-Link路由器 DNSPod帐户 域名  配置路由器 进入路由器的DHCP服务器-&amp;gt;静态地址分配菜单，为Raspberry Pi分配静态IP地址，例如：192.168.1.200
进入路由器的安全功能-&amp;gt;远端WEB管理菜单，设置WEB管理端口为一个非80值，例如82
进入路由器的转发规则-&amp;gt;DMZ主机菜单，将DMZ主机IP地址设置为Raspberry Pi的ip地址，然后启用保存。
设置DNSPod动态域名解析 首先登录DNSPod网页管理域名，将二级域名www 的A记录解析到路由器外网IP(可通过路由器管理首页查询，或者通过浏览ip138.com来获得)
注：一级域名请解析**@**的A记录。
下载DNSPod官方客户端Lite https://support.dnspod.cn/Support/api
解压后双击打开登录，从右侧信息列表中也可以看到本机最新IP，点击相应域名后的动态解析按钮，在动态解析设置中右键点击相应的动态记录启用即可，关闭DNSPod官方客户端Lite。
设置Raspberry Pi 安装Web服务器软件(Nginx)
#apt-get install nginx #/etc/init.d/nginx start  内网可以通过浏览`http://192.168.1.129&amp;quot;来检查Nginx是否正常运行。
浏览https://gist.githubusercontent.com/chuangbo/833369，下载动态域名解析脚本(pypod.py)
编辑pypod.py修改以下内容：
login_email=&amp;quot;email&amp;quot;, # DSNPod帐户邮箱 login_password=&amp;quot;password&amp;quot;, # DSNPod帐户密码 domain_id=100, # 域名id record_id=100, # 记录id sub_domain=&amp;quot;www&amp;quot;, # 子域名  其中域名id与记录id可以通过以下命令获取：
curl -k https://dnsapi.cn/Domain.List -d &amp;quot;login_email=xxx&amp;amp;login_password=xxx&amp;quot; curl -k https://dnsapi.cn/Record.List -d &amp;quot;login_email=xxx&amp;amp;login_password=xxx&amp;amp;domain_id=xxx&amp;quot;  提示：如果你使用了www子域名，则需要获取www的记录id，如果使用一级域名(@)，则需要获取**@**的记录id。
编辑完pypod.py保存退出，使用以下命令运行：
#python pypod.py  现在可以通过域名来浏览Raspberry Pi上的Web内容了。
pypod.py开机运行
添加/usr/bin/python /home/pi/pypod.
          
        
        </description>
    </item>
    
    <item>
      <title>树莓派安装Python开发环境与GPIO库</title>
      <link>/post/raspberry-pi-install-python-development-environment-and-gpio-library/</link>
      <pubDate>Sun, 02 Mar 2014 12:31:00 +0000</pubDate>
      
      <guid>/post/raspberry-pi-install-python-development-environment-and-gpio-library/</guid>
      <description>
        
          
          
          
        
        
        
          安装python
$sudo apt-get install python-dev  更新
$sudo easy_install -U distribute  安装python-pip
$sudo apt-get install python-pip  添加国内pypi镜像
在~/.pip/pip.conf中添加
[global] index-url = http://mirrors.aliyun.com/pypi/simple/  安装python的GPIO库
$sudo pip install rpi.gpio 
          
        
        </description>
    </item>
    
    <item>
      <title>开始使用树莓派</title>
      <link>/post/starting-use-raspberry-pi/</link>
      <pubDate>Fri, 28 Feb 2014 12:28:00 +0000</pubDate>
      
      <guid>/post/starting-use-raspberry-pi/</guid>
      <description>
        
          
          
          
        
        
        
          安装系统 从官网下载系统镜像，推荐Raspbian
http://downloads.raspberrypi.org/raspbian_latest
将下载后的zip文件解压，得到2014-01-07-wheezy-raspbian.img文件。
准备一张SD卡，最好容量大于4GB，Class10
将镜像写入SD卡
 Linux下推荐使用dd名来写入镜像  使用fdisk -l检查分区信息，比如sd卡设备为**/dev/sdb**，使用以下命令写入：
#dd if=2014-01-07-wheezy-raspbian.img of=/dev/sdb bs=1M   Windows下推荐使用Win32DiskImager写入镜像  Win32DiskImager下载地址：http://sourceforge.net/projects/win32diskimager/
下载后打开软件，选择好镜像文件与USB设备，然后点击Write写入。
开机进入系统 将已写入系统的SD卡插入Raspberry Pi，通过固网链接路由器，然后使用USB供电启动。
正常启动后，板载的ACT，PWR、FDX、LNK、100五个指示灯均点亮。
通过SSH连接Raspberry Pi
查看Raspberry Pi IP地址
#nmap -sP 192.168.1/24  检查出MAC后标注(Raspberry Pi Foundation)的即为Raspberry Pi主机。
然后通过SSH来链接主机
#ssh 192.168.1.127  用户名为pi，默认密码为raspberry
Widnows下推荐使用Putty
设置Raspberry 运行设置工具sudo raspi-config
 选择Expand Filesystem扩展文件系统 Change User Passwd 修改默认用户pi的密码，当然也可以在系统中使用passwd命令来更改。 Advanced Options-&amp;gt;Hostname 修改主机名 Overclock 超频，建议900Mhz  
          
        
        </description>
    </item>
    
    <item>
      <title>Kindle Paperwhite越狱</title>
      <link>/post/kindle-paperwhite-jailbreak/</link>
      <pubDate>Thu, 27 Feb 2014 12:17:00 +0000</pubDate>
      
      <guid>/post/kindle-paperwhite-jailbreak/</guid>
      <description>
        
          
          
          
        
        
        
          越狱 下载kindle-jailbreak-1.8.N.zip解压，将得到的kindle-5.4-jailbreak.zip再解压，然后把解压出的三个文件放到KPW根目录
然后更新系统，主页-菜单-设置-菜单-更新您的kindle
底部显示**** JAILBREAK ****即表示越狱成功！
安装MKK 下载kindle-mkk-20140214.zip解压，将Update_mkk-20140214-k5-ALL_install.bin复制到KPW根目录更新系统
安装KUAL 下载KUAL-v2.3.zip 解压，将KUAL-KDK-2.0.azw2放到documents文件夹，点击图标即可运行KUAL
安装终端 下载kterm-0.7.zip解压，然后将kterm文件夹复制到KPW根目录下的extensions，即可通过KUAL来打开kterm。
**提示：**双指点击唤醒菜单。
安装USBNetwork 解压kindle-usbnet-0.15.N.zip，将update_usbnet_0.15.N_install_touch_pw.bin放到根目录，然后更新系统安装，完成后可通过KUAL来打开USBNetwork。
通过USBNetwork来链接PC，有时需要安装驱动，在这里提供undrivers.inf文件，安装时选择该文件即可。
以上所有文件下载地址： http://pan.baidu.com/s/1eQdzU6Y
          
        
        </description>
    </item>
    
    <item>
      <title>入手树莓派1 Model B</title>
      <link>/post/starting-raspberry-pi-1-model-b/</link>
      <pubDate>Wed, 26 Feb 2014 12:21:00 +0000</pubDate>
      
      <guid>/post/starting-raspberry-pi-1-model-b/</guid>
      <description>
        
          
          
          
        
        
        
          刚刚入手Raspberry Pi 1 Model B
配置详情
 Broadcom BCM2835 SoC full HD multimedia applications processor 700MHz low power ARM1176JZ-F applications processor Broadcom VideoCore IV, OpenGL ES 2.0, 1080p30 h.264/MPEG-4 AVC high profile decoder 512MB SDRAM 10/100 Ethernet RJ 45 on board network Storage via SD/ MMC/ SDIO card slot Dual USB connector HDMI (rev 1.3 &amp;amp; 1.4) composite RCA (PAL and NTSC) 3.5mm jack, HDMI Linux operating system  正面图：
          
        
        </description>
    </item>
    
    <item>
      <title>Ubuntu下安装VPN</title>
      <link>/post/install-vpn-on-ubuntu/</link>
      <pubDate>Sun, 23 Feb 2014 12:23:00 +0000</pubDate>
      
      <guid>/post/install-vpn-on-ubuntu/</guid>
      <description>
        
          
          
          
        
        
        
          安装pptpd
#apt-get install pptpd  IP设置
#vi /etc/pptpd.conf  添加以下内容:
localip 192.18.0.1 remoteip 192.168.0.200-230  设置DNS
#vi/etc/ppp/pptpd-options  添加以下内容：
ms-dns 192.168.1.1 ms-dns 8.8.8.8  添加用户
#vi /etc/ppp/chap-secrets  添加以下内容:
name * passwd *  重启vpn
#/etc/init.d/pptpd restart  允许ip4访问外网
#vi /etc/sysctl.conf net.ipv4.ip_forward=1 //取消本行前注释符(*) #sysctl -p 
          
        
        </description>
    </item>
    
    <item>
      <title>Qemu for windows 使用实例</title>
      <link>/post/qemu-for-windows-usages/</link>
      <pubDate>Tue, 11 Feb 2014 12:21:00 +0000</pubDate>
      
      <guid>/post/qemu-for-windows-usages/</guid>
      <description>
        
          
          
          
        
        
        
          下载安装QEMU for Windows
32Bit下载地址 64Bit下载地址
双击下载后的exe文件完成安装。
QEMU for Windows使用   直接启动QEMU
qemu-system-i386
  加载光盘镜像
qemu-system-i386 -cdrom image.iso
  创建磁盘镜像
qemu-img create disk.img 100M
  加载磁盘镜像
qemu-system-i386 -hdd disk.img
  指定内存大小与CPU数
qemu-system-i386 -m 256M -smp 2 -hdd disk.img
  同时加载磁盘镜像与光盘镜像，并且从光盘镜像启动
qemu-system-i386 -cdrom image.iso -hdd disk.img -boot d
其中-boot后面的d代表从光盘启动，可用引导项：a, b (软驱 1,2), c (第一块硬盘), d (第一个CD-ROM), n-p (从网络启动), 默认为第一块硬盘。
  注释
以上qemu-system-i386命令，为启动i386虚拟环境命令，同样qemu可以模拟其他环境，可使用命令如下：
qemu-system-aarch64.exe qemu-system-aarch64w.exe qemu-system-alpha.exe qemu-system-alphaw.
          
        
        </description>
    </item>
    
    <item>
      <title>VPS优化</title>
      <link>/post/optimization-vps/</link>
      <pubDate>Sat, 01 Feb 2014 12:31:00 +0000</pubDate>
      
      <guid>/post/optimization-vps/</guid>
      <description>
        
          
          
          
        
        
        
          pdksh替代bash $sudo apt-get install pdksh $sudo vi /etc/shells  添加/bin/pdksh到/etc/shells文件
$chsh -s /bin/pdksh  重新登录即可。
修改SSH端口 #vi /etc/ssh/sshd_config  将Port 22中的22改为自定义数字即可
# /etc/init.d/ssh restart  dropbear替代openssh $sudo apt-get install dropbear $sudo /etc/init.d/ssh stop $sudo vi /etc/default/dropbear  修改NO_START=0,修改DROPBEAR_PORT为自定义端口号
$sudo /etc/init.d/dropbear start $sudo apt-get remove openssh-server $sudo apt-get autoremove  关闭多余的TTY Ubuntu 12.04 server如下操作
#cd /etc/init/ #mv tty2.conf tty2.conf.bak #mv tty3.conf tty2.conf.bak #mv tty4.conf tty2.conf.bak #mv tty5.conf tty2.conf.bak #mv tty6.conf tty2.conf.bak #reboot  Debian 7如下操作
          
        
        </description>
    </item>
    
    <item>
      <title>BitTorrent Sync使用实例</title>
      <link>/post/bittorrent-sync-usages/</link>
      <pubDate>Tue, 21 Jan 2014 01:21:00 +0000</pubDate>
      
      <guid>/post/bittorrent-sync-usages/</guid>
      <description>
        
          
          
          
        
        
        
          BitTorrent Sync是BitTorrent Inc推出的一款多平台同步工具，支持Windows、Linux、MAC、FreeBSD、IOS、Android、Windows Phone，还有许多NAS设备。
具体的功能介绍请转至官网 https://www.getsync.com/intl/zh_cn/features
下载地址 https://www.getsync.com/intl/zh_cn/platforms/desktop
在此提供镜像下载http://www.getos.org/btsync/
安装BitTorrent Sync Windows版本，双击下载后的EXE文件安装。
Linux版，解压下载后的btsync_i386.tar.gz，运行即可
tar zxvf btsync_i386.tar.gz cp btsync /usr/bin ./btsync  然后可以通过127.0.0.1:8888来进行设置管理
为了安全期间，不推荐使用默认配置，建议自定义端口
btsync --dump-sample-config&amp;gt;bs.conf vi bs.conf  找到如下内容，将8888修改为自定义端口号
&amp;quot;webui&amp;quot; : { &amp;quot;listen&amp;quot; : &amp;quot;0.0.0.0:8888&amp;quot; // remove field to disable WebUI  然后通过以下命令加载自定义配置文件
btsync --config bs.conf   Windows版与Linux版的软件界面大致相同，以下以linux为例说明。
配置BitTorrent Sync 第一次使用BitTorrent Sync需要进行一系列设置，如下所示：
设置管理员账号以及密码 *Windows不需要
账号设定完成后BitTorrent Sync会提示登录以继续使用，登录后继续下面设置。
然后是使用条款和Pro版本试用(30天)提示，直接同意。
下来选择连接设备，一般选择This is my first Sync device，如果你已经在其他设备上安装了BitTorrent Sync，并且需要将该设备的内容全部同步到新设备，可以选择Link a device already running Sync，这个在后边再讲。
          
        
        </description>
    </item>
    
    <item>
      <title>VPS下自动备份文件和数据库</title>
      <link>/post/automatic-backup-files-and-database-on-vps/</link>
      <pubDate>Mon, 13 Jan 2014 01:13:00 +0000</pubDate>
      
      <guid>/post/automatic-backup-files-and-database-on-vps/</guid>
      <description>
        
          
          
          
        
        
        
          新建脚本，名为autoback.sh
#vi autoback.sh  脚本(autoback.sh)内容如下:
#!/bin/sh #备份网站目录/home/www/ tar zcvf /home/backup/www$(date + &amp;quot;%Y%m%d&amp;quot;).tar.gz /home/www/* #备份数据库 www /usr/local/mysql/bin/mysqldump -uroot -ppassword dbname &amp;gt; /home/backup/dbname$(date +&amp;quot;%Y%m%d&amp;quot;).sql #删除三天前的备份 cd /home/backup/ rm -f *$(date -d -3day +&amp;quot;%Y%m%d&amp;quot;)*  将脚本(autoback.sh)添加到自动执行任务列表:
#chmod +x autoback.sh #crontab -e 59 23 * * * /root/autoback.sh  推荐注册Dropbox，参考**Linux下CLI模式使用Dropbox**，将备份文件自动同步到Dropbox。
          
        
        </description>
    </item>
    
    <item>
      <title>Typecho主题Logs</title>
      <link>/post/typecho-theme-logs/</link>
      <pubDate>Mon, 23 Dec 2013 21:23:00 +0000</pubDate>
      
      <guid>/post/typecho-theme-logs/</guid>
      <description>
        
          
          
          
        
        
        
          弄了个Typecho主题，名为Logs
预览:
基本完善，有个别可能需要小修改，先贴出来分享给看得上的人
本站就是使用的这个主题，所以就不贴预览图了
Update 2014/01/02
 边栏添加搜索框 优化一些代码  Update 2013/12/25
 修改导航栏UI 启用友链插件，更改友链以及广告链接输出方式，友链插件地址http://www.imhan.com/archives/typecho-links/  Update 2013/12/22
 评论ui完善 添加favicon.ico  下载 Logs1.1.zip
          
        
        </description>
    </item>
    
    <item>
      <title>修复grub引导</title>
      <link>/post/repair-grub-boot/</link>
      <pubDate>Thu, 12 Dec 2013 12:13:00 +0000</pubDate>
      
      <guid>/post/repair-grub-boot/</guid>
      <description>
        
          
          
          
        
        
        
          笔记本原来安装的Linux/Windows XP双系统，今天重新安装了Windows7，但是开机的grub引导被搞掉了，找了下grub的man看了半天，摸索出来如何修复原来的grub引导。
首先，使用Linux live cd引导系统，然后按照以下操作：
检查分区信息
ubuntu@ubuntu:~$ sudo -s root@ubuntu:~# lsblk NAME MAJ:MIN RM SIZE RO TYPE MOUNTPOINT sda 8:0 0 465.8G 0 disk ├─sda1 8:1 0 40G 0 part ├─sda2 8:2 0 1K 0 part ├─sda5 8:5 0 4G 0 part [SWAP] ├─sda6 8:6 0 20G 0 part ├─sda7 8:7 0 20G 0 part ├─sda8 8:8 0 100G 0 part ├─sda9 8:9 0 200G 0 part └─sda10 8:10 0 81.
          
        
        </description>
    </item>
    
    <item>
      <title>Kindle Paperwhite安装多看阅读</title>
      <link>/post/kindle-paperwhite-with-duokan/</link>
      <pubDate>Sat, 12 Oct 2013 12:01:00 +0000</pubDate>
      
      <guid>/post/kindle-paperwhite-with-duokan/</guid>
      <description>
        
          
          
          
        
        
        
          安装多看阅读 下载地址: http://bbs.xiaomi.cn/forum-679-1.html
将下载的zip包解压，安装方法如下:
  Kindle原系统下，连接USB线到PC，拷贝1个文件夹和2个文件到Kindle磁盘。
 将DK_System文件夹拷贝至Kindle根目录 将MOBI8_DEBUG文件拷贝至Kindle根目录 将duokan.mobi文件拷贝至Kindle的documents目录 然后弹出Kindle磁盘，断开USB线。    直到在原系统能看见一本新书 《duokan 安装文档》。
在原系统下打开 《duokan 安装文档》（备注：机器要是竖屏而不是横屏）。  在文档的中间看到Install按钮， 点击该按钮，按照屏幕上的提示进行安装。
屏保  大小: 758x1024 格式: PNG 色调: 黑白  存放目录\DK_System\xKindle\res\ScreenSaver\
Kindle Paperwhite预置壁纸 http://vdisk.weibo.com/s/u6MCqFbm65gX2
字典 字典结构: .dz .idx .ifo 三个文件
字典存放目录\DK_System\xKindle\res\dict\
词典下载:
 新华字典 http://vdisk.weibo.com/s/u6MCqFbm65h9Z 朗道字典 http://vdisk.weibo.com/s/u6MCqFbm65gYe 牛津字典 http://vdisk.weibo.com/s/u6MCqFbm65gY6 古汉语常用字典 http://vdisk.weibo.com/s/u6MCqFbm65gY1 格林斯字典 http://vdisk.weibo.com/s/u6MCqFbm65gYm  编辑\DK_System\xKindle\res\dict\dict.dat可以自定义索引顺序，如下:
/mnt/us/DK_System/xKindle/res/dict/oxford-gb-formated.ifo /mnt/us/DK_System/xKindle/res/dict/Collins5.ifo /mnt/us/DK_System/xKindle/res/dict/langdao-ec-gb.ifo /mnt/us/DK_System/xKindle/res/dict/ghycycd.ifo /mnt/us/DK_System/xKindle/res/dict/xhzd.ifo 
          
        
        </description>
    </item>
    
    <item>
      <title>JavaScript数组使用实例</title>
      <link>/post/examples-javascript-array/</link>
      <pubDate>Tue, 24 Sep 2013 12:59:00 +0000</pubDate>
      
      <guid>/post/examples-javascript-array/</guid>
      <description>
        
          
          
          
        
        
        
          GF办公用需要一个小系统，原要求是VBA实现，不过我没弄过那玩意儿。C语言倒是熟悉，但CLI的东西她使用不方便。
于是做一个web系统，php比较熟悉，不过她的工作不能使用外网，额滴神！最后还是选择了用javascript实现，现学现卖吧。
由于不能使用数据库，所以需要构建一个三维数组来存储数据，以下是javascript中数组使用的一些实例。
定义数组并赋值
var jz = newArry(); jz[0] = 10; jz[1] = &amp;quot;hello&amp;quot;; jz[2] = 23.4;  以上是一个简单的一维数组，其中三个值分别为:10整数，hello字符串,23.4浮点数，可以通过以下方法使用
alert(&amp;quot;jz[0] is &amp;quot;+jz[0]+&amp;quot;\n jz[1] is &amp;quot;+jz[1]+&amp;quot;\n jz[2] is &amp;quot;+jz[2]);  二维数组的定义方法:为一维数组的单个值赋予数组值，那么就可以构成二维数组
实例
var jz = newArry(); jz[0] = newArry(1,2); jz[1] = newArry(3,4); jz[2] = newArry(5,6);  可以通过jz[0][0]、jz[0][1]、jz[0][2]来访问。
以下是一个简单的三维数组实例
var jz newArry(); jz[0] = newArry([100,200],[300,400],[500,600]) jz[1] = newArry([&#39;str1&#39;,&#39;str2&#39;],[&#39;str3&#39;,&#39;str4&#39;],[&#39;str5&#39;,&#39;str6&#39;]); jz[2] = newArry([2.24,3.2],[12.9,89.01],[38.04,7.6]);  方位方法如jz[0][1][0]
          
        
        </description>
    </item>
    
    <item>
      <title>Windows下Jekyll乱码问题</title>
      <link>/post/jekyll-chinese-garbled-windows/</link>
      <pubDate>Sat, 21 Sep 2013 19:21:00 +0000</pubDate>
      
      <guid>/post/jekyll-chinese-garbled-windows/</guid>
      <description>
        
          
          
          
        
        
        
          在Ruby目录中搜索convertible.rb，找到大概27行如下内容:
self.content = File.read(File.join(base, name))  替换为
self.content = File.read(File.join(base, name), :encoding =&amp;gt; &#39;utf-8&#39;)  在windows环境变量中，添加以下两个环境变量
LANG=zh_CN.UTF-8 LC_ALL=zh_CN.UTF-8 
          
        
        </description>
    </item>
    
    <item>
      <title>为Jekyll站点添加rss.xml</title>
      <link>/post/add-rssxml-to-the-jekyll-site/</link>
      <pubDate>Wed, 18 Sep 2013 09:18:00 +0000</pubDate>
      
      <guid>/post/add-rssxml-to-the-jekyll-site/</guid>
      <description>
        
          
          
          
        
        
        
          在网站根目录中新建rss.xml文件，写入以下内容：
参考以上代码，其中的域名等信息自定义。
          
        
        </description>
    </item>
    
    <item>
      <title>Vim Markdown语法高亮</title>
      <link>/post/vim-markdown-syntax-highlighting/</link>
      <pubDate>Tue, 17 Sep 2013 17:17:00 +0000</pubDate>
      
      <guid>/post/vim-markdown-syntax-highlighting/</guid>
      <description>
        
          
          
          
        
        
        
          安装插件
插件下载地址:https://github.com/plasticboy/vim-markdown/archive/master.tar.gz
安装方法：
$mkdir ~/.vim/ $cd ~/.vim $tar --strip=1 -zxf vim-markdown-master.tar.gz  Vim开启语法高亮
编辑~/.vimrc，写入syntax on
          
        
        </description>
    </item>
    
    <item>
      <title>将Wordpress数据转换为Jekyll文件</title>
      <link>/post/wordpress-converted-to-jekyll/</link>
      <pubDate>Sun, 15 Sep 2013 19:15:00 +0000</pubDate>
      
      <guid>/post/wordpress-converted-to-jekyll/</guid>
      <description>
        
          
          
          
        
        
        
          这里使用的工具名为Exitwp，项目主页为https://github.com/thomasf/exitwp
安装Exitwp 必备组件
 Python html2text PyYAML Beautiful soup  ubuntu下安装软件:
# aptitude install python git build-essential # aptitude install python-pip python-yaml python-bs4 python-html2text # aptitude install libyaml-dev python-dev libxml2-utils  安装Exitwp git clone https://github.com/thomasf/exitwp  ###使用Exitwp转换wordpress数据
首先，登录wordpress后台，使用自带的导出工具将wordpress导出为xml文件
将导出的xml文件下载，复制到 ./exitwp/wordpress-xml/
进入 ./exitwp/wordpress-xml/，使用xmllint格式化xml文件
xmllint --format wp.xml  最后，执行exitwp.py脚本来处理xml文件
python exitwp.py  生成的md文件，存放在 ./exitwp/build/
后续的工作 将处理后的md文件复制出来，拷贝至jekyll站点的_post目录，然后使用
jekyll serve  生成预览，按照提示处理有问题的md文件，直至OK！
          
        
        </description>
    </item>
    
    <item>
      <title>fstab自动挂载分区</title>
      <link>/post/fstab-automatically-mount-partitions/</link>
      <pubDate>Sun, 08 Sep 2013 19:18:00 +0000</pubDate>
      
      <guid>/post/fstab-automatically-mount-partitions/</guid>
      <description>
        
          
          
          
        
        
        
          使用fdisk -l查看分区信息
以下为需要自动挂载的分区:
分区 | 格式 ------------------------------ /dev/sd1 | NTFS /dev/sd5 | NTFS /dev/sd6 | NTFS /dev/sd7 | NTFS /dev/sd8 | NTFS  新建挂载目录
#mkdir /media/{a,b,c,d,e}  编辑fstab文件vi /etc/fstab写入以下内容
/dev/sda1 /media/a ntfs-3g defaults,iocharset=gb2312 0 0 /dev/sda5 /media/b ntfs-3g defaults,iocharset=gb2312 0 0 /dev/sda6 /media/c ntfs-3g defaults,iocharset=gb2312 0 0 /dev/sda7 /media/d ntfs-3g defaults,iocharset=gb2312 0 0 /dev/sda8 /media/e ntfs-3g defaults,iocharset=gb2312 0 0  说明:
 /dev/sdax 表示分区 /mnt/xxx 表示挂载点 vat/ntfs-3g 表示分区格式 iocharset=xxx 设置字符集,为了支持windows中文目录，应设为gb2312  
          
        
        </description>
    </item>
    
    <item>
      <title>Debian下安装Jekyll</title>
      <link>/post/install-jekyll-on-debian/</link>
      <pubDate>Fri, 06 Sep 2013 19:16:00 +0000</pubDate>
      
      <guid>/post/install-jekyll-on-debian/</guid>
      <description>
        
          
          
          
        
        
        
          安装Rvm $sudo aptitude install curl $curl -L get.rvm.io | bash -s stable  加载Rvm
$source ~/.rvm/scripts/rvm  检查安装必备组件
$rvm requirements  安装 Ruby 1.9.3 $rvm install 1.9.3 $ruby -v $gem -v  更改Gem软件源
$gem sources -a http://ruby.taobao.org/ $gem sources -r http://rubygems.org/ $gem sources -l  安装Jekyll $gem install jekyll $jekyll -v  打完收工!
          
        
        </description>
    </item>
    
    <item>
      <title>使用SSH密匙登录Github</title>
      <link>/post/use-the-ssh-key-to-login-github/</link>
      <pubDate>Tue, 03 Sep 2013 19:23:00 +0000</pubDate>
      
      <guid>/post/use-the-ssh-key-to-login-github/</guid>
      <description>
        
          
          
          
        
        
        
          生成ssh密匙文件 ssh-keygen -t rsa -C &amp;quot;user@domain.com&amp;quot;  接下来会提示输入密码，推荐自定义密码，当然也可以置空
Enter passphrase(empty for no passphrase): Enter same passphrase again:  完成后会在用户目录下的.ssh文件夹中新建id_rsa与is_rsa.pub两个文件。
添加ssh密匙到github用户 登录至github.com,点击右上角的Account Settings
在左侧选择SSH Keys菜单，然后在右侧点击Add SSH Key按钮
将上一步生成的id_rsa.pub文件内容复制进去保存。
本地连接至github.com ssh -T git@github.com  如果前面设置了passphrase，那么就按照提示输入passphrase。如果置空的话，就直接点击回车。成功后会有如下提示：
Hi wrchiu! You`ve successfully authenticated, but GitHub does note provide shell access.  参考以上设置完成后，以后git push时就不需要每次输入密码了！
          
        
        </description>
    </item>
    
    <item>
      <title>阿朗BTS开启40个邻区</title>
      <link>/post/alcatel-lucent-bts-open-40-neighbor-lists/</link>
      <pubDate>Sun, 01 Sep 2013 09:01:00 +0000</pubDate>
      
      <guid>/post/alcatel-lucent-bts-open-40-neighbor-lists/</guid>
      <description>
        
          
          
          
        
        
        
          阿朗基站默认未开启40个邻区功能，如果fci表的15、16页已经加满，再需要添加多的邻区关系就得设置打开40个邻区。
编辑cell2 (SERIES 2 CELL)表单 登录阿朗OMP平台，进入OMP Shell，输入apxrcv，然后按照提示输入表单名cell2
cell2只需提供基站号，设置为整个基站的功能
查看cell2表单的 12页，找到 FORTY NGBR 项，经该项值设置为 y
编辑ceqface (CELL EQUIPAGE FACE)表单 进入ceqafce表单，这里得提供具体的扇区号，然后查看第 9页，找到 Maximum Neighbor List Number Sent to Mobile，将其设置为 40
编辑fci (FACE CODE INFORMATION)表单 进入fci表，这里需要设置具体的扇区号，然后查看第 21页，找到如下行：
Expanded (40) Neighbor Lists Enable .................. 569) n  编辑改行，将后面的值设为 y
经过以上设置，所对应的扇区40个邻区列表功能正常开启，现在就可以在19页继续添加邻区了。
          
        
        </description>
    </item>
    
    <item>
      <title>卸载linux旧内核</title>
      <link>/post/uninstall-the-old-linux-kernel/</link>
      <pubDate>Tue, 13 Aug 2013 23:13:00 +0000</pubDate>
      
      <guid>/post/uninstall-the-old-linux-kernel/</guid>
      <description>
        
          
          
          
        
        
        
          当linux内核更新后，开机的GRUB引导菜单中会存在新旧内核多个引导菜单，当新内核使用稳定后，我们可以将旧的内核删除以减少开机引导项，以下是在fedora与ubuntu中删除旧内核的方法，其他的YUM系或APT系系统可以参考参考
fedora中删除旧内核:
[aquan@localhost ~]$ uname -r 2.6.32-220.13.1.el6.i686 [aquan@localhost ~]$ rpm -qa|grep kernel kernel-2.6.32-220.13.1.el6.i686 kernel-2.6.32-220.el6.i686 kernel-firmware-2.6.32-220.13.1.el6.noarch dracut-kernel-004-256.el6_2.1.noarch [aquan@localhost ~]$ sudo yum remove kernel-2.6.32-220.el6.i686  ubunu中删除旧内核:
sudo apt-get purge ~ilinux-image-.*\(\!`uname -r`\) 
          
        
        </description>
    </item>
    
    <item>
      <title>Linux下部署goAgent</title>
      <link>/post/linux-deployment-goagent/</link>
      <pubDate>Thu, 30 May 2013 15:30:00 +0000</pubDate>
      
      <guid>/post/linux-deployment-goagent/</guid>
      <description>
        
          
          
          
        
        
        
          准备工作 下载Google Appengine SDK For Pyahont与goAgent
1.Google App Engine SDK for Python https://developers.google.com/appengine/downloads?hl=zh-CN#Google_App_Engine_SDK_for_Python 2.goagent https://code.google.com/p/goagent/  下载后解压，将goagent文件夹放到google_appengine目录下，目录结构如下:
~/google_appengine/goagent-goagent-d488f2  准备好Google Application_ID与两步验证密码,如何申请问Google
配置goagent 编辑~/google_appengine/goagent-goagent-d488f2/local/proxy.ini
填写正确的appid，在此建议将profile由默认的google_cn改为google_hk
参考以下步骤执行：
aquan@edge ~/google_appengine $ python appcfg.py update goagent-goagent-d4488f2/server/python/ 07:03 PM Host: appengine.google.com 07:03 PM Application: wrchiublog; version: 1 07:03 PM Starting update of app: wrchiublog, version: 1 07:03 PM Getting current resource limits. Email: wrchiu@126.com //在此填写googleid Password for wrchiu@126.com: //此处填写两步验证密码，而不是帐号密码 07:04 PM Scanning files on local disk.
          
        
        </description>
    </item>
    
    <item>
      <title>Ubuntu Server中安装VNC Server</title>
      <link>/post/install-vnc-server-on-ubuntu-server/</link>
      <pubDate>Sat, 11 May 2013 15:11:00 +0000</pubDate>
      
      <guid>/post/install-vnc-server-on-ubuntu-server/</guid>
      <description>
        
          
          
          
        
        
        
          安装所有软件
#aptitude install openbox firefox ttf-wqy-microhei #aptitude install vnc4server  设置openbox启动
#update-alternatives --config x-session-manager 然后选择openbox-session  设置vncserver密码:
#vncpasswd Password: ****** Verify:*****  运行vncserver
# vncserver //运行 # vncserver -kill :1 //终止  编辑~/.vnc/xstartup文件
#vi ~/.vnc/xstartup #!/bin/sh # Uncomment the following two lines for normal desktop: # unset SESSION_MANAGER # exec /etc/X11/xinit/xinitrc [ -x /etc/vnc/xstartup ] &amp;amp;&amp;amp; exec /etc/vnc/xstartup [ -r $HOME/.Xresources ] &amp;amp;&amp;amp; xrdb $HOME/.Xresources xsetroot -solid grey vncconfig -iconic &amp;amp; x-terminal-emulator -geometry 80x24+10+10 -ls -title &amp;quot;$VNCDESKTOP Desktop&amp;quot; &amp;amp; x-window-manager &amp;amp; startx&amp;amp; //添加此行  链接VNC
          
        
        </description>
    </item>
    
    <item>
      <title>Debian使用apt-spy选择最佳源</title>
      <link>/post/debian-use-apt-spy-to-select-the-best-source/</link>
      <pubDate>Thu, 09 May 2013 05:09:00 +0000</pubDate>
      
      <guid>/post/debian-use-apt-spy-to-select-the-best-source/</guid>
      <description>
        
          
          
          
        
        
        
          安装apt-spy
#apt-get install apt-spy  使用apt-spy选择最佳源
#apt-spy update #apt-spy -d stable -a asia -t 3  结果保存在/etc/apt/sources.list.d/apt-spy.list，可手动替换到/etc/apt/sources.list
apt-spy选项:
 -d 系统版本，可选stable,testing,unstable -a 区域,如asia,europe等，可用项可cat /etc/apt-spy.conf -t 超时阀值(s)，可筛掉长时间不响应的地址  
          
        
        </description>
    </item>
    
    <item>
      <title>NokiaN900产品码</title>
      <link>/post/product-codes-of-nokia-n900/</link>
      <pubDate>Fri, 26 Apr 2013 22:26:00 +0000</pubDate>
      
      <guid>/post/product-codes-of-nokia-n900/</guid>
      <description>
        
          
          
          
        
        
        
          电池仓贴纸上面的CODE即是
 0595085: N900 RX-51 TMN (Telecomunicacoes Moveis Nacionais S.A.*) PT V1 - Black 0582648: RX-51 Belgium 0584571: RX-51 Croatia Makedonia 0584572: RX-51 Czech 0591362: RX-51 Estonia 0574180: RX-51 France 0574383: RX-51 Germany 0591474: RX-51 Hungary 0591474: RX-51 Hungary 0574385: RX-51 Italy 0583516: RX-51 Light Swap 0582647: RX-51 MENA 0585168: RX-51 Montenegro Greece 0582645: RX-51 Netherlands 0582644: RX-51 Poland 0574386: RX-51 Russia 0574179: RX-51 Scandinavia Finland Sweden 0587236: RX-51 Scandinavia Norway Denmark 0584570: RX-51 Slovakia 0584570: RX-51 Slovakia 0574384: RX-51 Spain Portugal 0584598: RX-51 Swap 0584598: RX-51 Swap 0587813: RX-51 Swap France 0587810: RX-51 Swap Russia 0587812: RX-51 Swap USA 0560826: RX-51 UK Ireland 0580952: RX-51 USA 0593611: UK CV 0595421: Vodafone UK GB Contract black 1.
          
        
        </description>
    </item>
    
    <item>
      <title>使用wget下载整站</title>
      <link>/post/download-the-entire-station-using-wget/</link>
      <pubDate>Sun, 21 Apr 2013 04:21:00 +0000</pubDate>
      
      <guid>/post/download-the-entire-station-using-wget/</guid>
      <description>
        
          
          
          
        
        
        
          命令实例:
$wget -r -p -np -k -e robots=off -U &amp;quot;Mozilla/5.0 (Windows; U; Windows NT 5.1; zh-CN; rv:1.9.1.6) Gecko/20091201 Firefox/3.5.6&amp;quot; &amp;quot;http://baidu.com&amp;quot;  参数解释:
-r,--recursive 递归下载 -p, --page-requisites 下载显示HTML文件的所有图片 -np, --no-parent 不要追溯到父目录 -k, --convert-links 转换非相对链接为相对链接 -e,–execute=COMMAND 执行一个 “.wgetrc”命令 robots=off 无视robots.txt -U, --user-agent=AGENT 设定代理的名称为 AGENT &amp;quot;Mozilla/5.0 (Windows; U; Windows NT 5.1; zh-CN; rv:1.9.1.6) Gecko/20091201 Firefox/3.5.6&amp;quot; 伪装agent 
          
        
        </description>
    </item>
    
    <item>
      <title>Archlinux下修改网卡名称</title>
      <link>/post/archlinux-modify-the-network-adapter-name/</link>
      <pubDate>Wed, 06 Mar 2013 03:06:00 +0000</pubDate>
      
      <guid>/post/archlinux-modify-the-network-adapter-name/</guid>
      <description>
        
          
          
          
        
        
        
          刚刚安装了Archlinux，用的archlinux-2013.03.01-dual.iso镜像，最新的systemd将网卡名更改了，不在是原来默认的eth0/wlan0
我的ifconfig -a输出如下:
enp9s0: flags=4098 mtu 1500 ether 04:7d:7b:f8:25:9d txqueuelen 1000 (Ethernet) RX packets 0 bytes 0 (0.0 B) RX errors 0 dropped 0 overruns 0 frame 0 TX packets 0 bytes 0 (0.0 B) TX errors 0 dropped 0 overruns 0 carrier 0 collisions 0 lo: flags=73mtu 65536 inet 127.0.0.1 netmask 255.0.0.0 inet6 ::1 prefixlen 128 scopeid 0x10 loop txqueuelen 0 (Local Loopback) RX packets 0 bytes 0 (0.0 B) RX errors 0 dropped 0 overruns 0 frame 0 TX packets 0 bytes 0 (0.
          
        
        </description>
    </item>
    
    <item>
      <title>Archlinux安装笔记</title>
      <link>/post/archlinux-installation-notes/</link>
      <pubDate>Thu, 03 Jan 2013 01:03:00 +0000</pubDate>
      
      <guid>/post/archlinux-installation-notes/</guid>
      <description>
        
          
          
          
        
        
        
          下载ArchLinux镜像
下载archlinux-2012.12.01-dual.iso，可以将其刻录到CD引导启动，或者使用dd命令将其写入到USB设备。
http://mirrors.163.com/archlinux/iso/2012.12.01/archlinux-2012.12.01-dual.iso.torrent
完成后重启电脑进入到Archlinux CD开始进行安装。
设置网络连接
整个安装过程，本机需要连接互联网以下载所需文件，在此推荐使用网线连接自动获取IP，如果是这样那么当你进入到archlinux时网络已经连接成功了，可以使用ping来查看是否成功
#ping -c 5 aotee.com  如果不是自动获取IP，可以参考以下相关命令设置网络连接：
开启|关闭网络设备
# ip link set eth0 up # ip link set eth0 down  自动获取IP(DHCP)
# dhcpcd eth0  查看状态
# ip addr show dev eth0  如果是无线网卡，请参考这里进行设置。
设置键盘布局
#loadkeys us  准备硬盘分区
设置硬盘分区时可以使用自己熟悉的工具进行操作，以下是我的分区方案
/dev/sda9 /boot /dev/sda10 swap /dev/sda11 / /dev/sda12 /home  我使用LinuxMint LiveCD的磁盘工具进行分区，分区完成后可以使用lsblk /dev/sda来查看结果。
格式化分区
参考以下命令对已有的分区进行格式化
#mkfs -t ext2 /dev/sda9 #mkfs -t ext4 /dev/sda11 #mkfs -t ext4 /dev/sda12 #mkswap /dev/sda10 #swapon /dev/sda10  挂载分区
          
        
        </description>
    </item>
    
    <item>
      <title>Cinnarch安装全过程</title>
      <link>/post/installation-cinnarch/</link>
      <pubDate>Fri, 23 Nov 2012 11:23:00 +0000</pubDate>
      
      <guid>/post/installation-cinnarch/</guid>
      <description>
        
          
          
          
        
        
        
          Cinnarch是一个新的linux发行版，基于Archlinux以Cinnamon为默认桌面系统，对于想体验Archlinux但对于全新的安装方法无法把握的朋友，Cinnarch不失为一个良好的选择。
以下为安装Cinnarch的一次全过程，以供需要的朋友参考。
下载Cinnarch
首先从官网下载Cinnarch镜像，地址为 http://www.cinnarch.com/try-it/ ，按照需要下载32Bit或者64Bit的，下载方式有直接下载(iso)与通过BT种子(torrent)下载两种方式。
将下载后的镜像刻入CD，放入光驱后重启以进入LiveCD即可。
安装Cinnarch
进入到LiveCD后会弹出一个Welcome弹窗，可以点击其中的CLI Installer开始安装，或者先使用系统(Try it)，需要安装时在系统菜单中找到Cinnarch Installer CLI点击打开，也可以开始安装。
打开安装程序前，请确认电脑已经可以联网使用，因为一切软件包都是实时从mirror下载的，并且安装好的系统和archlinux一样，可以滚动升级(Rolling upgrade)。
打开安装程序，首先提示更新软件list，更新完成后会出现一个welcome的对话框，确认后进入到安装主菜单，如下：
0 Set Language and Keyboard 1 Set Time and Date 2 Prepare Hard Drive 3 Select Source 4 Install System 5 Configure System 6 Exit Install  设置语言与键盘 (Set Language and Keyboard)
选择进入设置菜单，在此主要设置语言选项，键盘布局可以不设置，采用默认即可。 语言设置为zh_CN.UTF-8 设置键盘布局(Set Keymap)时可以直接选择返回主菜单(Return to Main Menu)
设置时间与日期(Set Time And Date)
此项用于设置时间与日期，此项下面有三个子菜单：
1 Select Region and Timezone 2 Set Time and Date 3 Return to Main Menu  第一项菜单用于设置区域与时区，此次区域(Region)设置为Asia，时区(Timezone)设置为Chongqing(或者Beijing/Shanghai)
          
        
        </description>
    </item>
    
    <item>
      <title>Linux Live USB制作工具</title>
      <link>/post/linux-liveusb-tools/</link>
      <pubDate>Mon, 13 Aug 2012 18:12:00 +0000</pubDate>
      
      <guid>/post/linux-liveusb-tools/</guid>
      <description>
        
          
          
          
        
        
        
          现在大多数的Linux发行版都支持Live方式，即可直接运行体验无需安装。
Linux Live又分为LiveCD和LiveUSB，前者是通过光盘(CD/DVD)方式直接运行，后者则是通过USB设备(U盘/移动硬盘)来运行。
以下介绍几款Linux Live USB制作工具，个人推荐Linux Live USB Creator!
注:需要主板BIOS开启USB Boot功能。
Universal USB Installer http://www.pendrivelinux.com
1，选择Linux版本，勾选后面的Download the iso(Optional).则从互联网下载所选镜像。 2，选择本地镜像文件(iso)。 3，选择将要写入的USB设备，勾选Show all Drives可以看到所有本地磁盘，需要写入移动硬盘就需要勾选此项。
UNetbootin http://unetbootin.sourceforge.net
1，选择镜像源，从网络下载或者本地iso文件 2，在类型中选择usb设备或者硬盘，然后在驱动器栏选择具体的盘符。
LinuxLive USB Creator http://www.linuxliveusb.com/
1，选择需要写入的USB设备 2，选择安装源（ISO文件、光驱、网路下载）
Image Writer for Microsoft Windows (Win32DiskImager) https://launchpad.net/win32-image-writer
这个操作相对很简单，并且只单一的适用于img镜像文件，如Meego就是采用这种发行方式
万能的dd
最喜欢这个方法了！ 使用lsblk查看u盘设备名，如/dev/sdb，例如镜像文件名为linux.iso，使用以下命令将镜像文件写入U盘
#dd if=linux.iso of=/dev/sdb 
          
        
        </description>
    </item>
    
    <item>
      <title>修改iPhone的Cydia源</title>
      <link>/post/edit-the-cydia-software-source/</link>
      <pubDate>Mon, 18 Jun 2012 06:18:00 +0000</pubDate>
      
      <guid>/post/edit-the-cydia-software-source/</guid>
      <description>
        
          
          
          
        
        
        
          越狱后的ios设备cydia为必装平台，但是在软件源管理中，大家可能会发现一些源通过cydia无法编辑,比如Cydia/Telesphoreo。
我现在入手一部iPhone 4 CDMA版，通过OTA写号使用。在安装sbsettings的时候，一直提示size mismatch而未能安装成功。网上看了看大家的经历，这样的问题最终定位都是某个软件源不匹配造成，试着删除或者更新就可以解决。
但是我发现机子买回来，里面有两个源是无法编辑的，一个是上面提到的Cydia/Telesphoreo，另一个就是维维网的源。经过我在cydia下编辑删除，试遍了其他的源的删除，但都是不可以成功安装sbsettings。于是我觉得应该是剩下的那两个不可编辑源的问题，由于Cydia/Telesphoreo是Cydia初始安装的源，应该不会有问题，那就需要编辑删除维维网的源了，但是在cydia的源管理下它是不可编辑的。
最后让我找到了办法，既然在cydia下不可以编辑，那么在ssh下呢，只要找到该源的文件，那就可以编辑了，经过判断查找，最终定位到/private/etc/apt/sources.list.d/目录，在该目录下存放着一些软件源文件(.list)。因为ios采用和debian相同的软件管理软件apt-get，那么他的软件源管理方式应该类似。基于以上经验，最终定位到了/private/etc/apt/sources.list.d/目录。
具体解决步骤如下：
进入到/private/etc/apt/sources.list.d/目录，将里面除了cydia.list文件，其他的全部删除。然后编辑cydia.list文件，只留下一行deb http://apt.saurik.com/ 即可，保存之。
手机上打开cydia，重新刷新软件源。然后按需添加需要的第三方源。
至于如何编辑cydia目录，一般可以使用itools等软件，但是这样比较繁琐。简单直接的方法是通过ssh连接手机进行操作，可参考通过SSH连接IOS设备
aPhone:~ root# cd /private/etc/apt/sources.list.d/ aPhone:/private/etc/apt/sources.list.d root# ls -l total 24 -rwxr-xr-x 1 root wheel 259 May 25 23:01 appvv.list* -rw-r--r-- 1 root wheel 357 Jun 16 13:59 cydia.list -rw-r--r-- 1 root wheel 227 May 25 23:01 saurik.list aPhone:/private/etc/apt/sources.list.d root# cat cydia.list deb http://apt.saurik.com/ ios/690.10 main deb http://apt.178.com/ ./ deb http://download.voicecloud.cn/cydia/ ./ deb http://cydia.zodttd.com/repo/cydia/ stable main deb http://repo666.ultrasn0w.com/ .
          
        
        </description>
    </item>
    
    <item>
      <title>HP Veer刷机中遇到的12%卡死问题</title>
      <link>/post/twelve-percent-problem-on-hp-veer/</link>
      <pubDate>Mon, 28 May 2012 15:28:00 +0000</pubDate>
      
      <guid>/post/twelve-percent-problem-on-hp-veer/</guid>
      <description>
        
          
          
          
        
        
        
          对于webos系统，我是由衷的赞美，但是相应的硬件确实有待商榷。
去年就入手了一部HP Veer 4G，体验了一个星期就转手了，因为我手中已经有了HP Touchpad。
前几天朋友再次邮寄Veer给我，自己玩不转，也不想玩了，所以让给我倒腾去吧。拿到手第一感觉就是，这货儿也太不爱惜了，机子用的就没法看，好在屏幕还贴膜着，要不更不知道会咋样。
拿到手的机子是商家当时发货时的系统，被搞的乌七八糟，于是重新找rom下载之。
以前自己用的那个感觉刷原厂rom就很好，但是现在想试着找找看有没有不错的第三方rom，煮机网看了下，发现现在有个stay版的，看起来做的确实不错，于是下载安装之。
刷机时由于懒惰，用了一个一键清除工具，没有使用系统自带的擦除功能，导致存储上出了问题，u盘功能不能使用了。想着不用管重新刷过就是，没想到碰到了从来没有过的12%卡死问题，刷了N多次还是不能过12%。
网上看了看一些经验，像重新安装驱动，换一台电脑试试等等，都没有用。
最后在webos-internals.org上找到了方法，地址在这里http://www.webos-internals.org/wiki/How_To_Recover，里面列出了几个不能正常recovery的实例，参考里面的Doctor disconnects at 8%条目，就可以解决刷机12%的问题。 从里面说明来看，造成这些问题的主要原因就是存储问题，所以可能是由于我使用了一键清除工具的原因。
主要步骤如下：
1，重启手机，进入到recovery模式下(Power+音量上） 2，使用novacom刷入uImage
#novacom boot mem://&amp;lt; nova-installer-image-broadway.uImage  其中的uImage文件，可以从官网的rom中提取，下载.tar格式的rom文件，用7zip打开
3，使用novaterm连接系统，进入cli，重新修复存储系统
#lvm.static vgscan --ignorelockingfailure #lvm.static vgchange -ay --ignorelockingfailure #mkdosfs -f 1 -s 64 /dev/store/media  Windows下novaterm的目录为C:\Program Files\Palm Incterminal\novaterm.bat
完成以上步骤，就可以重启进入recovery重新刷机了。
          
        
        </description>
    </item>
    
    <item>
      <title>离羣索居</title>
      <link>/post/leave-friends-alone/</link>
      <pubDate>Thu, 26 Apr 2012 14:26:00 +0000</pubDate>
      
      <guid>/post/leave-friends-alone/</guid>
      <description>
        
          
          
          
        
        
        
          朋友间距离太近，就少了应有的礼貌，但如果距离太远了，就会多了不必要的客气。
我也搞不清自己属于哪个，可能居中靠前点吧。对于熟识的朋友，我很容易和其达到厮混的状态，会下意识的匿藏彼此的隔阂（很小的那种）。相对而言，如果许久不曾联系，或者相处的距离较远的朋友们，那么我们之间就多了更多的客气，有时这种客气让我自己的都厌恶，总觉得是小小的虚伪，但现况就是这样，它存在既是有理。
突然有以上的感触，是因为听《现象七十二变》，罗大佑的词写的确实不错，佩服!
 在这个五千年的悠久历史里面
成功与失败多少都有一点
&amp;hellip;&amp;hellip;
就像我看到文明车辆横冲直撞
我不懂大家心中作何感想
&amp;hellip;&amp;hellip;
眼看着高楼盖得越来越高
我们的人情味却越来越薄
朋友之间越来越有礼貌
只因为大家见面越来越少
&amp;hellip;&amp;hellip;.
就像彩色的电视变得更加花俏
能辨别黑白的人越来越少
&amp;hellip;&amp;hellip;
但是生活不能像在演戏
你戴着面具如何面对自己
或许你将会真的发现一些奇迹
只要你抛开一些面子问题
 
          
        
        </description>
    </item>
    
    <item>
      <title>NokiaN900设置无线链接</title>
      <link>/post/nokia-n900-set-up-wireless/</link>
      <pubDate>Sun, 22 Apr 2012 12:40:00 +0000</pubDate>
      
      <guid>/post/nokia-n900-set-up-wireless/</guid>
      <description>
        
          
          
          
        
        
        
          首页点击左上角网络区域
进入网络设置
在网络设置中，可以选择wifi或者GPRS链接
点击GPRS的话，将使用运营商的数据业务，点击wifi节点名的话，会出现输入密码提示，输入密码连接完成
          
        
        </description>
    </item>
    
    <item>
      <title>MySQL使用实例</title>
      <link>/post/mysql-usages/</link>
      <pubDate>Thu, 19 Apr 2012 14:19:00 +0000</pubDate>
      
      <guid>/post/mysql-usages/</guid>
      <description>
        
          
          
          
        
        
        
          误删除了vps上的phpmyadmin，不得已翻阅了半天mysql指南，以下是一些mysql使用实例
连接管理 链接数据库
mysql -h localhost -u root -p  退出数据库
mysql&amp;gt;quit;  数据库管理 查看数据库
mysql&amp;gt;show databases;  建立数据库
mysql&amp;gt;create database name;  备份(导出)数据库
mysqldump -u username -p database &amp;gt; backup_db.sql  还原(导入)数据库
mysql -u username -p database &amp;lt; backup_db.sql  用户管理 添加用户
mysql&amp;gt;grant all privileges on databasename.* &#39;username&#39;@&#39;localhost&#39; identified by &#39;userpassword&#39; with grant optiton;  删除用户
mysql&amp;gt;drop user username;  修改密码
mysql&amp;gt;set password for &#39;username&#39;@&#39;localhost&#39; = password(&#39;userpassword&#39;);  一个创建数据库并添加专用用户的示例:
          
        
        </description>
    </item>
    
    <item>
      <title>N900超频与刷9G-Home</title>
      <link>/post/n900-overclock-and-brush-9ghome/</link>
      <pubDate>Sun, 08 Apr 2012 14:18:00 +0000</pubDate>
      
      <guid>/post/n900-overclock-and-brush-9ghome/</guid>
      <description>
        
          
          
          
        
        
        
          什么是9G-home?
在linux中/home为用户主用目录，N900默认为/home分配的空间大概1.9G左右，而为了刷Android等第三方系统，我们需要更大的/home来存放文件，所以改变/home目录大小称之为XG-home(x有3/5/6/9等)
刷9G Home
下载9G-home刷机包:http://pan.baidu.com/share/link?shareid=1527292529&amp;amp;uk=1493434283
打开CMD，进入到flasher目录，输入如下命令（具体依照本机目录输入）:
flasher-3.5.exe -F 9ghomeemmc.bin -f  出现提示Suitable USB device not found,waiting. 时，关闭手机，按住U键连接数据线，等待cmd提示开始写入时可放开U键，等待提示完成。 不要开机，切记！
接着重新刷Rom文件，即COMBIND那个文件。继续别开机！
N900超频
接下来刷入超频包，以下是几个不同等级的超频包
 zImage-700mhz zImage-750mhz zImage-800mhz zImage-850mhz-450dsp zImage-900mhz zImage-900mhz-500dsp zImage-930mhz zImage-930mhz-500dsp zImage-950mhz zImage-950mhz-500dsp  下载地址:http://pan.baidu.com/share/link?shareid=1567324549&amp;amp;uk=1493434283
这里以超750MHz为例
flasher-3.5.exe -k zImage-750mhz -f  等到提示完成后，开机即可。 给大家贴出前后两张对比图
          
        
        </description>
    </item>
    
    <item>
      <title>Nokia N900 and Android</title>
      <link>/post/nokia-n900-and-android/</link>
      <pubDate>Sat, 07 Apr 2012 14:27:00 +0000</pubDate>
      
      <guid>/post/nokia-n900-and-android/</guid>
      <description>
        
          
          
          
        
        
        
          感谢NITDroid Project 的辛苦工作，使N900更加的神机！
使用Nitdroid刷入Android后，系统运行在/home目录，所以/home必须空间足够，N900默认的为 1.9G是不可以的，需要增大/home的容量，推荐参考N900超频和刷9G-home,将/home增大到9G
添加软件源 确保已添加以下软件源，一般前四个系统已经添加，没有的自己添加。
名称：Nokia Applications 网址：https://downloads.maemo.nokia.com/fremantle/ssu/apps/ 发布：./ 组件：空 名称：Nokia System Software Updats 网址：https://downloads.maemo.nokia.com/fremantle/ssu/mr0 发布：./ 组件：空 名称：Ovi 网址：https://downloads.maemo.nokia.com/fremantle1.2/ovi/ 发布：./ 组件：空 名称：maemo.org 网址：http://repository.maemo.ory/extras/ 发布：frmantle−1.3 组件：free non−free 名称：Fremantle Extras−testing 网址：http://repository.maemo.org/extras-testing/ 发布：fremantle 组件：free non−free 名称：Fremantle Extras−devel 网址：http://repository.maemo.org/extras-devel/ 发布：fremantle 组件：free non−free  开刷 下载N12_UMay.tar.bz2与nitdroid-kernel-2.6.28-07_rc3_armel.deb
115网盘下载地址: http://u.115.com/file/aqpmpqhl http://u.115.com/file/dna7jt6r
最新的文件在官网的http://downloads.nitdroid.com/e-yes/页，如发现跟新可自行下载最新版本 注意，网盘中提供的N12_UMay.tar.bz2已经解压为N12_UMay.tar，官网的下载后自行解压
将两个文件拷贝至USB连接模式下的根目录，即**/home/user/MyDocs/**
建议通过SSH连接N900，在PC上使用Putty操作，要么就在手机上运行x-terminal
# apt-get install nitdroid-installer # mkdir /and # mount /home /and # cd /and # tar xvf /home/user/MyDocs/N12_UMay.tar #注意这里已经是.tar格式 # dpkg -i /home/user/MyDocs/nitdroid-kernel-2.
          
        
        </description>
    </item>
    
    <item>
      <title>Nokia N900 and SSH</title>
      <link>/post/nokia-n900-and-ssh/</link>
      <pubDate>Mon, 02 Apr 2012 14:12:00 +0000</pubDate>
      
      <guid>/post/nokia-n900-and-ssh/</guid>
      <description>
        
          
          
          
        
        
        
          N900采用的maemo是基于debian的linux系统，通过自带的application manager管理软件时，操作体验还有待改进，所以这里推荐通过ssh连接，使用cli来进行相应操作。 需要在手机端安装OpenSSH来开启SSH服务，在application manager的system目录下，找到openssh Client and Server安装，当然如果你不需要在手机端进行SSH登陆的话，那可以只安装server即可。 安装时会提示输入密码，这个就是以后连接手机SSH的服务密码。 安装完成后SSH server会默认启动，现在你可以通过wifi连接局域网，然后需要知道自己当前的IP（可以通过Tp-link后台查看，或者手机端安装Personal IP Address开显示)，再推荐安装SSH Status and Swither，可以在手机的status显示SSH状态，并管理SSH server启动/停止。 然后推荐使用Putty进行链接，在CLI模式下管理软件，可以在http://maemo.org/上查看软件目录以及简介，通过apt-get install命令来安装，以下为一些apt-get使用简介
使用方法: apt-get [选项] 命令 apt-get [选项] install|remove pkg1 [pkg2 &amp;hellip;] apt-get [选项] source pkg1 [pkg2 &amp;hellip;]
命令:
update - 更新软件列表 upgrade - 升级软件 install - 安装软件(pkg 是软件名) remove - 删除软件 autoremove - 自动删除一些无效的软件 purge - 删除软件并清理配置 source - 下载软件源码 build-dep - 配置软件源码的build-dependencies dist-upgrade - 升级系统 clean - 清除建立的软件包列表 autoclean - 同上 check - 校验软件包是否有异常  选项:
          
        
        </description>
    </item>
    
    <item>
      <title>删除不需要的iPhone语言文件</title>
      <link>/post/remove-unnecessary-iphone-language-file/</link>
      <pubDate>Mon, 02 Apr 2012 12:34:00 +0000</pubDate>
      
      <guid>/post/remove-unnecessary-iphone-language-file/</guid>
      <description>
        
          
          
          
        
        
        
          首先，需要iPhone已经越狱，并且安装了OpenSSH
脚本文件下载：http://cdn.lyq.wiki/res/langpack2.2.zip，解压出脚本文件langpack2.2.sh
通过itools或者其他管理软件，将脚本文件复制到/var/mobile目录
通过ssh连接手机，进入/var/mobile目录开始操作 注意：此时请关闭手机的定时锁屏功能，以防意外终止操作而失败！！
#chmod 777 langpack2.2.sh //为脚本添加执行权限 #./langpack2.2.sh //运行脚本  开始搜索语言包文件，等待。。。。。
搜索到所有语言包后，开始提示是否删除。
根据提示，输入y或者n来确定所要删除的语言包，根据需要筛选。
所有选择完成后，会提示所有将要删除的语言包，再次确认删除与否（y或n），开始删除过程。。。
删除完成后，会提示所删除的语言包数量，并且提示是否删除该脚本文件
注意：进行完以上操作后，建议马上修改SSH密码，以防止感染蠕虫病毒！！
          
        
        </description>
    </item>
    
    <item>
      <title>N900软件管理</title>
      <link>/post/nokia-n900-software-manager/</link>
      <pubDate>Sat, 31 Mar 2012 13:31:00 +0000</pubDate>
      
      <guid>/post/nokia-n900-software-manager/</guid>
      <description>
        
          
          
          
        
        
        
          ###通过自带的application manager（软件管理）安装 打开application manager，首次会自动更新软件列表，然后可以在download目录中按分类安装软件。 ###通过apt-get在线安装 使用apt-get前提为已经安装了rootsh（可通过第一种方法安装），打开 x terminal
$sudo gainroot /*切换到root帐户*/ #apt-get install pkg /*安装pkg*/ #apt-get install pkg1,pkg2 /*安装多个软件*/ #apt-get remove pkg /*卸载软件*/ #apt-get remove –purge pkg /*卸载并清除配置文件*/ #apt-get update /*更新软件源*/ #apt-get upgrade /*更新软件*/ #apt-get dist-upgrade /*更新系统*/ #apt-get clean /*清除软件列表以节省空间*/  ###通过dpkg安装本地软件包(.deb)
可以通过数据线，先将下载的软件包拷贝到机子内，然后使用dpkg来安装
#dpkg -i pkg.deb  可以在这里http://repository.maemo.org/下载官方的.deb包进行安装
          
        
        </description>
    </item>
    
    <item>
      <title>Nokia N900系统优化脚本</title>
      <link>/post/system-optimization-script-for-nokia-n900/</link>
      <pubDate>Wed, 28 Mar 2012 13:28:00 +0000</pubDate>
      
      <guid>/post/system-optimization-script-for-nokia-n900/</guid>
      <description>
        
          
          
          
        
        
        
          Nokia N900系统优化脚本，更加省电，操作更加流畅！
脚本下载地址http://cdn.lyq.wiki/res/speedpatch-ALTERNATIVE.tar.gz.rar
使用方法： 通过USB连接手机，将脚本传到磁盘根目录(/home/user/MyDocs)，以下操作可以使用XT或者SSH连接电脑进行(Root权限下)
#cd /home/user/MyDocs #tar xzvf speedpatch-ALTERNATIVE.tar.gz #mkdir /wp-content/local/sbin #cp /root/.profile /root/.profile.bak #cp ./.profile_root /root/.profile #cp ./.profile /home/user/ #cp ./speedpatch /etc/event.d/ #cp ./cgroup_clean /wp-content/local/sbin #chmod +rwx /wp-content/local/sbin/cgroup_clean #rm ./.profile_root #rm ./.profile #rm ./speedpatch #rm ./cgroup_clean  应用transition.ini文件:
1.使用theme-customizer
#cp /home/user/MyDocs/transitions.ini /opt/theme-customizer  2.使用系统默认主题
#cp /home/user/MyDocs/transitions.ini /wp-content/share/hildon-desktop/  3.删除优化脚本
#cp /root/.profile.bak /root/.profile #rm /etc/event.d/speedpatch #rm /home/user/.profile #rm /wp-content/local/sbin/cgroup_clean 
          
        
        </description>
    </item>
    
    <item>
      <title>LNMP使用实例</title>
      <link>/post/lnmp-usages/</link>
      <pubDate>Fri, 23 Mar 2012 12:32:00 +0000</pubDate>
      
      <guid>/post/lnmp-usages/</guid>
      <description>
        
          
          
          
        
        
        
          安装LNMP 更新系统
#yum check-update #yum update  安装Screen
#yum install screen  开始安装Lnmp
#screen -S lnmp #wget -c http://soft.vpser.net/lnmp/lnmp0.8.tar.gz //最新版请查阅lnmp官网 #tar zxvf lnmp0.8.tar.gz #./lnmp0.8/centos.sh | tee lnmp.log //输出log文件，以备出错时查阅  接下来按照提示设定域名和MysQL密码，程序会自动下载相关程序，而后编译安装
安装PureFTP
#./lnmp0.8/pureftp.sh  按提示输入MySQL和Ftp管理员密码，安装完成后可以通过http://vpsip/ftp/来登录管理ftp帐号
使用Lnmp 添加虚拟主机
#/root/vhost.sh  按照提示填入域名、目录、rewrite规则文件，如下所示：
root@buyvm256:~#/root/vhost.sh ========================================================================= Add Virtual Host for LNMP V0.9 , Written by Licess ========================================================================= LNMP is a tool to auto-compile &amp;amp; install Nginx+MySQL+PHP on Linux This script is a tool to add virtual host for nginx For more information please visit http://www.
          
        
        </description>
    </item>
    
    <item>
      <title>诺基亚n900快捷键</title>
      <link>/post/nokia-n900-shortcuts/</link>
      <pubDate>Tue, 20 Mar 2012 13:20:00 +0000</pubDate>
      
      <guid>/post/nokia-n900-shortcuts/</guid>
      <description>
        
          
          
          
        
        
        
           Ctrl + Backspace：如果在一个程序里，用了后会回到多程序选择画面。 Ctrl + C：复制 Ctrl + V：粘贴 Ctrl + X：剪贴 Ctrl + A：全选 Ctrl + 左箭头：回到第一个字或一句话的最前边 Ctrl + 右箭头：回到最后一个字或一句话的最后边 Ctrl + N：网页浏览器里打开一个新窗口 Ctrl + R：网页浏览器里重读此页 Ctrl + B：网页浏览器里打开一个书签 Ctrl + D：网页浏览器里增加一个书签 Ctrl + 回车：在电子邮件里发送一个邮件 Ctrl + R：在电子邮件里回复一个邮件 Ctrl + Shift（白色上箭头：管大写的）+P：屏幕截图功能(目录/home/user/MyDocs/.images/Screenshots/) Ctrl + Shift + O：可以启动网页浏览器竖屏功能 Backspace：后退功能，回到前一个浏览页面  
          
        
        </description>
    </item>
    
    <item>
      <title>iPhone and SSH</title>
      <link>/post/iphone-and-ssh/</link>
      <pubDate>Sun, 18 Mar 2012 12:13:00 +0000</pubDate>
      
      <guid>/post/iphone-and-ssh/</guid>
      <description>
        
          
          
          
        
        
        
          安装OpenSSH 首先iPhone已经越狱并且安装了Cydia，具体教程可以Google
打开Cydia，管理-软件源，点击右上角编辑，然后点击左上角添加，增加178的软件源http://apt.178.com
添加后Cydia会自动更新软件包，然后在搜索里使用openssh为关键词进行搜索安装。
默认有root和mobile两个用户名，密码均为alpine
手机端SSH管理 在Cydia上搜索安装iSSH安装
修改SSH密码 建议修改原始密码
#passwd root #passwd mobile  PC通过SSH连接iPhone   iPhone接入wifi网络，在电脑端使用Putty或者WinSCP来链接iPhone
  USB连接PC，下载iTools，打开iTools点击手机管理栏的最底下高级功能，打开ssh通道。下来PC端可以通过ip:127.0.0.1来连接iPhone了。
  
          
        
        </description>
    </item>
    
  </channel>
</rss>