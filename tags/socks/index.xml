<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>socks on UNIXETC</title>
    
    
    
    <link>/tags/socks/</link>
    <description>Recent content in socks on UNIXETC</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sat, 18 May 2019 09:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/socks/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Ubuntu中v2ray客户端配置实例</title>
      <link>/post/v2ray-client-configuration-example-in-ubuntu/</link>
      <pubDate>Sat, 18 May 2019 09:00:00 +0000</pubDate>
      
      <guid>/post/v2ray-client-configuration-example-in-ubuntu/</guid>
      <description>
        
          
          
          
        
        
        
          推荐使用WebSocket传输模式，详细配置可参考Nginx V2ray and WebSocket.
首先使用bash &amp;lt;(curl -L -s https://install.direct/go.sh)来快捷安装v2ray，如下：
root@vm:~# bash &amp;lt;(curl -L -s https://install.direct/go.sh) Installing V2Ray v4.18.0 on x86_64 Downloading V2Ray: https://github.com/v2ray/v2ray-core/releases/download/v4.18.0/v2ray-linux-64.zip % Total % Received % Xferd Average Speed Time Time Time Current Dload Upload Total Spent Left Speed 100 608 0 608 0 0 581 0 --:--:-- 0:00:01 --:--:-- 581 100 10.5M 100 10.5M 0 0 172k 0 0:01:02 0:01:02 --:--:-- 194k Extracting V2Ray package to /tmp/v2ray. Archive: /tmp/v2ray/v2ray.
          
        
        </description>
    </item>
    
    <item>
      <title>V2ray使用实例</title>
      <link>/post/v2ray-use-case/</link>
      <pubDate>Mon, 20 Aug 2018 18:18:00 +0000</pubDate>
      
      <guid>/post/v2ray-use-case/</guid>
      <description>
        
          
          
          
        
        
        
          Project V 提供了单一的内核和多种界面操作方式。内核（V2Ray）用于实际的网络交互、路由等针对网络数据的处理，而外围的用户界面程序提供了方便直接的操作流程。 V2Ray 的主要作用是根据用户的配置，对于传入的网络连接进行一定处理，然后发往指定的服务器。它是一个命令行程序，可以接受一个 JSON 格式的配置文件。
VPS安装服务端 使用下面命令一键安装:
bash &amp;lt;(curl -L -s https://install.direct/go.sh)  或者从https://github.com/v2ray/v2ray-core/releases下载预编译包进行安装。
安装完成后，使用service v2ray start启动v2ray服务。
Windows安装本地端 从https://github.com/v2ray/v2ray-core/releases下载Windows客户端，解压后编辑config.json文件，内容如下：
{ &amp;quot;inbound&amp;quot;: { &amp;quot;port&amp;quot;: 1080, // 监听端口 &amp;quot;protocol&amp;quot;: &amp;quot;socks&amp;quot;, // 入口协议为 SOCKS 5 &amp;quot;domainOverride&amp;quot;: [&amp;quot;tls&amp;quot;,&amp;quot;http&amp;quot;], &amp;quot;settings&amp;quot;: { &amp;quot;auth&amp;quot;: &amp;quot;noauth&amp;quot; //socks的认证设置，noauth 代表不认证，由于 socks 通常在客户端使用，所以这里不认证 } }, &amp;quot;outbound&amp;quot;: { &amp;quot;protocol&amp;quot;: &amp;quot;vmess&amp;quot;, // 出口协议 &amp;quot;settings&amp;quot;: { &amp;quot;vnext&amp;quot;: [ { &amp;quot;address&amp;quot;: &amp;quot;10.0.0.1&amp;quot;, // 服务器地址，请修改为你自己的服务器 ip 或域名 &amp;quot;port&amp;quot;: 31892, // 服务器端口 &amp;quot;users&amp;quot;: [ { &amp;quot;id&amp;quot;: &amp;quot;3efd584f-8a7d-43af-9c75-35266df4ceb0&amp;quot;, // 用户 ID，必须与服务器端配置相同 &amp;quot;alterId&amp;quot;: 64 // 此处的值也应当与服务器相同 } ] } ] } } }  以上的id和alterId，在vps上使用cat /etc/v2ray/config.
          
        
        </description>
    </item>
    
    <item>
      <title>Firefox和FoxyProxy</title>
      <link>/post/firefox-and-foxyproxy/</link>
      <pubDate>Sat, 13 Feb 2016 12:13:00 +0000</pubDate>
      
      <guid>/post/firefox-and-foxyproxy/</guid>
      <description>
        
          
          
          
        
        
        
          三年不用Firefox了，最近由于需要进行手机端和电脑端资源同步，chrome在国内不安装谷歌套件无法使用，所以又切换回了firefox。
在安装完成autoproxy后发现，订阅gfwlist.txt一直无法成功，网上找了找消息，说是autoproxy已经跟不上firefox开发脚步，无法继续使用。于是在firefox的addon站点重新找代理插件，最终选定foxyproxy。
以下是foxyproxy设置socks代理，和订阅gfwlist.txt的一些设置方法。
安装foxyproxy 去主页http://getfoxyproxy.org/，安装完成后重启firefox
添加代理服务器 双击地址栏和搜索栏中间的foxyproxy图标，进入到设置
代理服务器选项卡中点击新建代理服务器
常规选项卡中设置代理名称，如ss
代理服务器细节中设置具体参数，以下是我的设置截图，可以参考
设置订阅gfwlist.txt 在模式订阅选项卡中，空白处点击右键，添加新的模式订阅
参考下图设置，注意勾划出来的地方
将foxyproxy的工作模式选择为使用基于其预定义模版的代理服务器。
          
        
        </description>
    </item>
    
  </channel>
</rss>