<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Google on UNIXETC</title>
    
    
    
    <link>/tags/google/</link>
    <description>Recent content in Google on UNIXETC</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Tue, 11 Jun 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/google/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Linux中转换图片为webp格式</title>
      <link>/post/convert-images-to-webp-in-linux/</link>
      <pubDate>Tue, 11 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/convert-images-to-webp-in-linux/</guid>
      <description>
        
          
          
          
        
        
        
          安装WebP Ubuntu中可以使用以下命令安装WebP
$sudo apt install webp  其他Linux系统，可以从这里下载对应压缩包，如下：
wget https://storage.googleapis.com/downloads.webmproject.org/releases/webp/libwebp-1.0.2-linux-x86-64.tar.gz  解压后得到以下文件：
$tar zxf libwebp-1.0.2-linux-x86-64.tar.gz $cd libwebp-1.0.2-linux-x86-64 $cd bin $ll total 12M -rwxr-xr-x 1 100 users 679K Jan 15 12:47 anim_diff -rwxr-xr-x 1 100 users 923K Jan 15 12:47 anim_dump -rwxr-xr-x 1 100 users 2.4M Jan 15 12:47 cwebp -rwxr-xr-x 1 100 users 915K Jan 15 12:47 dwebp -rwxr-xr-x 1 100 users 2.3M Jan 15 12:47 get_disto -rwxr-xr-x 1 100 users 703K Jan 15 12:47 gif2webp -rwxr-xr-x 1 100 users 2.
          
        
        </description>
    </item>
    
    <item>
      <title>Google Camera一加3/3T移植版</title>
      <link>/post/google-camera-port-for-oneplus-3t/</link>
      <pubDate>Wed, 13 Dec 2017 12:13:00 +0000</pubDate>
      
      <guid>/post/google-camera-port-for-oneplus-3t/</guid>
      <description>
        
          
          
          
        
        
        
          Google Camera一加3/3T移植版，支持HDR+, 1080p 60FPS视频, 慢动作和慢动作图片。 By BSG, Ivanich, and Arnova8G2.
可用特性:
 Camera (HDR+, flash, zoom, front camera, etc) 视频 (30fps/60fps at 1080p、防抖、自动对焦) 慢动作 (120fps) Panorama Photo Sphere Lens Blur RAW Motion Photos (Android 8+ only, check the &amp;ldquo;suggested settings&amp;rdquo;)  不可用特性:
 ZSL (HDR+打开情况下) (OOS Oreo)慢动作 前置相机HDR  下载:
 GCam_5.3.015-Pixel3Mod-Arnova8G2-1.4.apk Update 2018-10-04 GCam-5.1.018-Pixel2Mod-Arnova8G2-V8.3b1.apk Update 2018-08-25  本文只提供一加3/3T的稳定版apk，BSG、Ivanich和Arnova8G2的完整版清单，请移步这里
          
        
        </description>
    </item>
    
    <item>
      <title>sitemap-generators使用实例</title>
      <link>/post/sitemap-generators-usage/</link>
      <pubDate>Sun, 13 Aug 2017 23:23:00 +0000</pubDate>
      
      <guid>/post/sitemap-generators-usage/</guid>
      <description>
        
          
          
          
        
        
        
          sitemap-generators是一款Sitemap生成工具，使用它可以生成符合sitemap.org规范的Sitemap文件，以便于提交给各个网站工具平台。
项目地址 &amp;amp;&amp;amp; 下载地址
下载sitemap_gen_1.5.tar.gz解压，得到以下内容：
root@bwgzl:~/sitemap_gen# ls -lh total 140K -r--r----- 1 502 502 22 Jun 17 2005 AUTHORS -r--r--r-- 1 502 502 2.6K Jul 19 2007 ChangeLog -r--r----- 1 502 502 1.8K Jun 17 2005 COPYING -rw-r--r-- 1 502 502 6.4K Jul 19 2007 example_config.xml -rw-r----- 1 502 502 1.6K Jun 26 2007 example_urllist.txt drwxr-xr-x 23 root root 4.0K Aug 3 14:25 getos.org -rw-r--r-- 1 502 502 244 Jul 19 2007 PKG-INFO -r--r--r-- 1 502 502 1.
          
        
        </description>
    </item>
    
    <item>
      <title>Linux开启TCP BBR算法</title>
      <link>/post/linux_enable_tcp_bbr/</link>
      <pubDate>Mon, 17 Apr 2017 14:28:00 +0000</pubDate>
      
      <guid>/post/linux_enable_tcp_bbr/</guid>
      <description>
        
          
          
          
        
        
        
          Linux Kernel 4.9+已经支持tcp_bbr拥塞控制算法，因此建议将内核升级为最新版。
将内核升级到最新版 Debian/Ubuntu升级最新内核 最新内核下载地址 http://kernel.ubuntu.com/~kernel-ppa/mainline
下载安装新内核
wget http://kernel.ubuntu.com/~kernel-ppa/mainline/v4.10.10/linux-image-4.10.10-041010-generic_4.10.10-041010.201704120813_amd64.deb` dpkg -i linux-image-4.10.10-041010-generic_4.10.10-041010.201704120813_amd64.deb 更新GRUB并且重启
update-grub reboot Centos 7 升级最新内核 内核下载地址 http://elrepo.org/linux/kernel/el7/x86_64/RPMS/
安装最新内核
rpm --import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org rpm -Uvh http://www.elrepo.org/elrepo-release-7.0-2.el7.elrepo.noarch.rpm yum --enablerepo=elrepo-kernel install kernel-ml -y 检查内核是否安装完成
rpm -qa | grep kernel
更新GRUB并重启主机
egrep ^menuentry /etc/grub2.cfg | cut -f 2 -d \&amp;#39; grub2-set-default 0 #default 0表示第一个内核设置为默认运行, 选择最新内核就对了 reboot http://elrepo.org/linux/kernel/下e15、e16分别对应Centos5、Centos6，可参考以上安装
开启BBR 重启后uname -r 检查内核版本是不是4.9+
然后执行以下操作
echo &amp;#34;net.core.default_qdisc=fq&amp;#34; &amp;gt;&amp;gt; /etc/sysctl.conf echo &amp;#34;net.ipv4.tcp_congestion_control=bbr&amp;#34; &amp;gt;&amp;gt; /etc/sysctl.conf sysctl -p sysctl net.
          
        
        </description>
    </item>
    
    <item>
      <title>使用Google Authenticator两步验证加强SSH登录</title>
      <link>/post/use-google-authenticator-set-2step-verification-strengthening-ssh-login/</link>
      <pubDate>Thu, 28 Jan 2016 12:33:00 +0000</pubDate>
      
      <guid>/post/use-google-authenticator-set-2step-verification-strengthening-ssh-login/</guid>
      <description>
        
          
          
          
        
        
        
          Google Authenticator开源版主页 https://github.com/google/google-authenticator
安装Google Authenticator Ubuntu已经包含libpam-google-authenticator软件(Ubuntu 11.10以上版本),可以直接使用apt-get安装
apt-get install libpam-google-authenticator  其他系统可以通过源码编译安装
git clone https://github.com/google/google-authenticator-libpam.git cd google-authenticator-libpam/ ./bootstrap.sh ./configure make make install  注意：在Debian7中执行./configure时可能存在以下错误提示
configure: error: Unable to find the PAM library or the PAM header files  在此需要安装libpam0g-dev和libtool
apt-get -y install libpam0g-dev libtool  设置Google Authenticator 在手机端搜索安装Google Authenticator
google-authenticator Do you want authentication tokens to be time-based (y/n) y  然后出现二维码，使用手机端Google Authenticator扫码,接下来服务器端继续设置
如果没有出现二维码，可以将提示的以**https://www.google.com/chart?**开头的连接复制到浏览器中，就可以看到二维码了
Do you want me to update your &amp;quot;/root/.
          
        
        </description>
    </item>
    
    <item>
      <title>Linux下使用grive管理Google Drive</title>
      <link>/post/linux-use-grive-management-google-drive/</link>
      <pubDate>Wed, 26 Aug 2015 18:23:00 +0000</pubDate>
      
      <guid>/post/linux-use-grive-management-google-drive/</guid>
      <description>
        
          
          
          
        
        
        
          找到一个linux下可用的google drive客户端，纯cli操作，值得推荐
grive项目主页 https://github.com/Grive/grive
Ubuntu中下通过PPA安装grive
sudo add-apt-repository ppa:nilarimogard/webupd8 sudo apt-get update sudo apt-get install grive  使用grive同步Google Drive
mkdir googledrive cd googledrive grive -a  第一次运行，会有验证提示，将提示的url代码粘贴到浏览器中验证帐户，完了后将生成的验证代码粘贴到grive进行验证。
          
        
        </description>
    </item>
    
    <item>
      <title>安装Nginx和ngx_pagespeed</title>
      <link>/post/install-nginx-and-ngx_pagespeed-on-vps/</link>
      <pubDate>Fri, 24 Jul 2015 17:24:00 +0000</pubDate>
      
      <guid>/post/install-nginx-and-ngx_pagespeed-on-vps/</guid>
      <description>
        
          
          
          
        
        
        
          VPS配置:
Ubuntu 14.04 x86 RAM 512M SWAP 64M DISK 5G  准备工作 sudo apt-get update&amp;amp;&amp;amp;apt-get upgrade -y sudo apt-get install build-essential zlib1g-dev libpcre3 libpcre3-dev unzip libssl-dev -y  下载ngx_pagespeed cd NPS_VERSION=1.9.32.4 wget https://github.com/pagespeed/ngx_pagespeed/archive/release-${NPS_VERSION}-beta.zip unzip release-${NPS_VERSION}-beta.zip cd ngx_pagespeed-release-${NPS_VERSION}-beta/ wget https://dl.google.com/dl/page-speed/psol/${NPS_VERSION}.tar.gz tar -xzvf ${NPS_VERSION}.tar.gz  安装Nginx cd groupadd www useradd -s /sbin/nologin -g www www NGINX_VERSION=1.8.0 wget http://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz tar -xvzf nginx-${NGINX_VERSION}.tar.gz cd nginx-${NGINX_VERSION}/ ./configure \ --user=www \ --group=www \ --prefix=/usr/local/nginx \ --with-http_stub_status_module \ --with-http_ssl_module \ --with-http_spdy_module \ --with-http_gzip_static_module \ --with-http_sub_module \ --add-module=$HOME/ngx_pagespeed-release-${NPS_VERSION}-beta \ sudo make sudo make install sudo ln -sf /usr/local/nginx/sbin/nginx /usr/bin/nginx  配置/etc/init.
          
        
        </description>
    </item>
    
    <item>
      <title>将博客从Typcho转移至Gor</title>
      <link>/post/typecho-converted-to-gor/</link>
      <pubDate>Mon, 20 Jul 2015 17:20:00 +0000</pubDate>
      
      <guid>/post/typecho-converted-to-gor/</guid>
      <description>
        
          
          
          
        
        
        
          缘由 VPS快到期了，不想继续维护，太累，并且香港VPS价格也不菲。
于是打算选择一个静态博客平台，原来用过的不少:jekyll,hexo,gor,pelican，最后决定Gor
选择Gor的理由有两点
 安装方便 执行效率高  安装Gor 参考Gor主页https://github.com/wendal/gor安装Gor
将Typecho文章导出为Markdown文件(.md) Github上有现成的工具typecho-exporter，主页为https://github.com/aneasystone/typecho-exporter
这个工具可以将所有的文章导出为Markdown文件，但是以文章标题为文件名，不利于后期处理，建议使用slug为文件名。
编辑下载的main.py，将75行的p.title = r[1]替换为`p.title = r[2]&#39;，如下:
results = cur.fetchall() for r in results: p = Post() p.id = r[0] p.title = r[2] p.content = r[5] posts.append(p)  原来的r[1]对应typecho_contentsSQL表中的title列，我的r[2]对应slug列，可以根据实际情况更改。
编辑typecho-exporter的config.ini文件，设置数据库访问方式。
运行main.py，完成后会在typecho-exporter目录下生成files文件夹，里面就是导出的Markdown文件。
后期整理 导出后的Markdown没有Gor需要的文件头格式，需要手动整理
这里推荐使用Notepad++批量替换
  查找目标:
  替换为&amp;mdash;\n title: title\ndate: 2015-07-20\ndescription: \npermalink: \ncategories: \ntags: \n&amp;mdash;\n
  记得将查找模式重的扩展打开。
经过以上替换，就大概有了个Gor的Markdown头格式，后面的手动工作就少了多了。
          
        
        </description>
    </item>
    
    <item>
      <title>Linux下安装最新版golang</title>
      <link>/post/install-the-last-version-golang-for-linux/</link>
      <pubDate>Mon, 11 May 2015 15:11:00 +0000</pubDate>
      
      <guid>/post/install-the-last-version-golang-for-linux/</guid>
      <description>
        
          
          
          
        
        
        
          ubuntu中可以使用apt-get install golang来安装go，但是版本稍旧
如果需要安装最新版的golang，那就得自己动手咧
安装golang 从官网下载最新版，手动安装
apt-get install build-essential wget https://storage.googleapis.com/golang/go1.4.2.linux-386.tar.gz tar zxf go1.4.2.linux-386.tar.gz cd go/src ./all.bash  设置PATH 安装完成后需要设置PATH才能随地使用go
export PATH=&amp;quot;/root/go/bin:$PATH&amp;quot;  检查版本 go version go version go1.4.2 linux/386 
          
        
        </description>
    </item>
    
    <item>
      <title>下载Chrome离线安装包</title>
      <link>/post/download-the-chrome-offline-installation-package/</link>
      <pubDate>Sat, 30 Aug 2014 08:30:00 +0000</pubDate>
      
      <guid>/post/download-the-chrome-offline-installation-package/</guid>
      <description>
        
          
          
          
        
        
        
          Chrome离线安装包下载地址：
正式版 http://www.google.com/chrome/eula.html?hl=zh-CN&amp;amp;standalone=1
测试版 http://www.google.com/chrome/eula.html?hl=zh-CN&amp;amp;standalone=1&amp;amp;extra=betachannel
开发版 http://www.google.com/chrome/eula.html?hl=zh-CN&amp;amp;standalone=1&amp;amp;extra=devchannel
下载文件名为ChromeStandaloneSetup.exe
          
        
        </description>
    </item>
    
    <item>
      <title>Linux下部署goAgent</title>
      <link>/post/linux-deployment-goagent/</link>
      <pubDate>Thu, 30 May 2013 15:30:00 +0000</pubDate>
      
      <guid>/post/linux-deployment-goagent/</guid>
      <description>
        
          
          
          
        
        
        
          准备工作 下载Google Appengine SDK For Pyahont与goAgent
1.Google App Engine SDK for Python https://developers.google.com/appengine/downloads?hl=zh-CN#Google_App_Engine_SDK_for_Python 2.goagent https://code.google.com/p/goagent/  下载后解压，将goagent文件夹放到google_appengine目录下，目录结构如下:
~/google_appengine/goagent-goagent-d488f2  准备好Google Application_ID与两步验证密码,如何申请问Google
配置goagent 编辑~/google_appengine/goagent-goagent-d488f2/local/proxy.ini
填写正确的appid，在此建议将profile由默认的google_cn改为google_hk
参考以下步骤执行：
aquan@edge ~/google_appengine $ python appcfg.py update goagent-goagent-d4488f2/server/python/ 07:03 PM Host: appengine.google.com 07:03 PM Application: wrchiublog; version: 1 07:03 PM Starting update of app: wrchiublog, version: 1 07:03 PM Getting current resource limits. Email: wrchiu@126.com //在此填写googleid Password for wrchiu@126.com: //此处填写两步验证密码，而不是帐号密码 07:04 PM Scanning files on local disk.
          
        
        </description>
    </item>
    
  </channel>
</rss>