<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>树莓派 on UNIXETC</title>
    
    
    
    <link>/tags/%E6%A0%91%E8%8E%93%E6%B4%BE/</link>
    <description>Recent content in 树莓派 on UNIXETC</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sat, 07 Sep 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/%E6%A0%91%E8%8E%93%E6%B4%BE/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>一加3t和树莓派UNIXBench跑分对比</title>
      <link>/post/oneplus3t-and-raspberry-pi-unixbench-score-comparison/</link>
      <pubDate>Sat, 07 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/oneplus3t-and-raspberry-pi-unixbench-score-comparison/</guid>
      <description>
        
          
          
          
        
        
        
          一加3T 一加3T运行的是UbuntuTouch系统
一加3T系统信息 phablet@ubuntu-phablet:~$ inxi -F Resuming in non X mode: xrandr not found. For package install advice run: inxi --recommends System: Host: android Kernel: 3.18.31-halium-gca027546546e-01041-g7961eb763e61 aarch64 (32 bit) Desktop: N/A Distro: Ubuntu 16.04 xenial Machine: No /sys/class/dmi; using dmidecode: dmidecode is not installed. CPU: Quad core AArch64 Processor rev 1 (aarch64) (-MCP-) (ARM) clock speeds: max: 2188 MHz 1: 1593 MHz 2: 1593 MHz 3: 1593 MHz 4: 1593 MHz Graphics: Card: Failed to Detect Video Card!
          
        
        </description>
    </item>
    
    <item>
      <title>树莓派显示天气信息</title>
      <link>/post/weather-according-to-raspberry-pi/</link>
      <pubDate>Thu, 25 May 2017 15:12:00 +0000</pubDate>
      
      <guid>/post/weather-according-to-raspberry-pi/</guid>
      <description>
        
          
          
          
        
        
        
          在此介绍一个国外网友的树莓派项目RARP，Weather According to Raspberry Pi
顾名思义，Weather According to Raspberry Pi是一个有关天气信息的项目，该项目通过采集Raspberry Pi和Sense HAT的数据，来显示相关的天气信息，比如温度、湿度、压力等
项目地址http://coded2.herokuapp.com/weather/
代码国内下载地址http://cdn.lyq.wiki/res/warp_final.zip
下载后解压，得到main.py和gauge2.html两个文件，其中main.py需要Python3运行，gauge2.html是最终的显示文件
安装相关软件
sudo apt-get install python3 sudo apt-get install python3-pip pip3 install flask  打开Sense HAT仿真器，在程序菜单中，打开后如下图示:
下来，运行下载的python脚本
python3 main.py  正常情况下，会提示一个端口为5000的web服务正在运行
在浏览器中浏览localhost:5000或者127.0.0.1:5000，最终的浏览如下图
三个图表分别显示温度、压力和湿度，这三者的信息均来自Sense HAT 模拟器而不是真正的Sense HAT硬件。
如果需要采集Sense HAT扩展板的数据，需要将Sense HAT附加板和Raspberry Pi相连，具体信息参考官网 https://www.raspberrypi.org/products/sense-hat/
然后修改代码，打开main.py文件，找到如下行
from sense_emu import SenseHat  修改为
from sense_hat import SenseHat  保存后，重新运行python3 main.py，此时采集的数据就来自真实的SenseHAT硬件。
          
        
        </description>
    </item>
    
    <item>
      <title>树莓派动态IP更新器</title>
      <link>/post/raspberrypi-dynamic-ip-updater/</link>
      <pubDate>Wed, 19 Apr 2017 21:28:00 +0000</pubDate>
      
      <guid>/post/raspberrypi-dynamic-ip-updater/</guid>
      <description>
        
          
          
          
        
        
        
          这是一个python3的脚本，每隔10分钟监控一次IP地址，如果发生变化则会通过AutoRemote消息通知你。 关于AutoRemote的使用可参考这里
这里推荐使用ipgetter来获取外网IP，地址为https://github.com/phoemur/ipgetter
安装ipgetter
sudo apt-get install python3 pip sudo pip3 install ipgetter 你可以从以下地址获取每个通知设备的AutoRemote所需google key
​	http://autoremotejoaomgcd.appspot.com/?key=[it&amp;rsquo;s the part that is here]
以下为python3脚本:
import ipgetter import urllib.request import requests currentIP = ipgetter.myip() #AutoRemote function to send a notification YOUR_KEY goes here def sendAR(x): AR_key = &amp;#39;YOUR_KEY&amp;#39; AR_url = &amp;#39;http://autoremotejoaomgcd.appspot.com/sendmessage?key=&amp;#39;+ AR_key +&amp;#39;&amp;amp;message=IP%20&amp;#39; message = AR_url + x response = urllib.request.urlopen(message).read() print(x)	#check the internet and check if previous file is present try: requests.
          
        
        </description>
    </item>
    
    <item>
      <title>使用手机远程控制树莓派GPIO</title>
      <link>/post/use-your-phone-to-remotely-control-raspberrypi/</link>
      <pubDate>Thu, 13 Apr 2017 14:14:00 +0000</pubDate>
      
      <guid>/post/use-your-phone-to-remotely-control-raspberrypi/</guid>
      <description>
        
          
          
          
        
        
        
          必备条件：
 树莓派已联网 安装官方镜像 只支持Raspberry Pi 2/3 Model B 只支持Android手机 安装Java8  安装官方镜像Raspbian 下载地址 https://www.raspberrypi.org/downloads/
安装Java8 sudo apt install oracle-java8-jdk  下载Marsiot到树莓派
wget http://www.marsiot.com/download/marsiot.jar  下载Marsiot到手机，安装
http://www.marsiot.com/download/marsiot.apk
在树莓派上运行Marsiot
pi@raspi:~ $ sudo java -jar marsiot.jar Current version &amp;lt;101&amp;gt; More help: sudo java -jar marsiot.jar help Connect to www.marsiot.com... Connected ok! GPIO init... GPIO init ok! ID-CODE:c1fa PASS-CODE：11c6  记住以上ID-CODE、PASS-CODE
在手机上打开火星互联,事件中心时间轴上会显示所有新加入设备，以ID-CODE区分，找到你对应的设备点击，按照提示输入PASS-CODE即可连接。
连接后可以在我的设备中看到已连接的设备，点击通用视图即可实时监控GPIO端口状态。
          
        
        </description>
    </item>
    
    <item>
      <title>树莓派安装Dnsmasq加速DNS解析</title>
      <link>/post/raspberry-pi-install-dnsmasq-and-dnsmasq-china-list/</link>
      <pubDate>Mon, 18 Jan 2016 21:28:00 +0000</pubDate>
      
      <guid>/post/raspberry-pi-install-dnsmasq-and-dnsmasq-china-list/</guid>
      <description>
        
          
          
          
        
        
        
          天朝的dns服务商尿性不是一般的大，动不动就抽风或者劫持，为了避免这种情况，可以在树莓派上安装Dnsmasq来加速dns解析，提高网络浏览体验。
安装配置dnsmasq apt-get install dnsmasq  配置dnsmasq,vi /etc/dnsmasq.conf
我的配置文件如下：
domain=Raspi2 resolv-file=/etc/resolv.dnsmasq conf-dir=/etc/dnsmasq.d min-port=4096 server=114.114.114.114 server=114.114.115.115 server=223.5.5.5 server=223.6.6.6 server=119.29.29.29 server=182.254.116.116 server=112.124.47.27 server=114.215.126.16 server=101.226.4.6 server=218.30.118.6 server=42.120.21.30 server=199.91.73.222 server=178.79.131.110 server=8.8.8.8 server=8.8.4.4 cache-size=10000  配置完重启dnsmasq服务
service dnsmasq restart  其中的server字段为上游DNS
配置dnsmasq-china-list git clone https://github.com/felixonmars/dnsmasq-china-list.git cd dnsmasq-china-list/ cp *.conf /etc/dnsmasq.d/ service dnsmasq restart  至此设置完成，可以在路由器中将首选dns设为树莓派ip，这样局域网内的所有设备都可以体验dns解析加速了！
          
        
        </description>
    </item>
    
    <item>
      <title>树莓派下安装配置Noip</title>
      <link>/post/install-configure-noip-client-in-raspberry-pi/</link>
      <pubDate>Mon, 11 Jan 2016 12:13:00 +0000</pubDate>
      
      <guid>/post/install-configure-noip-client-in-raspberry-pi/</guid>
      <description>
        
          
          
          
        
        
        
          注册noip 首先在http://noip.com注册账户
然后在主机管理(Manage Hosts)中添加主机(Add A Host)，根据提示设置二级域名，IP可以随意填写。
安装Noip客户端 wget https://www.noip.com/client/linux/noip-duc-linux.tar.gz tar zxf noip-duc-linux.tar.gz cd noip-2.1.9-1 sudo make install  安装过程中，按照提示输入noip帐号信息，时间间隔建议设为5s，默认30s
设置开机启动 在/etc/init.d/中建立noip2脚本
sudo vi /etc/init.d/noip2  脚本内容如下
#! /bin/sh ### BEGIN INIT INFO # Provides: noip2 # Required-Start: $syslog # Required-Stop: $syslog # Default-Start: 2 3 4 5 # Default-Stop: 0 1 6 # Short-Description: noip.com client service ### END INIT INFO # . /lib/lsb/init-functions case &amp;quot;$1&amp;quot; in start) echo &amp;quot;Starting noip2.
          
        
        </description>
    </item>
    
    <item>
      <title>树莓派安装Node.js</title>
      <link>/post/raspberry-pi-install-nodejs/</link>
      <pubDate>Thu, 03 Dec 2015 12:32:00 +0000</pubDate>
      
      <guid>/post/raspberry-pi-install-nodejs/</guid>
      <description>
        
          
          
          
        
        
        
          首先查看树莓派cpu信息
pi@raspi:~ $ cat /proc/cpuinfo processor : 0 model name : ARMv6-compatible processor rev 7 (v6l) BogoMIPS : 2.00 Features : half thumb fastmult vfp edsp java tls CPU implementer : 0x41 CPU architecture: 7 CPU variant : 0x0 CPU part : 0xb76 CPU revision : 7 Hardware : BCM2708 Revision : 000e Serial : 000000004a8acb6d  看清楚cpu构架，是ARMv6
然后在node.js官网下载对应版本的包，下载地址https://nodejs.org/dist/
# wget https://nodejs.org/dist/v4.2.2/node-v4.2.2-linux-arm64.tar.gz # tar zxf node-v4.2.2-linux-arm64.tar.gz # mv node-v4.2.2-linux-arm64 /usr/nodejs422  方便使用期间，做个链接
          
        
        </description>
    </item>
    
    <item>
      <title>树莓派安装ffmpeg</title>
      <link>/post/raspberry-pi-install-ffmpeg/</link>
      <pubDate>Sat, 07 Nov 2015 21:23:00 +0000</pubDate>
      
      <guid>/post/raspberry-pi-install-ffmpeg/</guid>
      <description>
        
          
          
          
        
        
        
          先安装h264编码器
#!/bin/bash cd /usr/src git clone git://git.videolan.org/x264 cd x264 ./configure --host=arm-unknown-linux-gnueabi --enable-static --disable-opencl make sudo make install  下载源码编译安装ffmpeg
cd /usr/src git clone git://source.ffmpeg.org/ffmpeg.git cd ffmpeg sudo ./configure --arch=armel --target-os=linux --enable-gpl --enable-libx264 --enable-nonfree make sudo make install  由于树莓派原因，这个过程很长……很长…… 建议开screen，然后Ctrl+a+d
          
        
        </description>
    </item>
    
    <item>
      <title>树莓派开启root登录</title>
      <link>/post/raspberry-pi-allow-root-login/</link>
      <pubDate>Fri, 18 Sep 2015 21:28:00 +0000</pubDate>
      
      <guid>/post/raspberry-pi-allow-root-login/</guid>
      <description>
        
          
          
          
        
        
        
          想要通过ssh登录树莓派进行管理，使用默认的pi用户有时真的不便，对于linux老手来说，可以直接开启root用户ssh登录，这就方便多了，方法如下：
sudo passwd root sudo passwd --unlock root  设置SSH
sudo vi /etc/ssh/sshd_config  将其中的PermitRootLogin without-password改为PermitRootLogin yes，然后重启ssh服务sudo service ssh restart
Over!
          
        
        </description>
    </item>
    
    <item>
      <title>树莓派安装配置minidlna</title>
      <link>/post/raspberry-pi-install-minidlna-to-create-digital-media-server/</link>
      <pubDate>Thu, 06 Aug 2015 18:26:00 +0000</pubDate>
      
      <guid>/post/raspberry-pi-install-minidlna-to-create-digital-media-server/</guid>
      <description>
        
          
          
          
        
        
        
          树莓派挂载移动存储 可以挂载移动硬盘或者大容量的U盘，参考以下文章：
 树莓派挂载U盘作为存储分区 fdisk分区实例  安装配置minidlna #sudo apt-get install -y minidlna  编辑minidlna配置文件/etc/minidlna.conf，内容如下：
media_dir=/home/pi/dlnadoc #媒体文件目录 db_dir=/var/lib/minidlna #minidlna通过SQLite来建立媒体库索引，因此需要定义数据库目录 listening_ip=192.168.1.111 #树莓派IP port=8200	#web端口，可以通过ip:port查看索引状态 friendly_name=Raspi_DLNA #服务器命名  重启minidlna服务
sudo service minidlna restart  强制刷新
sudo service minidlna force-reload  查看索引状态,浏览http://192.168.1.111:8200
MiniDLNA status Audio files: 0 Video files: 2 Image files: 0  DLNA客户端 PC
Windows7下将网络设置为家庭网络，完成后刷新，在网络中媒体设备下就可以自动发现Rasp_DLNA。
点击进去就可以使用MediaPlayer来浏览。
Android
VPlayer+ VPlayer uPnP DLNA Plugin
IOS
RushPlayer
          
        
        </description>
    </item>
    
    <item>
      <title>将树莓派数据上传至乐为物联</title>
      <link>/post/sumbit-raspberry-pi-data-to-lewei50/</link>
      <pubDate>Thu, 30 Jul 2015 12:59:00 +0000</pubDate>
      
      <guid>/post/sumbit-raspberry-pi-data-to-lewei50/</guid>
      <description>
        
          
          
          
        
        
        
          进入http://www.lewei50.com/注册登录
添加设备(Add Device) 我的物联 -&amp;gt; 我的设备，添加新设备，类型选择其他，不使用模板。
请自定义设备标识，后面要用到。
添加传感器 我的物联 -&amp;gt; 感器与控制器，新建传感器。
其中标识为提交数据依据，建议英文。
向乐为物联提交数据 lewei.sh代码如下 http://cdn.lyq.wiki/res/lewei.sh
#!/bin/bash LURL=http://www.lewei50.com/api/V1/Gateway/UpdateSensors/01 KEY=&amp;quot;2fasdfsdfsdf9ffadsf62dfbfsdfa1&amp;quot; sys_load=`cat /proc/loadavg | awk &#39;{print $2}&#39;` st=`/usr/bin/sen_t` sh=`/usr/bin/sen_h` for i in 1 2 3 4 5; do sys_temp=`cat /sys/class/thermal/thermal_zone0/temp | awk &#39;{print $1/1000}&#39;` if [[ &amp;quot;${sys_temp}&amp;quot; =~ ^- ]] then sys_temp=&#39;0.0&#39; else echo ${sys_temp} break fi done echo &amp;quot;Printf Values&amp;quot; echo &amp;quot;sys_temp:&amp;quot;${sys_temp} echo &amp;quot;sys_load:&amp;quot;${sys_load} echo &amp;quot;sensor_t:&amp;quot;${st} echo &amp;quot;sensor_h:&amp;quot;${sh} echo &amp;quot;Done!&amp;quot; echo &amp;quot;Sumbit Data to Lewei&amp;quot; curl --request POST ${LURL} --header &amp;quot;userkey:${KEY}&amp;quot; --data &amp;quot;[{&#39;Name&#39;:&#39;load&#39;,&#39;Value&#39;:&#39;${sys_load}&#39;},{&#39;Name&#39;:&#39;temp&#39;,&#39;Value&#39;:&#39;${sys_temp}&#39;},{&#39;Name&#39;:&#39;sd&#39;,&#39;Value&#39;:&#39;${sh}&#39;},{&#39;Name&#39;:&#39;wd&#39;,&#39;Value&#39;:&#39;${st}&#39;}]&amp;quot;  其中LURL后面的01为设备标识,KEY为用户Userkey,JSON数据中的Name对应相应的传感器标识。
          
        
        </description>
    </item>
    
    <item>
      <title>Xively与树莓派监控温度与湿度</title>
      <link>/post/use-xively-monitor-raspberry-pi/</link>
      <pubDate>Tue, 14 Jul 2015 14:14:00 +0000</pubDate>
      
      <guid>/post/use-xively-monitor-raspberry-pi/</guid>
      <description>
        
          
          
          
        
        
        
          进入https://www.xively.com/注册登录
添加设备(Add Device) 在Development Devices页面点击Add Device添加设备
填写Device Name和Device Description，将Privacy设定为Public Device
设置API Key 进入Device详情页，在API Keys中点击Add Key添加一个Key,将Permissions中的Read,Create,Update,Delete全部勾选，Label随便填。
向Xively提交数据 在这里通过CURL向xively提交JSON格式的数据
JSON数据格式
{ &amp;quot;datastreams&amp;quot;: [ { &amp;quot;id&amp;quot;: &amp;quot;load&amp;quot;, &amp;quot;current_value&amp;quot;: &amp;quot;9.00&amp;quot; }, { &amp;quot;id&amp;quot;: &amp;quot;temp&amp;quot;, &amp;quot;current_value&amp;quot;: &amp;quot;89.15&amp;quot; } ] }  其中每个id为数据定义的idcurrent_value为提交的值
脚本文件send_xively.sh
#!/bin/bash LOCATION=&#39;/home/pi/xively_data&#39; #Path of Xively JSON DATA file API_KEY=&#39;orxUhgjqSYPDbv5243534tG65464345eArxSVY9pE8ITnE&#39; #API Key FEED_ID=&#39;1354438558&#39; #FEED_ID #################################################### COSM_URL=https://api.xively.com/v2/feeds/${FEED_ID}?timezone=+8 cpu_load=`cat /proc/loadavg | awk &#39;{print $2}&#39;` sen_t=`sudo /home/pi/st` sen_h=`sudo /home/pi/sh` for i in 1 2 3 4 5; do cpu_t=`cat /sys/class/thermal/thermal_zone0/temp | awk &#39;{print $1/1000}&#39;` if [[ &amp;quot;${cpu_t}&amp;quot; =~ ^- ]] then cpu_t=&#39;0.
          
        
        </description>
    </item>
    
    <item>
      <title>树莓派连接DHT11采集温度与湿度</title>
      <link>/post/raspberry-pi-by-dht11-collecting-temperature-and-humidity/</link>
      <pubDate>Sun, 21 Jun 2015 16:21:00 +0000</pubDate>
      
      <guid>/post/raspberry-pi-by-dht11-collecting-temperature-and-humidity/</guid>
      <description>
        
          
          
          
        
        
        
          DHT11介绍 DHT11是一款有已校准数字信号输出的温湿度传感器。 精度湿度+-5%RH， 温度+-2℃，量程湿度20-90%RH， 温度0~50℃。
DHT11针脚说明
 VCC	供电 3－5.5VDC DATA	串行数据，单总线 N/A	空脚，请悬空 GND	接地，电源负极  硬件连接 树莓派GPIO针脚说明
DHT11与树莓派链接
VCC连接+3V3 DATA连接GPIO4 GND链接GND
软件部分 安装wiringPi
sudo apt-get install git-core git clone git://git.drogon.net/wiringPi cd wiringPi ./build  如果由于网络原因无法git clone成功，可以从此下载wiringPi http://cdn.lyq.wiki/res/wiringPi_v2.3.1.zip
验证是否安装成功
gpio -v gpio readall  下载编译C语言程序代码
wget http://cdn.lyq.wiki/res/sensor.c gcc -o sensor sensor.c -lwiringPi  运行程序
sudo ./sensor 24,39  输出结果，第一个为湿度，第二个为温度
          
        
        </description>
    </item>
    
    <item>
      <title>入手树莓派2 Model B</title>
      <link>/post/starting-raspberry-pi-2-model-b/</link>
      <pubDate>Thu, 12 Mar 2015 23:12:00 +0000</pubDate>
      
      <guid>/post/starting-raspberry-pi-2-model-b/</guid>
      <description>
        
          
          
          
        
        
        
          树莓派 2 Mode B 配置详情
  A 900MHz quad-core ARM Cortex-A7 CPU
  1GB RAM
  4 USB ports
  40 GPIO pins
  Full HDMI port
  Ethernet port
  Combined 3.5mm audio jack and composite video
  Camera interface (CSI)
  Display interface (DSI)
  Micro SD card slot
  VideoCore IV 3D graphics core
  
          
        
        </description>
    </item>
    
    <item>
      <title>组装ATRIX 4G Laptop Dock和树莓派</title>
      <link>/post/assemble-atrix-4g-pc-docking-and-raspberry-pi/</link>
      <pubDate>Sat, 28 Feb 2015 02:28:00 +0000</pubDate>
      
      <guid>/post/assemble-atrix-4g-pc-docking-and-raspberry-pi/</guid>
      <description>
        
          
          
          
        
        
        
          清单如下：
 Raspberry Pi B+ Laptop Dock for Motorola ATRIX 4G Micro-HDMI 母对母转接头 HDMI-Micro HDMI 公对公连接线 Micro USB 母对母延长线 USB-Micro USB充电线一根  以下为实物图:
操作:
主要是将一个Micro USB母口和一对USB/Micro USb公口相连，然后就可以通过Laptop Dock进行供电，并且链接Laptop Dock键盘。
下图是一张Laptop Dock接口的照片:
以下为USB引脚定义:
 红 电源+ 白 数据- 绿 数据+ 黑 接地  因此需要将Laptop上的Micro USB引出的电路进行改造，将其中的电源接到Micro USB公口上给树莓派供电，将数据接到USB公口上链接键盘，线路改造图示如下:
接下来就是考验动手能力了，完成后的实物图如下：
          
        
        </description>
    </item>
    
    <item>
      <title>树莓派安装TP WN322G&#43;驱动</title>
      <link>/post/raspberry-pi-install-tp-wn322g-drivers/</link>
      <pubDate>Sat, 07 Feb 2015 12:27:00 +0000</pubDate>
      
      <guid>/post/raspberry-pi-install-tp-wn322g-drivers/</guid>
      <description>
        
          
          
          
        
        
        
          首先查看usb设备
pi@raspi ~ $ lsusb Bus 001 Device 002: ID 0424:9514 Standard Microsystems Corp. Bus 001 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub Bus 001 Device 003: ID 0424:ec00 Standard Microsystems Corp. Bus 001 Device 004: ID 0ace:1215 ZyDAS ZD1211B 802.11g  注意，最后一行为无线网卡信息
打开https://wiki.debian.org/WiFi，查看是否有对照型号的固件
安装对应的固件
pi@raspi ~ $ sudo apt-get install zd1211-firmware  完成后使用iwconfig检查是否已经安装成功
pi@raspi ~ $ iwconfig wlan0 IEEE 802.11bg ESSID:off/any Mode:Managed Access Point: Not-Associated Tx-Power=20 dBm Retry long limit:7 RTS thr:off Fragment thr:off Power Management:off lo no wireless extensions.
          
        
        </description>
    </item>
    
    <item>
      <title>树莓派挂载U盘</title>
      <link>/post/raspberry-pi-mount-udisk-as-the-storage-partition/</link>
      <pubDate>Thu, 11 Dec 2014 21:21:00 +0000</pubDate>
      
      <guid>/post/raspberry-pi-mount-udisk-as-the-storage-partition/</guid>
      <description>
        
          
          
          
        
        
        
          树莓派用的是8g的TF卡，想作为小型NAS有点小，存不了多少东西，于是将一个闲置的32G U盘挂载上，当作存储分区
以下为操作过程：
查看磁盘信息
pi@raspberrypi ~ $ sudo fdisk -l Disk /dev/mmcblk0: 7990 MB, 7990149120 bytes 4 heads, 16 sectors/track, 243840 cylinders, total 15605760 sectors Units = sectors of 1 * 512 = 512 bytes Sector size (logical/physical): 512 bytes / 512 bytes I/O size (minimum/optimal): 512 bytes / 512 bytes Disk identifier: 0x000981cb Device Boot Start End Blocks Id System /dev/mmcblk0p1 8192 122879 57344 c W95 FAT32 (LBA) /dev/mmcblk0p2 122880 15605759 7741440 83 Linux Disk /dev/sda: 32.
          
        
        </description>
    </item>
    
    <item>
      <title>树莓派使用Ngrok实例</title>
      <link>/post/raspberry-pi-install-ngrok/</link>
      <pubDate>Wed, 26 Nov 2014 11:26:00 +0000</pubDate>
      
      <guid>/post/raspberry-pi-install-ngrok/</guid>
      <description>
        
          
          
          
        
        
        
          首先在ngrok https://ngrok.com/注册登录
架设已经在树莓派上安装了Nginx，端口为80
那么下载Linux/ARM版ngrok到树莓派，执行如下命令：
ngrok -authtoken UfATi0wi98gGMqQ+/GsP 80  其中UfATi0wi98gGMqQ+/GsP为你的auth token
然后就会出现如下提示:
Forwarding http://36772918.ngrok.com -&amp;gt; 127.0.0.1:80 Forwarding https://36772918.ngrok.com -&amp;gt; 127.0.0.1:80  按照提示，可以通过那两个二级域名来浏览web服务。
以上验证只需要输入一次，下次可以直接使用如下命令来运行
ngrok 80  ngrok其他用法
 自定义二级域名  使用自定义的字符串代替系统分配的数字
ngrok -subdomain mysubd 80    开启密码保护
ngrok -httpauth &amp;ldquo;user:password&amp;rdquo; 80
  TCP隧道
ngrok tcp 22
  
          
        
        </description>
    </item>
    
    <item>
      <title>修改树莓派Swap</title>
      <link>/post/modify-the-raspberry-pi-swap-size/</link>
      <pubDate>Thu, 30 Oct 2014 14:30:00 +0000</pubDate>
      
      <guid>/post/modify-the-raspberry-pi-swap-size/</guid>
      <description>
        
          
          
          
        
        
        
          树莓派的swap大小在/etc/dphys-swapfile中定义，默认为100M
pi@raspi:~$ cat /etc/dphys-swapfile CONF_SWAPSIZE=1000 pi@raspi:/mnt$ free -h total used free shared buffers cached Mem: 437M 36M 401M 0B 2.1M 12M -/+ buffers/cache: 22M 415M Swap: 99M 0B 99M pi@raspi:/mnt$  可以自己修改CONF_SWAPSIZE的值，单位为兆(MB)
修改后重启树莓派生效，如下：
pi@raspi:~$ cat /etc/dphys-swapfile CONF_SWAPSIZE=1000 pi@raspi:~$ free -h total used free shared buffers cached Mem: 437M 53M 383M 0B 7.9M 23M -/+ buffers/cache: 22M 415M Swap: 999M 0B 999M 
          
        
        </description>
    </item>
    
    <item>
      <title>树莓派中使用TL-WN725N</title>
      <link>/post/use-tl-wn725n-in-raspberry-pi/</link>
      <pubDate>Tue, 12 Aug 2014 18:12:00 +0000</pubDate>
      
      <guid>/post/use-tl-wn725n-in-raspberry-pi/</guid>
      <description>
        
          
          
          
        
        
        
          Raspbian版本 2014-01-07-wheezy-raspbian.img
下载地址为http://cdn.lyq.wiki/res/8188eu-20140616.tar.gz
首先固网链接树莓派，通过SSH登录
wget http://cdn.lyq.wiki/res/8188eu_31024_614.zip unzip 8188eu_31024_614.zip sudo mv 8188eu.ko /lib/modules/`uname -r`/kernel/drivers/net/wireless sudo chown root:root /lib/modules/`uname -r`/kernel/drivers/net/wireless/8188eu.ko sudo mv rtl8188eufw.bin /lib/firmware/rtlwifi/ sudo chown root:root /lib/firmware/rtlwifi/rtl8188eufw.bin sudo depmod -a sudo modprobe 8188eu  然后编辑/etc/netwok/interfaces，添加以下内容
allow-hotplug wlan0 auto wlan0 iface wlan0 inet manual wpa-roam /etc/mywpa.conf iface default inet dhcp  新建mywpa.conf写入链接配置vi /etc/mywpa.conf
network={ ssid=&amp;quot;YOUR SSID&amp;quot; proto=RSN key_mgmt=WPA-PSK pairwise=CCMP TKIP group=CCMP TKIP psk=&amp;quot;YOUR PASSWORD&amp;quot; }  重启系统
          
        
        </description>
    </item>
    
    <item>
      <title>树莓派安装Tonido打造个人云服务</title>
      <link>/post/raspberry-pi-install-tonido-build-personal-cloud/</link>
      <pubDate>Tue, 12 Aug 2014 18:12:00 +0000</pubDate>
      
      <guid>/post/raspberry-pi-install-tonido-build-personal-cloud/</guid>
      <description>
        
          
          
          
        
        
        
          安装Tonido sudo mkdir /usr/local/tonido cd /usr/local/tonido sudo wget http://patch.codelathe.com/tonido/live/installer/armv6l-rpi/tonido.tar.gz sudo tar -zxvf tonido.tar.gz ./tonido.sh start  浏览器打开http://ip:10001开始注册设置 ip为树莓派的地址
安装多媒体解码器 Tonido支持在线播放音频，但需要安装设置解码器
cd /usr/local/tonido sudo apt-get install ffmpeg sudo ln -s /usr/bin/ffmpeg ffmpeg.exe sudo ln -s /usr/bin/ffmpeg ffmpegv.exe  设置开机启动  下载脚本文件tonido wget http://cdn.lyq.wiki/res/tonido 设置脚本权限 sudo cp tonido /etc/init.d/ sudo chmod +x /etc/init.d/tonido 安装脚本 sudo update-rc.d tonido defaults  客户端下载 Tonido Sync for Windows http://www.tonido.com/download.php?TonidoSync.exe Tonido Sync for Mac http://www.tonido.com/download.php?TonidoSync.dmg Tonido Sync for Linux http://www.
          
        
        </description>
    </item>
    
    <item>
      <title>树莓派配置VNC</title>
      <link>/post/raspberry-pi-configuration-vnc/</link>
      <pubDate>Tue, 11 Mar 2014 00:23:00 +0000</pubDate>
      
      <guid>/post/raspberry-pi-configuration-vnc/</guid>
      <description>
        
          
          
          
        
        
        
          安装VNC Server
$sudo apt-get install tightvncserver $sudo apt-get install ttf-wqy-microhei //安装中文字体  使用VNC Server
$vncserver -geometry 1024x768 //分辨率，推荐960x640，或者640x480 $vncserver -kill :1 //结束vncserver进程  Real VNC Viewer链接方法： 192.168.1.2:1
          
        
        </description>
    </item>
    
    <item>
      <title>树莓派修改软件源</title>
      <link>/post/raspberry-pi-modify-software-source/</link>
      <pubDate>Mon, 10 Mar 2014 12:31:00 +0000</pubDate>
      
      <guid>/post/raspberry-pi-modify-software-source/</guid>
      <description>
        
          
          
          
        
        
        
          中国国内推荐阿里云的开源镜像服务，地址为http://mirrors.aliyun.com/
vi /etc/apt/sources.list  将默认的raspbian.org源注释(#)掉，加入阿里云的raspbian源
deb http://mirrors.aliyun.com/raspbian/raspbian/ jessie main non-free contrib deb-src http://mirrors.aliyun.com/raspbian/raspbian/ jessie main non-free contrib  更新系统
apt-get update&amp;amp;&amp;amp;apt-get upgrade -y 
          
        
        </description>
    </item>
    
    <item>
      <title>树莓派与DNSPod动态域名解析</title>
      <link>/post/raspberry-pi-and-dnspod-dynamic-dns/</link>
      <pubDate>Mon, 03 Mar 2014 03:03:00 +0000</pubDate>
      
      <guid>/post/raspberry-pi-and-dnspod-dynamic-dns/</guid>
      <description>
        
          
          
          
        
        
        
          所需条件
 Raspberry Pi TP-Link路由器 DNSPod帐户 域名  配置路由器 进入路由器的DHCP服务器-&amp;gt;静态地址分配菜单，为Raspberry Pi分配静态IP地址，例如：192.168.1.200
进入路由器的安全功能-&amp;gt;远端WEB管理菜单，设置WEB管理端口为一个非80值，例如82
进入路由器的转发规则-&amp;gt;DMZ主机菜单，将DMZ主机IP地址设置为Raspberry Pi的ip地址，然后启用保存。
设置DNSPod动态域名解析 首先登录DNSPod网页管理域名，将二级域名www 的A记录解析到路由器外网IP(可通过路由器管理首页查询，或者通过浏览ip138.com来获得)
注：一级域名请解析**@**的A记录。
下载DNSPod官方客户端Lite https://support.dnspod.cn/Support/api
解压后双击打开登录，从右侧信息列表中也可以看到本机最新IP，点击相应域名后的动态解析按钮，在动态解析设置中右键点击相应的动态记录启用即可，关闭DNSPod官方客户端Lite。
设置Raspberry Pi 安装Web服务器软件(Nginx)
#apt-get install nginx #/etc/init.d/nginx start  内网可以通过浏览`http://192.168.1.129&amp;quot;来检查Nginx是否正常运行。
浏览https://gist.githubusercontent.com/chuangbo/833369，下载动态域名解析脚本(pypod.py)
编辑pypod.py修改以下内容：
login_email=&amp;quot;email&amp;quot;, # DSNPod帐户邮箱 login_password=&amp;quot;password&amp;quot;, # DSNPod帐户密码 domain_id=100, # 域名id record_id=100, # 记录id sub_domain=&amp;quot;www&amp;quot;, # 子域名  其中域名id与记录id可以通过以下命令获取：
curl -k https://dnsapi.cn/Domain.List -d &amp;quot;login_email=xxx&amp;amp;login_password=xxx&amp;quot; curl -k https://dnsapi.cn/Record.List -d &amp;quot;login_email=xxx&amp;amp;login_password=xxx&amp;amp;domain_id=xxx&amp;quot;  提示：如果你使用了www子域名，则需要获取www的记录id，如果使用一级域名(@)，则需要获取**@**的记录id。
编辑完pypod.py保存退出，使用以下命令运行：
#python pypod.py  现在可以通过域名来浏览Raspberry Pi上的Web内容了。
pypod.py开机运行
添加/usr/bin/python /home/pi/pypod.
          
        
        </description>
    </item>
    
    <item>
      <title>树莓派安装Python开发环境与GPIO库</title>
      <link>/post/raspberry-pi-install-python-development-environment-and-gpio-library/</link>
      <pubDate>Sun, 02 Mar 2014 12:31:00 +0000</pubDate>
      
      <guid>/post/raspberry-pi-install-python-development-environment-and-gpio-library/</guid>
      <description>
        
          
          
          
        
        
        
          安装python
$sudo apt-get install python-dev  更新
$sudo easy_install -U distribute  安装python-pip
$sudo apt-get install python-pip  添加国内pypi镜像
在~/.pip/pip.conf中添加
[global] index-url = http://mirrors.aliyun.com/pypi/simple/  安装python的GPIO库
$sudo pip install rpi.gpio 
          
        
        </description>
    </item>
    
    <item>
      <title>开始使用树莓派</title>
      <link>/post/starting-use-raspberry-pi/</link>
      <pubDate>Fri, 28 Feb 2014 12:28:00 +0000</pubDate>
      
      <guid>/post/starting-use-raspberry-pi/</guid>
      <description>
        
          
          
          
        
        
        
          安装系统 从官网下载系统镜像，推荐Raspbian
http://downloads.raspberrypi.org/raspbian_latest
将下载后的zip文件解压，得到2014-01-07-wheezy-raspbian.img文件。
准备一张SD卡，最好容量大于4GB，Class10
将镜像写入SD卡
 Linux下推荐使用dd名来写入镜像  使用fdisk -l检查分区信息，比如sd卡设备为**/dev/sdb**，使用以下命令写入：
#dd if=2014-01-07-wheezy-raspbian.img of=/dev/sdb bs=1M   Windows下推荐使用Win32DiskImager写入镜像  Win32DiskImager下载地址：http://sourceforge.net/projects/win32diskimager/
下载后打开软件，选择好镜像文件与USB设备，然后点击Write写入。
开机进入系统 将已写入系统的SD卡插入Raspberry Pi，通过固网链接路由器，然后使用USB供电启动。
正常启动后，板载的ACT，PWR、FDX、LNK、100五个指示灯均点亮。
通过SSH连接Raspberry Pi
查看Raspberry Pi IP地址
#nmap -sP 192.168.1/24  检查出MAC后标注(Raspberry Pi Foundation)的即为Raspberry Pi主机。
然后通过SSH来链接主机
#ssh 192.168.1.127  用户名为pi，默认密码为raspberry
Widnows下推荐使用Putty
设置Raspberry 运行设置工具sudo raspi-config
 选择Expand Filesystem扩展文件系统 Change User Passwd 修改默认用户pi的密码，当然也可以在系统中使用passwd命令来更改。 Advanced Options-&amp;gt;Hostname 修改主机名 Overclock 超频，建议900Mhz  
          
        
        </description>
    </item>
    
    <item>
      <title>入手树莓派1 Model B</title>
      <link>/post/starting-raspberry-pi-1-model-b/</link>
      <pubDate>Wed, 26 Feb 2014 12:21:00 +0000</pubDate>
      
      <guid>/post/starting-raspberry-pi-1-model-b/</guid>
      <description>
        
          
          
          
        
        
        
          刚刚入手Raspberry Pi 1 Model B
配置详情
 Broadcom BCM2835 SoC full HD multimedia applications processor 700MHz low power ARM1176JZ-F applications processor Broadcom VideoCore IV, OpenGL ES 2.0, 1080p30 h.264/MPEG-4 AVC high profile decoder 512MB SDRAM 10/100 Ethernet RJ 45 on board network Storage via SD/ MMC/ SDIO card slot Dual USB connector HDMI (rev 1.3 &amp;amp; 1.4) composite RCA (PAL and NTSC) 3.5mm jack, HDMI Linux operating system  正面图：
          
        
        </description>
    </item>
    
  </channel>
</rss>