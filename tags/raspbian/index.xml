<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Raspbian on UNIXETC</title>
    <link>https://unixetc.com/tags/raspbian/</link>
    <description>UNIXETC (Raspbian)</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Fri, 19 Apr 2019 09:46:00 +0000</lastBuildDate>
    
    <atom:link href="https://unixetc.com/tags/raspbian/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>通过SSH Over USB管理树莓派Zero</title>
      <link>https://unixetc.com/post/raspberry-pi-zero-with-ssh-over-usb/</link>
      <pubDate>Fri, 19 Apr 2019 09:46:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/raspberry-pi-zero-with-ssh-over-usb/</guid>
      <description>&lt;p&gt;树莓派Zero因为相对来说太小巧，没有提供初始化的网卡，所以我们除了通过串口连接以外，树莓派Zero也提供了USB直接连接的方式。即通过Ethernet Gadget模式来连接pc，并进行ssh连接。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Ethernet
Gadget模式即USB网卡模式，比较常见的就是我们通过android手机的usb接口对pc进行网络共享的一种手段。一般电脑都会自动识别这种设备，并开启网卡进行共享。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;修改配置文件&#34;&gt;修改配置文件&lt;/h3&gt;
&lt;p&gt;为了进行USB连接，我们需要修改BOOT文件夹下的&lt;strong&gt;config.txt&lt;/strong&gt;与&lt;strong&gt;cmdline.txt&lt;/strong&gt;配置文件。
首先在&lt;strong&gt;config.txt&lt;/strong&gt;最末行处换行添加如下代码，打开usb网卡模式：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;dtoverlay=dwc2
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;其次在&lt;strong&gt;cmdline.txt&lt;/strong&gt;文件中找到&lt;code&gt;rootwait&lt;/code&gt;字段，并在其后面空格添加如下信息，在打开系统时开启USB网卡模式。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;modules-load=dwc2,g_ether
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;在boot分区新建ssh文件，以打开ssh访问功能。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;touch ssh
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;通过usb连接设备&#34;&gt;通过usb连接设备&lt;/h3&gt;
&lt;p&gt;树莓派zero有两个MicroUSB口，一个是电源插口，职司供电的功能，另外一个就是USB接口，它除了供电以外还提供OTG的功能，我们也是通过这个接口来连接PC。
此时我们可以通过以下代码连接树莓派zero：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ssh pi@raspberrypi.local
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;但此时ip段为DHCP模式获取，如果我们希望通过ip来连接，则我们需要给树莓派的usb网卡设置ip。&lt;/p&gt;
&lt;h3 id=&#34;设置usb网卡的ip&#34;&gt;设置USB网卡的IP&lt;/h3&gt;
&lt;p&gt;我们可以通过ifconfig -a来查看我们现在的网卡设备，此时我们可以看到，USB0网卡设备，我们就是通过该设备连接的pc，所以我们需要设置该网卡的ip。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo nano /etc/network/interfaces
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;打开网卡配置界面，在最末行添加如下代码来设置固定IP：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;allow-hotplug usb0
iface usb0 inet static
        address 192.168.7.2
        netmask 255.255.255.0
        network 192.168.7.0
        broadcast 192.168.7.255
        gateway 192.168.7.1
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后重启usb0网卡：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo ifdown usb0
sudo ifup usb0
ifconfig usb0
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;但树莓派此时实际上是从机，我们需要通过设置pc主机的ip来让树莓派0的usb网卡真正运作起来，那么我们对刚才的usb设备设置如下IP：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;IP:  192.168.7.1
掩码: 255.255.255.0
路由: 192.168.7.1&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;此时我们就可以通过ip来进行ssh连接了：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ssh pi@192.168.7.2
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://notenoughtech.com/raspberry-pi/raspberry-pi-zero-ssh-usb/&#34;&gt;https://notenoughtech.com/raspberry-pi/raspberry-pi-zero-ssh-usb/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.csdn.net/talkxin/article/details/53066555&#34;&gt;https://blog.csdn.net/talkxin/article/details/53066555&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>理解Linux中Shell初始化文件和用户Profiles文件</title>
      <link>https://unixetc.com/post/understand-linux-shell-initialization-files-and-user-profiles-files/</link>
      <pubDate>Tue, 25 Apr 2017 14:25:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/understand-linux-shell-initialization-files-and-user-profiles-files/</guid>
      <description>&lt;p&gt;Linux是一个多用户、实时共享的操作系统，意味着不止一个用户可以登录同一个系统。系统管理员通过任务管理来分配不同用户的权限，比如安装、升级、卸载应用程序，运行编译程序，文件查看、编辑等等。&lt;/p&gt;
&lt;p&gt;Linux允许通过两种主要方式来创建用户环境：系统级(全局)和用户级(个人)。一般情况下，Linux系统都会运行基本shell程序，当用户登录成功后shell会在初始化时根据某些文件开创建环境。&lt;/p&gt;
&lt;h3 id=&#34;linux中的shell初始化&#34;&gt;Linux中的Shell初始化&lt;/h3&gt;
&lt;p&gt;当&lt;strong&gt;Shell&lt;/strong&gt;被调用时，会有一些初始化/启动文件被启用，它们的主要作用是为shell本身或用户设定运行环境，包含一些函数、	变量、别名等等。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Shell&lt;/strong&gt;可以读取以下两种初始化文件:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;系统级启动文件&lt;/strong&gt; – 包含一些应用于户所有用户的全局配置，一般存在于**/etc**目录中，如 **/etc/profiles** 、**/etc/bashrc** 或者 **/etc/bash.bashrc**。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;用户级启动文件&lt;/strong&gt; – 包含一些应用于单用户的配置文件，一般存放在各个用户目录，这些配置可以覆盖系统级全局配置，如**.profiles**、 **.bash_profile**、 **.bashrc** 和 **.bash_login**.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Shell&lt;/strong&gt;存在三种调用模式：&lt;/p&gt;
&lt;h4 id=&#34;1-交互式登录shell&#34;&gt;1. 交互式登录Shell&lt;/h4&gt;
&lt;p&gt;当用户成功登录系统后调用该&lt;strong&gt;Shell&lt;/strong&gt;,使用**/bin/login**登录，随后读取**/etc/passwd**文件。&lt;/p&gt;
&lt;p&gt;当启动交互式&lt;strong&gt;shell&lt;/strong&gt;后，将读取**/etc/profile**文件以及特定的用户文件**~/.bash_profile**&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;login as: pi
pi@pi.raspi.in&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;s password:

The programs included with the Debian GNU/Linux system are free software;
the exact distribution terms &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; each program are described in the
individual files in /usr/share/doc/*/copyright.

Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent
permitted by applicable law.
Last login: Tue Apr &lt;span style=&#34;color:#ae81ff&#34;&gt;25&lt;/span&gt; 10:43:53 &lt;span style=&#34;color:#ae81ff&#34;&gt;2017&lt;/span&gt; from 211.137.135.200
pi@raspi:~ $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;2-非登录交互式shell&#34;&gt;2. 非登录交互式Shell&lt;/h4&gt;
&lt;p&gt;当使用如&lt;strong&gt;$/bin/bash&lt;/strong&gt; or &lt;strong&gt;$/bin/zsh&lt;/strong&gt;的命令行时，将会系统非登录交互式&lt;strong&gt;shell&lt;/strong&gt;。他也可以通过**/bin/su**命令来运行。&lt;/p&gt;
&lt;p&gt;另外，在打开如&lt;strong&gt;konsole&lt;/strong&gt;、&lt;strong&gt;terminator&lt;/strong&gt;和&lt;strong&gt;xterm&lt;/strong&gt;等图形化终端程序时 ，非登录交互式&lt;strong&gt;shell&lt;/strong&gt;也将被调用。&lt;/p&gt;
&lt;p&gt;这种情况下调用时，它将拷贝父&lt;strong&gt;shell&lt;/strong&gt;的环境，并读取相应用户级的 &lt;strong&gt;~/.bashrc&lt;/strong&gt; 配置文件。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;pi@raspi:~ $ sudo -s
root@raspi:/home/pi# cd
root@raspi:~# ls -la
total &lt;span style=&#34;color:#ae81ff&#34;&gt;56&lt;/span&gt;
drwx------  &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt; root root &lt;span style=&#34;color:#ae81ff&#34;&gt;4096&lt;/span&gt; Apr &lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt; 10:26 .
drwxr-xr-x &lt;span style=&#34;color:#ae81ff&#34;&gt;22&lt;/span&gt; root root &lt;span style=&#34;color:#ae81ff&#34;&gt;4096&lt;/span&gt; Feb  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; 20:28 ..
-rw-------  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root &lt;span style=&#34;color:#ae81ff&#34;&gt;2177&lt;/span&gt; Apr &lt;span style=&#34;color:#ae81ff&#34;&gt;25&lt;/span&gt; 11:21 .bash_history
-rw-r--r--  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root  &lt;span style=&#34;color:#ae81ff&#34;&gt;765&lt;/span&gt; Feb  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; 20:48 .bashrc
drwx------  &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; root root &lt;span style=&#34;color:#ae81ff&#34;&gt;4096&lt;/span&gt; Mar  &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; 14:28 .cache
drwxr-xr-x  &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; root root &lt;span style=&#34;color:#ae81ff&#34;&gt;4096&lt;/span&gt; Mar  &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; 11:15 .config
drwxr-xr-x  &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; root root &lt;span style=&#34;color:#ae81ff&#34;&gt;4096&lt;/span&gt; Mar  &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; 11:15 .local
drwxr-xr-x  &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; root root &lt;span style=&#34;color:#ae81ff&#34;&gt;4096&lt;/span&gt; Apr &lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt; 10:26 .oracle_jre_usage
drwxr-xr-x  &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; root root &lt;span style=&#34;color:#ae81ff&#34;&gt;4096&lt;/span&gt; Feb &lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt; 11:18 .pip
-rw-r--r--  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root  &lt;span style=&#34;color:#ae81ff&#34;&gt;140&lt;/span&gt; Nov &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;2007&lt;/span&gt; .profile
-rw-------  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root   &lt;span style=&#34;color:#ae81ff&#34;&gt;41&lt;/span&gt; Mar  &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; 11:39 .python_history
drwx------  &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; root root &lt;span style=&#34;color:#ae81ff&#34;&gt;4096&lt;/span&gt; Mar  &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; 11:20 .ssh
-rw-------  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root &lt;span style=&#34;color:#ae81ff&#34;&gt;6342&lt;/span&gt; Mar &lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt; 17:30 .viminfo
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;3-非交互式shell&#34;&gt;3. 非交互式Shell&lt;/h4&gt;
&lt;p&gt;当运行脚本时则条用非交互式&lt;strong&gt;shell&lt;/strong&gt;。在这种模式下，它将处理所运行的脚本中的命令、函数等操作，不需要进行交互式输入，除非脚本需求。使用的环境继承自&lt;strong&gt;父shell&lt;/strong&gt;。&lt;/p&gt;
&lt;h3 id=&#34;理解系统级shell启动文件&#34;&gt;理解系统级Shell启动文件&lt;/h3&gt;
&lt;p&gt;下来，我们来看看一些系统级启动文件都有什么内容：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/etc/profile file&lt;/strong&gt;文件存储登录时系统级环境配置和启动程序。如果你想配置应用于所有用户的环境设置，可以加入此文件。&lt;/p&gt;
&lt;p&gt;比如，你可在这里设置全局路径变量。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;pi@raspi:~ $ cat /etc/profile
&lt;span style=&#34;color:#75715e&#34;&gt;# /etc/profile: system-wide .profile file for the Bourne shell (sh(1))&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# and Bourne compatible shells (bash(1), ksh(1), ash(1), ...).&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;`id -u`&amp;#34;&lt;/span&gt; -eq &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
  PATH&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/usr/local/sbin:/usr/local/usr/sbin:/usr/sbin:/bin&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#old bak  PATH=&amp;#34;/usr/local/sbin:/usr/local/usr/sbin:/usr/sbin:/bin:/usr/local/games:/usr/games&amp;#34;&lt;/span&gt;
PATH&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/bin:/sbin:/usr/local/games:/usr/games&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
export PATH

&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$PS1&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
  &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$BASH&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$BASH&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; !&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/bin/sh&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
    &lt;span style=&#34;color:#75715e&#34;&gt;# The file bash.bashrc already sets the default PS1.&lt;/span&gt;
    &lt;span style=&#34;color:#75715e&#34;&gt;# PS1=&amp;#39;\h:\w\$ &amp;#39;&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -f /etc/bash.bashrc &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
      . /etc/bash.bashrc
    &lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
  &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;`id -u`&amp;#34;&lt;/span&gt; -eq &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
      PS1&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;# &amp;#39;&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;
      PS1&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;$ &amp;#39;&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
  &lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -d /etc/profile.d &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
  &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i in /etc/profile.d/*.sh; &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -r $i &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
      . $i
    &lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
  &lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;
  unset i
&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
export PATH&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;/usr/local/nginx/sbin:$PATH
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：当你使用&lt;strong&gt;RHEL/CentOS7&lt;/strong&gt;系统时，会看到如下提示&amp;quot;It’s not recommended to change this file unless you know what you are doing. It’s much better to create a custom &lt;strong&gt;.sh&lt;/strong&gt; shell script in &lt;strong&gt;/etc/profile.d/&lt;/strong&gt; to make custom changes to your environment, as this will prevent the need for merging in future updates&amp;rdquo;。&lt;/p&gt;
&lt;p&gt;提示中的 &lt;strong&gt;/etc/profile.d/&lt;/strong&gt; 目录保存着所有的自定义修改运行环境的脚本。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;pi@raspi:~ $ cd /etc/profile.d/
pi@raspi:/etc/profile.d $ ls -l
total &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;
-rw-r--r-- &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root &lt;span style=&#34;color:#ae81ff&#34;&gt;663&lt;/span&gt; Mar &lt;span style=&#34;color:#ae81ff&#34;&gt;23&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;2014&lt;/span&gt; bash_completion.sh
-rw-r--r-- &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root &lt;span style=&#34;color:#ae81ff&#34;&gt;387&lt;/span&gt; Mar &lt;span style=&#34;color:#ae81ff&#34;&gt;31&lt;/span&gt; 11:47 oneinstack.sh
pi@raspi:/etc/profile.d $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;/etc/bashrc&lt;/strong&gt; 或 &lt;strong&gt;/etc/bash.bashrc&lt;/strong&gt;文件，包含应用于所有用户的系统级函数、变量、别名等配置信息。&lt;/p&gt;
&lt;p&gt;如果你的系统包含多种&lt;strong&gt;Shell&lt;/strong&gt;程序，建议你可以将一些特定的配置放到这里。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;root@raspi:~# cat /etc/bash.bashrc
&lt;span style=&#34;color:#75715e&#34;&gt;# System-wide .bashrc file for interactive bash(1) shells.&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# To enable the settings / commands in this file for login shells as well,&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# this file has to be sourced in /etc/profile.&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# If not running interactively, don&amp;#39;t do anything&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -z &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$PS1&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# check the window size after each command and, if necessary,&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# update the values of LINES and COLUMNS.&lt;/span&gt;
shopt -s checkwinsize

&lt;span style=&#34;color:#75715e&#34;&gt;# set variable identifying the chroot you work in (used in the prompt below)&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -z &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;debian_chroot&lt;span style=&#34;color:#66d9ef&#34;&gt;:-&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -r /etc/debian_chroot &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
    debian_chroot&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;cat /etc/debian_chroot&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# set a fancy prompt (non-color, overwrite the one in /etc/profile)&lt;/span&gt;
PS1&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;${debian_chroot:+($debian_chroot)}\u@\h:\w\$ &amp;#39;&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# Commented out, don&amp;#39;t overwrite xterm -T &amp;#34;title&amp;#34; -n &amp;#34;icontitle&amp;#34; by default.&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# If this is an xterm set the title to user@host:dir&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#case &amp;#34;$TERM&amp;#34; in&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#xterm*|rxvt*)&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#    PROMPT_COMMAND=&amp;#39;echo -ne &amp;#34;\033]0;${USER}@${HOSTNAME}: ${PWD}\007&amp;#34;&amp;#39;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#    ;;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#*)&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#    ;;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#esac&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# enable bash completion in interactive shells&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#if ! shopt -oq posix; then&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#  if [ -f /usr/share/bash-completion/bash_completion ]; then&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#    . /usr/share/bash-completion/bash_completion&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#  elif [ -f /etc/bash_completion ]; then&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#    . /etc/bash_completion&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#  fi&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#fi&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# if the command-not-found package is installed, use it&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -x /usr/lib/command-not-found -o -x /usr/share/command-not-found/command-not-found &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; command_not_found_handle &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
                &lt;span style=&#34;color:#75715e&#34;&gt;# check because c-n-f could&amp;#39;ve been removed in the meantime&lt;/span&gt;
                &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -x /usr/lib/command-not-found &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
                   /usr/lib/command-not-found -- &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$1&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
                   &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; $?
                &lt;span style=&#34;color:#66d9ef&#34;&gt;elif&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -x /usr/share/command-not-found/command-not-found &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
                   /usr/share/command-not-found/command-not-found -- &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$1&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
                   &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; $?
                &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;
                   printf &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%s: command not found\n&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$1&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &amp;gt;&amp;amp;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
                   &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;127&lt;/span&gt;
                &lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;理解用户级shell启动文件&#34;&gt;理解用户级Shell启动文件&lt;/h3&gt;
&lt;p&gt;接下来，我们看一下用户级启动文件，它们中的配置只应用户对应用户，一般放置在相对应的用户目录中：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;root@raspi:~# ls -la
total &lt;span style=&#34;color:#ae81ff&#34;&gt;56&lt;/span&gt;
drwx------  &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt; root root &lt;span style=&#34;color:#ae81ff&#34;&gt;4096&lt;/span&gt; Apr &lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt; 10:26 .
drwxr-xr-x &lt;span style=&#34;color:#ae81ff&#34;&gt;22&lt;/span&gt; root root &lt;span style=&#34;color:#ae81ff&#34;&gt;4096&lt;/span&gt; Feb  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; 20:28 ..
-rw-------  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root &lt;span style=&#34;color:#ae81ff&#34;&gt;2177&lt;/span&gt; Apr &lt;span style=&#34;color:#ae81ff&#34;&gt;25&lt;/span&gt; 11:21 .bash_history
-rw-r--r--  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root  &lt;span style=&#34;color:#ae81ff&#34;&gt;765&lt;/span&gt; Feb  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; 20:48 .bashrc
drwx------  &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; root root &lt;span style=&#34;color:#ae81ff&#34;&gt;4096&lt;/span&gt; Mar  &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; 14:28 .cache
drwxr-xr-x  &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; root root &lt;span style=&#34;color:#ae81ff&#34;&gt;4096&lt;/span&gt; Mar  &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; 11:15 .config
drwxr-xr-x  &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; root root &lt;span style=&#34;color:#ae81ff&#34;&gt;4096&lt;/span&gt; Mar  &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; 11:15 .local
drwxr-xr-x  &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; root root &lt;span style=&#34;color:#ae81ff&#34;&gt;4096&lt;/span&gt; Apr &lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt; 10:26 .oracle_jre_usage
drwxr-xr-x  &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; root root &lt;span style=&#34;color:#ae81ff&#34;&gt;4096&lt;/span&gt; Feb &lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt; 11:18 .pip
-rw-r--r--  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root  &lt;span style=&#34;color:#ae81ff&#34;&gt;140&lt;/span&gt; Nov &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;2007&lt;/span&gt; .profile
-rw-------  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root   &lt;span style=&#34;color:#ae81ff&#34;&gt;41&lt;/span&gt; Mar  &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; 11:39 .python_history
drwx------  &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; root root &lt;span style=&#34;color:#ae81ff&#34;&gt;4096&lt;/span&gt; Mar  &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; 11:20 .ssh
-rw-------  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root &lt;span style=&#34;color:#ae81ff&#34;&gt;6342&lt;/span&gt; Mar &lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt; 17:30 .viminfo
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;~/.bash_profile&lt;/strong&gt;包含一些用户级的环境变量、启动程序、配置信息等等。你可以在这里自定义路径信息、变量等内容：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# cat ~/.bash_profile&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# .bash_profile&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# Get the aliases and functions&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -f ~/.bashrc &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
        . ~/.bashrc
&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# User specific environment and startup programs&lt;/span&gt;
export PATH
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;~/.bashrc&lt;/strong&gt;文件中包含用户自定义别名和函数等。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;pi@raspi:~ $ cat ~/.bashrc
&lt;span style=&#34;color:#75715e&#34;&gt;# ~/.bashrc: executed by bash(1) for non-login shells.&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# for examples&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# If not running interactively, don&amp;#39;t do anything&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt; $- in
    *i*&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; ;;
      *&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;;;
&lt;span style=&#34;color:#66d9ef&#34;&gt;esac&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# don&amp;#39;t put duplicate lines or lines starting with space in the history.&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# See bash(1) for more options&lt;/span&gt;
HISTCONTROL&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ignoreboth

&lt;span style=&#34;color:#75715e&#34;&gt;# append to the history file, don&amp;#39;t overwrite it&lt;/span&gt;
shopt -s histappend

&lt;span style=&#34;color:#75715e&#34;&gt;# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)&lt;/span&gt;
HISTSIZE&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1000&lt;/span&gt;
HISTFILESIZE&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2000&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# check the window size after each command and, if necessary,&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# update the values of LINES and COLUMNS.&lt;/span&gt;
shopt -s checkwinsize

&lt;span style=&#34;color:#75715e&#34;&gt;# If set, the pattern &amp;#34;**&amp;#34; used in a pathname expansion context will&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# match all files and zero or more directories and subdirectories.&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#shopt -s globstar&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# make less more friendly for non-text input files, see lesspipe(1)&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#[ -x /usr/bin/lesspipe ] &amp;amp;&amp;amp; eval &amp;#34;$(SHELL=/bin/sh lesspipe)&amp;#34;&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# set variable identifying the chroot you work in (used in the prompt below)&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -z &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;debian_chroot&lt;span style=&#34;color:#66d9ef&#34;&gt;:-&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -r /etc/debian_chroot &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
    debian_chroot&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;cat /etc/debian_chroot&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# set a fancy prompt (non-color, unless we know we &amp;#34;want&amp;#34; color)&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$TERM&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; in
    xterm-color&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; color_prompt&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;yes;;
&lt;span style=&#34;color:#66d9ef&#34;&gt;esac&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# uncomment for a colored prompt, if the terminal has the capability; turned&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# off by default to not distract the user: the focus in a terminal window&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# should be on the output of commands, not on the prompt&lt;/span&gt;
force_color_prompt&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;yes

&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -n &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$force_color_prompt&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -x /usr/bin/tput &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; tput setaf &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &amp;gt;&amp;amp;/dev/null; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
        &lt;span style=&#34;color:#75715e&#34;&gt;# We have color support; assume it&amp;#39;s compliant with Ecma-48&lt;/span&gt;
        &lt;span style=&#34;color:#75715e&#34;&gt;# (ISO/IEC-6429). (Lack of such support is extremely rare, and such&lt;/span&gt;
        &lt;span style=&#34;color:#75715e&#34;&gt;# a case would tend to support setf rather than setaf.)&lt;/span&gt;
        color_prompt&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;yes
    &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;
        color_prompt&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$color_prompt&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; yes &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
    PS1&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w \$\[\033[00m\] &amp;#39;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;
    PS1&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;${debian_chroot:+($debian_chroot)}\u@\h:\w\$ &amp;#39;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
unset color_prompt force_color_prompt

&lt;span style=&#34;color:#75715e&#34;&gt;# If this is an xterm set the title to user@host:dir&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$TERM&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; in
xterm*|rxvt*&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
    PS1&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\[\e]0;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;debian_chroot:+($debian_chroot)&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;\u@\h: \w\a\]&lt;/span&gt;$PS1&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
    ;;
*&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
    ;;
&lt;span style=&#34;color:#66d9ef&#34;&gt;esac&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# enable color support of ls and also add handy aliases&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -x /usr/bin/dircolors &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
    test -r ~/.dircolors &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; eval &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;dircolors -b ~/.dircolors&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;||&lt;/span&gt; eval &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;dircolors -b&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
    alias ls&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ls --color=auto&amp;#39;&lt;/span&gt;
    &lt;span style=&#34;color:#75715e&#34;&gt;#alias dir=&amp;#39;dir --color=auto&amp;#39;&lt;/span&gt;
    &lt;span style=&#34;color:#75715e&#34;&gt;#alias vdir=&amp;#39;vdir --color=auto&amp;#39;&lt;/span&gt;

    alias grep&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;grep --color=auto&amp;#39;&lt;/span&gt;
    alias fgrep&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;fgrep --color=auto&amp;#39;&lt;/span&gt;
    alias egrep&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;egrep --color=auto&amp;#39;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# colored GCC warnings and errors&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#export GCC_COLORS=&amp;#39;error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01&amp;#39;&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# some more ls aliases&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#alias ll=&amp;#39;ls -l&amp;#39;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#alias la=&amp;#39;ls -A&amp;#39;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#alias l=&amp;#39;ls -CF&amp;#39;&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# Alias definitions.&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# You may want to put all your additions into a separate file like&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# ~/.bash_aliases, instead of adding them here directly.&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# See /usr/share/doc/bash-doc/examples in the bash-doc package.&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -f ~/.bash_aliases &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
    . ~/.bash_aliases
&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# enable programmable completion features (you don&amp;#39;t need to enable&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# this, if it&amp;#39;s already enabled in /etc/bash.bashrc and /etc/profile&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# sources /etc/bash.bashrc).&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; ! shopt -oq posix; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
  &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -f /usr/share/bash-completion/bash_completion &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
    . /usr/share/bash-completion/bash_completion
  &lt;span style=&#34;color:#66d9ef&#34;&gt;elif&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -f /etc/bash_completion &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
    . /etc/bash_completion
  &lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;~/.bash_login&lt;/strong&gt; 文件包含一些登陆时运行的配置信息。当&lt;strong&gt;~/.bash_profile&lt;/strong&gt;缺失时，&lt;strong&gt;bash&lt;/strong&gt;将读取&lt;strong&gt;~/.bash_login&lt;/strong&gt; 。&lt;/p&gt;
&lt;p&gt;当 &lt;strong&gt;~/.bash_profile&lt;/strong&gt; 和 &lt;strong&gt;~/.bash_login&lt;/strong&gt;缺失时，&lt;strong&gt;bash&lt;/strong&gt;将读取 &lt;strong&gt;~/.profile&lt;/strong&gt;文件。它同样包含配置信息、函数、变量、别名的信息。&lt;/p&gt;
&lt;p&gt;下面，我们再看看两个&lt;strong&gt;bash&lt;/strong&gt;初始化时非必须，但是比较重要的配置文件。&lt;/p&gt;
&lt;p&gt;Linux系统有的一个&lt;strong&gt;历史命令&lt;/strong&gt;功能，该功能按用户记录运行的所有命令历史，存储在 &lt;strong&gt;~/.bash_history&lt;/strong&gt; 文件中。&lt;/p&gt;
&lt;p&gt;查看历史命令：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;root@bwgzl:~# history
    &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;  2017-04-25 11:41:34 root cd sf/
    &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;  2017-03-31 10:46:17 root ls
    &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;  2017-03-31 10:46:29 root ./setup-seafile-mysql.sh
    &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;  2017-03-31 10:47:47 root mysql -u sf -h localhost -p
    &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;  2017-03-31 10:47:57 root reboot
    &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;  2017-03-31 10:48:28 root ls
    &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;  2017-03-31 10:48:33 root ls
    &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;  2017-03-31 10:48:36 root cd sf
    &lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;  2017-03-31 10:48:36 root ls
   &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;  2017-03-31 10:48:42 root ./setup-seafile-mysql.sh
   &lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;  2017-03-31 10:48:48 root exit
   &lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;  2017-03-31 11:16:54 root cd /data/wwwroot/unixetc.com/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;最后一个是 &lt;strong&gt;~/.bash_logout&lt;/strong&gt; 文件，它不用于&lt;strong&gt;shell&lt;/strong&gt;启动，但存储一些特殊的指令当用户注销时执行。&lt;/p&gt;
&lt;p&gt;一个很有用的例子就是当用户注销后，清空所有屏幕内容。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;root@bwgzl:~# cat bash_logout 
&lt;span style=&#34;color:#75715e&#34;&gt;# ~/.bash_logout&lt;/span&gt;

clear
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>修复树莓派PATH变量</title>
      <link>https://unixetc.com/post/fix-raspberry-path-variable/</link>
      <pubDate>Fri, 03 Mar 2017 13:13:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/fix-raspberry-path-variable/</guid>
      <description>&lt;p&gt;使用lnmp一键工具安装完nmp后，重启进入系统就提示&lt;code&gt;bash command not found&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;然后试了试&lt;code&gt;service&lt;/code&gt;,&lt;code&gt;who&lt;/code&gt;等命令也无法使用&lt;/p&gt;
&lt;p&gt;只有最基本的系统命令&lt;code&gt;ls&lt;/code&gt;,&lt;code&gt;cat&lt;/code&gt;等可以用&lt;/p&gt;
&lt;p&gt;看来安装lnmp后，我的PATH变量被动了&lt;/p&gt;
&lt;p&gt;先临时修改下PATH，便于后面操作&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;export PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin:$PATH
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后检查&lt;code&gt;~/.profile&lt;/code&gt;,&lt;code&gt;/etc/profile&lt;/code&gt;是否存在，存在&lt;/p&gt;
&lt;p&gt;检查其中的PATH赋值是否异常&lt;/p&gt;
&lt;p&gt;经过排查，发现&lt;code&gt;/etc/profile&lt;/code&gt;中的PATH赋值异常，修改之重启OK！&lt;/p&gt;
&lt;p&gt;在此分享正确的原始&lt;code&gt;~/.profile&lt;/code&gt;和&lt;code&gt;/etc/profile&lt;/code&gt;文件&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;~/.profile 内容&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# ~/.profile: executed by the command interpreter for login shells.
# This file is not read by bash(1), if ~/.bash_profile or ~/.bash_login
# exists.
# see /usr/share/doc/bash/examples/startup-files for examples.
# the files are located in the bash-doc package.

# the default umask is set in /etc/profile; for setting the umask
# for ssh logins, install and configure the libpam-umask package.
#umask 022

# if running bash
if [ -n &amp;quot;$BASH_VERSION&amp;quot; ]; then
    # include .bashrc if it exists
    if [ -f &amp;quot;$HOME/.bashrc&amp;quot; ]; then
        . &amp;quot;$HOME/.bashrc&amp;quot;
    fi
fi

# set PATH so it includes user&#39;s private bin if it exists
if [ -d &amp;quot;$HOME/bin&amp;quot; ] ; then
    PATH=&amp;quot;$HOME/bin:$PATH&amp;quot;
fi
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;**/etc/profile内容 **&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# /etc/profile: system-wide .profile file for the Bourne shell (sh(1))
# and Bourne compatible shells (bash(1), ksh(1), ash(1), ...).

if [ &amp;quot;`id -u`&amp;quot; -eq 0 ]; then
PATH=&amp;quot;/usr/local/sbin:/usr/local/usr/sbin:/usr/sbin:/bin&amp;quot;
else
#old bak  PATH=&amp;quot;/usr/local/sbin:/usr/local/usr/sbin:/usr/sbin:/bin:/usr/local/games:/usr/games&amp;quot;
PATH=&amp;quot;/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/bin:/sbin:/usr/local/games:/usr/games&amp;quot;
fi
export PATH

if [ &amp;quot;$PS1&amp;quot; ]; then
if [ &amp;quot;$BASH&amp;quot; ] &amp;amp;&amp;amp; [ &amp;quot;$BASH&amp;quot; != &amp;quot;/bin/sh&amp;quot; ]; then
    # The file bash.bashrc already sets the default PS1.
    # PS1=&#39;\h:\w\$ &#39;
    if [ -f /etc/bash.bashrc ]; then
    . /etc/bash.bashrc
    fi
else
    if [ &amp;quot;`id -u`&amp;quot; -eq 0 ]; then
    PS1=&#39;# &#39;
    else
    PS1=&#39;$ &#39;
    fi
fi
fi

if [ -d /etc/profile.d ]; then
for i in /etc/profile.d/*.sh; do
    if [ -r $i ]; then
    . $i
    fi
done
unset i
fi
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Over!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>树莓派安装Dnsmasq加速DNS解析</title>
      <link>https://unixetc.com/post/raspberry-pi-install-dnsmasq-and-dnsmasq-china-list/</link>
      <pubDate>Mon, 18 Jan 2016 21:28:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/raspberry-pi-install-dnsmasq-and-dnsmasq-china-list/</guid>
      <description>&lt;p&gt;天朝的dns服务商尿性不是一般的大，动不动就抽风或者劫持，为了避免这种情况，可以在树莓派上安装Dnsmasq来加速dns解析，提高网络浏览体验。&lt;/p&gt;
&lt;h3 id=&#34;安装配置dnsmasq&#34;&gt;安装配置dnsmasq&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;apt-get install dnsmasq
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;配置dnsmasq,&lt;code&gt;vi /etc/dnsmasq.conf&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;我的配置文件如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;domain=Raspi2
resolv-file=/etc/resolv.dnsmasq
conf-dir=/etc/dnsmasq.d
min-port=4096
server=114.114.114.114
server=114.114.115.115
server=223.5.5.5
server=223.6.6.6
server=119.29.29.29
server=182.254.116.116
server=112.124.47.27
server=114.215.126.16
server=101.226.4.6
server=218.30.118.6
server=42.120.21.30
server=199.91.73.222
server=178.79.131.110
server=8.8.8.8
server=8.8.4.4

cache-size=10000
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;配置完重启dnsmasq服务&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;service dnsmasq restart
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;其中的&lt;code&gt;server&lt;/code&gt;字段为上游DNS&lt;/p&gt;
&lt;h3 id=&#34;配置dnsmasq-china-list&#34;&gt;配置dnsmasq-china-list&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;git clone https://github.com/felixonmars/dnsmasq-china-list.git
cd dnsmasq-china-list/
cp *.conf  /etc/dnsmasq.d/
service dnsmasq restart
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;至此设置完成，可以在路由器中将首选dns设为树莓派ip，这样局域网内的所有设备都可以体验dns解析加速了！&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>树莓派下安装配置Noip</title>
      <link>https://unixetc.com/post/install-configure-noip-client-in-raspberry-pi/</link>
      <pubDate>Mon, 11 Jan 2016 12:13:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/install-configure-noip-client-in-raspberry-pi/</guid>
      <description>&lt;h3 id=&#34;注册noip&#34;&gt;注册noip&lt;/h3&gt;
&lt;p&gt;首先在&lt;a href=&#34;http://noip.com&#34;&gt;http://noip.com&lt;/a&gt;注册账户&lt;/p&gt;
&lt;p&gt;然后在主机管理(Manage Hosts)中添加主机(Add A Host)，根据提示设置二级域名，IP可以随意填写。&lt;/p&gt;
&lt;h3 id=&#34;安装noip客户端&#34;&gt;安装Noip客户端&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;wget https://www.noip.com/client/linux/noip-duc-linux.tar.gz
tar zxf noip-duc-linux.tar.gz
cd noip-2.1.9-1
sudo make install
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;安装过程中，按照提示输入noip帐号信息，时间间隔建议设为5s，默认30s&lt;/p&gt;
&lt;h3 id=&#34;设置开机启动&#34;&gt;设置开机启动&lt;/h3&gt;
&lt;p&gt;在&lt;code&gt;/etc/init.d/&lt;/code&gt;中建立&lt;code&gt;noip2&lt;/code&gt;脚本&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo vi /etc/init.d/noip2
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;脚本内容如下&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#! /bin/sh

### BEGIN INIT INFO
# Provides:          noip2
# Required-Start:    $syslog
# Required-Stop:     $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: noip.com client service
### END INIT INFO

# . /lib/lsb/init-functions
case &amp;quot;$1&amp;quot; in
    start)
        echo &amp;quot;Starting noip2.&amp;quot;
        /usr/local/bin/noip2
    ;;
    stop)
        echo &amp;quot;Shutting down noip2.&amp;quot;
        killall noip2
        #killproc /usr/local/bin/noip2
    ;;
    *)
        echo &amp;quot;Usage: $0 {start|stop}&amp;quot;
        exit 1
esac

exit 0
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;设置开机启动&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo chmod +x /etc/init.d/noip2
sudo update-rc.d noip2 defaults
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;设置dmz转发&#34;&gt;设置DMZ转发&lt;/h3&gt;
&lt;p&gt;进入到路由器管理平台，为树莓派指定一个固定IP，然后在&lt;strong&gt;转发规则&lt;/strong&gt;下设置&lt;strong&gt;DMZ主机&lt;/strong&gt;将树莓派ip添加设置，重启生效。&lt;/p&gt;
&lt;p&gt;至此设置完成，可以ping一下自定义域名，看ip是正确，以后就可以通过自定义域名访问树莓派了。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>树莓派使用ddclient和DDNS</title>
      <link>https://unixetc.com/post/raspberry-pi-using-ddclient-and-ddns/</link>
      <pubDate>Thu, 07 Jan 2016 12:31:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/raspberry-pi-using-ddclient-and-ddns/</guid>
      <description>&lt;h3 id=&#34;域名解析&#34;&gt;域名解析&lt;/h3&gt;
&lt;p&gt;首先得有个域名，在域名管理中将域名DNS设为he.net的DNS地址，如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ns1.he.net
ns2.he.net
ns3.he.net
ns4.he.net
ns5.he.net
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后在&lt;a href=&#34;http://dns.he.net&#34;&gt;http://dns.he.net&lt;/a&gt;注册账号，添加域名(Add a new domain)&lt;/p&gt;
&lt;p&gt;接下来添加A记录(New A)，勾选允许动态域名解析(Enable entry for dynamic dns)&lt;/p&gt;
&lt;p&gt;点击域名后DDNS列中的刷新按钮，新建一个DDNS密匙(Generate a DDNS key.)&lt;/p&gt;
&lt;h3 id=&#34;安装设置ddclient&#34;&gt;安装设置ddclient&lt;/h3&gt;
&lt;p&gt;在树莓派上安装ddclient&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo apt-get install ddclient
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;编辑ddclient配置文件，路径为&lt;code&gt;/etc/ddclient.conf&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;protocol=dyndns2
use=web,web=myip.dnsomatic.com
server=dyn.dns.he.net
login=raspi.in
password=&#39;ddnskey&#39;
www.raspi.in,raspi.in
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;其中&lt;strong&gt;password&lt;/strong&gt;为设置DDNS时的key&lt;/p&gt;
&lt;p&gt;重启ddclient服务&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;service ddclient restart
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;验证IP查询结果&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo ddclient -query
use=if, if=eth0 address is 192.168.1.111
use=if, if=lo address is 127.0.0.1
use=web, web=dnspark address is 36.40.143.235
use=web, web=dyndns address is NOT FOUND
use=web, web=loopia address is 36.40.143.235
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;其中if方式查询到的是内网地址和本机地址，web方式查询到的时外网IP&lt;/p&gt;
&lt;p&gt;至此设置完成，可以ping一下域名试试咯！&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>树莓派安装Node.js</title>
      <link>https://unixetc.com/post/raspberry-pi-install-nodejs/</link>
      <pubDate>Thu, 03 Dec 2015 12:32:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/raspberry-pi-install-nodejs/</guid>
      <description>&lt;p&gt;首先查看树莓派cpu信息&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pi@raspi:~ $ cat /proc/cpuinfo
processor       : 0
model name      : ARMv6-compatible processor rev 7 (v6l)
BogoMIPS        : 2.00
Features        : half thumb fastmult vfp edsp java tls
CPU implementer : 0x41
CPU architecture: 7
CPU variant     : 0x0
CPU part        : 0xb76
CPU revision    : 7

Hardware        : BCM2708
Revision        : 000e
Serial          : 000000004a8acb6d
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;看清楚cpu构架，是&lt;strong&gt;ARMv6&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;然后在node.js官网下载对应版本的包，下载地址&lt;a href=&#34;https://nodejs.org/dist/&#34;&gt;https://nodejs.org/dist/&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# wget https://nodejs.org/dist/v4.2.2/node-v4.2.2-linux-arm64.tar.gz
# tar zxf node-v4.2.2-linux-arm64.tar.gz
# mv node-v4.2.2-linux-arm64 /usr/nodejs422
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;方便使用期间，做个链接&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# ln -s /usr/nodejs422/bin/npm /usr/bin/npm
# ln -s /usr/nodejs422/bin/node /usr/bin/node
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;完成后查看版本信息&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# node -v
v4.2.2
# npm -v
2.14.7
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;至此安装完成，官网现在放出arm编译版方便多了，为以前通过源码编译安装的岁月干杯！！！&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>树莓派安装配置minidlna</title>
      <link>https://unixetc.com/post/raspberry-pi-install-minidlna-to-create-digital-media-server/</link>
      <pubDate>Thu, 06 Aug 2015 18:26:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/raspberry-pi-install-minidlna-to-create-digital-media-server/</guid>
      <description>&lt;h3 id=&#34;树莓派挂载移动存储&#34;&gt;树莓派挂载移动存储&lt;/h3&gt;
&lt;p&gt;可以挂载移动硬盘或者大容量的U盘，参考以下文章：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://unixetc.com/post/raspberry-pi-mount-udisk-as-the-storage-partition/&#34;&gt;树莓派挂载U盘作为存储分区&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://unixetc.com/post/examples-of-fdisk-partition/&#34;&gt;fdisk分区实例&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;安装配置minidlna&#34;&gt;安装配置minidlna&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;#sudo apt-get install -y minidlna
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;编辑minidlna配置文件&lt;code&gt;/etc/minidlna.conf&lt;/code&gt;，内容如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;media_dir=/home/pi/dlnadoc  #媒体文件目录
db_dir=/var/lib/minidlna    #minidlna通过SQLite来建立媒体库索引，因此需要定义数据库目录
listening_ip=192.168.1.111  #树莓派IP
port=8200					#web端口，可以通过ip:port查看索引状态
friendly_name=Raspi_DLNA    #服务器命名
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;重启&lt;code&gt;minidlna&lt;/code&gt;服务&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo service minidlna restart
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;强制刷新&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo service minidlna force-reload
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;查看索引状态,浏览http://192.168.1.111:8200&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;MiniDLNA status
Audio files: 0
Video files: 2
Image files: 0
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;dlna客户端&#34;&gt;DLNA客户端&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;PC&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Windows7下将网络设置为&lt;strong&gt;家庭网络&lt;/strong&gt;，完成后刷新，在&lt;strong&gt;网络&lt;/strong&gt;中&lt;strong&gt;媒体设备&lt;/strong&gt;下就可以自动发现&lt;strong&gt;Rasp_DLNA&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;点击进去就可以使用MediaPlayer来浏览。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Android&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;VPlayer+ VPlayer uPnP DLNA Plugin&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;IOS&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;RushPlayer&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>树莓派安装TP WN322G&#43;驱动</title>
      <link>https://unixetc.com/post/raspberry-pi-install-tp-wn322g-drivers/</link>
      <pubDate>Sat, 07 Feb 2015 12:27:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/raspberry-pi-install-tp-wn322g-drivers/</guid>
      <description>&lt;p&gt;首先查看usb设备&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pi@raspi ~ $ lsusb
Bus 001 Device 002: ID 0424:9514 Standard Microsystems Corp.
Bus 001 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub
Bus 001 Device 003: ID 0424:ec00 Standard Microsystems Corp.
Bus 001 Device 004: ID 0ace:1215 ZyDAS ZD1211B 802.11g
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;注意，最后一行为无线网卡信息&lt;/p&gt;
&lt;p&gt;打开&lt;a href=&#34;https://wiki.debian.org/WiFi&#34;&gt;https://wiki.debian.org/WiFi&lt;/a&gt;，查看是否有对照型号的固件&lt;/p&gt;
&lt;p&gt;安装对应的固件&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pi@raspi ~ $ sudo apt-get install zd1211-firmware
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;完成后使用&lt;code&gt;iwconfig&lt;/code&gt;检查是否已经安装成功&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pi@raspi ~ $ iwconfig
wlan0     IEEE 802.11bg  ESSID:off/any
          Mode:Managed  Access Point: Not-Associated   Tx-Power=20 dBm
          Retry  long limit:7   RTS thr:off   Fragment thr:off
          Power Management:off

lo        no wireless extensions.

eth0      no wireless extensions.&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>树莓派挂载U盘</title>
      <link>https://unixetc.com/post/raspberry-pi-mount-udisk-as-the-storage-partition/</link>
      <pubDate>Thu, 11 Dec 2014 21:21:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/raspberry-pi-mount-udisk-as-the-storage-partition/</guid>
      <description>&lt;p&gt;树莓派用的是8g的TF卡，想作为小型NAS有点小，存不了多少东西，于是将一个闲置的32G U盘挂载上，当作存储分区&lt;/p&gt;
&lt;p&gt;以下为操作过程：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;查看磁盘信息&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pi@raspberrypi ~ $ sudo fdisk -l

Disk /dev/mmcblk0: 7990 MB, 7990149120 bytes
4 heads, 16 sectors/track, 243840 cylinders, total 15605760 sectors
Units = sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
Disk identifier: 0x000981cb

        Device Boot      Start         End      Blocks   Id  System
/dev/mmcblk0p1            8192      122879       57344    c  W95 FAT32 (LBA)
/dev/mmcblk0p2          122880    15605759     7741440   83  Linux

Disk /dev/sda: 32.2 GB, 32229031936 bytes
255 heads, 63 sectors/track, 3918 cylinders, total 62947328 sectors
Units = sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
Disk identifier: 0x15a8a090

   Device Boot      Start         End      Blocks   Id  System
/dev/sda1            2048    62947327    31472640    f  W95 Ext&#39;d (LBA)
/dev/sda5            4096    62947327    31471616    7  HPFS/NTFS/exFAT
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;这里看到，&lt;strong&gt;/dev/sda&lt;/strong&gt;为32G的磁盘，分区格式为NTFS，现在就是要将改磁盘挂载为linux分区。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;编辑分区&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pi@raspberrypi ~ $ sudo fdisk /dev/sda

Command (m for help): p   //查看分区信息

Disk /dev/sda: 32.2 GB, 32229031936 bytes
255 heads, 63 sectors/track, 3918 cylinders, total 62947328 sectors
Units = sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
Disk identifier: 0x15a8a090

   Device Boot      Start         End      Blocks   Id  System
/dev/sda1            2048    62947327    31472640    f  W95 Ext&#39;d (LBA)
/dev/sda5            4096    62947327    31471616    7  HPFS/NTFS/exFAT

Command (m for help): d //删除分区
Partition number (1-5): 5

Command (m for help): p

Disk /dev/sda: 32.2 GB, 32229031936 bytes
255 heads, 63 sectors/track, 3918 cylinders, total 62947328 sectors
Units = sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
Disk identifier: 0x15a8a090

   Device Boot      Start         End      Blocks   Id  System

Command (m for help): m //查看命令
Command action
   a   toggle a bootable flag
   b   edit bsd disklabel
   c   toggle the dos compatibility flag
   d   delete a partition
   l   list known partition types
   m   print this menu
   n   add a new partition
   o   create a new empty DOS partition table
   p   print the partition table
   q   quit without saving changes
   s   create a new empty Sun disklabel
   t   change a partition&#39;s system id
   u   change display/entry units
   v   verify the partition table
   w   write table to disk and exit
   x   extra functionality (experts only)

Command (m for help): n  //新建分区
Partition type:
   p   primary (0 primary, 0 extended, 4 free)
   e   extended
Select (default p):
Using default response p
Partition number (1-4, default 1):
Using default value 1
First sector (2048-62947327, default 2048):
Using default value 2048
Last sector, +sectors or +size{K,M,G} (2048-62947327, default 62947327):
Using default value 62947327

Command (m for help): p

Disk /dev/sda: 32.2 GB, 32229031936 bytes
255 heads, 63 sectors/track, 3918 cylinders, total 62947328 sectors
Units = sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
Disk identifier: 0x15a8a090

   Device Boot      Start         End      Blocks   Id  System
/dev/sda1            2048    62947327    31472640   83  Linux

Command (m for help): w
The partition table has been altered!

Calling ioctl() to re-read partition table.
Syncing disks.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;以上完成后就会新建**/dev/sda1**分区&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;格式化分区&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pi@raspberrypi ~ $ sudo mkfs.ext3 /dev/sda1
mke2fs 1.42.5 (29-Jul-2012)
Filesystem label=
OS type: Linux
Block size=4096 (log=2)
Fragment size=4096 (log=2)
Stride=0 blocks, Stripe width=0 blocks
1970416 inodes, 7868160 blocks
393408 blocks (5.00%) reserved for the super user
First data block=0
Maximum filesystem blocks=0
241 block groups
32768 blocks per group, 32768 fragments per group
8176 inodes per group
Superblock backups stored on blocks:
        32768, 98304, 163840, 229376, 294912, 819200, 884736, 1605632, 2654208,
        4096000

Allocating group tables: done
Writing inode tables: done
Creating journal (32768 blocks): done
Writing superblocks and filesystem accounting information: done
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;挂载U盘&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pi@raspberrypi ~ $ mkdir ussd
pi@raspberrypi ~ $ sudo mount /dev/sda1 ./ussd/
pi@raspberrypi ~ $ df -hal
Filesystem      Size  Used Avail Use% Mounted on
rootfs          7.3G  3.0G  3.9G  44% /
/dev/root       7.3G  3.0G  3.9G  44% /
devtmpfs        211M     0  211M   0% /dev
tmpfs            44M  220K   44M   1% /run
tmpfs           5.0M     0  5.0M   0% /run/lock
proc               0     0     0    - /proc
sysfs              0     0     0    - /sys
tmpfs            88M     0   88M   0% /run/shm
devpts             0     0     0    - /dev/pts
/dev/mmcblk0p1   56M   19M   38M  34% /boot
/dev/sda1        30G   45M   28G   1% /home/pi/ussd
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;开机自动挂载U盘&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;编辑**/etc/fstab**&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pi@raspberrypi ~ $ cat /etc/fstab
proc            /proc           proc    defaults          0       0
/dev/mmcblk0p1  /boot           vfat    defaults          0       2
/dev/mmcblk0p2  /               ext4    defaults,noatime  0       1
/dev/sda1       /home/pi/ussd   ext3    defaults          0       0
# a swapfile is not a swap partition, so no using swapon|off from here on, use  dphys-swapfile     swap[on|off]  for that&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>树莓派使用Ngrok实例</title>
      <link>https://unixetc.com/post/raspberry-pi-install-ngrok/</link>
      <pubDate>Wed, 26 Nov 2014 11:26:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/raspberry-pi-install-ngrok/</guid>
      <description>&lt;p&gt;首先在ngrok &lt;a href=&#34;https://ngrok.com/&#34;&gt;https://ngrok.com/&lt;/a&gt;注册登录&lt;/p&gt;
&lt;p&gt;架设已经在树莓派上安装了Nginx，端口为80&lt;/p&gt;
&lt;p&gt;那么下载Linux/ARM版ngrok到树莓派，执行如下命令：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ngrok -authtoken UfATi0wi98gGMqQ+/GsP 80
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;其中&lt;strong&gt;UfATi0wi98gGMqQ+/GsP&lt;/strong&gt;为你的auth token&lt;/p&gt;
&lt;p&gt;然后就会出现如下提示:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Forwarding    http://36772918.ngrok.com -&amp;gt; 127.0.0.1:80           
Forwarding    https://36772918.ngrok.com -&amp;gt; 127.0.0.1:80          
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;按照提示，可以通过那两个二级域名来浏览web服务。&lt;/p&gt;
&lt;p&gt;以上验证只需要输入一次，下次可以直接使用如下命令来运行&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ngrok 80
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;ngrok其他用法&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;自定义二级域名&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;使用自定义的字符串代替系统分配的数字&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ngrok -subdomain mysubd 80
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;开启密码保护&lt;/p&gt;
&lt;p&gt;ngrok -httpauth &amp;ldquo;user:password&amp;rdquo; 80&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;TCP隧道&lt;/p&gt;
&lt;p&gt;ngrok tcp 22&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>修改树莓派Swap</title>
      <link>https://unixetc.com/post/modify-the-raspberry-pi-swap-size/</link>
      <pubDate>Thu, 30 Oct 2014 14:30:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/modify-the-raspberry-pi-swap-size/</guid>
      <description>&lt;p&gt;树莓派的swap大小在&lt;code&gt;/etc/dphys-swapfile&lt;/code&gt;中定义，默认为100M&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pi@raspi:~$ cat /etc/dphys-swapfile 
CONF_SWAPSIZE=1000
pi@raspi:/mnt$ free -h
         total       used       free     shared    buffers     cached
Mem:          437M        36M       401M         0B       2.1M        12M
-/+ buffers/cache:        22M       415M
Swap:          99M         0B        99M
pi@raspi:/mnt$ 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;可以自己修改&lt;code&gt;CONF_SWAPSIZE&lt;/code&gt;的值，单位为兆(MB)&lt;/p&gt;
&lt;p&gt;修改后重启树莓派生效，如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pi@raspi:~$ cat /etc/dphys-swapfile 
CONF_SWAPSIZE=1000
pi@raspi:~$ free -h
             total       used       free     shared    buffers     cached
Mem:          437M        53M       383M         0B       7.9M        23M
-/+ buffers/cache:        22M       415M
Swap:         999M         0B       999M&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>树莓派中使用TL-WN725N</title>
      <link>https://unixetc.com/post/use-tl-wn725n-in-raspberry-pi/</link>
      <pubDate>Tue, 12 Aug 2014 18:12:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/use-tl-wn725n-in-raspberry-pi/</guid>
      <description>&lt;p&gt;Raspbian版本 &lt;strong&gt;2014-01-07-wheezy-raspbian.img&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;下载地址为&lt;a href=&#34;http://cdn.lyq.wiki/res/8188eu-20140616.tar.gz&#34;&gt;http://cdn.lyq.wiki/res/8188eu-20140616.tar.gz&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;首先固网链接树莓派，通过SSH登录&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;wget http://cdn.lyq.wiki/res/8188eu_31024_614.zip
unzip 8188eu_31024_614.zip
sudo mv 8188eu.ko /lib/modules/`uname -r`/kernel/drivers/net/wireless
sudo chown root:root /lib/modules/`uname -r`/kernel/drivers/net/wireless/8188eu.ko
sudo mv rtl8188eufw.bin /lib/firmware/rtlwifi/
sudo chown root:root /lib/firmware/rtlwifi/rtl8188eufw.bin
sudo depmod -a
sudo modprobe 8188eu
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后编辑&lt;code&gt;/etc/netwok/interfaces&lt;/code&gt;，添加以下内容&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;allow-hotplug wlan0
auto wlan0

iface wlan0 inet manual
wpa-roam /etc/mywpa.conf
iface default inet dhcp
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;新建&lt;code&gt;mywpa.conf&lt;/code&gt;写入链接配置&lt;code&gt;vi /etc/mywpa.conf&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;network={
ssid=&amp;quot;YOUR SSID&amp;quot;
proto=RSN
key_mgmt=WPA-PSK
pairwise=CCMP TKIP
group=CCMP TKIP
psk=&amp;quot;YOUR PASSWORD&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;重启系统&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>树莓派安装Tonido打造个人云服务</title>
      <link>https://unixetc.com/post/raspberry-pi-install-tonido-build-personal-cloud/</link>
      <pubDate>Tue, 12 Aug 2014 18:12:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/raspberry-pi-install-tonido-build-personal-cloud/</guid>
      <description>&lt;h3 id=&#34;安装tonido&#34;&gt;安装Tonido&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;sudo mkdir /usr/local/tonido
cd /usr/local/tonido
sudo wget http://patch.codelathe.com/tonido/live/installer/armv6l-rpi/tonido.tar.gz
sudo tar -zxvf tonido.tar.gz
./tonido.sh start
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;浏览器打开http://ip:10001开始注册设置 &lt;strong&gt;ip&lt;/strong&gt;为树莓派的地址&lt;/p&gt;
&lt;h3 id=&#34;安装多媒体解码器&#34;&gt;安装多媒体解码器&lt;/h3&gt;
&lt;p&gt;Tonido支持在线播放音频，但需要安装设置解码器&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd /usr/local/tonido
sudo apt-get install ffmpeg
sudo ln -s /usr/bin/ffmpeg ffmpeg.exe
sudo ln -s /usr/bin/ffmpeg ffmpegv.exe
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;设置开机启动&#34;&gt;设置开机启动&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;下载脚本文件&lt;strong&gt;tonido&lt;/strong&gt; &lt;code&gt;wget http://cdn.lyq.wiki/res/tonido&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;设置脚本权限
sudo cp tonido /etc/init.d/
sudo chmod +x /etc/init.d/tonido&lt;/li&gt;
&lt;li&gt;安装脚本
sudo update-rc.d tonido defaults&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;客户端下载&#34;&gt;客户端下载&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Tonido Sync for Windows&lt;/strong&gt; &lt;a href=&#34;http://www.tonido.com/download.php?TonidoSync.exe&#34;&gt;http://www.tonido.com/download.php?TonidoSync.exe&lt;/a&gt;
&lt;strong&gt;Tonido Sync for Mac&lt;/strong&gt; &lt;a href=&#34;http://www.tonido.com/download.php?TonidoSync.dmg&#34;&gt;http://www.tonido.com/download.php?TonidoSync.dmg&lt;/a&gt;
&lt;strong&gt;Tonido Sync for Linux&lt;/strong&gt; &lt;a href=&#34;http://www.tonido.com/download.php?TonidoSyncSetup_i686.deb&#34;&gt;http://www.tonido.com/download.php?TonidoSyncSetup_i686.deb&lt;/a&gt;
&lt;strong&gt;Tonido for iPhone&lt;/strong&gt; &lt;a href=&#34;http://itunes.apple.com/us/app/tonido/id388726418?mt=8&#34;&gt;http://itunes.apple.com/us/app/tonido/id388726418?mt=8&lt;/a&gt;
&lt;strong&gt;Tonido for iPad&lt;/strong&gt; &lt;a href=&#34;http://itunes.apple.com/us/app/tonido/id388726418?mt=8&#34;&gt;http://itunes.apple.com/us/app/tonido/id388726418?mt=8&lt;/a&gt;
&lt;strong&gt;Tonido for Android&lt;/strong&gt; &lt;a href=&#34;https://play.google.com/store/apps/details?id=com.tonido.android&#34;&gt;https://play.google.com/store/apps/details?id=com.tonido.android&lt;/a&gt;
&lt;strong&gt;Tonido for Windows Phone&lt;/strong&gt; &lt;a href=&#34;http://www.windowsphone.com/en-us/store/app/tonido/4eeacbe9-7405-47cc-acd0-f418471f992a&#34;&gt;http://www.windowsphone.com/en-us/store/app/tonido/4eeacbe9-7405-47cc-acd0-f418471f992a&lt;/a&gt;
&lt;strong&gt;Tonido for BlackBerry&lt;/strong&gt; &lt;a href=&#34;http://appworld.blackberry.com/webstore/content/18126?lang=en&#34;&gt;http://appworld.blackberry.com/webstore/content/18126?lang=en&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>树莓派修改软件源</title>
      <link>https://unixetc.com/post/raspberry-pi-modify-software-source/</link>
      <pubDate>Mon, 10 Mar 2014 12:31:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/raspberry-pi-modify-software-source/</guid>
      <description>&lt;p&gt;中国国内推荐阿里云的开源镜像服务，地址为&lt;a href=&#34;http://mirrors.aliyun.com/&#34;&gt;http://mirrors.aliyun.com/&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;vi /etc/apt/sources.list
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;将默认的raspbian.org源注释(#)掉，加入阿里云的raspbian源&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;deb http://mirrors.aliyun.com/raspbian/raspbian/ jessie main non-free contrib
deb-src http://mirrors.aliyun.com/raspbian/raspbian/ jessie main non-free contrib
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;更新系统&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;apt-get update&amp;amp;&amp;amp;apt-get upgrade -y&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>树莓派安装Python开发环境与GPIO库</title>
      <link>https://unixetc.com/post/raspberry-pi-install-python-development-environment-and-gpio-library/</link>
      <pubDate>Sun, 02 Mar 2014 12:31:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/raspberry-pi-install-python-development-environment-and-gpio-library/</guid>
      <description>&lt;p&gt;&lt;strong&gt;安装python&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$sudo apt-get install python-dev
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;更新&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$sudo easy_install -U distribute
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;安装python-pip&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$sudo apt-get install python-pip
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;添加国内pypi镜像&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在&lt;strong&gt;~/.pip/pip.conf&lt;/strong&gt;中添加&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[global]
index-url = http://mirrors.aliyun.com/pypi/simple/
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;安装python的GPIO库&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$sudo pip install rpi.gpio&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>开始使用树莓派</title>
      <link>https://unixetc.com/post/starting-use-raspberry-pi/</link>
      <pubDate>Fri, 28 Feb 2014 12:28:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/starting-use-raspberry-pi/</guid>
      <description>&lt;h3 id=&#34;安装系统&#34;&gt;安装系统&lt;/h3&gt;
&lt;p&gt;从官网下载系统镜像，推荐Raspbian&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://downloads.raspberrypi.org/raspbian_latest&#34;&gt;http://downloads.raspberrypi.org/raspbian_latest&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;将下载后的zip文件解压，得到&lt;strong&gt;2014-01-07-wheezy-raspbian.img&lt;/strong&gt;文件。&lt;/p&gt;
&lt;p&gt;准备一张SD卡，最好容量大于4GB，Class10&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;将镜像写入SD卡&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux下推荐使用&lt;code&gt;dd&lt;/code&gt;名来写入镜像&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;使用&lt;code&gt;fdisk -l&lt;/code&gt;检查分区信息，比如sd卡设备为**/dev/sdb**，使用以下命令写入：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#dd if=2014-01-07-wheezy-raspbian.img of=/dev/sdb bs=1M
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Windows下推荐使用&lt;strong&gt;Win32DiskImager&lt;/strong&gt;写入镜像&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Win32DiskImager下载地址：&lt;a href=&#34;http://sourceforge.net/projects/win32diskimager/&#34;&gt;http://sourceforge.net/projects/win32diskimager/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;下载后打开软件，选择好镜像文件与USB设备，然后点击&lt;strong&gt;Write&lt;/strong&gt;写入。&lt;/p&gt;
&lt;h3 id=&#34;开机进入系统&#34;&gt;开机进入系统&lt;/h3&gt;
&lt;p&gt;将已写入系统的SD卡插入Raspberry Pi，通过固网链接路由器，然后使用USB供电启动。&lt;/p&gt;
&lt;p&gt;正常启动后，板载的&lt;strong&gt;ACT&lt;/strong&gt;，&lt;strong&gt;PWR&lt;/strong&gt;、&lt;strong&gt;FDX&lt;/strong&gt;、&lt;strong&gt;LNK&lt;/strong&gt;、&lt;strong&gt;100&lt;/strong&gt;五个指示灯均点亮。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;通过SSH连接Raspberry Pi&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;查看Raspberry Pi IP地址&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#nmap -sP 192.168.1/24
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;检查出MAC后标注(Raspberry Pi Foundation)的即为Raspberry Pi主机。&lt;/p&gt;
&lt;p&gt;然后通过SSH来链接主机&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#ssh 192.168.1.127
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;用户名为&lt;strong&gt;pi&lt;/strong&gt;，默认密码为&lt;strong&gt;raspberry&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Widnows下推荐使用&lt;a href=&#34;http://www.chiark.greenend.org.uk/~sgtatham/putty/&#34; title=&#34;PuTTY: a free telnet/ssh client&#34;&gt;Putty&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;设置raspberry&#34;&gt;设置Raspberry&lt;/h3&gt;
&lt;p&gt;运行设置工具&lt;code&gt;sudo raspi-config&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;选择&lt;code&gt;Expand Filesystem&lt;/code&gt;扩展文件系统&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Change User Passwd&lt;/code&gt; 修改默认用户&lt;code&gt;pi&lt;/code&gt;的密码，当然也可以在系统中使用&lt;code&gt;passwd&lt;/code&gt;命令来更改。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Advanced Options&lt;/code&gt;-&amp;gt;&lt;code&gt;Hostname&lt;/code&gt; 修改主机名&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Overclock&lt;/code&gt; 超频，建议900Mhz&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>