<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>MySQL on UNIXETC</title>
    
    
    
    <link>/tags/mysql/</link>
    <description>Recent content in MySQL on UNIXETC</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Mon, 20 Jul 2015 17:20:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/mysql/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>将博客从Typcho转移至Gor</title>
      <link>/post/typecho-converted-to-gor/</link>
      <pubDate>Mon, 20 Jul 2015 17:20:00 +0000</pubDate>
      
      <guid>/post/typecho-converted-to-gor/</guid>
      <description>
        
          
          
          
        
        
        
          缘由 VPS快到期了，不想继续维护，太累，并且香港VPS价格也不菲。
于是打算选择一个静态博客平台，原来用过的不少:jekyll,hexo,gor,pelican，最后决定Gor
选择Gor的理由有两点
 安装方便 执行效率高  安装Gor 参考Gor主页https://github.com/wendal/gor安装Gor
将Typecho文章导出为Markdown文件(.md) Github上有现成的工具typecho-exporter，主页为https://github.com/aneasystone/typecho-exporter
这个工具可以将所有的文章导出为Markdown文件，但是以文章标题为文件名，不利于后期处理，建议使用slug为文件名。
编辑下载的main.py，将75行的p.title = r[1]替换为`p.title = r[2]&#39;，如下:
results = cur.fetchall() for r in results: p = Post() p.id = r[0] p.title = r[2] p.content = r[5] posts.append(p)  原来的r[1]对应typecho_contentsSQL表中的title列，我的r[2]对应slug列，可以根据实际情况更改。
编辑typecho-exporter的config.ini文件，设置数据库访问方式。
运行main.py，完成后会在typecho-exporter目录下生成files文件夹，里面就是导出的Markdown文件。
后期整理 导出后的Markdown没有Gor需要的文件头格式，需要手动整理
这里推荐使用Notepad++批量替换
  查找目标:
  替换为&amp;mdash;\n title: title\ndate: 2015-07-20\ndescription: \npermalink: \ncategories: \ntags: \n&amp;mdash;\n
  记得将查找模式重的扩展打开。
经过以上替换，就大概有了个Gor的Markdown头格式，后面的手动工作就少了多了。
          
        
        </description>
    </item>
    
    <item>
      <title>VPS下自动备份文件和数据库</title>
      <link>/post/automatic-backup-files-and-database-on-vps/</link>
      <pubDate>Mon, 13 Jan 2014 01:13:00 +0000</pubDate>
      
      <guid>/post/automatic-backup-files-and-database-on-vps/</guid>
      <description>
        
          
          
          
        
        
        
          新建脚本，名为autoback.sh
#vi autoback.sh  脚本(autoback.sh)内容如下:
#!/bin/sh #备份网站目录/home/www/ tar zcvf /home/backup/www$(date + &amp;quot;%Y%m%d&amp;quot;).tar.gz /home/www/* #备份数据库 www /usr/local/mysql/bin/mysqldump -uroot -ppassword dbname &amp;gt; /home/backup/dbname$(date +&amp;quot;%Y%m%d&amp;quot;).sql #删除三天前的备份 cd /home/backup/ rm -f *$(date -d -3day +&amp;quot;%Y%m%d&amp;quot;)*  将脚本(autoback.sh)添加到自动执行任务列表:
#chmod +x autoback.sh #crontab -e 59 23 * * * /root/autoback.sh  推荐注册Dropbox，参考**Linux下CLI模式使用Dropbox**，将备份文件自动同步到Dropbox。
          
        
        </description>
    </item>
    
    <item>
      <title>MySQL使用实例</title>
      <link>/post/mysql-usages/</link>
      <pubDate>Thu, 19 Apr 2012 14:19:00 +0000</pubDate>
      
      <guid>/post/mysql-usages/</guid>
      <description>
        
          
          
          
        
        
        
          误删除了vps上的phpmyadmin，不得已翻阅了半天mysql指南，以下是一些mysql使用实例
连接管理 链接数据库
mysql -h localhost -u root -p  退出数据库
mysql&amp;gt;quit;  数据库管理 查看数据库
mysql&amp;gt;show databases;  建立数据库
mysql&amp;gt;create database name;  备份(导出)数据库
mysqldump -u username -p database &amp;gt; backup_db.sql  还原(导入)数据库
mysql -u username -p database &amp;lt; backup_db.sql  用户管理 添加用户
mysql&amp;gt;grant all privileges on databasename.* &#39;username&#39;@&#39;localhost&#39; identified by &#39;userpassword&#39; with grant optiton;  删除用户
mysql&amp;gt;drop user username;  修改密码
mysql&amp;gt;set password for &#39;username&#39;@&#39;localhost&#39; = password(&#39;userpassword&#39;);  一个创建数据库并添加专用用户的示例:
          
        
        </description>
    </item>
    
    <item>
      <title>LNMP使用实例</title>
      <link>/post/lnmp-usages/</link>
      <pubDate>Fri, 23 Mar 2012 12:32:00 +0000</pubDate>
      
      <guid>/post/lnmp-usages/</guid>
      <description>
        
          
          
          
        
        
        
          安装LNMP 更新系统
#yum check-update #yum update  安装Screen
#yum install screen  开始安装Lnmp
#screen -S lnmp #wget -c http://soft.vpser.net/lnmp/lnmp0.8.tar.gz //最新版请查阅lnmp官网 #tar zxvf lnmp0.8.tar.gz #./lnmp0.8/centos.sh | tee lnmp.log //输出log文件，以备出错时查阅  接下来按照提示设定域名和MysQL密码，程序会自动下载相关程序，而后编译安装
安装PureFTP
#./lnmp0.8/pureftp.sh  按提示输入MySQL和Ftp管理员密码，安装完成后可以通过http://vpsip/ftp/来登录管理ftp帐号
使用Lnmp 添加虚拟主机
#/root/vhost.sh  按照提示填入域名、目录、rewrite规则文件，如下所示：
root@buyvm256:~#/root/vhost.sh ========================================================================= Add Virtual Host for LNMP V0.9 , Written by Licess ========================================================================= LNMP is a tool to auto-compile &amp;amp; install Nginx+MySQL+PHP on Linux This script is a tool to add virtual host for nginx For more information please visit http://www.
          
        
        </description>
    </item>
    
  </channel>
</rss>