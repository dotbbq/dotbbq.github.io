<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Windows on UNIXETC</title>
    
    
    
    <link>/tags/windows/</link>
    <description>Recent content in Windows on UNIXETC</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 21 Nov 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/windows/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>在Linux中安装Windows字体</title>
      <link>/post/linux-install-windows-fonts/</link>
      <pubDate>Thu, 21 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/linux-install-windows-fonts/</guid>
      <description>
        
          
          
          
        
        
        
          使用的系统为Ubuntu 19.10，Windows系统分区lable为sys
参考如下操作：
alair@e6440:~$ sudo mkdir /usr/share/fonts/winfonts [sudo] alair 的密码： alair@e6440:~$ sudo cp /media/alair/sys/Windows/Fonts/* /usr/share/fonts/winfonts/ alair@e6440:~$ sudo rm -rf /usr/share/fonts/winfonts/*.fon alair@e6440:~$ sudo mkfontscale alair@e6440:~$ sudo mkfontdir alair@e6440:~$ sudo fc-cache 打完收工！
          
        
        </description>
    </item>
    
    <item>
      <title>找回windows10照片查看器</title>
      <link>/post/retrieve-windows10-photo-viewer/</link>
      <pubDate>Sun, 28 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/retrieve-windows10-photo-viewer/</guid>
      <description>
        
          
          
          
        
        
        
          Windows10中可以通过修改注册表的方法找回照片查看器。
新建ton.reg注册表文件，内容如下：
Windows Registry Editor Version 5.00 ; Change Extension&#39;s File Type [HKEY_CURRENT_USER\Software\Classes\.jpg] @=&amp;quot;PhotoViewer.FileAssoc.Tiff&amp;quot; ; Change Extension&#39;s File Type [HKEY_CURRENT_USER\Software\Classes\.jpeg] @=&amp;quot;PhotoViewer.FileAssoc.Tiff&amp;quot; ; Change Extension&#39;s File Type [HKEY_CURRENT_USER\Software\Classes\.gif] @=&amp;quot;PhotoViewer.FileAssoc.Tiff&amp;quot; ; Change Extension&#39;s File Type [HKEY_CURRENT_USER\Software\Classes\.png] @=&amp;quot;PhotoViewer.FileAssoc.Tiff&amp;quot; ; Change Extension&#39;s File Type [HKEY_CURRENT_USER\Software\Classes\.bmp] @=&amp;quot;PhotoViewer.FileAssoc.Tiff&amp;quot; ; Change Extension&#39;s File Type [HKEY_CURRENT_USER\Software\Classes\.tiff] @=&amp;quot;PhotoViewer.FileAssoc.Tiff&amp;quot; ; Change Extension&#39;s File Type [HKEY_CURRENT_USER\Software\Classes\.ico] @=&amp;quot;PhotoViewer.FileAssoc.Tiff&amp;quot;  保存后，双击运行即可，然后右键打开方式中即可看到照片查看器。
          
        
        </description>
    </item>
    
    <item>
      <title>Ubuntu/Widnows双系统时间不一致解决方法</title>
      <link>/post/ubuntu-windows-dual-system-time-is-inconsistent/</link>
      <pubDate>Tue, 09 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/ubuntu-windows-dual-system-time-is-inconsistent/</guid>
      <description>
        
          
          
          
        
        
        
          安装Ubuntu和Windows双系统的情况下，Ubuntu的时间总会和Windows的时间相差8小时，原因在于widows认为BIOS时间是本地时间，Ubuntu认为BIOS时间是UTC时间，即协调世界时(Universal Time Coordinated)，是由国际无线电咨询委员会规定和推荐,并由国际时间局(BIH)负责保持的以秒为基础的时间标度。
UTC相当于本初子午线(即经度0度)上的平均太阳时，过去曾用格林威治平均时(GMT)来表示。北京时间比UTC时间早8小时，以1999年1月1日0000UTC为例，UTC时间是零点，北京时间为1999年1月1日早上8点整。所以我们在时间上面相隔了8个小时。这个时候bios的时间和系统的时间当然是不一致，一个代表UTC时间，一个代表CST(＋8时区)，即上海的时间。
 旧版Ubuntu（Ubuntu10左右）：  编辑/etc/default/rcS 将UTC=yes改成UTC=no
 新版Ubuntu（Ubuntu16.04）：  新版Ubuntu使用systemd作为管理系统，时间由timedatectl来管理，以下为修改方法：
$sudo timedatectl set-local-rtc 1  重启完成。
          
        
        </description>
    </item>
    
    <item>
      <title>GRUB引导ISO镜像</title>
      <link>/post/grub-boot-iso-image-file/</link>
      <pubDate>Sun, 08 Jul 2018 17:18:00 +0000</pubDate>
      
      <guid>/post/grub-boot-iso-image-file/</guid>
      <description>
        
          
          
          
        
        
        
          家里电脑安装了双系统(Xubuntu+Windows7)，平时一直不关机，开着TeamViewer便于在办公室远程操作。
这次不知怎么回事儿，远程掉了，回家一看Windows意外关机，再开机直接蓝屏。
由于为了省资源，关闭了系统保护，没法进行还原，多次试着拯救都没能解决，无限蓝屏……
手头刚好没有WinPE的U盘，没法ghost恢复或重装Windows，只有xubuntu可用，一筹莫展。
突然想到grub是否可以引导iso？ 网上找了下，还真可以，于是下载了个WinPE镜像文件，打算通过grub来引导以修复Windows。
具体操作如下：
安装grub-imageboot
alair@e6440:~$ apt search memdisk 正在排序... 完成 全文搜索... 完成 grub-imageboot/bionic,bionic 0.6 all boot iso, harddisk and floppy images with grub2 and syslinux memdisk alair@e6440:~$ sudo apt install grub-imageboot [sudo] alair 的密码： 正在读取软件包列表... 完成 正在分析软件包的依赖关系树 正在读取状态信息... 完成 将会同时安装下列软件： syslinux-common 下列【新】软件包将被安装： grub-imageboot syslinux-common 升级了 0 个软件包，新安装了 2 个软件包，要卸载 0 个软件包，有 4 个软件包未被升级。 需要下载 1,176 kB 的归档。 解压缩后会消耗 3,684 kB 的额外空间。 您希望继续执行吗？ [Y/n] y 获取:1 http://mirrors.cqu.edu.cn/ubuntu bionic/main amd64 syslinux-common all 3:6.
          
        
        </description>
    </item>
    
    <item>
      <title>python-pip安装实例</title>
      <link>/post/python-pip-installation/</link>
      <pubDate>Thu, 20 Apr 2017 14:28:00 +0000</pubDate>
      
      <guid>/post/python-pip-installation/</guid>
      <description>
        
          
          
          
        
        
        
          Python-pip 是一个现代的，通用的 Python包管理工具。提供了对 Python 包的查找、下载、安装、卸载的功能。
以下为多个操作系统平台下Python-pip安装方法
通用方法 通过get-pip.py文件来安装，建议Windows用户使用，前提是你必须首先安装Python。
版本要求Python 2 &amp;gt;=2.7.9 或Python 3 &amp;gt;=3.4，可从官网下载http://www.python.org/
然后下载get-pip.py
下载地址 https://bootstrap.pypa.io/get-pip.py
通过python get-pip.py命令来进行安装。
Linux下通过软件管理工具来安装Python-pip Fedora21   Python2
sudo yum upgrade python-setuptools sudo yum install python-pip python-wheel   Python3
sudo yum install python3 python3-wheel   Fedora22   Python2
sudo dnf upgrade python-setuptools sudo dnf install python-pip python-wheel   Python3
sudo dnf install python3 python3-wheel   CentOS/RHEL 首先得启用EPEL repository,可参考此文
  EPEL 6/EPEL 7
          
        
        </description>
    </item>
    
    <item>
      <title>Windows10开启Linux子系统</title>
      <link>/post/windows10-enabled-linux-subsystem/</link>
      <pubDate>Fri, 10 Mar 2017 11:13:00 +0000</pubDate>
      
      <guid>/post/windows10-enabled-linux-subsystem/</guid>
      <description>
        
          
          
          
        
        
        
          打开功能 设置-系统-应用和功能，右侧下拉到底，点击“相关设置”下的“程序和功能”
在打开的“程序和功能”左侧菜单中，找到“启用或关闭windows功能”，点击打开。
在接下来的“windows功能”菜单中，下拉勾选“适用于linux的windows子系统（beta）”，确认后重启系统。
开启开发人员模式 设置-更新和安全-针对开发人员，在右侧打开“开发人员模式”
安装linux子系统 Win+R输入cmd回车，打开cmd
输入“bash”按照提示安装设置用户名密码即可使用。
然后就可以使用ubuntu提供的linux子系统了。
          
        
        </description>
    </item>
    
    <item>
      <title>使用Syncthing在多个设备之间同步文件</title>
      <link>/post/use-syncthing-synchronize-files-between-multiple-devices/</link>
      <pubDate>Fri, 06 May 2016 15:16:00 +0000</pubDate>
      
      <guid>/post/use-syncthing-synchronize-files-between-multiple-devices/</guid>
      <description>
        
          
          
          
        
        
        
          Syncthing是一款开源的多平台同步软件，使用他可以在多个设备间进行文件同步，并且带有版本控制功能。
Syncthing官网地址 **https://syncthing.net/**Github地址 https://github.com/syncthing/syncthing
安装Syncthing Syncthing官网提供多平台安装包，下载地址为 https://github.com/syncthing/syncthing/releases/
并且针对Debian/Ubuntu平台，官方提供了apt-get安装方法
# Add the release PGP keys: curl -s https://syncthing.net/release-key.txt | sudo apt-key add - # Add the &amp;quot;release&amp;quot; channel to your APT sources: echo &amp;quot;deb http://apt.syncthing.net/ syncthing release&amp;quot; | sudo tee /etc/apt/sources.list.d/syncthing.list # Update and install syncthing: sudo apt-get update sudo apt-get install syncthing  运行Syncthing Linux下直接使用syncthing命令运行
syncthing &amp;amp;  Windows下直接打开下载的syncthing.exe文件，而后浏览器自动打开http://127.0.0.1:8384进行设置管理。
管理Syncthing 如果是在VPS上安装Syncthing ,运行syncthing后，只能通过http://127.0.0.1:8384进行管理，我们可以通过以下方法在本地管理。
ssl -L 9891:localhost:8384 root@ip  输入root密码登录成功后，即可本地浏览http://127.0.0.1:9891对VPS上的Synchting进行管理。
添加设备 每个设备均有一个设备标识，可以通过操作-&amp;gt;显示设备标识来查看。
          
        
        </description>
    </item>
    
    <item>
      <title>windows7开启telnet客户端</title>
      <link>/post/windows7-enable-telnet-client/</link>
      <pubDate>Wed, 10 Feb 2016 12:11:00 +0000</pubDate>
      
      <guid>/post/windows7-enable-telnet-client/</guid>
      <description>
        
          
          
          
        
        
        
          安装完成windows7后，默认可能没有开启telnet功能，这样在cmd下输入telnet时会提示无命令，可以参考下文开启telnet功能。
开始 -&amp;gt; 控制面板 -&amp;gt; 程序和功能
在左侧边栏找到打开或关闭windows功能
在打开的窗口中找到Telnet客户端，勾选，确认。
Over!
          
        
        </description>
    </item>
    
    <item>
      <title>Windows下安装Jekyll</title>
      <link>/post/install-jekyll-on-windows/</link>
      <pubDate>Wed, 20 May 2015 15:20:00 +0000</pubDate>
      
      <guid>/post/install-jekyll-on-windows/</guid>
      <description>
        
          
          
          
        
        
        
          安装Ruby/DevKit 首先从 http://rubyinstaller.org/downloads/ 下载以下两个文件进行安装
 rubyinstaller-1.9.3-p194.exe DevKit-tdm-32-4.5.2-20111229-1559-sfx.exe  Ruby安装在D:\Ruby200, DevKit安装在D:\rubydevkit
打开CMD进入到DevKit目录，开始初始化安装
D:\rubydevkit&amp;gt;ruby dk.rb init [INFO] found RubyInstaller v2.0.0 at d:/Ruby200 Initialization complete! Please review and modify the auto-generated &#39;config.yml&#39; file to ensure it contains the root directories to all of the installed Rubies you want enhanced by the DevKit. D:\rubydevkit&amp;gt;ruby dk.rb install [INFO] Updating convenience notice gem override for &#39;d:/Ruby200&#39; [INFO] Installing &#39;d:/Ruby200/lib/ruby/site_ruby/devkit.rb&#39;  替换Gem源
天朝网路可能会引起gem安装失败，建议更换为ruby.taobao,org源
$gem sources -r http://rubygems.org/ $gem sources -a http://ruby.
          
        
        </description>
    </item>
    
    <item>
      <title>Centos7配置grub添加windows引导菜单</title>
      <link>/post/centos7-configuration-grub-to-add-the-windows-boot-menu/</link>
      <pubDate>Sat, 09 Aug 2014 08:09:00 +0000</pubDate>
      
      <guid>/post/centos7-configuration-grub-to-add-the-windows-boot-menu/</guid>
      <description>
        
          
          
          
        
        
        
          进入/etc/grub.d/目录
#cd /etc/grub.d/  新建15_Windows文件，写入以下内容：
#! /bin/sh -e echo &amp;quot;#Adding Windows&amp;quot; &amp;gt;&amp;amp;2 cat &amp;lt;&amp;lt; EOF menuentry &amp;quot;Windows&amp;quot; { set root=(hd0,1) chainloader +1 } EOF  其中(hd0,1)是本地磁盘windows主扇区号，可以通过fdisk -l来查看确定。
设定文件权限
#chmod 755 15_Windows  编辑/etc/default/grub来设定菜单等待时间
GRUB_TIMEOUT=2 GRUB_DISTRIBUTOR=&amp;quot;$(sed &#39;s, release .*$,,g&#39; /etc/system-release)&amp;quot; GRUB_DEFAULT=saved GRUB_DISABLE_SUBMENU=true GRUB_TERMINAL_OUTPUT=&amp;quot;console&amp;quot; GRUB_CMDLINE_LINUX=&amp;quot;vconsole.keymap=us crashkernel=auto vconsole.font=latarcyrheb-sun16 rhgb quiet&amp;quot; GRUB_DISABLE_RECOVERY=&amp;quot;true&amp;quot;  修改GRUB_TIMEOUT值即可。
设置Windows为默认启动项
#grub2-set-default &amp;quot;windows&amp;quot;  然后运行以下命令，使以上修改生效：
# grub2-mkconfig -o /boot/grub2/grub.cfg 
          
        
        </description>
    </item>
    
    <item>
      <title>创建固定大小的文件</title>
      <link>/post/create-a-fixed-size-file/</link>
      <pubDate>Thu, 10 Jul 2014 07:10:00 +0000</pubDate>
      
      <guid>/post/create-a-fixed-size-file/</guid>
      <description>
        
          
          
          
        
        
        
          有时我们需要新建指定大小的文件，很多人可能使用压缩软件的分割功能，分割出指定大小的文件。
其实操作系统本身自带的命令就可以胜任以上任务。
Windows
新建名为1G-File，大小1G的文件
fsutil file createnew 1G-File 1073741824  Linux
新建名为2G-File，大小为2G的文件
dd if=/dev/zero of=./2G-File bs=1M count=2048 
          
        
        </description>
    </item>
    
    <item>
      <title>修复grub引导</title>
      <link>/post/repair-grub-boot/</link>
      <pubDate>Thu, 12 Dec 2013 12:13:00 +0000</pubDate>
      
      <guid>/post/repair-grub-boot/</guid>
      <description>
        
          
          
          
        
        
        
          笔记本原来安装的Linux/Windows XP双系统，今天重新安装了Windows7，但是开机的grub引导被搞掉了，找了下grub的man看了半天，摸索出来如何修复原来的grub引导。
首先，使用Linux live cd引导系统，然后按照以下操作：
检查分区信息
ubuntu@ubuntu:~$ sudo -s root@ubuntu:~# lsblk NAME MAJ:MIN RM SIZE RO TYPE MOUNTPOINT sda 8:0 0 465.8G 0 disk ├─sda1 8:1 0 40G 0 part ├─sda2 8:2 0 1K 0 part ├─sda5 8:5 0 4G 0 part [SWAP] ├─sda6 8:6 0 20G 0 part ├─sda7 8:7 0 20G 0 part ├─sda8 8:8 0 100G 0 part ├─sda9 8:9 0 200G 0 part └─sda10 8:10 0 81.
          
        
        </description>
    </item>
    
    <item>
      <title>Windows下Jekyll乱码问题</title>
      <link>/post/jekyll-chinese-garbled-windows/</link>
      <pubDate>Sat, 21 Sep 2013 19:21:00 +0000</pubDate>
      
      <guid>/post/jekyll-chinese-garbled-windows/</guid>
      <description>
        
          
          
          
        
        
        
          在Ruby目录中搜索convertible.rb，找到大概27行如下内容:
self.content = File.read(File.join(base, name))  替换为
self.content = File.read(File.join(base, name), :encoding =&amp;gt; &#39;utf-8&#39;)  在windows环境变量中，添加以下两个环境变量
LANG=zh_CN.UTF-8 LC_ALL=zh_CN.UTF-8 
          
        
        </description>
    </item>
    
  </channel>
</rss>