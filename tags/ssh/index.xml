<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>SSH on UNIXETC</title>
    
    
    
    <link>/tags/ssh/</link>
    <description>Recent content in SSH on UNIXETC</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sat, 17 Aug 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/ssh/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>如何判断西数MyCloud是第几代</title>
      <link>/post/western-digital-my-cloud-version-judgment-method/</link>
      <pubDate>Sat, 17 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/western-digital-my-cloud-version-judgment-method/</guid>
      <description>
        
          
          
          
        
        
        
          本文介绍了如何判断西数Mycloud是第一代还是第二代
          
        
        </description>
    </item>
    
    <item>
      <title>UbuntuTouch更换国内源</title>
      <link>/post/ubuntu-touch-change-mirror/</link>
      <pubDate>Sun, 04 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/ubuntu-touch-change-mirror/</guid>
      <description>
        
          
          
          
        
        
        
          在一加3T上安装完UbuntuTouch后，参考此文开启SSH登录。
接下来就是更换软件源了，国内推荐USTC和清华大学开源镜像。
通过vi /etc/apt/sources.list 编辑软件源,然后在vi中通过以下命令进行替换操作：
:%s/ports.ubuntu.com/mirrors.tuna.tsinghua.edu.cn/g  保存后即可。
          
        
        </description>
    </item>
    
    <item>
      <title>通过SSH访问UbuntuTouch</title>
      <link>/post/shell-access-ubuntu-touch-via-ssh/</link>
      <pubDate>Thu, 01 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/shell-access-ubuntu-touch-via-ssh/</guid>
      <description>
        
          
          
          
        
        
        
          本文介绍了如何通过ssh来访问ubuntutouch设备。
          
        
        </description>
    </item>
    
    <item>
      <title>通过SSH Over USB管理树莓派Zero</title>
      <link>/post/raspberry-pi-zero-with-ssh-over-usb/</link>
      <pubDate>Fri, 19 Apr 2019 09:46:00 +0000</pubDate>
      
      <guid>/post/raspberry-pi-zero-with-ssh-over-usb/</guid>
      <description>
        
          
          
          
        
        
        
          树莓派Zero因为相对来说太小巧，没有提供初始化的网卡，所以我们除了通过串口连接以外，树莓派Zero也提供了USB直接连接的方式。即通过Ethernet Gadget模式来连接pc，并进行ssh连接。
 Ethernet Gadget模式即USB网卡模式，比较常见的就是我们通过android手机的usb接口对pc进行网络共享的一种手段。一般电脑都会自动识别这种设备，并开启网卡进行共享。
 修改配置文件 为了进行USB连接，我们需要修改BOOT文件夹下的config.txt与cmdline.txt配置文件。 首先在config.txt最末行处换行添加如下代码，打开usb网卡模式：
dtoverlay=dwc2  其次在cmdline.txt文件中找到rootwait字段，并在其后面空格添加如下信息，在打开系统时开启USB网卡模式。
modules-load=dwc2,g_ether  在boot分区新建ssh文件，以打开ssh访问功能。
touch ssh  通过usb连接设备 树莓派zero有两个MicroUSB口，一个是电源插口，职司供电的功能，另外一个就是USB接口，它除了供电以外还提供OTG的功能，我们也是通过这个接口来连接PC。 此时我们可以通过以下代码连接树莓派zero：
ssh pi@raspberrypi.local  但此时ip段为DHCP模式获取，如果我们希望通过ip来连接，则我们需要给树莓派的usb网卡设置ip。
设置USB网卡的IP 我们可以通过ifconfig -a来查看我们现在的网卡设备，此时我们可以看到，USB0网卡设备，我们就是通过该设备连接的pc，所以我们需要设置该网卡的ip。
sudo nano /etc/network/interfaces  打开网卡配置界面，在最末行添加如下代码来设置固定IP：
allow-hotplug usb0 iface usb0 inet static address 192.168.7.2 netmask 255.255.255.0 network 192.168.7.0 broadcast 192.168.7.255 gateway 192.168.7.1  然后重启usb0网卡：
sudo ifdown usb0 sudo ifup usb0 ifconfig usb0  但树莓派此时实际上是从机，我们需要通过设置pc主机的ip来让树莓派0的usb网卡真正运作起来，那么我们对刚才的usb设备设置如下IP：
 IP: 192.168.7.1 掩码: 255.255.255.0 路由: 192.168.7.1
 此时我们就可以通过ip来进行ssh连接了：
          
        
        </description>
    </item>
    
    <item>
      <title>梅林固件安装Shadowsocks</title>
      <link>/post/merlin-install-shadowsocks/</link>
      <pubDate>Sun, 19 Nov 2017 11:19:00 +0000</pubDate>
      
      <guid>/post/merlin-install-shadowsocks/</guid>
      <description>
        
          
          
          
        
        
        
          登录路由器后台，系统管理&amp;gt;系统设置，将Enable SSH设置为LAN only。
通过SSH登录路由器，参考以下执行，在此推荐Putty。
#cd /tmp #wget https://github.com/hq450/fancyss_history_package/raw/master/fancyss_arm/shadowsocks_4.1.1.tar.gz #tar -zxvf shadowsocks_4.1.1.tar.gz #cd shadowsocks #chmod +x install.sh #./install.sh 2017年11月19日 14:40:36: 固件平台【koolshare merlinarmv7l】符合安装要求，开始安装插件！ 2017年11月19日 14:40:36: 清理旧文件 2017年11月19日 14:40:36: 开始复制文件！ 2017年11月19日 14:40:36: 复制相关二进制文件！ 2017年11月19日 14:40:42: 创建一些二进制文件的软链接！ 2017年11月19日 14:40:42: 复制ss的脚本文件！ 2017年11月19日 14:40:44: 复制网页文件！ 2017年11月19日 14:40:44: 移除安装包！ 2017年11月19日 14:40:44: 为新安装文件赋予执行权限... 2017年11月19日 14:40:44: 设置一些默认值 2017年11月19日 14:40:47: 一点点清理工作... 2017年11月19日 14:40:47: 插件安装成功，你为什么这么屌？！ 2017年11月19日 14:40:47: 更新完毕，请等待网页自动刷新！  完成后重启路由器，在软件中心中即可看到影梭已经安装成功！
          
        
        </description>
    </item>
    
    <item>
      <title>使用Google Authenticator两步验证加强SSH登录</title>
      <link>/post/use-google-authenticator-set-2step-verification-strengthening-ssh-login/</link>
      <pubDate>Thu, 28 Jan 2016 12:33:00 +0000</pubDate>
      
      <guid>/post/use-google-authenticator-set-2step-verification-strengthening-ssh-login/</guid>
      <description>
        
          
          
          
        
        
        
          Google Authenticator开源版主页 https://github.com/google/google-authenticator
安装Google Authenticator Ubuntu已经包含libpam-google-authenticator软件(Ubuntu 11.10以上版本),可以直接使用apt-get安装
apt-get install libpam-google-authenticator  其他系统可以通过源码编译安装
git clone https://github.com/google/google-authenticator-libpam.git cd google-authenticator-libpam/ ./bootstrap.sh ./configure make make install  注意：在Debian7中执行./configure时可能存在以下错误提示
configure: error: Unable to find the PAM library or the PAM header files  在此需要安装libpam0g-dev和libtool
apt-get -y install libpam0g-dev libtool  设置Google Authenticator 在手机端搜索安装Google Authenticator
google-authenticator Do you want authentication tokens to be time-based (y/n) y  然后出现二维码，使用手机端Google Authenticator扫码,接下来服务器端继续设置
如果没有出现二维码，可以将提示的以**https://www.google.com/chart?**开头的连接复制到浏览器中，就可以看到二维码了
Do you want me to update your &amp;quot;/root/.
          
        
        </description>
    </item>
    
    <item>
      <title>SSL安全优化</title>
      <link>/post/ssl-security-optimization/</link>
      <pubDate>Mon, 21 Dec 2015 12:21:00 +0000</pubDate>
      
      <guid>/post/ssl-security-optimization/</guid>
      <description>
        
          
          
          
        
        
        
          先贴出本站的SSL安全评级,测试地址为https://www.ssllabs.com/ssltest/analyze.html?d=alair.cn
以下是本站Nginx配置中关于SSL部分
listen 443 ssl http2; ssl_certificate /etc/letsencrypt/live/alair.cn/fullchain.pem; ssl_certificate_key /etc/letsencrypt/live/alair.cn/privkey.pem; ssl_session_timeout 60m; ssl_protocols TLSv1 TLSv1.1 TLSv1.2; ssl_ciphers ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-RC4-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:RC4-SHA:!aNULL:!eNULL:!EXPORT:!DES:!3DES:!MD5:!DSS:!PKS; ssl_prefer_server_ciphers on; ssl_session_cache builtin:1000 shared:SSL:10m; ssl_dhparam /etc/ssl/certs/dhparam.pem; ssl_stapling on; ssl_stapling_verify on; add_header Strict-Transport-Security &amp;quot;max-age=63072000; includeSubdomains; preload&amp;quot;; add_header X-Frame-Options &amp;quot;DENY&amp;quot;;  说明：
dhparam.pem可以使用openssl dhparam -out dhparam.pem 4096命令生成，这个命令会执行很长时间，也可以将字节数改为2048
          
        
        </description>
    </item>
    
    <item>
      <title>使用SCP传输文件</title>
      <link>/post/transfer-files-using-scp/</link>
      <pubDate>Tue, 08 Dec 2015 21:38:00 +0000</pubDate>
      
      <guid>/post/transfer-files-using-scp/</guid>
      <description>
        
          
          
          
        
        
        
          示例：用户名root 地址 2.33.153.67
下载文件 scp root@2.33.153.67:/root/test.mp4 /home/pi/  将服务器上的/root/test.mp4下载到本地/home/pi文件夹
上传文件 scp /home/pi/ok.txt root@2.33.153.67:/root  将本地/home/pi/ok.txt上传至服务器/root文件夹
下载文件夹 scp -r root@2.33.153.67:/root/ebooks /home/pi  将服务器上的/root/ebooks文件夹下载至本地/home/pi下
上传文件夹 scp -r /home/pi/music root@2.33.153.67:/media  将本地/home/pi/music文件夹上传至服务器/media下
          
        
        </description>
    </item>
    
    <item>
      <title>Gandi免费SSL证书使用方法</title>
      <link>/post/gandi-free-ssl-certificate-usage/</link>
      <pubDate>Thu, 24 Sep 2015 19:23:00 +0000</pubDate>
      
      <guid>/post/gandi-free-ssl-certificate-usage/</guid>
      <description>
        
          
          
          
        
        
        
          首先澄清此文中的免费不是真的免费，而是新注册或转移域名到Gandi，都可以获得标准版SSL证书一年的免费使用。
符合以上条件的话，可以进行下面操作了！
在Gandi上购买SSL证书，选择标准版，在结算的时候系统会自动判断是否免单，正常情况下会0元结单，完成后接着配置SSL证书。
首先提交CSR，这里需要自己生产CSR。
在此以3c.lc域名为例，在Ubuntu中操作。
openssl req -nodes -newkey rsa:2048 -sha1 -keyout 3clc.key -out 3clc.csr  然后根据提示填写以下内容：
 Country Name (2 letter code) [AU]: #国家代码，中国为CN
State or Province Name (full name) [Some-State]: #省份
Locality Name (eg, city) []: #城市
Organization Name (eg, company) [Internet Widgits Pty Ltd]: #组织名
Organizational Unit Name (eg, section) []: #部门名
Common Name (e.g. server FQDN or YOUR name) []:3c.lc #注意，这里需要填写你的域名。
Email Address []:2b@3c.lc #邮箱
Please enter the following &amp;lsquo;extra&amp;rsquo; attributes
          
        
        </description>
    </item>
    
    <item>
      <title>树莓派开启root登录</title>
      <link>/post/raspberry-pi-allow-root-login/</link>
      <pubDate>Fri, 18 Sep 2015 21:28:00 +0000</pubDate>
      
      <guid>/post/raspberry-pi-allow-root-login/</guid>
      <description>
        
          
          
          
        
        
        
          想要通过ssh登录树莓派进行管理，使用默认的pi用户有时真的不便，对于linux老手来说，可以直接开启root用户ssh登录，这就方便多了，方法如下：
sudo passwd root sudo passwd --unlock root  设置SSH
sudo vi /etc/ssh/sshd_config  将其中的PermitRootLogin without-password改为PermitRootLogin yes，然后重启ssh服务sudo service ssh restart
Over!
          
        
        </description>
    </item>
    
    <item>
      <title>VPS优化</title>
      <link>/post/optimization-vps/</link>
      <pubDate>Sat, 01 Feb 2014 12:31:00 +0000</pubDate>
      
      <guid>/post/optimization-vps/</guid>
      <description>
        
          
          
          
        
        
        
          pdksh替代bash $sudo apt-get install pdksh $sudo vi /etc/shells  添加/bin/pdksh到/etc/shells文件
$chsh -s /bin/pdksh  重新登录即可。
修改SSH端口 #vi /etc/ssh/sshd_config  将Port 22中的22改为自定义数字即可
# /etc/init.d/ssh restart  dropbear替代openssh $sudo apt-get install dropbear $sudo /etc/init.d/ssh stop $sudo vi /etc/default/dropbear  修改NO_START=0,修改DROPBEAR_PORT为自定义端口号
$sudo /etc/init.d/dropbear start $sudo apt-get remove openssh-server $sudo apt-get autoremove  关闭多余的TTY Ubuntu 12.04 server如下操作
#cd /etc/init/ #mv tty2.conf tty2.conf.bak #mv tty3.conf tty2.conf.bak #mv tty4.conf tty2.conf.bak #mv tty5.conf tty2.conf.bak #mv tty6.conf tty2.conf.bak #reboot  Debian 7如下操作
          
        
        </description>
    </item>
    
    <item>
      <title>使用SSH密匙登录Github</title>
      <link>/post/use-the-ssh-key-to-login-github/</link>
      <pubDate>Tue, 03 Sep 2013 19:23:00 +0000</pubDate>
      
      <guid>/post/use-the-ssh-key-to-login-github/</guid>
      <description>
        
          
          
          
        
        
        
          生成ssh密匙文件 ssh-keygen -t rsa -C &amp;quot;user@domain.com&amp;quot;  接下来会提示输入密码，推荐自定义密码，当然也可以置空
Enter passphrase(empty for no passphrase): Enter same passphrase again:  完成后会在用户目录下的.ssh文件夹中新建id_rsa与is_rsa.pub两个文件。
添加ssh密匙到github用户 登录至github.com,点击右上角的Account Settings
在左侧选择SSH Keys菜单，然后在右侧点击Add SSH Key按钮
将上一步生成的id_rsa.pub文件内容复制进去保存。
本地连接至github.com ssh -T git@github.com  如果前面设置了passphrase，那么就按照提示输入passphrase。如果置空的话，就直接点击回车。成功后会有如下提示：
Hi wrchiu! You`ve successfully authenticated, but GitHub does note provide shell access.  参考以上设置完成后，以后git push时就不需要每次输入密码了！
          
        
        </description>
    </item>
    
    <item>
      <title>Nokia N900 and SSH</title>
      <link>/post/nokia-n900-and-ssh/</link>
      <pubDate>Mon, 02 Apr 2012 14:12:00 +0000</pubDate>
      
      <guid>/post/nokia-n900-and-ssh/</guid>
      <description>
        
          
          
          
        
        
        
          N900采用的maemo是基于debian的linux系统，通过自带的application manager管理软件时，操作体验还有待改进，所以这里推荐通过ssh连接，使用cli来进行相应操作。 需要在手机端安装OpenSSH来开启SSH服务，在application manager的system目录下，找到openssh Client and Server安装，当然如果你不需要在手机端进行SSH登陆的话，那可以只安装server即可。 安装时会提示输入密码，这个就是以后连接手机SSH的服务密码。 安装完成后SSH server会默认启动，现在你可以通过wifi连接局域网，然后需要知道自己当前的IP（可以通过Tp-link后台查看，或者手机端安装Personal IP Address开显示)，再推荐安装SSH Status and Swither，可以在手机的status显示SSH状态，并管理SSH server启动/停止。 然后推荐使用Putty进行链接，在CLI模式下管理软件，可以在http://maemo.org/上查看软件目录以及简介，通过apt-get install命令来安装，以下为一些apt-get使用简介
使用方法: apt-get [选项] 命令 apt-get [选项] install|remove pkg1 [pkg2 &amp;hellip;] apt-get [选项] source pkg1 [pkg2 &amp;hellip;]
命令:
update - 更新软件列表 upgrade - 升级软件 install - 安装软件(pkg 是软件名) remove - 删除软件 autoremove - 自动删除一些无效的软件 purge - 删除软件并清理配置 source - 下载软件源码 build-dep - 配置软件源码的build-dependencies dist-upgrade - 升级系统 clean - 清除建立的软件包列表 autoclean - 同上 check - 校验软件包是否有异常  选项:
          
        
        </description>
    </item>
    
    <item>
      <title>删除不需要的iPhone语言文件</title>
      <link>/post/remove-unnecessary-iphone-language-file/</link>
      <pubDate>Mon, 02 Apr 2012 12:34:00 +0000</pubDate>
      
      <guid>/post/remove-unnecessary-iphone-language-file/</guid>
      <description>
        
          
          
          
        
        
        
          首先，需要iPhone已经越狱，并且安装了OpenSSH
脚本文件下载：http://cdn.lyq.wiki/res/langpack2.2.zip，解压出脚本文件langpack2.2.sh
通过itools或者其他管理软件，将脚本文件复制到/var/mobile目录
通过ssh连接手机，进入/var/mobile目录开始操作 注意：此时请关闭手机的定时锁屏功能，以防意外终止操作而失败！！
#chmod 777 langpack2.2.sh //为脚本添加执行权限 #./langpack2.2.sh //运行脚本  开始搜索语言包文件，等待。。。。。
搜索到所有语言包后，开始提示是否删除。
根据提示，输入y或者n来确定所要删除的语言包，根据需要筛选。
所有选择完成后，会提示所有将要删除的语言包，再次确认删除与否（y或n），开始删除过程。。。
删除完成后，会提示所删除的语言包数量，并且提示是否删除该脚本文件
注意：进行完以上操作后，建议马上修改SSH密码，以防止感染蠕虫病毒！！
          
        
        </description>
    </item>
    
    <item>
      <title>LNMP使用实例</title>
      <link>/post/lnmp-usages/</link>
      <pubDate>Fri, 23 Mar 2012 12:32:00 +0000</pubDate>
      
      <guid>/post/lnmp-usages/</guid>
      <description>
        
          
          
          
        
        
        
          安装LNMP 更新系统
#yum check-update #yum update  安装Screen
#yum install screen  开始安装Lnmp
#screen -S lnmp #wget -c http://soft.vpser.net/lnmp/lnmp0.8.tar.gz //最新版请查阅lnmp官网 #tar zxvf lnmp0.8.tar.gz #./lnmp0.8/centos.sh | tee lnmp.log //输出log文件，以备出错时查阅  接下来按照提示设定域名和MysQL密码，程序会自动下载相关程序，而后编译安装
安装PureFTP
#./lnmp0.8/pureftp.sh  按提示输入MySQL和Ftp管理员密码，安装完成后可以通过http://vpsip/ftp/来登录管理ftp帐号
使用Lnmp 添加虚拟主机
#/root/vhost.sh  按照提示填入域名、目录、rewrite规则文件，如下所示：
root@buyvm256:~#/root/vhost.sh ========================================================================= Add Virtual Host for LNMP V0.9 , Written by Licess ========================================================================= LNMP is a tool to auto-compile &amp;amp; install Nginx+MySQL+PHP on Linux This script is a tool to add virtual host for nginx For more information please visit http://www.
          
        
        </description>
    </item>
    
    <item>
      <title>iPhone and SSH</title>
      <link>/post/iphone-and-ssh/</link>
      <pubDate>Sun, 18 Mar 2012 12:13:00 +0000</pubDate>
      
      <guid>/post/iphone-and-ssh/</guid>
      <description>
        
          
          
          
        
        
        
          安装OpenSSH 首先iPhone已经越狱并且安装了Cydia，具体教程可以Google
打开Cydia，管理-软件源，点击右上角编辑，然后点击左上角添加，增加178的软件源http://apt.178.com
添加后Cydia会自动更新软件包，然后在搜索里使用openssh为关键词进行搜索安装。
默认有root和mobile两个用户名，密码均为alpine
手机端SSH管理 在Cydia上搜索安装iSSH安装
修改SSH密码 建议修改原始密码
#passwd root #passwd mobile  PC通过SSH连接iPhone   iPhone接入wifi网络，在电脑端使用Putty或者WinSCP来链接iPhone
  USB连接PC，下载iTools，打开iTools点击手机管理栏的最底下高级功能，打开ssh通道。下来PC端可以通过ip:127.0.0.1来连接iPhone了。
  
          
        
        </description>
    </item>
    
  </channel>
</rss>