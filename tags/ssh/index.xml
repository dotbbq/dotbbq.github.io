<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>SSH on UNIXETC</title>
    <link>https://unixetc.com/tags/ssh/</link>
    <description>UNIXETC (SSH)</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Sat, 17 Aug 2019 00:00:00 +0000</lastBuildDate>
    
    <atom:link href="https://unixetc.com/tags/ssh/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>如何判断西数MyCloud是第几代</title>
      <link>https://unixetc.com/post/western-digital-my-cloud-version-judgment-method/</link>
      <pubDate>Sat, 17 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/western-digital-my-cloud-version-judgment-method/</guid>
      <description>&lt;p&gt;西数MyCloud共出了两代，那么如何判断呢？&lt;/p&gt;
&lt;h3 id=&#34;看系统版本&#34;&gt;看系统版本&lt;/h3&gt;
&lt;p&gt;第一代的是3.x/4.x，第二代的是2.x&lt;/p&gt;
&lt;h3 id=&#34;看cpu信息&#34;&gt;看CPU信息&lt;/h3&gt;
&lt;p&gt;SSH登录MyCloud后，通过&lt;code&gt;cat /proc/cpuinfo&lt;/code&gt;检查CPU信息&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第一代是&lt;code&gt;Comcerto 2000 EVM&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;第二代是 &lt;code&gt;Marvell Armada 375 (Device Tree) &lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>UbuntuTouch更换国内源</title>
      <link>https://unixetc.com/post/ubuntu-touch-change-mirror/</link>
      <pubDate>Sun, 04 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/ubuntu-touch-change-mirror/</guid>
      <description>&lt;p&gt;在&lt;a href=&#34;https://unixetc.com/post/oneplus-3t-install-ubuntutouch/&#34;&gt;一加3T上安装完UbuntuTouch&lt;/a&gt;后，参考&lt;a href=&#34;https://unixetc.com/post/shell-access-ubuntu-touch-via-ssh/&#34;&gt;此文开启SSH&lt;/a&gt;登录。&lt;/p&gt;
&lt;p&gt;接下来就是更换软件源了，国内推荐USTC和清华大学开源镜像。&lt;/p&gt;
&lt;p&gt;通过&lt;code&gt;vi /etc/apt/sources.list&lt;/code&gt; 编辑软件源,然后在vi中通过以下命令进行替换操作：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;:%s/ports.ubuntu.com/mirrors.tuna.tsinghua.edu.cn/g
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;保存后即可。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>通过SSH访问UbuntuTouch</title>
      <link>https://unixetc.com/post/shell-access-ubuntu-touch-via-ssh/</link>
      <pubDate>Thu, 01 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/shell-access-ubuntu-touch-via-ssh/</guid>
      <description>&lt;p&gt;在&lt;a href=&#34;https://unixetc.com/post/oneplus-3t-install-ubuntutouch/&#34;&gt;一加3T上安装完UbuntuTouch&lt;/a&gt;后，可以通过以下方法开启SSH登录。&lt;/p&gt;
&lt;p&gt;打开终端(Terminal)，输入以下命令开启ssh服务。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo android-gadget-service enable ssh
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后就可以通过&lt;code&gt;ssh phablet@ip&lt;/code&gt;来登录设备。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://unixetc.com/imgs/access_ubuntu_touch_via_ssh.png&#34; alt=&#34;&amp;ldquo;access ubuntutouch via ssh&amp;rdquo;&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>通过SSH Over USB管理树莓派Zero</title>
      <link>https://unixetc.com/post/raspberry-pi-zero-with-ssh-over-usb/</link>
      <pubDate>Fri, 19 Apr 2019 09:46:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/raspberry-pi-zero-with-ssh-over-usb/</guid>
      <description>&lt;p&gt;树莓派Zero因为相对来说太小巧，没有提供初始化的网卡，所以我们除了通过串口连接以外，树莓派Zero也提供了USB直接连接的方式。即通过Ethernet Gadget模式来连接pc，并进行ssh连接。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Ethernet
Gadget模式即USB网卡模式，比较常见的就是我们通过android手机的usb接口对pc进行网络共享的一种手段。一般电脑都会自动识别这种设备，并开启网卡进行共享。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;修改配置文件&#34;&gt;修改配置文件&lt;/h3&gt;
&lt;p&gt;为了进行USB连接，我们需要修改BOOT文件夹下的&lt;strong&gt;config.txt&lt;/strong&gt;与&lt;strong&gt;cmdline.txt&lt;/strong&gt;配置文件。 
首先在&lt;strong&gt;config.txt&lt;/strong&gt;最末行处换行添加如下代码，打开usb网卡模式：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;dtoverlay=dwc2
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;其次在&lt;strong&gt;cmdline.txt&lt;/strong&gt;文件中找到&lt;code&gt;rootwait&lt;/code&gt;字段，并在其后面空格添加如下信息，在打开系统时开启USB网卡模式。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;modules-load=dwc2,g_ether
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;在boot分区新建ssh文件，以打开ssh访问功能。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;touch ssh
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;通过usb连接设备&#34;&gt;通过usb连接设备&lt;/h3&gt;
&lt;p&gt;树莓派zero有两个MicroUSB口，一个是电源插口，职司供电的功能，另外一个就是USB接口，它除了供电以外还提供OTG的功能，我们也是通过这个接口来连接PC。
此时我们可以通过以下代码连接树莓派zero：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ssh pi@raspberrypi.local
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;但此时ip段为DHCP模式获取，如果我们希望通过ip来连接，则我们需要给树莓派的usb网卡设置ip。&lt;/p&gt;
&lt;h3 id=&#34;设置usb网卡的ip&#34;&gt;设置USB网卡的IP&lt;/h3&gt;
&lt;p&gt;我们可以通过ifconfig -a来查看我们现在的网卡设备，此时我们可以看到，USB0网卡设备，我们就是通过该设备连接的pc，所以我们需要设置该网卡的ip。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo nano /etc/network/interfaces
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;打开网卡配置界面，在最末行添加如下代码来设置固定IP：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;allow-hotplug usb0
iface usb0 inet static
        address 192.168.7.2
        netmask 255.255.255.0
        network 192.168.7.0
        broadcast 192.168.7.255
        gateway 192.168.7.1
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后重启usb0网卡：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo ifdown usb0
sudo ifup usb0
ifconfig usb0
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;但树莓派此时实际上是从机，我们需要通过设置pc主机的ip来让树莓派0的usb网卡真正运作起来，那么我们对刚才的usb设备设置如下IP：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;IP:  192.168.7.1 
掩码: 255.255.255.0 
路由: 192.168.7.1&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;此时我们就可以通过ip来进行ssh连接了：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ssh pi@192.168.7.2
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://notenoughtech.com/raspberry-pi/raspberry-pi-zero-ssh-usb/&#34;&gt;https://notenoughtech.com/raspberry-pi/raspberry-pi-zero-ssh-usb/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.csdn.net/talkxin/article/details/53066555&#34;&gt;https://blog.csdn.net/talkxin/article/details/53066555&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>梅林固件安装Shadowsocks</title>
      <link>https://unixetc.com/post/merlin-install-shadowsocks/</link>
      <pubDate>Sun, 19 Nov 2017 11:19:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/merlin-install-shadowsocks/</guid>
      <description>&lt;p&gt;登录路由器后台，&lt;strong&gt;系统管理&lt;/strong&gt;&amp;gt;&lt;strong&gt;系统设置&lt;/strong&gt;，将&lt;strong&gt;Enable SSH&lt;/strong&gt;设置为&lt;strong&gt;LAN only&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;通过SSH登录路由器，参考以下执行，在此推荐&lt;strong&gt;Putty&lt;/strong&gt;。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#cd /tmp
#wget https://github.com/hq450/fancyss_history_package/raw/master/fancyss_arm/shadowsocks_4.1.1.tar.gz
#tar -zxvf shadowsocks_4.1.1.tar.gz
#cd shadowsocks
#chmod +x install.sh
#./install.sh
2017年11月19日 14:40:36: 固件平台【koolshare merlinarmv7l】符合安装要求，开始安装插件！
2017年11月19日 14:40:36: 清理旧文件
2017年11月19日 14:40:36: 开始复制文件！
2017年11月19日 14:40:36: 复制相关二进制文件！
2017年11月19日 14:40:42: 创建一些二进制文件的软链接！
2017年11月19日 14:40:42: 复制ss的脚本文件！
2017年11月19日 14:40:44: 复制网页文件！
2017年11月19日 14:40:44: 移除安装包！
2017年11月19日 14:40:44: 为新安装文件赋予执行权限...
2017年11月19日 14:40:44: 设置一些默认值
2017年11月19日 14:40:47: 一点点清理工作...
2017年11月19日 14:40:47: 插件安装成功，你为什么这么屌？！
2017年11月19日 14:40:47: 更新完毕，请等待网页自动刷新！
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;完成后重启路由器，在软件中心中即可看到影梭已经安装成功！&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>使用Google Authenticator两步验证加强SSH登录</title>
      <link>https://unixetc.com/post/use-google-authenticator-set-2step-verification-strengthening-ssh-login/</link>
      <pubDate>Thu, 28 Jan 2016 12:33:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/use-google-authenticator-set-2step-verification-strengthening-ssh-login/</guid>
      <description>&lt;p&gt;Google Authenticator开源版主页 &lt;a href=&#34;https://github.com/google/google-authenticator&#34;&gt;https://github.com/google/google-authenticator&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;安装google-authenticator&#34;&gt;安装Google Authenticator&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Ubuntu&lt;/strong&gt;已经包含libpam-google-authenticator软件(Ubuntu 11.10以上版本),可以直接使用&lt;code&gt;apt-get&lt;/code&gt;安装&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;apt-get install libpam-google-authenticator
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;其他系统可以通过源码编译安装&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git clone https://github.com/google/google-authenticator-libpam.git
cd google-authenticator-libpam/
./bootstrap.sh
./configure
make
make install
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;注意：在Debian7中执行&lt;code&gt;./configure&lt;/code&gt;时可能存在以下错误提示&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;configure: error: Unable to find the PAM library or the PAM header files
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;在此需要安装&lt;code&gt;libpam0g-dev&lt;/code&gt;和&lt;code&gt;libtool&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;apt-get -y install libpam0g-dev libtool
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;设置google-authenticator&#34;&gt;设置Google Authenticator&lt;/h3&gt;
&lt;p&gt;在手机端搜索安装&lt;strong&gt;Google Authenticator&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;google-authenticator
Do you want authentication tokens to be time-based (y/n) y
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后出现二维码，使用手机端&lt;strong&gt;Google Authenticator&lt;/strong&gt;扫码,接下来服务器端继续设置&lt;/p&gt;
&lt;p&gt;如果没有出现二维码，可以将提示的以**&lt;a href=&#34;https://www.google.com/chart?&#34;&gt;https://www.google.com/chart?&lt;/a&gt;**开头的连接复制到浏览器中，就可以看到二维码了&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Do you want me to update your &amp;quot;/root/.google_authenticator&amp;quot; file (y/n) y

Do you want to disallow multiple uses of the same authentication
token? This restricts you to one login about every 30s, but it increases
your chances to notice or even prevent man-in-the-middle attacks (y/n) Do you want to disallow multiple uses of the same authentication
token? This restricts you to one login about every 30s, but it increases
your chances to notice or even prevent man-in-the-middle attacks (y/n) y

By default, tokens are good for 30 seconds and in order to compensate for
possible time-skew between the client and the server, we allow an extra
token before and after the current time. If you experience problems with poor
time synchronization, you can increase the window from its default
size of 1:30min to about 4min. Do you want to do so (y/n) y

If the computer that you are logging into isn&#39;t hardened against brute-force
login attempts, you can enable rate-limiting for the authentication module.
By default, this limits attackers to no more than 3 login attempts every 30s.
Do you want to enable rate-limiting (y/n) y
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;接下来将&lt;strong&gt;Google Authenticator&lt;/strong&gt;验证配置到SSH登录中&lt;/p&gt;
&lt;p&gt;编辑&lt;code&gt;/etc/pam.d/sshd&lt;/code&gt;文件，添加下行保存&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;auth required pam_google_authenticator.so
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;编辑&lt;code&gt;/etc/ssh/sshd_config&lt;/code&gt;找到下行&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ChallengeResponseAuthentication no
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;更改为&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ChallengeResponseAuthentication yes
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;重启SSH服务&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;service ssh restart
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;再次登录的话输入用户名后就跟着提示两部验证码，然后才输入用户密码，如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;login as: root
Using keyboard-interactive authentication.
Verification code:
Using keyboard-interactive authentication.
Password:
Welcome to Ubuntu 14.04.2 LTS (GNU/Linux 2.6.32-042stab108.8 i686)

* Documentation:  https://help.ubuntu.com/
Last login: Thu Jan 28 15:04:20 2016 from 61.185.216.146
root@hkvps:~#
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;参考 &lt;a href=&#34;https://wzyboy.im/post/765.html&#34;&gt;https://wzyboy.im/post/765.html&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>SSL安全优化</title>
      <link>https://unixetc.com/post/ssl-security-optimization/</link>
      <pubDate>Mon, 21 Dec 2015 12:21:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/ssl-security-optimization/</guid>
      <description>&lt;p&gt;先贴出本站的SSL安全评级,测试地址为&lt;a href=&#34;https://www.ssllabs.com/ssltest/analyze.html?d=alair.cn&#34;&gt;https://www.ssllabs.com/ssltest/analyze.html?d=alair.cn&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/ssl-rank.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;以下是本站&lt;strong&gt;Nginx&lt;/strong&gt;配置中关于SSL部分&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;listen 443 ssl http2;

ssl_certificate /etc/letsencrypt/live/alair.cn/fullchain.pem;  
ssl_certificate_key /etc/letsencrypt/live/alair.cn/privkey.pem; 

ssl_session_timeout 60m;
ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
ssl_ciphers ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-RC4-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:RC4-SHA:!aNULL:!eNULL:!EXPORT:!DES:!3DES:!MD5:!DSS:!PKS;

ssl_prefer_server_ciphers on;
ssl_session_cache builtin:1000 shared:SSL:10m;
ssl_dhparam /etc/ssl/certs/dhparam.pem;
ssl_stapling on;
ssl_stapling_verify on;

add_header Strict-Transport-Security &amp;quot;max-age=63072000; includeSubdomains; preload&amp;quot;;
add_header X-Frame-Options &amp;quot;DENY&amp;quot;;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;说明：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;dhparam.pem&lt;/strong&gt;可以使用&lt;code&gt;openssl dhparam -out dhparam.pem 4096&lt;/code&gt;命令生成，这个命令会执行很长时间，也可以将字节数改为2048&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>使用SCP传输文件</title>
      <link>https://unixetc.com/post/transfer-files-using-scp/</link>
      <pubDate>Tue, 08 Dec 2015 21:38:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/transfer-files-using-scp/</guid>
      <description>&lt;p&gt;&lt;strong&gt;示例：用户名root 地址 2.33.153.67&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;下载文件&#34;&gt;下载文件&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;scp root@2.33.153.67:/root/test.mp4 /home/pi/
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;将服务器上的/root/test.mp4下载到本地/home/pi文件夹&lt;/p&gt;
&lt;h3 id=&#34;上传文件&#34;&gt;上传文件&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;scp /home/pi/ok.txt root@2.33.153.67:/root
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;将本地/home/pi/ok.txt上传至服务器/root文件夹&lt;/p&gt;
&lt;h3 id=&#34;下载文件夹&#34;&gt;下载文件夹&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;scp -r root@2.33.153.67:/root/ebooks /home/pi
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;将服务器上的/root/ebooks文件夹下载至本地/home/pi下&lt;/p&gt;
&lt;h3 id=&#34;上传文件夹&#34;&gt;上传文件夹&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;scp  -r /home/pi/music root@2.33.153.67:/media
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;将本地/home/pi/music文件夹上传至服务器/media下&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Gandi免费SSL证书使用方法</title>
      <link>https://unixetc.com/post/gandi-free-ssl-certificate-usage/</link>
      <pubDate>Thu, 24 Sep 2015 19:23:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/gandi-free-ssl-certificate-usage/</guid>
      <description>&lt;p&gt;首先澄清此文中的&lt;strong&gt;免费&lt;/strong&gt;不是真的免费，而是新注册或转移域名到Gandi，都可以获得标准版SSL证书一年的免费使用。&lt;/p&gt;
&lt;p&gt;符合以上条件的话，可以进行下面操作了！&lt;/p&gt;
&lt;p&gt;在Gandi上购买SSL证书，选择标准版，在结算的时候系统会自动判断是否免单，正常情况下会0元结单，完成后接着配置SSL证书。&lt;/p&gt;
&lt;p&gt;首先提交CSR，这里需要自己生产CSR。&lt;/p&gt;
&lt;p&gt;在此以&lt;strong&gt;3c.lc&lt;/strong&gt;域名为例，在Ubuntu中操作。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;openssl req -nodes -newkey rsa:2048 -sha1 -keyout 3clc.key -out 3clc.csr
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后根据提示填写以下内容：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Country Name (2 letter code) [AU]:                          #国家代码，中国为CN&lt;/p&gt;
&lt;p&gt;State or Province Name (full name) [Some-State]:            #省份&lt;/p&gt;
&lt;p&gt;Locality Name (eg, city) []:                                #城市&lt;/p&gt;
&lt;p&gt;Organization Name (eg, company) [Internet Widgits Pty Ltd]: #组织名&lt;/p&gt;
&lt;p&gt;Organizational Unit Name (eg, section) []:                  #部门名&lt;/p&gt;
&lt;p&gt;Common Name (e.g. server FQDN or YOUR name) []:3c.lc        #注意，这里需要填写你的域名。&lt;/p&gt;
&lt;p&gt;Email Address []:2b@3c.lc                                   #邮箱&lt;/p&gt;
&lt;p&gt;Please enter the following &amp;lsquo;extra&amp;rsquo; attributes&lt;/p&gt;
&lt;p&gt;to be sent with your certificate request&lt;/p&gt;
&lt;p&gt;A challenge password []:                                    #注意，为了后面方便配置nginx，建议密码置空。&lt;/p&gt;
&lt;p&gt;An optional company name []:                                #扩展组织名&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;完成后，就会生成&lt;strong&gt;3clc.key&lt;/strong&gt;和&lt;strong&gt;3clc.csr&lt;/strong&gt;两个文件。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cat 3clc.csr
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;将显示的文件内容粘贴到Gandi提交。&lt;/p&gt;
&lt;p&gt;接下来验证域名所有者权限，有三种方法，建议使用email验证，比较方便。&lt;/p&gt;
&lt;p&gt;下来是凭证验证，这个得等待系统完成,完成后即可获得SSL证书一枚。&lt;/p&gt;
&lt;p&gt;至于如何在&lt;strong&gt;Nginx&lt;/strong&gt;中使用SSL，可参考&lt;a href=&#34;https://unixetc.com/post/Nginx-configuration-SSL-certificate/&#34;&gt;Nginx配置SSL证书&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>树莓派开启root登录</title>
      <link>https://unixetc.com/post/raspberry-pi-allow-root-login/</link>
      <pubDate>Fri, 18 Sep 2015 21:28:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/raspberry-pi-allow-root-login/</guid>
      <description>&lt;p&gt;想要通过ssh登录树莓派进行管理，使用默认的&lt;strong&gt;pi&lt;/strong&gt;用户有时真的不便，对于linux老手来说，可以直接开启&lt;strong&gt;root&lt;/strong&gt;用户ssh登录，这就方便多了，方法如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo passwd root
sudo passwd --unlock root
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;设置SSH&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo vi /etc/ssh/sshd_config
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;将其中的&lt;code&gt;PermitRootLogin without-password&lt;/code&gt;改为&lt;code&gt;PermitRootLogin yes&lt;/code&gt;，然后重启ssh服务&lt;code&gt;sudo service ssh restart&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Over!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>VPS优化</title>
      <link>https://unixetc.com/post/optimization-vps/</link>
      <pubDate>Sat, 01 Feb 2014 12:31:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/optimization-vps/</guid>
      <description>&lt;h3 id=&#34;pdksh替代bash&#34;&gt;pdksh替代bash&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;$sudo apt-get install pdksh
$sudo vi /etc/shells
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;添加/bin/pdksh到/etc/shells文件&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$chsh -s /bin/pdksh
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;重新登录即可。&lt;/p&gt;
&lt;h3 id=&#34;修改ssh端口&#34;&gt;修改SSH端口&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;#vi /etc/ssh/sshd_config    
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;将Port 22中的22改为自定义数字即可&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# /etc/init.d/ssh restart
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;dropbear替代openssh&#34;&gt;dropbear替代openssh&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;$sudo apt-get install dropbear
$sudo /etc/init.d/ssh stop
$sudo vi /etc/default/dropbear
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;修改NO_START=&lt;strong&gt;0&lt;/strong&gt;,修改DROPBEAR_PORT为自定义端口号&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$sudo /etc/init.d/dropbear start
$sudo apt-get remove openssh-server
$sudo apt-get autoremove
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;关闭多余的tty&#34;&gt;关闭多余的TTY&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Ubuntu 12.04 server&lt;/strong&gt;如下操作&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#cd /etc/init/
#mv tty2.conf tty2.conf.bak
#mv tty3.conf tty2.conf.bak
#mv tty4.conf tty2.conf.bak
#mv tty5.conf tty2.conf.bak
#mv tty6.conf tty2.conf.bak
#reboot
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Debian 7&lt;/strong&gt;如下操作&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#vi /etc/inittab
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;找到如下行&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1:2345:respawn:/sbin/getty 38400 tty1
2:23:respawn:/sbin/getty 38400 tty2
3:23:respawn:/sbin/getty 38400 tty3
4:23:respawn:/sbin/getty 38400 tty4
5:23:respawn:/sbin/getty 38400 tty5
6:23:respawn:/sbin/getty 38400 tty6
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;将不需要的行注释掉(#)即可，重启完成。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>使用SSH密匙登录Github</title>
      <link>https://unixetc.com/post/use-the-ssh-key-to-login-github/</link>
      <pubDate>Tue, 03 Sep 2013 19:23:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/use-the-ssh-key-to-login-github/</guid>
      <description>&lt;h3 id=&#34;生成ssh密匙文件&#34;&gt;生成ssh密匙文件&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;ssh-keygen -t rsa -C &amp;quot;user@domain.com&amp;quot;   
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;接下来会提示输入密码，推荐自定义密码，当然也可以置空&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Enter passphrase(empty for no passphrase):
Enter same passphrase again:
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;完成后会在用户目录下的.ssh文件夹中新建&lt;!-- raw HTML omitted --&gt;id_rsa&lt;!-- raw HTML omitted --&gt;与&lt;!-- raw HTML omitted --&gt;is_rsa.pub&lt;!-- raw HTML omitted --&gt;两个文件。&lt;/p&gt;
&lt;h3 id=&#34;添加ssh密匙到github用户&#34;&gt;添加ssh密匙到github用户&lt;/h3&gt;
&lt;p&gt;登录至github.com,点击右上角的&lt;strong&gt;Account Settings&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在左侧选择&lt;strong&gt;SSH Keys&lt;/strong&gt;菜单，然后在右侧点击&lt;strong&gt;Add SSH Key&lt;/strong&gt;按钮&lt;/p&gt;
&lt;p&gt;将上一步生成的&lt;strong&gt;id_rsa.pub&lt;/strong&gt;文件内容复制进去保存。&lt;/p&gt;
&lt;h3 id=&#34;本地连接至githubcom&#34;&gt;本地连接至github.com&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;ssh -T git@github.com
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;如果前面设置了passphrase，那么就按照提示输入passphrase。如果置空的话，就直接点击&lt;strong&gt;回车&lt;/strong&gt;。成功后会有如下提示：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Hi wrchiu! You`ve successfully authenticated, but GitHub does note provide shell access.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;参考以上设置完成后，以后git push时就不需要每次输入密码了！&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Nokia N900 and SSH</title>
      <link>https://unixetc.com/post/nokia-n900-and-ssh/</link>
      <pubDate>Mon, 02 Apr 2012 14:12:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/nokia-n900-and-ssh/</guid>
      <description>&lt;p&gt;N900采用的maemo是基于debian的linux系统，通过自带的application manager管理软件时，操作体验还有待改进，所以这里推荐通过ssh连接，使用cli来进行相应操作。
需要在手机端安装OpenSSH来开启SSH服务，在application manager的system目录下，找到&lt;strong&gt;openssh Client and Server&lt;/strong&gt;安装，当然如果你不需要在手机端进行SSH登陆的话，那可以只安装server即可。
安装时会提示输入密码，这个就是以后连接手机SSH的服务密码。
安装完成后SSH server会默认启动，现在你可以通过wifi连接局域网，然后需要知道自己当前的IP（可以通过Tp-link后台查看，或者手机端安装&lt;strong&gt;Personal IP Address&lt;/strong&gt;开显示)，再推荐安装&lt;strong&gt;SSH Status and Swither&lt;/strong&gt;，可以在手机的status显示SSH状态，并管理SSH server启动/停止。 
&lt;img src=&#34;https://unixetc.com/imgs/698163850.webp&#34; alt=&#34;ssh status&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后推荐使用Putty进行链接，在CLI模式下管理软件，可以在&lt;a href=&#34;http://maemo.org/&#34;&gt;http://maemo.org/&lt;/a&gt;上查看软件目录以及简介，通过&lt;code&gt;apt-get install&lt;/code&gt;命令来安装，以下为一些apt-get使用简介&lt;/p&gt;
&lt;p&gt;使用方法: 
apt-get [选项] 命令
apt-get [选项] install|remove pkg1 [pkg2 &amp;hellip;]
apt-get [选项] source pkg1 [pkg2 &amp;hellip;]&lt;/p&gt;
&lt;p&gt;命令:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;update - 更新软件列表
upgrade - 升级软件
install - 安装软件(pkg 是软件名)
remove - 删除软件
autoremove - 自动删除一些无效的软件
purge - 删除软件并清理配置
source - 下载软件源码
build-dep - 配置软件源码的build-dependencies
dist-upgrade - 升级系统
clean - 清除建立的软件包列表
autoclean - 同上
check - 校验软件包是否有异常
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;选项:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;-h  输出help信息
-d  仅下载软件包
-y  安装是对所有的提示选择Yes
-u  显示已经升级的软件列表
-b  下载源码后开始构建
-V  显示详细的版本号
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;通过本地包安装软件，命令为&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;dpkg -i pkg.deb
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>删除不需要的iPhone语言文件</title>
      <link>https://unixetc.com/post/remove-unnecessary-iphone-language-file/</link>
      <pubDate>Mon, 02 Apr 2012 12:34:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/remove-unnecessary-iphone-language-file/</guid>
      <description>&lt;p&gt;首先，需要iPhone已经越狱，并且安装了OpenSSH&lt;/p&gt;
&lt;p&gt;脚本文件下载：&lt;a href=&#34;http://cdn.lyq.wiki/res/langpack2.2.zip&#34;&gt;http://cdn.lyq.wiki/res/langpack2.2.zip&lt;/a&gt;，解压出脚本文件langpack2.2.sh&lt;/p&gt;
&lt;p&gt;通过itools或者其他管理软件，将脚本文件复制到/var/mobile目录&lt;/p&gt;
&lt;p&gt;通过&lt;a href=&#34;https://unixetc.com/post/iphone-and-ssh/&#34;&gt;ssh连接手机&lt;/a&gt;，进入/var/mobile目录开始操作 
&lt;strong&gt;注意：此时请关闭手机的定时锁屏功能，以防意外终止操作而失败！！&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#chmod 777 langpack2.2.sh   //为脚本添加执行权限
#./langpack2.2.sh  //运行脚本
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;开始搜索语言包文件，等待。。。。。&lt;/p&gt;
&lt;p&gt;搜索到所有语言包后，开始提示是否删除。&lt;/p&gt;
&lt;p&gt;根据提示，输入y或者n来确定所要删除的语言包，根据需要筛选。&lt;/p&gt;
&lt;p&gt;所有选择完成后，会提示所有将要删除的语言包，再次确认删除与否（y或n），开始删除过程。。。&lt;/p&gt;
&lt;p&gt;删除完成后，会提示所删除的语言包数量，并且提示是否删除该脚本文件&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注意：进行完以上操作后，建议马上修改SSH密码，以防止感染蠕虫病毒！！&lt;/strong&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>LNMP使用实例</title>
      <link>https://unixetc.com/post/lnmp-usages/</link>
      <pubDate>Fri, 23 Mar 2012 12:32:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/lnmp-usages/</guid>
      <description>&lt;h3 id=&#34;安装lnmp&#34;&gt;安装LNMP&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;更新系统&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#yum check-update
#yum update
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;安装Screen&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#yum install screen
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;开始安装Lnmp&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#screen -S lnmp
#wget -c http://soft.vpser.net/lnmp/lnmp0.8.tar.gz //最新版请查阅lnmp官网
#tar zxvf lnmp0.8.tar.gz
#./lnmp0.8/centos.sh | tee lnmp.log //输出log文件，以备出错时查阅
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;接下来按照提示设定域名和MysQL密码，程序会自动下载相关程序，而后编译安装&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;安装PureFTP&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#./lnmp0.8/pureftp.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;按提示输入MySQL和Ftp管理员密码，安装完成后可以通过&lt;code&gt;http://vpsip/ftp/&lt;/code&gt;来登录管理ftp帐号&lt;/p&gt;
&lt;h3 id=&#34;使用lnmp&#34;&gt;使用Lnmp&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;添加虚拟主机&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#/root/vhost.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;按照提示填入域名、目录、rewrite规则文件，如下所示：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;root@buyvm256:~#/root/vhost.sh
=========================================================================
Add Virtual Host for LNMP V0.9  ,  Written by Licess 
=========================================================================
LNMP is a tool to auto-compile &amp;amp; install Nginx+MySQL+PHP on Linux 
This script is a tool to add virtual host for nginx 
For more information please visit http://www.lnmp.org/

=========================================================================
Please input domain:  //添加域名
(Default domain: www.lnmp.org):xxx.com
===========================
domain=xxx.com
===========================
Do you want to add more domain name? (y/n)  //添加更多域名
y
Type domainname,example(bbs.vpser.net forums.vpser.net luntan.vpser.net):
www.xxx.com
===========================
domain list=www.xxx.com
===========================
Please input the directory for the domain:xxx.com :  //网站目录
(Default directory: /home/wwwroot/xxx.com):
===========================
Virtual Host Directory=/home/wwwroot/xxx.com
===========================
===========================
Allow Rewrite rule? (y/n)  //重写规则
===========================
y
Please input the rewrite of programme :
wordpress,discuz,typecho,sablog,dabr rewrite was exist.
(Default rewrite: other):wordpress  //选择重写规则
===========================
You choose rewrite=wordpress
===========================
===========================
Allow access_log? (y/n)  //是否记录log
===========================
n

Press any key to start create virtul host...
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后，登录&lt;code&gt;http://vpsip/ftp/&lt;/code&gt;添加ftp帐号，&lt;code&gt;http://vpsip/phpmyadmin/&lt;/code&gt;编辑数据库&lt;/p&gt;
&lt;p&gt;**注意：**开通ftp时，记着添加到www用户组&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;修改虚拟主机配置&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;创建好的虚拟主机，配置文件目录为/wp-content/local/nginx/conf/vhost/，文件名为domain.conf，如下所示：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;aquan@buyvm256:~$ cat /usr/local/nginx/conf/vhost/xxx.com.conf 

server
        {
                listen       80;   //端口
                server_name xxx.com www.xxx.com;   //域名
                index index.html index.htm index.php default.html default.htm default.php;  //索引文件
                root  /home/wwwroot/xxx.com;   //目录

                include wordpress.conf;
                location ~ .*\.(php|php5)?$
                        {
                                try_files $uri =404;
                                fastcgi_pass  unix:/tmp/php-cgi.sock;
                                fastcgi_index index.php;
                                include fcgi.conf;
                        }

                location ~ .*\.(gif|jpg|jpeg|png|bmp|swf)$
                        {
                                expires      30d;
                        }

                location ~ .*\.(js|css)?$
                        {
                                expires      12h;
                        }

                access_log off;
        }
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;主机配置文件修改后，使用如下命令重新加载配置使之生效&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#/etc/init.d/nginx reload
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;删除虚拟主机&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;删除/wp-content/local/nginx/conf/vhost/下对应配置文件(.conf)，再删除/home/wwwroot/下的本地目录&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;一些其他问题&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;设置虚拟主机目录权限&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#chown -R www /home/wwwroot/vps.aotee.com
#chmod -R 777 /home/wwwroot/vps.aotee.com&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>iPhone and SSH</title>
      <link>https://unixetc.com/post/iphone-and-ssh/</link>
      <pubDate>Sun, 18 Mar 2012 12:13:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/iphone-and-ssh/</guid>
      <description>&lt;h3 id=&#34;安装openssh&#34;&gt;安装OpenSSH&lt;/h3&gt;
&lt;p&gt;首先iPhone已经越狱并且安装了&lt;strong&gt;Cydia&lt;/strong&gt;，具体教程可以&lt;a href=&#34;http://www.google.com&#34;&gt;Google&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;打开Cydia，管理-软件源，点击右上角编辑，然后点击左上角添加，增加178的软件源&lt;code&gt;http://apt.178.com&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;添加后Cydia会自动更新软件包，然后在搜索里使用openssh为关键词进行搜索安装。&lt;/p&gt;
&lt;p&gt;默认有root和mobile两个用户名，密码均为&lt;strong&gt;alpine&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;手机端ssh管理&#34;&gt;手机端SSH管理&lt;/h3&gt;
&lt;p&gt;在Cydia上搜索安装&lt;strong&gt;iSSH&lt;/strong&gt;安装&lt;/p&gt;
&lt;h4 id=&#34;修改ssh密码&#34;&gt;修改SSH密码&lt;/h4&gt;
&lt;p&gt;建议修改原始密码&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#passwd root
#passwd mobile
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;pc通过ssh连接iphone&#34;&gt;PC通过SSH连接iPhone&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;iPhone接入wifi网络，在电脑端使用Putty或者WinSCP来链接iPhone&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;USB连接PC，下载iTools，打开iTools点击手机管理栏的最底下&lt;strong&gt;高级功能&lt;/strong&gt;，打开&lt;strong&gt;ssh通道&lt;/strong&gt;。下来PC端可以通过ip:127.0.0.1来连接iPhone了。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
  </channel>
</rss>