<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Debian on UNIXETC</title>
    
    
    
    <link>/tags/debian/</link>
    <description>Recent content in Debian on UNIXETC</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Mon, 02 Mar 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/debian/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>斐讯N1系统信息和UNIXBENCH跑分</title>
      <link>/post/phicomm-n1-unixbench-score-and-system-information/</link>
      <pubDate>Mon, 02 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/phicomm-n1-unixbench-score-and-system-information/</guid>
      <description>
        
          
          
          
        
        
        
          系统信息 alair@aml:~ $ inxi -F System: Host: aml Kernel: 5.5.0-rc6-aml-s9xxx aarch64 bits: 32 Console: tty 0 Distro: Ubuntu 18.04.4 LTS Machine: No /sys/class/dmi; using dmidecode: dmidecode is not installed. CPU: Quad core ARMv8 rev 4 (v8l) (-MCP-) (ARM) clock speeds: max: 1512 MHz 1: 1512 MHz 2: 1512 MHz 3: 1512 MHz 4: 1512 MHz Graphics: Card: Failed to Detect Video Card! Display Server: N/A driver: N/A tty size: 254x72 Advanced Data: N/A out of X Audio: Card AMLGX driver: AMLGX Sound: ALSA v: k5.
          
        
        </description>
    </item>
    
    <item>
      <title>YandexDisk命令行客户端</title>
      <link>/post/yandex-disk-console-client-for-linux/</link>
      <pubDate>Sat, 29 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/yandex-disk-console-client-for-linux/</guid>
      <description>
        
          
          
          
        
        
        
          Linux的Yandex.Disk控制台客户端使您可以在Yandex.Disk上管理文件，而无需使用窗口界面或支持WebDAV的程序。
与WebDAV连接相比，使用控制台客户端的优势：
 Low system resource requirements. Faster file reading and writing speeds. Faster syncing with the Yandex.Disk server. Manage files offline.  控制台客户端可以安装在以下操作系统上：
 Ubuntu Linux 8.04 及以上版本 Debian 5 及以上版本 Fedora 9 及以上版本 Red Hat Enterprise Linux 6 及以上版本 CentOS 6 及以上版本  安装客户端 要自动安装客户端，请使用命令进行快速软件包安装。
.deb软件包 安装示例
echo &amp;quot;deb http://repo.yandex.ru/yandex-disk/deb/ stable main&amp;quot; | sudo tee -a /etc/apt/sources.list.d/yandex-disk.list &amp;gt; /dev/null wget http://repo.yandex.ru/yandex-disk/YANDEX-DISK-KEY.GPG -O- | sudo apt-key add - sudo apt-get update sudo apt-get install -y yandex-disk 要手动安装客户端，请从下面的相应链接下载相应版本的软件包。
          
        
        </description>
    </item>
    
    <item>
      <title>Armbian更改软件源</title>
      <link>/post/armbian-change-software-source/</link>
      <pubDate>Tue, 05 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/armbian-change-software-source/</guid>
      <description>
        
          
          
          
        
        
        
          上一篇文章介绍了如何在斐迅N1上安装Armbian，现在介绍如何更改软件源为国内镜像。
编辑/etc/apt/sources.list替换为以下内容：
deb https://mirrors.tuna.tsinghua.edu.cn/debian/ buster main contrib non-free # deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ buster main contrib non-free deb https://mirrors.tuna.tsinghua.edu.cn/debian/ buster-updates main contrib non-free # deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ buster-updates main contrib non-free deb https://mirrors.tuna.tsinghua.edu.cn/debian/ buster-backports main contrib non-free # deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ buster-backports main contrib non-free deb https://mirrors.tuna.tsinghua.edu.cn/debian-security buster/updates main contrib non-free # deb-src https://mirrors.tuna.tsinghua.edu.cn/debian-security buster/updates main contrib non-free deb http://ftp.debian.org/debian jessie-backports main 接着编辑/etc/apt/sources.list.d/armbian.list ，替换为以下内容：
deb http://mirrors.tuna.tsinghua.edu.cn/armbian/ buster main buster-utils buster-desktop 保存后，刷新缓存更新系统：
sudo apt update sudo apt upgrade -y 
          
        
        </description>
    </item>
    
    <item>
      <title>斐讯N1安装Armbian</title>
      <link>/post/phicomm-n1-install-armbian/</link>
      <pubDate>Sun, 03 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/phicomm-n1-install-armbian/</guid>
      <description>
        
          
          
          
        
        
        
          最近入手斐讯N1一枚，买的是白色未拆封，到手版本为V2.19_0307_NS，刚好省了降级的麻烦，以下为斐讯N1安装armbian操作过程。
开启adb调试模式 将N1通过HDMI连接显示器，将鼠标插到N1的USB口上，开机后用鼠标点击系统版本:V2.19_0307_NS区域，多次点击后会出现提示&amp;quot;开启adb调试模式&amp;rdquo;，即可。
从此下载minimal_adb_fastboot，下载后安装。
准备刷机U盘 准备一个不小区8G的U盘，下载镜像写入工具balenaEtcher，下载后安装。
下载Armbian镜像，在此以Armbian_5.98_Aml-g12_Debian_buster_dev_5.4.0-rc4_20191025.img.xz为例，镜像为debian最新版，不带桌面系统。如果需要其他的可以从此处自行下载。
Armbian_5.98_Aml-g12_Debian_buster_dev_5.4.0-rc4_20191025.img.xz
将下载后的镜像文件用balenaEtcher写入U盘，写入完成后先别拔掉U盘，进入到BOOT分区，找到uEnv.ini文件，将dtb_name行改为如下内容：
 dtb_name=/dtb/amlogic/meson-gxl-s905d-phicomm-n1.dtb
 然后退出U盘备用。
如果你的BOOT分区下/dtd/amlogic/目录中没有meson-gxl-s905d-phicomm-n1.dtb文件，那么可以点击meson-gxl-s905d-phicomm-n1.dtb下载放入相应目录即可。
从U盘引导Armbian 将制作好的系统U盘插到靠近HDMI一侧的U口，另外一个U口插入双公头的刷机线连接电脑，将N1通过HDMI连接显示器，并且插好网线然后开机。
开机后可以从显示器上看到盒子的IP地址，电脑上运行Minimal ADB and Fastboot，然后输入adb connect 192.168.1.54命令连接盒子，连接成功后会有如下提示：
 connected to 192.168.1.54:5555
 然后输入adb shell reboot update开始从U盘引导Armbian系统，盒子重启后成功引导armbian，此时可以将usb刷机线拔掉，插入一个外接键盘，开始后面操作。
Armbian系统默认账号为root，密码为1234，按照提示输入账号信息进行登录，登录后会有更改默认密码提示，按照提示更改默认密码。
接下来会有新建账号提示:
Creating a new user account. Press &amp;lt;Ctrl-C&amp;gt; to abort Please provide a username (eg. your forename): 可以按照该提示新建账号，或者按Ctrl+c终止，继续用root账号登录。
将Armbian安装到N1中 以上只是从U盘成功引导登录Armbian，接下来我们将Armbian安装到N1内置存储(eMMC)，即可拔掉U盘了。
如果是通过root登录的话，那么直接运行root目录下install.sh即可安装，如下：
 root@aml:~# ./install. sh Start script create MBR and filesystem /dev/mmcblk1 Start backup u-boot default 4＋0 records in 4＋0 records out 4194304 bytes（4.
          
        
        </description>
    </item>
    
    <item>
      <title>Debian10中sudo配置</title>
      <link>/post/sudo-configuration-in-debian10/</link>
      <pubDate>Wed, 10 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/sudo-configuration-in-debian10/</guid>
      <description>
        
          
          
          
        
        
        
          Debian10中/etc/sudoers中提示了需要通过visudo来编辑该文件，如下：
 This file MUST be edited with the &amp;lsquo;visudo&amp;rsquo; command as root.
 但奇葩的是系统中没有visudo命令，apt搜索也搜不到，-_-!
因此只能通过以下方法来编辑：
#echo &amp;quot;alair ALL=(ALL:ALL) ALL&amp;quot; &amp;gt;&amp;gt; /etc/sudoers  保存后用户alair就可以使用sudo命令来进行root权限操作了。
          
        
        </description>
    </item>
    
    <item>
      <title>python-pip安装实例</title>
      <link>/post/python-pip-installation/</link>
      <pubDate>Thu, 20 Apr 2017 14:28:00 +0000</pubDate>
      
      <guid>/post/python-pip-installation/</guid>
      <description>
        
          
          
          
        
        
        
          Python-pip 是一个现代的，通用的 Python包管理工具。提供了对 Python 包的查找、下载、安装、卸载的功能。
以下为多个操作系统平台下Python-pip安装方法
通用方法 通过get-pip.py文件来安装，建议Windows用户使用，前提是你必须首先安装Python。
版本要求Python 2 &amp;gt;=2.7.9 或Python 3 &amp;gt;=3.4，可从官网下载http://www.python.org/
然后下载get-pip.py
下载地址 https://bootstrap.pypa.io/get-pip.py
通过python get-pip.py命令来进行安装。
Linux下通过软件管理工具来安装Python-pip Fedora21   Python2
sudo yum upgrade python-setuptools sudo yum install python-pip python-wheel   Python3
sudo yum install python3 python3-wheel   Fedora22   Python2
sudo dnf upgrade python-setuptools sudo dnf install python-pip python-wheel   Python3
sudo dnf install python3 python3-wheel   CentOS/RHEL 首先得启用EPEL repository,可参考此文
  EPEL 6/EPEL 7
          
        
        </description>
    </item>
    
    <item>
      <title>Linux开启TCP BBR算法</title>
      <link>/post/linux_enable_tcp_bbr/</link>
      <pubDate>Mon, 17 Apr 2017 14:28:00 +0000</pubDate>
      
      <guid>/post/linux_enable_tcp_bbr/</guid>
      <description>
        
          
          
          
        
        
        
          Linux Kernel 4.9+已经支持tcp_bbr拥塞控制算法，因此建议将内核升级为最新版。
将内核升级到最新版 Debian/Ubuntu升级最新内核 最新内核下载地址 http://kernel.ubuntu.com/~kernel-ppa/mainline
下载安装新内核
wget http://kernel.ubuntu.com/~kernel-ppa/mainline/v4.10.10/linux-image-4.10.10-041010-generic_4.10.10-041010.201704120813_amd64.deb` dpkg -i linux-image-4.10.10-041010-generic_4.10.10-041010.201704120813_amd64.deb 更新GRUB并且重启
update-grub reboot Centos 7 升级最新内核 内核下载地址 http://elrepo.org/linux/kernel/el7/x86_64/RPMS/
安装最新内核
rpm --import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org rpm -Uvh http://www.elrepo.org/elrepo-release-7.0-2.el7.elrepo.noarch.rpm yum --enablerepo=elrepo-kernel install kernel-ml -y 检查内核是否安装完成
rpm -qa | grep kernel
更新GRUB并重启主机
egrep ^menuentry /etc/grub2.cfg | cut -f 2 -d \&amp;#39; grub2-set-default 0 #default 0表示第一个内核设置为默认运行, 选择最新内核就对了 reboot http://elrepo.org/linux/kernel/下e15、e16分别对应Centos5、Centos6，可参考以上安装
开启BBR 重启后uname -r 检查内核版本是不是4.9+
然后执行以下操作
echo &amp;#34;net.core.default_qdisc=fq&amp;#34; &amp;gt;&amp;gt; /etc/sysctl.conf echo &amp;#34;net.ipv4.tcp_congestion_control=bbr&amp;#34; &amp;gt;&amp;gt; /etc/sysctl.conf sysctl -p sysctl net.
          
        
        </description>
    </item>
    
    <item>
      <title>Debian下安装Zbook14无线网卡驱动</title>
      <link>/post/zbook14-install-wireless-driver-under-debian/</link>
      <pubDate>Wed, 17 Aug 2016 08:17:00 +0000</pubDate>
      
      <guid>/post/zbook14-install-wireless-driver-under-debian/</guid>
      <description>
        
          
          
          
        
        
        
          首先查看无线网卡型号
alair@zb14:~$ lspci|grep less 02:00.0 Network controller: Intel Corporation Wireless 7260 (rev 73)  搜索Inter相关固件 ​ alair@zb14:~$ apt-cache search iwlwifi firmware-iwlwifi - Binary firmware for Intel Wireless cards
安装之 ​ alair@zb14:~$ apt-get install firmware-iwlwifi
重启完事儿！
          
        
        </description>
    </item>
    
    <item>
      <title>树莓派使用DietPi</title>
      <link>/post/raspberry-pi-use-dietpi/</link>
      <pubDate>Tue, 04 Aug 2015 18:23:00 +0000</pubDate>
      
      <guid>/post/raspberry-pi-use-dietpi/</guid>
      <description>
        
          
          
          
        
        
        
          下载安装DietPi DietPi项目主页 http://dietpi.com/
DietPi下载地址 http://fuzon.co.uk/downloads/DietPi.7z
这个压缩包91MB，解压后的img文件522MB,比官方的小多了。
然后将镜像写入到SD卡中，linux下使用dd
dd if=DietPi_v74.img of=/dev/sdc bs=2M  Windows下使用Win32 Disk Imager，戳这里
写入完成后将SD卡插入树莓派，加电启动。
预设置Wifi链接 首次使用时，可以通过编辑dietpi.txt来进行wifi预设置。
将TF卡插入电脑读卡器，打开对应的磁盘，找到dietpi.txt文件，打开。
找到Wifi_Enabled=0，将其设置为1
然后找到Wifi_SSID和Wifi_KEY分别设置wifi节点名和密码，保存即可。
配置DietPi DietPi默认用户名密码为root dietpi，第一次启动DietPi提示检测升级，按提示操作。
不过由于天朝网路问题，可能升级比较缓慢，建议Ctrl+c终止升级，修改sources.list为朝内镜像。
DietPi默认没有vi,使用nano进行编辑，添加Aliyun源。
deb http://mirrors.aliyun.com/raspbian/raspbian/ wheezy main non-free contrib deb-src http://mirrors.aliyun.com/raspbian/raspbian/ wheezy main non-free contrib  更新软件
apt-get update&amp;amp;&amp;amp;apt-get upgrade -y  然后运行dietpi-config进行配置。
DietPi - Config
 ┌────┤ ---------- DietPi-Config ---------- ├─────┐ │ Hardware : Raspberry Pi 1 (512MB) │ │ │ │ 1 Display Options │ │ 2 Audio Options │ │ 3 Performance Options │ │ 4 Advanced Options │ │ 5 Language/Regional Options │ │ 6 Security Options │ │ 7 Networking Options │ │ 8 AutoBoot Options │ │ 9 Tools │ │ │ │ │ │ &amp;lt;Ok&amp;gt; &amp;lt;Exit&amp;gt; │ │ │ └────────────────────────────────────────────────┘  推荐配置：
          
        
        </description>
    </item>
    
    <item>
      <title>开始使用树莓派</title>
      <link>/post/starting-use-raspberry-pi/</link>
      <pubDate>Fri, 28 Feb 2014 12:28:00 +0000</pubDate>
      
      <guid>/post/starting-use-raspberry-pi/</guid>
      <description>
        
          
          
          
        
        
        
          安装系统 从官网下载系统镜像，推荐Raspbian
http://downloads.raspberrypi.org/raspbian_latest
将下载后的zip文件解压，得到2014-01-07-wheezy-raspbian.img文件。
准备一张SD卡，最好容量大于4GB，Class10
将镜像写入SD卡
 Linux下推荐使用dd名来写入镜像  使用fdisk -l检查分区信息，比如sd卡设备为**/dev/sdb**，使用以下命令写入：
#dd if=2014-01-07-wheezy-raspbian.img of=/dev/sdb bs=1M   Windows下推荐使用Win32DiskImager写入镜像  Win32DiskImager下载地址：http://sourceforge.net/projects/win32diskimager/
下载后打开软件，选择好镜像文件与USB设备，然后点击Write写入。
开机进入系统 将已写入系统的SD卡插入Raspberry Pi，通过固网链接路由器，然后使用USB供电启动。
正常启动后，板载的ACT，PWR、FDX、LNK、100五个指示灯均点亮。
通过SSH连接Raspberry Pi
查看Raspberry Pi IP地址
#nmap -sP 192.168.1/24  检查出MAC后标注(Raspberry Pi Foundation)的即为Raspberry Pi主机。
然后通过SSH来链接主机
#ssh 192.168.1.127  用户名为pi，默认密码为raspberry
Widnows下推荐使用Putty
设置Raspberry 运行设置工具sudo raspi-config
 选择Expand Filesystem扩展文件系统 Change User Passwd 修改默认用户pi的密码，当然也可以在系统中使用passwd命令来更改。 Advanced Options-&amp;gt;Hostname 修改主机名 Overclock 超频，建议900Mhz  
          
        
        </description>
    </item>
    
    <item>
      <title>Debian下安装Jekyll</title>
      <link>/post/install-jekyll-on-debian/</link>
      <pubDate>Fri, 06 Sep 2013 19:16:00 +0000</pubDate>
      
      <guid>/post/install-jekyll-on-debian/</guid>
      <description>
        
          
          
          
        
        
        
          安装Rvm $sudo aptitude install curl $curl -L get.rvm.io | bash -s stable  加载Rvm
$source ~/.rvm/scripts/rvm  检查安装必备组件
$rvm requirements  安装 Ruby 1.9.3 $rvm install 1.9.3 $ruby -v $gem -v  更改Gem软件源
$gem sources -a http://ruby.taobao.org/ $gem sources -r http://rubygems.org/ $gem sources -l  安装Jekyll $gem install jekyll $jekyll -v  打完收工!
          
        
        </description>
    </item>
    
    <item>
      <title>Debian使用apt-spy选择最佳源</title>
      <link>/post/debian-use-apt-spy-to-select-the-best-source/</link>
      <pubDate>Thu, 09 May 2013 05:09:00 +0000</pubDate>
      
      <guid>/post/debian-use-apt-spy-to-select-the-best-source/</guid>
      <description>
        
          
          
          
        
        
        
          安装apt-spy
#apt-get install apt-spy  使用apt-spy选择最佳源
#apt-spy update #apt-spy -d stable -a asia -t 3  结果保存在/etc/apt/sources.list.d/apt-spy.list，可手动替换到/etc/apt/sources.list
apt-spy选项:
 -d 系统版本，可选stable,testing,unstable -a 区域,如asia,europe等，可用项可cat /etc/apt-spy.conf -t 超时阀值(s)，可筛掉长时间不响应的地址  
          
        
        </description>
    </item>
    
  </channel>
</rss>