<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Markdown on UNIXETC</title>
    <link>https://unixetc.com/tags/markdown/</link>
    <description>UNIXETC (Markdown)</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Mon, 20 Jul 2015 17:20:00 +0000</lastBuildDate>
    
    <atom:link href="https://unixetc.com/tags/markdown/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>将博客从Typcho转移至Gor</title>
      <link>https://unixetc.com/post/typecho-converted-to-gor/</link>
      <pubDate>Mon, 20 Jul 2015 17:20:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/typecho-converted-to-gor/</guid>
      <description>&lt;h3 id=&#34;缘由&#34;&gt;缘由&lt;/h3&gt;
&lt;p&gt;VPS快到期了，不想继续维护，太累，并且香港VPS价格也不菲。&lt;/p&gt;
&lt;p&gt;于是打算选择一个静态博客平台，原来用过的不少:jekyll,hexo,gor,pelican，最后决定Gor&lt;/p&gt;
&lt;p&gt;选择Gor的理由有两点&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;安装方便&lt;/li&gt;
&lt;li&gt;执行效率高&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;安装gor&#34;&gt;安装Gor&lt;/h3&gt;
&lt;p&gt;参考Gor主页&lt;a href=&#34;https://github.com/wendal/gor&#34;&gt;https://github.com/wendal/gor&lt;/a&gt;安装Gor&lt;/p&gt;
&lt;h3 id=&#34;将typecho文章导出为markdown文件md&#34;&gt;将Typecho文章导出为Markdown文件(.md)&lt;/h3&gt;
&lt;p&gt;Github上有现成的工具&lt;strong&gt;typecho-exporter&lt;/strong&gt;，主页为&lt;a href=&#34;https://github.com/aneasystone/typecho-exporter&#34;&gt;https://github.com/aneasystone/typecho-exporter&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这个工具可以将所有的文章导出为Markdown文件，但是以文章标题为文件名，不利于后期处理，建议使用slug为文件名。&lt;/p&gt;
&lt;p&gt;编辑下载的&lt;code&gt;main.py&lt;/code&gt;，将75行的&lt;code&gt;p.title = r[1]&lt;/code&gt;替换为`p.title = r[2]&#39;，如下:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;results = cur.fetchall()
for r in results:
    p = Post()
    p.id = r[0]
    p.title = r[2]
    p.content = r[5]
    posts.append(p)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;原来的&lt;code&gt;r[1]&lt;/code&gt;对应&lt;code&gt;typecho_contents&lt;/code&gt;SQL表中的&lt;code&gt;title&lt;/code&gt;列，我的&lt;code&gt;r[2]&lt;/code&gt;对应&lt;code&gt;slug&lt;/code&gt;列，可以根据实际情况更改。&lt;/p&gt;
&lt;p&gt;编辑&lt;strong&gt;typecho-exporter&lt;/strong&gt;的&lt;code&gt;config.ini&lt;/code&gt;文件，设置数据库访问方式。&lt;/p&gt;
&lt;p&gt;运行&lt;code&gt;main.py&lt;/code&gt;，完成后会在&lt;strong&gt;typecho-exporter&lt;/strong&gt;目录下生成&lt;strong&gt;files&lt;/strong&gt;文件夹，里面就是导出的Markdown文件。&lt;/p&gt;
&lt;h3 id=&#34;后期整理&#34;&gt;后期整理&lt;/h3&gt;
&lt;p&gt;导出后的Markdown没有Gor需要的文件头格式，需要手动整理&lt;/p&gt;
&lt;p&gt;这里推荐使用Notepad++批量替换&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/insert_gor_markdown_header.png&#34; alt=&#34;插入Hexo的Markdown头格式&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;查找目标:&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;替换为&amp;mdash;\n
title: title\ndate: 2015-07-20\ndescription: \npermalink: \ncategories: \ntags: \n&amp;mdash;\n&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;记得将查找模式重的扩展打开。&lt;/p&gt;
&lt;p&gt;经过以上替换，就大概有了个Gor的Markdown头格式，后面的手动工作就少了多了。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Vim Markdown语法高亮</title>
      <link>https://unixetc.com/post/vim-markdown-syntax-highlighting/</link>
      <pubDate>Tue, 17 Sep 2013 17:17:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/vim-markdown-syntax-highlighting/</guid>
      <description>&lt;p&gt;&lt;strong&gt;安装插件&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;插件下载地址:&lt;a href=&#34;https://github.com/plasticboy/vim-markdown/archive/master.tar.gz&#34;&gt;https://github.com/plasticboy/vim-markdown/archive/master.tar.gz&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;安装方法：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$mkdir ~/.vim/
$cd ~/.vim
$tar --strip=1 -zxf vim-markdown-master.tar.gz
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Vim开启语法高亮&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;编辑&lt;code&gt;~/.vimrc&lt;/code&gt;，写入&lt;strong&gt;syntax on&lt;/strong&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>