<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>v2ray on UNIXETC</title>
    <link>https://unixetc.com/tags/v2ray/</link>
    <description>UNIXETC (v2ray)</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 30 Jul 2020 00:00:00 +0000</lastBuildDate>
    
    <atom:link href="https://unixetc.com/tags/v2ray/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Nginx V2ray and WebSocket</title>
      <link>https://unixetc.com/post/nginx-v2ray-websocket/</link>
      <pubDate>Thu, 30 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/nginx-v2ray-websocket/</guid>
      <description>&lt;h3 id=&#34;安装v2raynginx&#34;&gt;安装v2ray/nginx&lt;/h3&gt;
&lt;p&gt;v2ray安装可以参考&lt;a href=&#34;https://unixetc.com/post/v2ray-client-configuration-example-in-ubuntu/&#34;&gt;Ubuntu中v2ray客户端配置实例&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Nginx安装推荐使用&lt;a href=&#34;https://oneinstack.com/&#34;&gt;OneinStack一键安装脚本&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;准备好使用的域名，这里以&lt;strong&gt;&lt;code&gt;v.fuckgfw.cn&lt;/code&gt;&lt;/strong&gt;为例。&lt;/p&gt;
&lt;h3 id=&#34;v2raynginx服务端配置&#34;&gt;v2ray/nginx服务端配置&lt;/h3&gt;
&lt;p&gt;v2ray安装好后，服务端配置&lt;strong&gt;&lt;code&gt;/etc/v2ray/config.json&lt;/code&gt;&lt;/strong&gt;如下:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{
	&amp;quot;inbounds&amp;quot;: [{
		&amp;quot;port&amp;quot;: 99999,  //代理端口号
		&amp;quot;listen&amp;quot;: &amp;quot;127.0.0.1&amp;quot;,
		&amp;quot;protocol&amp;quot;: &amp;quot;vmess&amp;quot;,
		&amp;quot;settings&amp;quot;: {
			&amp;quot;clients&amp;quot;: [{
				&amp;quot;id&amp;quot;: &amp;quot;5c1eed18-fse4-41fs-9as9-e85s45bds9ef&amp;quot;,
				&amp;quot;level&amp;quot;: 1,
				&amp;quot;alterId&amp;quot;: 64
			}]
		},
		&amp;quot;streamSettings&amp;quot;: {
			&amp;quot;network&amp;quot;: &amp;quot;ws&amp;quot;,
			&amp;quot;wsSettings&amp;quot;: {
				&amp;quot;path&amp;quot;: &amp;quot;/fcgfw&amp;quot; //代理目录
			}
		}
	}],
	&amp;quot;outbounds&amp;quot;: [{
		&amp;quot;protocol&amp;quot;: &amp;quot;freedom&amp;quot;,
		&amp;quot;settings&amp;quot;: {}
	}, {
		&amp;quot;protocol&amp;quot;: &amp;quot;blackhole&amp;quot;,
		&amp;quot;settings&amp;quot;: {},
		&amp;quot;tag&amp;quot;: &amp;quot;blocked&amp;quot;
	}],
	&amp;quot;routing&amp;quot;: {
		&amp;quot;rules&amp;quot;: [{
			&amp;quot;type&amp;quot;: &amp;quot;field&amp;quot;,
			&amp;quot;ip&amp;quot;: [&amp;quot;geoip:private&amp;quot;],
			&amp;quot;outboundTag&amp;quot;: &amp;quot;blocked&amp;quot;
		}]
	}
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;使用OneinStack一键脚本新建一个站点，域名为&lt;code&gt;v.fuckgfw.cn&lt;/code&gt;，采用SSL加密模式，完成后编辑&lt;strong&gt;&lt;code&gt;/usr/local/nginx/conf/vhost/v.fuckgfw.cn.conf&lt;/code&gt;&lt;/strong&gt;文件&lt;/p&gt;
&lt;p&gt;参考以下修改：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;server {
  listen 80;
  listen [::]:80;
  listen 443 ssl http2;
  listen [::]:443 ssl http2;
  ssl_certificate /usr/local/nginx/conf/ssl/v.fuckgfw.cn.crt;
  ssl_certificate_key /usr/local/nginx/conf/ssl/v.fuckgfw.cn.key;
  ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
  ssl_ciphers TLS13-AES-256-GCM-SHA384:TLS13-CHACHA20-POLY1305-SHA256:TLS13-AES-128-GCM-SHA256:TLS13-AES-128-CCM-8-SHA256:TLS13-AES-128-CCM-SHA256:EECDH+CHACHA20:EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256:EECDH+3DES:RSA+3DES:!MD5;
  ssl_prefer_server_ciphers on;
  ssl_session_timeout 10m;
  ssl_session_cache builtin:1000 shared:SSL:10m;
  ssl_buffer_size 1400;
  add_header Strict-Transport-Security max-age=15768000;
  ssl_stapling on;
  ssl_stapling_verify on;
  server_name v.fuckgfw.cn;
  access_log off;
  if ($ssl_protocol = &amp;quot;&amp;quot;) { return 301 https://$host$request_uri; }

    location /fcgfw {       //与上面v2ray配置的代理目录一致                  
        proxy_redirect off;
        proxy_pass http://127.0.0.1:99999;       //与上面v2ray配置端口号一致 
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection &amp;quot;upgrade&amp;quot;;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_connect_timeout 60s;
        proxy_read_timeout 86400s;
        proxy_send_timeout 60s;
    }
}

&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;按照上面修改好&lt;strong&gt;nginx&lt;/strong&gt;与&lt;strong&gt;v2ray&lt;/strong&gt;配置后，重启服务。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;service nginx reload
service v2ray restart
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;v2ray客户端配置&#34;&gt;v2ray客户端配置&lt;/h3&gt;
&lt;p&gt;以&lt;strong&gt;v2rayN&lt;/strong&gt;为例&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;地址:v.fuckgfw.cn&lt;/li&gt;
&lt;li&gt;端口:443&lt;/li&gt;
&lt;li&gt;用户ID:5c1eed18-fse4-41fs-9as9-e85s45bds9ef&lt;/li&gt;
&lt;li&gt;额外ID:64&lt;/li&gt;
&lt;li&gt;加密方式:auto&lt;/li&gt;
&lt;li&gt;传输协议:ws&lt;/li&gt;
&lt;li&gt;别名:v.fuckgfw.cn&lt;/li&gt;
&lt;li&gt;伪装类型:none&lt;/li&gt;
&lt;li&gt;伪装域名:v.fuckgfw.cn&lt;/li&gt;
&lt;li&gt;路径:/fcgfw&lt;/li&gt;
&lt;li&gt;底层传输安全:tls&lt;/li&gt;
&lt;li&gt;跳过证书验证:false&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://unixetc.com/usr/uploads/nginx-v2ray-websocket.png&#34;&gt;https://unixetc.com/usr/uploads/nginx-v2ray-websocket.png&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Ubuntu中v2ray客户端配置实例</title>
      <link>https://unixetc.com/post/v2ray-client-configuration-example-in-ubuntu/</link>
      <pubDate>Sat, 18 May 2019 09:00:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/v2ray-client-configuration-example-in-ubuntu/</guid>
      <description>&lt;p&gt;首先使用&lt;code&gt;bash &amp;lt;(curl -L -s https://install.direct/go.sh)&lt;/code&gt;来快捷安装v2ray，如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;root@vm:~# bash &amp;lt;(curl -L -s https://install.direct/go.sh)
Installing V2Ray v4.18.0 on x86_64
Downloading V2Ray: https://github.com/v2ray/v2ray-core/releases/download/v4.18.0/v2ray-linux-64.zip
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100   608    0   608    0     0    581      0 --:--:--  0:00:01 --:--:--   581
100 10.5M  100 10.5M    0     0   172k      0  0:01:02  0:01:02 --:--:--  194k
Extracting V2Ray package to /tmp/v2ray.
Archive:  /tmp/v2ray/v2ray.zip
  inflating: /tmp/v2ray/config.json  
   creating: /tmp/v2ray/doc/
  inflating: /tmp/v2ray/doc/readme.md  
  inflating: /tmp/v2ray/geoip.dat    
  inflating: /tmp/v2ray/geosite.dat  
   creating: /tmp/v2ray/systemd/
  inflating: /tmp/v2ray/systemd/v2ray.service  
   creating: /tmp/v2ray/systemv/
  inflating: /tmp/v2ray/systemv/v2ray  
  inflating: /tmp/v2ray/v2ctl        
 extracting: /tmp/v2ray/v2ctl.sig    
  inflating: /tmp/v2ray/v2ray        
 extracting: /tmp/v2ray/v2ray.sig    
  inflating: /tmp/v2ray/vpoint_socks_vmess.json  
  inflating: /tmp/v2ray/vpoint_vmess_freedom.json  
PORT:51332
UUID:7378f6a4-790a-11e9-8f9e-2a86e4085a59
Created symlink /etc/systemd/system/multi-user.target.wants/v2ray.service → /etc/systemd/system/v2ray.service.
V2Ray v4.18.0 is installed.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后编辑&lt;code&gt;/etc/v2ray/config.json&lt;/code&gt;文件，如下设置：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{
  &amp;quot;inbounds&amp;quot;: [{
    &amp;quot;port&amp;quot;: 1080,  // SOCKS 代理端口，在浏览器中需配置代理并指向这个端口
    &amp;quot;listen&amp;quot;: &amp;quot;127.0.0.1&amp;quot;,
    &amp;quot;protocol&amp;quot;: &amp;quot;socks&amp;quot;,
    &amp;quot;settings&amp;quot;: {
      &amp;quot;udp&amp;quot;: true
    }
  }],
  &amp;quot;outbounds&amp;quot;: [{
    &amp;quot;protocol&amp;quot;: &amp;quot;vmess&amp;quot;,
    &amp;quot;settings&amp;quot;: {
      &amp;quot;vnext&amp;quot;: [{
        &amp;quot;address&amp;quot;: &amp;quot;server&amp;quot;, // 服务器地址，请修改为你自己的服务器 ip 或域名
        &amp;quot;port&amp;quot;: 10086,  // 服务器端口
        &amp;quot;users&amp;quot;: [{ &amp;quot;id&amp;quot;: &amp;quot;b831381d-6324-4d53-ad4f-8cda48b30811&amp;quot; }]
      }]
    }
  },{
    &amp;quot;protocol&amp;quot;: &amp;quot;freedom&amp;quot;,
    &amp;quot;tag&amp;quot;: &amp;quot;direct&amp;quot;,
    &amp;quot;settings&amp;quot;: {}
  }],
  &amp;quot;routing&amp;quot;: {
    &amp;quot;domainStrategy&amp;quot;: &amp;quot;IPOnDemand&amp;quot;,
    &amp;quot;rules&amp;quot;: [{
      &amp;quot;type&amp;quot;: &amp;quot;field&amp;quot;,
      &amp;quot;ip&amp;quot;: [&amp;quot;geoip:private&amp;quot;],
      &amp;quot;outboundTag&amp;quot;: &amp;quot;direct&amp;quot;
    }]
  }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;编辑完成后保存，重新启动v2ray&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;root@vm:~# service v2ray stop
root@vm:~# service v2ray start
root@vm:~# service v2ray status
● v2ray.service - V2Ray Service
   Loaded: loaded (/etc/systemd/system/v2ray.service; enabled; vendor preset: en
   Active: active (running) since Sat 2019-05-18 08:58:43 CST; 5s ago
 Main PID: 8025 (v2ray)
    Tasks: 7 (limit: 2311)
   CGroup: /system.slice/v2ray.service
           └─8025 /usr/bin/v2ray/v2ray -config /etc/v2ray/config.json

5月 18 08:58:43 vm systemd[1]: Started V2Ray Service.
5月 18 08:58:43 vm v2ray[8025]: V2Ray 4.18.0 (Po) 20190228
5月 18 08:58:43 vm v2ray[8025]: A unified platform for anti-censorship.
5月 18 08:58:44 vm v2ray[8025]: 2019/05/18 08:58:44 [Warning] v2ray.com/core: V2
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后Firefox设置代理如下：&lt;/p&gt;
&lt;p&gt;设置-常规-网络设置
勾选&lt;strong&gt;手动代理配置&lt;/strong&gt;，在&lt;strong&gt;SOCKS主机&lt;/strong&gt;中填入&lt;code&gt;127.0.0.1&lt;/code&gt;本地IP和&lt;strong&gt;端口&lt;/strong&gt;，协议勾选&lt;strong&gt;SOCKS_v5&lt;/strong&gt;
建议勾选&lt;strong&gt;使用SOCKSv5时代理DNS查询&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://unixetc.com/imgs/3178501606.webp&#34; alt=&#34;20190518090412.webp&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>V2ray使用实例</title>
      <link>https://unixetc.com/post/v2ray-use-case/</link>
      <pubDate>Mon, 20 Aug 2018 18:18:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/v2ray-use-case/</guid>
      <description>&lt;p&gt;Project V 提供了单一的内核和多种界面操作方式。内核（V2Ray）用于实际的网络交互、路由等针对网络数据的处理，而外围的用户界面程序提供了方便直接的操作流程。
V2Ray 的主要作用是根据用户的配置，对于传入的网络连接进行一定处理，然后发往指定的服务器。它是一个命令行程序，可以接受一个 JSON 格式的配置文件。&lt;/p&gt;
&lt;h3 id=&#34;vps安装服务端&#34;&gt;VPS安装服务端&lt;/h3&gt;
&lt;p&gt;使用下面命令一键安装:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;bash &amp;lt;(curl -L -s https://install.direct/go.sh)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;或者从&lt;a href=&#34;https://github.com/v2ray/v2ray-core/releases&#34;&gt;https://github.com/v2ray/v2ray-core/releases&lt;/a&gt;下载预编译包进行安装。&lt;/p&gt;
&lt;p&gt;安装完成后，使用&lt;code&gt;service v2ray start&lt;/code&gt;启动v2ray服务。&lt;/p&gt;
&lt;h3 id=&#34;windows安装本地端&#34;&gt;Windows安装本地端&lt;/h3&gt;
&lt;p&gt;从&lt;a href=&#34;https://github.com/v2ray/v2ray-core/releases&#34;&gt;https://github.com/v2ray/v2ray-core/releases&lt;/a&gt;下载Windows客户端，解压后编辑&lt;code&gt;config.json&lt;/code&gt;文件，内容如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{
&amp;quot;inbound&amp;quot;: {
    &amp;quot;port&amp;quot;: 1080, // 监听端口
    &amp;quot;protocol&amp;quot;: &amp;quot;socks&amp;quot;, // 入口协议为 SOCKS 5
    &amp;quot;domainOverride&amp;quot;: [&amp;quot;tls&amp;quot;,&amp;quot;http&amp;quot;],
    &amp;quot;settings&amp;quot;: {
    &amp;quot;auth&amp;quot;: &amp;quot;noauth&amp;quot;  //socks的认证设置，noauth 代表不认证，由于 socks 通常在客户端使用，所以这里不认证
    }
},
&amp;quot;outbound&amp;quot;: {
    &amp;quot;protocol&amp;quot;: &amp;quot;vmess&amp;quot;, // 出口协议
    &amp;quot;settings&amp;quot;: {
    &amp;quot;vnext&amp;quot;: [
        {
        &amp;quot;address&amp;quot;: &amp;quot;10.0.0.1&amp;quot;, // 服务器地址，请修改为你自己的服务器 ip 或域名
        &amp;quot;port&amp;quot;: 31892,  // 服务器端口
        &amp;quot;users&amp;quot;: [
            {
            &amp;quot;id&amp;quot;: &amp;quot;3efd584f-8a7d-43af-9c75-35266df4ceb0&amp;quot;,  // 用户 ID，必须与服务器端配置相同
            &amp;quot;alterId&amp;quot;: 64 // 此处的值也应当与服务器相同
            }
        ]
        }
    ]
    }
}
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;以上的id和alterId，在vps上使用&lt;code&gt;cat /etc/v2ray/config.json&lt;/code&gt;查看。&lt;/p&gt;
&lt;p&gt;配置完成后，点击&lt;code&gt;wv2ray.exe&lt;/code&gt;在后台运行v2ray本地端。&lt;/p&gt;
&lt;p&gt;然后在浏览器配置通过&lt;code&gt;127.0.0.1:1080&lt;/code&gt; socks5方式使用代理。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>