<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Nginx on UNIXETC</title>
    
    
    
    <link>/tags/nginx/</link>
    <description>Recent content in Nginx on UNIXETC</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 30 Jul 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/nginx/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Nginx V2ray and WebSocket</title>
      <link>/post/nginx-v2ray-websocket/</link>
      <pubDate>Thu, 30 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>/post/nginx-v2ray-websocket/</guid>
      <description>
        
          
          
          
        
        
        
          本文介绍如何安装v2ray和nginx，并配置v2ray代理模式为websocket。
          
        
        </description>
    </item>
    
    <item>
      <title>XiunoBBS Nginx伪静态规则</title>
      <link>/post/xiunobbs-nginx-pseudo-static/</link>
      <pubDate>Tue, 06 Feb 2018 12:16:00 +0000</pubDate>
      
      <guid>/post/xiunobbs-nginx-pseudo-static/</guid>
      <description>
        
          
          
          
        
        
        
          XiunoBBS是一款非常流行的轻论坛程序
以下为XiunoBBS Nginx伪静态规则代码，添加到相应的nginx配置文件中即可。
location ~* \.(htm)$ { rewrite &amp;quot;^(.*)/(.+?).htm(.*?)$&amp;quot; $1/index.php?$2.htm$3 last; } 
          
        
        </description>
    </item>
    
    <item>
      <title>Typecho登录时提示AccessDenied</title>
      <link>/post/typecho-login-access-denied/</link>
      <pubDate>Tue, 03 Oct 2017 10:03:00 +0000</pubDate>
      
      <guid>/post/typecho-login-access-denied/</guid>
      <description>
        
          
          
          
        
        
        
          Typecho安装完成后，登录后提示Access Denied，解决方法如下：
找到php.ini文件，我的在/usr/local/php/etc/php.ini
将cgi.fix_pathinfo的值改为1即可
重启php
service php-fpm restart  完了！
          
        
        </description>
    </item>
    
    <item>
      <title>SSL安全优化</title>
      <link>/post/ssl-security-optimization/</link>
      <pubDate>Mon, 21 Dec 2015 12:21:00 +0000</pubDate>
      
      <guid>/post/ssl-security-optimization/</guid>
      <description>
        
          
          
          
        
        
        
          先贴出本站的SSL安全评级,测试地址为https://www.ssllabs.com/ssltest/analyze.html?d=alair.cn
以下是本站Nginx配置中关于SSL部分
listen 443 ssl http2; ssl_certificate /etc/letsencrypt/live/alair.cn/fullchain.pem; ssl_certificate_key /etc/letsencrypt/live/alair.cn/privkey.pem; ssl_session_timeout 60m; ssl_protocols TLSv1 TLSv1.1 TLSv1.2; ssl_ciphers ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-RC4-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:RC4-SHA:!aNULL:!eNULL:!EXPORT:!DES:!3DES:!MD5:!DSS:!PKS; ssl_prefer_server_ciphers on; ssl_session_cache builtin:1000 shared:SSL:10m; ssl_dhparam /etc/ssl/certs/dhparam.pem; ssl_stapling on; ssl_stapling_verify on; add_header Strict-Transport-Security &amp;quot;max-age=63072000; includeSubdomains; preload&amp;quot;; add_header X-Frame-Options &amp;quot;DENY&amp;quot;;  说明：
dhparam.pem可以使用openssl dhparam -out dhparam.pem 4096命令生成，这个命令会执行很长时间，也可以将字节数改为2048
          
        
        </description>
    </item>
    
    <item>
      <title>使用免费Let&#39;s Encrypt证书</title>
      <link>/post/use-letsencrypt-free-ssl-certificate/</link>
      <pubDate>Tue, 15 Dec 2015 22:38:00 +0000</pubDate>
      
      <guid>/post/use-letsencrypt-free-ssl-certificate/</guid>
      <description>
        
          
          
          
        
        
        
          在此介绍如何使用Let&amp;rsquo;s Encrypt的免费SSL证书，需要在有管理权限的VPS上操作，然后参考以下方法自签域名证书。
git clone https://github.com/letsencrypt/letsencrypt.git cd letsencrypt mkdir -p /home/webroot/.well-known/acme-challenge #/home/webroot为网站目录 ./letsencrypt-auto certonly --email me@alair.cn -d alair.cn,www.alair.cn --webroot -w /home/webroot --agree-tos #注意email、域名、和网站目录  签发成功后，会提示如/etc/letsencrypt/live/www.alair.cn/fullchain.pem;的证书路径信息。
IMPORTANT NOTES: - Congratulations! Your certificate and chain have been saved at /etc/letsencrypt/live/www.alair.cn/fullchain.pem. Your cert will expire on 2016-03-14. To obtain a new version of the certificate in the future, simply run Let&#39;s Encrypt again. - If like Let&#39;s Encrypt, please consider supporting our work by: Donating to ISRG / Let&#39;s Encrypt: https://letsencrypt.
          
        
        </description>
    </item>
    
    <item>
      <title>StartSSL免费证书与Nginx配置</title>
      <link>/post/startssl-and-nginx/</link>
      <pubDate>Wed, 14 Oct 2015 12:13:00 +0000</pubDate>
      
      <guid>/post/startssl-and-nginx/</guid>
      <description>
        
          
          
          
        
        
        
          注册StartSSL 打开https://www.startssl.com/，点击Sign-up开始注册
参考上图填写注册信息，然后Continue，会有如下提示，系统会发送验证码到你的注册邮箱
检查注册邮箱，将收到的验证码填写提交，然后会出现如下提示，等待审核。
审核通过后，会收到如下提示邮件，点击其中连接，然后输入邮箱中的验证码完成注册
安装证书 接下来创建私匙
安装证书
安装成功后会有如下提示
验证域名 接下来验证域名，点击Validations Wizard
填写域名
选择验证邮件地址
按照提示输入邮箱接收到的验证码完成验证。
创建证书 选择Certificates Wizard，证书目标选择Web Server SSL/TLS Certificate
接下来新建私匙
点击Skip跳过系统建立步骤，我们自己在VPS上建立CSR文件，参考下图通过openssl命令建立CSR文件
注意，为了便于后期安装配置方便，建议密码置空
完成后，cat出建立好的ciuxsss.csr内容，粘贴提交
接下来添加域名
接下来将文本框中的内容保存为一个**.crt**文件
配置Nginx 贴出我的配置文件，大家参考一下
server { listen 80; location /{ return 301 https://$host$request_uri; } } server { listen 443; #listen 80; #listen [::]:80; server_name ciux.org; index index.html index.htm index.php default.html default.htm default.php; root /home/ciux/compiled; ssl on; ssl_certificate /home/bk/ssl/ciuxsss.crt; ssl_certificate_key /home/bk/ssl/ciuxsss.key; ssl_session_timeout 5m; ssl_protocols SSLv2 SSLv3 TLSv1; ssl_ciphers ALL:!
          
        
        </description>
    </item>
    
    <item>
      <title>Gandi免费SSL证书使用方法</title>
      <link>/post/gandi-free-ssl-certificate-usage/</link>
      <pubDate>Thu, 24 Sep 2015 19:23:00 +0000</pubDate>
      
      <guid>/post/gandi-free-ssl-certificate-usage/</guid>
      <description>
        
          
          
          
        
        
        
          首先澄清此文中的免费不是真的免费，而是新注册或转移域名到Gandi，都可以获得标准版SSL证书一年的免费使用。
符合以上条件的话，可以进行下面操作了！
在Gandi上购买SSL证书，选择标准版，在结算的时候系统会自动判断是否免单，正常情况下会0元结单，完成后接着配置SSL证书。
首先提交CSR，这里需要自己生产CSR。
在此以3c.lc域名为例，在Ubuntu中操作。
openssl req -nodes -newkey rsa:2048 -sha1 -keyout 3clc.key -out 3clc.csr  然后根据提示填写以下内容：
 Country Name (2 letter code) [AU]: #国家代码，中国为CN
State or Province Name (full name) [Some-State]: #省份
Locality Name (eg, city) []: #城市
Organization Name (eg, company) [Internet Widgits Pty Ltd]: #组织名
Organizational Unit Name (eg, section) []: #部门名
Common Name (e.g. server FQDN or YOUR name) []:3c.lc #注意，这里需要填写你的域名。
Email Address []:2b@3c.lc #邮箱
Please enter the following &amp;lsquo;extra&amp;rsquo; attributes
          
        
        </description>
    </item>
    
    <item>
      <title>安装Nginx和ngx_pagespeed</title>
      <link>/post/install-nginx-and-ngx_pagespeed-on-vps/</link>
      <pubDate>Fri, 24 Jul 2015 17:24:00 +0000</pubDate>
      
      <guid>/post/install-nginx-and-ngx_pagespeed-on-vps/</guid>
      <description>
        
          
          
          
        
        
        
          VPS配置:
Ubuntu 14.04 x86 RAM 512M SWAP 64M DISK 5G  准备工作 sudo apt-get update&amp;amp;&amp;amp;apt-get upgrade -y sudo apt-get install build-essential zlib1g-dev libpcre3 libpcre3-dev unzip libssl-dev -y  下载ngx_pagespeed cd NPS_VERSION=1.9.32.4 wget https://github.com/pagespeed/ngx_pagespeed/archive/release-${NPS_VERSION}-beta.zip unzip release-${NPS_VERSION}-beta.zip cd ngx_pagespeed-release-${NPS_VERSION}-beta/ wget https://dl.google.com/dl/page-speed/psol/${NPS_VERSION}.tar.gz tar -xzvf ${NPS_VERSION}.tar.gz  安装Nginx cd groupadd www useradd -s /sbin/nologin -g www www NGINX_VERSION=1.8.0 wget http://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz tar -xvzf nginx-${NGINX_VERSION}.tar.gz cd nginx-${NGINX_VERSION}/ ./configure \ --user=www \ --group=www \ --prefix=/usr/local/nginx \ --with-http_stub_status_module \ --with-http_ssl_module \ --with-http_spdy_module \ --with-http_gzip_static_module \ --with-http_sub_module \ --add-module=$HOME/ngx_pagespeed-release-${NPS_VERSION}-beta \ sudo make sudo make install sudo ln -sf /usr/local/nginx/sbin/nginx /usr/bin/nginx  配置/etc/init.
          
        
        </description>
    </item>
    
    <item>
      <title>将Nginx更换为H2O</title>
      <link>/post/install-h2o-on-bandwagon-vps/</link>
      <pubDate>Tue, 21 Jul 2015 17:31:00 +0000</pubDate>
      
      <guid>/post/install-h2o-on-bandwagon-vps/</guid>
      <description>
        
          
          
          
        
        
        
          安装必须的软件 预备工具软件
#apt-get install autoconf automake m4 build-essential  libssl-dev 必选
#apt-get install openssl libssl-dev  以下为可选包，可自行搜索安装
 libuv libyaml wslay  安装H2O 下载安装最新版h2o https://github.com/h2o/h2o/releases
#wget https://github.com/h2o/h2o/archive/v1.4.1.tar.gz #tar zxf v1.4.1.tar.gz #cd h2o-1.4.1 #cmake -DWITH_BUNDLED_SSL=on . #make #sudo make install  编辑H2O站点配置文件 以下是一个简单的http与https配置文件，可自行参考修改
hosts: &amp;quot;www.example.com&amp;quot;: listen: port: 80 listen: port: 443 ssl: certificate-file: /path/to/server-certificate.crt key-file: /path/to/private-key.crt paths: &amp;quot;/&amp;quot;: file.dir: /path/to/doc-root access-log: /path/to/the/access-log error-log: /path/to/the/error-log pid-file: /path/to/the/pid-file http2-reprioritize-blocking-assets: ON # performance tuning option  启动H2O
          
        
        </description>
    </item>
    
    <item>
      <title>Nginx配置SSL证书</title>
      <link>/post/nginx-configuration-ssl-certificate/</link>
      <pubDate>Mon, 25 May 2015 15:25:00 +0000</pubDate>
      
      <guid>/post/nginx-configuration-ssl-certificate/</guid>
      <description>
        
          
          
          
        
        
        
          申请Wosign免费SSL证书 申请地址: https://www.wosign.com/products/free_ssl.htm
申请成功后，收到类似于aquan.me_sha256_cn.zip的文件,解压后包含如下文件
for Apache.zip for IIS.zip for Nginx.zip for Other Server.zip for Tomcat.zip  其中for Nginx.zip中包含如下两个文件，将其上传到VPS自定义位置。
 1_aquan.me_bundle.crt 2_aquan.me.key  配置Nginx 不多说了，直接贴代码:
#### Add Wosign SSL Start #### listen 443; ssl on; ssl_certificate /usr/local/nginx/ssl/ssl.crt; ssl_certificate_key /usr/local/nginx/ssl/ssl.key; ssl_session_timeout 5m; ssl_protocols SSLv2 SSLv3 TLSv1; ssl_ciphers ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP; ssl_prefer_server_ciphers on; #### Add Wosign SSL End ####  将以上代码插入listen 80;之后。
重启Nginx生效
/etc/init.d/nginx restart  以上设置完成，就可以通过https来浏览网站，同时http也可以浏览。
合并Wosign根证书 有的浏览器会提示不信任证书，可以通过合并Wosign根证书来解决
wget https://www.wosign.com/Root/Bundle_DV_St.crt cat Bundle_DV_St.crt &amp;gt;&amp;gt; /usr/local/nginx/ssl/ssl.crt  设置http跳转https 如果想将http跳转至https，可以进行如下设置:
          
        
        </description>
    </item>
    
    <item>
      <title>树莓派与DNSPod动态域名解析</title>
      <link>/post/raspberry-pi-and-dnspod-dynamic-dns/</link>
      <pubDate>Mon, 03 Mar 2014 03:03:00 +0000</pubDate>
      
      <guid>/post/raspberry-pi-and-dnspod-dynamic-dns/</guid>
      <description>
        
          
          
          
        
        
        
          所需条件
 Raspberry Pi TP-Link路由器 DNSPod帐户 域名  配置路由器 进入路由器的DHCP服务器-&amp;gt;静态地址分配菜单，为Raspberry Pi分配静态IP地址，例如：192.168.1.200
进入路由器的安全功能-&amp;gt;远端WEB管理菜单，设置WEB管理端口为一个非80值，例如82
进入路由器的转发规则-&amp;gt;DMZ主机菜单，将DMZ主机IP地址设置为Raspberry Pi的ip地址，然后启用保存。
设置DNSPod动态域名解析 首先登录DNSPod网页管理域名，将二级域名www 的A记录解析到路由器外网IP(可通过路由器管理首页查询，或者通过浏览ip138.com来获得)
注：一级域名请解析**@**的A记录。
下载DNSPod官方客户端Lite https://support.dnspod.cn/Support/api
解压后双击打开登录，从右侧信息列表中也可以看到本机最新IP，点击相应域名后的动态解析按钮，在动态解析设置中右键点击相应的动态记录启用即可，关闭DNSPod官方客户端Lite。
设置Raspberry Pi 安装Web服务器软件(Nginx)
#apt-get install nginx #/etc/init.d/nginx start  内网可以通过浏览`http://192.168.1.129&amp;quot;来检查Nginx是否正常运行。
浏览https://gist.githubusercontent.com/chuangbo/833369，下载动态域名解析脚本(pypod.py)
编辑pypod.py修改以下内容：
login_email=&amp;quot;email&amp;quot;, # DSNPod帐户邮箱 login_password=&amp;quot;password&amp;quot;, # DSNPod帐户密码 domain_id=100, # 域名id record_id=100, # 记录id sub_domain=&amp;quot;www&amp;quot;, # 子域名  其中域名id与记录id可以通过以下命令获取：
curl -k https://dnsapi.cn/Domain.List -d &amp;quot;login_email=xxx&amp;amp;login_password=xxx&amp;quot; curl -k https://dnsapi.cn/Record.List -d &amp;quot;login_email=xxx&amp;amp;login_password=xxx&amp;amp;domain_id=xxx&amp;quot;  提示：如果你使用了www子域名，则需要获取www的记录id，如果使用一级域名(@)，则需要获取**@**的记录id。
编辑完pypod.py保存退出，使用以下命令运行：
#python pypod.py  现在可以通过域名来浏览Raspberry Pi上的Web内容了。
pypod.py开机运行
添加/usr/bin/python /home/pi/pypod.
          
        
        </description>
    </item>
    
    <item>
      <title>LNMP使用实例</title>
      <link>/post/lnmp-usages/</link>
      <pubDate>Fri, 23 Mar 2012 12:32:00 +0000</pubDate>
      
      <guid>/post/lnmp-usages/</guid>
      <description>
        
          
          
          
        
        
        
          安装LNMP 更新系统
#yum check-update #yum update  安装Screen
#yum install screen  开始安装Lnmp
#screen -S lnmp #wget -c http://soft.vpser.net/lnmp/lnmp0.8.tar.gz //最新版请查阅lnmp官网 #tar zxvf lnmp0.8.tar.gz #./lnmp0.8/centos.sh | tee lnmp.log //输出log文件，以备出错时查阅  接下来按照提示设定域名和MysQL密码，程序会自动下载相关程序，而后编译安装
安装PureFTP
#./lnmp0.8/pureftp.sh  按提示输入MySQL和Ftp管理员密码，安装完成后可以通过http://vpsip/ftp/来登录管理ftp帐号
使用Lnmp 添加虚拟主机
#/root/vhost.sh  按照提示填入域名、目录、rewrite规则文件，如下所示：
root@buyvm256:~#/root/vhost.sh ========================================================================= Add Virtual Host for LNMP V0.9 , Written by Licess ========================================================================= LNMP is a tool to auto-compile &amp;amp; install Nginx+MySQL+PHP on Linux This script is a tool to add virtual host for nginx For more information please visit http://www.
          
        
        </description>
    </item>
    
  </channel>
</rss>