<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>DDNS on UNIXETC</title>
    
    
    
    <link>/tags/ddns/</link>
    <description>Recent content in DDNS on UNIXETC</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Mon, 11 Jan 2016 12:13:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/ddns/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>树莓派下安装配置Noip</title>
      <link>/post/install-configure-noip-client-in-raspberry-pi/</link>
      <pubDate>Mon, 11 Jan 2016 12:13:00 +0000</pubDate>
      
      <guid>/post/install-configure-noip-client-in-raspberry-pi/</guid>
      <description>
        
          
          
          
        
        
        
          注册noip 首先在http://noip.com注册账户
然后在主机管理(Manage Hosts)中添加主机(Add A Host)，根据提示设置二级域名，IP可以随意填写。
安装Noip客户端 wget https://www.noip.com/client/linux/noip-duc-linux.tar.gz tar zxf noip-duc-linux.tar.gz cd noip-2.1.9-1 sudo make install  安装过程中，按照提示输入noip帐号信息，时间间隔建议设为5s，默认30s
设置开机启动 在/etc/init.d/中建立noip2脚本
sudo vi /etc/init.d/noip2  脚本内容如下
#! /bin/sh ### BEGIN INIT INFO # Provides: noip2 # Required-Start: $syslog # Required-Stop: $syslog # Default-Start: 2 3 4 5 # Default-Stop: 0 1 6 # Short-Description: noip.com client service ### END INIT INFO # . /lib/lsb/init-functions case &amp;quot;$1&amp;quot; in start) echo &amp;quot;Starting noip2.
          
        
        </description>
    </item>
    
    <item>
      <title>树莓派使用ddclient和DDNS</title>
      <link>/post/raspberry-pi-using-ddclient-and-ddns/</link>
      <pubDate>Thu, 07 Jan 2016 12:31:00 +0000</pubDate>
      
      <guid>/post/raspberry-pi-using-ddclient-and-ddns/</guid>
      <description>
        
          
          
          
        
        
        
          域名解析 首先得有个域名，在域名管理中将域名DNS设为he.net的DNS地址，如下：
ns1.he.net ns2.he.net ns3.he.net ns4.he.net ns5.he.net  然后在http://dns.he.net注册账号，添加域名(Add a new domain)
接下来添加A记录(New A)，勾选允许动态域名解析(Enable entry for dynamic dns)
点击域名后DDNS列中的刷新按钮，新建一个DDNS密匙(Generate a DDNS key.)
安装设置ddclient 在树莓派上安装ddclient
sudo apt-get install ddclient  编辑ddclient配置文件，路径为/etc/ddclient.conf
protocol=dyndns2 use=web,web=myip.dnsomatic.com server=dyn.dns.he.net login=raspi.in password=&#39;ddnskey&#39; www.raspi.in,raspi.in  其中password为设置DDNS时的key
重启ddclient服务
service ddclient restart  验证IP查询结果
sudo ddclient -query use=if, if=eth0 address is 192.168.1.111 use=if, if=lo address is 127.0.0.1 use=web, web=dnspark address is 36.40.143.235 use=web, web=dyndns address is NOT FOUND use=web, web=loopia address is 36.
          
        
        </description>
    </item>
    
    <item>
      <title>树莓派与DNSPod动态域名解析</title>
      <link>/post/raspberry-pi-and-dnspod-dynamic-dns/</link>
      <pubDate>Mon, 03 Mar 2014 03:03:00 +0000</pubDate>
      
      <guid>/post/raspberry-pi-and-dnspod-dynamic-dns/</guid>
      <description>
        
          
          
          
        
        
        
          所需条件
 Raspberry Pi TP-Link路由器 DNSPod帐户 域名  配置路由器 进入路由器的DHCP服务器-&amp;gt;静态地址分配菜单，为Raspberry Pi分配静态IP地址，例如：192.168.1.200
进入路由器的安全功能-&amp;gt;远端WEB管理菜单，设置WEB管理端口为一个非80值，例如82
进入路由器的转发规则-&amp;gt;DMZ主机菜单，将DMZ主机IP地址设置为Raspberry Pi的ip地址，然后启用保存。
设置DNSPod动态域名解析 首先登录DNSPod网页管理域名，将二级域名www 的A记录解析到路由器外网IP(可通过路由器管理首页查询，或者通过浏览ip138.com来获得)
注：一级域名请解析**@**的A记录。
下载DNSPod官方客户端Lite https://support.dnspod.cn/Support/api
解压后双击打开登录，从右侧信息列表中也可以看到本机最新IP，点击相应域名后的动态解析按钮，在动态解析设置中右键点击相应的动态记录启用即可，关闭DNSPod官方客户端Lite。
设置Raspberry Pi 安装Web服务器软件(Nginx)
#apt-get install nginx #/etc/init.d/nginx start  内网可以通过浏览`http://192.168.1.129&amp;quot;来检查Nginx是否正常运行。
浏览https://gist.githubusercontent.com/chuangbo/833369，下载动态域名解析脚本(pypod.py)
编辑pypod.py修改以下内容：
login_email=&amp;quot;email&amp;quot;, # DSNPod帐户邮箱 login_password=&amp;quot;password&amp;quot;, # DSNPod帐户密码 domain_id=100, # 域名id record_id=100, # 记录id sub_domain=&amp;quot;www&amp;quot;, # 子域名  其中域名id与记录id可以通过以下命令获取：
curl -k https://dnsapi.cn/Domain.List -d &amp;quot;login_email=xxx&amp;amp;login_password=xxx&amp;quot; curl -k https://dnsapi.cn/Record.List -d &amp;quot;login_email=xxx&amp;amp;login_password=xxx&amp;amp;domain_id=xxx&amp;quot;  提示：如果你使用了www子域名，则需要获取www的记录id，如果使用一级域名(@)，则需要获取**@**的记录id。
编辑完pypod.py保存退出，使用以下命令运行：
#python pypod.py  现在可以通过域名来浏览Raspberry Pi上的Web内容了。
pypod.py开机运行
添加/usr/bin/python /home/pi/pypod.
          
        
        </description>
    </item>
    
  </channel>
</rss>