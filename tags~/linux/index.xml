<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Linux on UNIXETC</title>
    <link>https://unixetc.com/tags/linux/</link>
    <description>UNIXETC (Linux)</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 30 Jul 2020 00:00:00 +0000</lastBuildDate>
    
    <atom:link href="https://unixetc.com/tags/linux/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Nginx V2ray and WebSocket</title>
      <link>https://unixetc.com/post/nginx-v2ray-websocket/</link>
      <pubDate>Thu, 30 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/nginx-v2ray-websocket/</guid>
      <description>&lt;h3 id=&#34;安装v2raynginx&#34;&gt;安装v2ray/nginx&lt;/h3&gt;
&lt;p&gt;v2ray安装可以参考&lt;a href=&#34;https://unixetc.com/post/v2ray-client-configuration-example-in-ubuntu/&#34;&gt;Ubuntu中v2ray客户端配置实例&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Nginx安装推荐使用&lt;a href=&#34;https://oneinstack.com/&#34;&gt;OneinStack一键安装脚本&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;准备好使用的域名，这里以&lt;strong&gt;&lt;code&gt;v.fuckgfw.cn&lt;/code&gt;&lt;/strong&gt;为例。&lt;/p&gt;
&lt;h3 id=&#34;v2raynginx服务端配置&#34;&gt;v2ray/nginx服务端配置&lt;/h3&gt;
&lt;p&gt;v2ray安装好后，服务端配置&lt;strong&gt;&lt;code&gt;/etc/v2ray/config.json&lt;/code&gt;&lt;/strong&gt;如下:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{
	&amp;quot;inbounds&amp;quot;: [{
		&amp;quot;port&amp;quot;: 99999,  //代理端口号
		&amp;quot;listen&amp;quot;: &amp;quot;127.0.0.1&amp;quot;,
		&amp;quot;protocol&amp;quot;: &amp;quot;vmess&amp;quot;,
		&amp;quot;settings&amp;quot;: {
			&amp;quot;clients&amp;quot;: [{
				&amp;quot;id&amp;quot;: &amp;quot;5c1eed18-fse4-41fs-9as9-e85s45bds9ef&amp;quot;,
				&amp;quot;level&amp;quot;: 1,
				&amp;quot;alterId&amp;quot;: 64
			}]
		},
		&amp;quot;streamSettings&amp;quot;: {
			&amp;quot;network&amp;quot;: &amp;quot;ws&amp;quot;,
			&amp;quot;wsSettings&amp;quot;: {
				&amp;quot;path&amp;quot;: &amp;quot;/fcgfw&amp;quot; //代理目录
			}
		}
	}],
	&amp;quot;outbounds&amp;quot;: [{
		&amp;quot;protocol&amp;quot;: &amp;quot;freedom&amp;quot;,
		&amp;quot;settings&amp;quot;: {}
	}, {
		&amp;quot;protocol&amp;quot;: &amp;quot;blackhole&amp;quot;,
		&amp;quot;settings&amp;quot;: {},
		&amp;quot;tag&amp;quot;: &amp;quot;blocked&amp;quot;
	}],
	&amp;quot;routing&amp;quot;: {
		&amp;quot;rules&amp;quot;: [{
			&amp;quot;type&amp;quot;: &amp;quot;field&amp;quot;,
			&amp;quot;ip&amp;quot;: [&amp;quot;geoip:private&amp;quot;],
			&amp;quot;outboundTag&amp;quot;: &amp;quot;blocked&amp;quot;
		}]
	}
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;使用OneinStack一键脚本新建一个站点，域名为&lt;code&gt;v.fuckgfw.cn&lt;/code&gt;，采用SSL加密模式，完成后编辑&lt;strong&gt;&lt;code&gt;/usr/local/nginx/conf/vhost/v.fuckgfw.cn.conf&lt;/code&gt;&lt;/strong&gt;文件&lt;/p&gt;
&lt;p&gt;参考以下修改：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;server {
  listen 80;
  listen [::]:80;
  listen 443 ssl http2;
  listen [::]:443 ssl http2;
  ssl_certificate /usr/local/nginx/conf/ssl/v.fuckgfw.cn.crt;
  ssl_certificate_key /usr/local/nginx/conf/ssl/v.fuckgfw.cn.key;
  ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
  ssl_ciphers TLS13-AES-256-GCM-SHA384:TLS13-CHACHA20-POLY1305-SHA256:TLS13-AES-128-GCM-SHA256:TLS13-AES-128-CCM-8-SHA256:TLS13-AES-128-CCM-SHA256:EECDH+CHACHA20:EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256:EECDH+3DES:RSA+3DES:!MD5;
  ssl_prefer_server_ciphers on;
  ssl_session_timeout 10m;
  ssl_session_cache builtin:1000 shared:SSL:10m;
  ssl_buffer_size 1400;
  add_header Strict-Transport-Security max-age=15768000;
  ssl_stapling on;
  ssl_stapling_verify on;
  server_name v.fuckgfw.cn;
  access_log off;
  if ($ssl_protocol = &amp;quot;&amp;quot;) { return 301 https://$host$request_uri; }

    location /fcgfw {       //与上面v2ray配置的代理目录一致                  
        proxy_redirect off;
        proxy_pass http://127.0.0.1:99999;       //与上面v2ray配置端口号一致 
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection &amp;quot;upgrade&amp;quot;;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_connect_timeout 60s;
        proxy_read_timeout 86400s;
        proxy_send_timeout 60s;
    }
}

&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;按照上面修改好&lt;strong&gt;nginx&lt;/strong&gt;与&lt;strong&gt;v2ray&lt;/strong&gt;配置后，重启服务。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;service nginx reload
service v2ray restart
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;v2ray客户端配置&#34;&gt;v2ray客户端配置&lt;/h3&gt;
&lt;p&gt;以&lt;strong&gt;v2rayN&lt;/strong&gt;为例&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://unixetc.com/usr/uploads/nginx-v2ray-websocket.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>斐讯N1系统信息和UNIXBENCH跑分</title>
      <link>https://unixetc.com/post/phicomm-n1-unixbench-score-and-system-information/</link>
      <pubDate>Mon, 02 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/phicomm-n1-unixbench-score-and-system-information/</guid>
      <description>&lt;h4 id=&#34;系统信息&#34;&gt;系统信息&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;alair@aml:~ $ inxi -F
System:    Host: aml Kernel: 5.5.0-rc6-aml-s9xxx aarch64 bits: 32 Console: tty 0 Distro: Ubuntu 18.04.4 LTS
Machine:   No /sys/class/dmi; using dmidecode: dmidecode is not installed.
CPU:       Quad core ARMv8 rev 4 (v8l) (-MCP-)  (ARM)
           clock speeds: max: 1512 MHz 1: 1512 MHz 2: 1512 MHz 3: 1512 MHz 4: 1512 MHz
Graphics:  Card: Failed to Detect Video Card!
           Display Server: N/A driver: N/A tty size: 254x72 Advanced Data: N/A out of X
Audio:     Card AMLGX driver: AMLGX Sound: ALSA v: k5.5.0-rc6-aml-s9xxx
Network:   Card: Failed to Detect Network Card!
Drives:    HDD Total Size: NA (-)
           ID-1: /dev/mmcblk1 model: N/A size: 7.8GB
Partition: ID-1: / size: 6.3G used: 4.8G (76%) fs: ext4 dev: /dev/mmcblk1p2
           ID-2: /boot size: 244M used: 77M (32%) fs: vfat dev: /dev/mmcblk1p1
           ID-3: /var/log size: 49M used: 2.5M (6%) fs: ext4 dev: /dev/zram0
           ID-4: swap-1 size: 0.91GB used: 0.00GB (0%) fs: swap dev: /dev/zram1
Sensors:   None detected - is lm-sensors installed and configured?
Info:      Processes: 155 Uptime: 2:39 Memory: 306.4/1741.2MB Init: systemd runlevel: 5
           Client: Shell (zsh) inxi: 2.3.56
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;unixbench分数&#34;&gt;Unixbench分数&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;alair@aml:~/unixbench-5.1.2 $ ./Run
make all
make[1]: Entering directory &#39;/home/alair/unixbench-5.1.2&#39;
Checking distribution of files
./pgms  exists
./src  exists
./testdir  exists
./tmp  exists
./results  exists
make[1]: Leaving directory &#39;/home/alair/unixbench-5.1.2&#39;
sh: 1: 3dinfo: not found

   #    #  #    #  #  #    #          #####   ######  #    #   ####   #    #
   #    #  ##   #  #   #  #           #    #  #       ##   #  #    #  #    #
   #    #  # #  #  #    ##            #####   #####   # #  #  #       ######
   #    #  #  # #  #    ##            #    #  #       #  # #  #       #    #
   #    #  #   ##  #   #  #           #    #  #       #   ##  #    #  #    #
    ####   #    #  #  #    #          #####   ######  #    #   ####   #    #

   Version 5.1.2                      Based on the Byte Magazine Unix Benchmark

   Multi-CPU version                  Version 5 revisions by Ian Smith,
                                      Sunnyvale, CA, USA
   December 22, 2007                  johantheghost at yahoo period com

Wide character in print at ./Run line 1510.
Wide character in printf at ./Run line 1541.
Use of uninitialized value in printf at ./Run line 1378.
Use of uninitialized value in printf at ./Run line 1379.
Use of uninitialized value in printf at ./Run line 1378.
Use of uninitialized value in printf at ./Run line 1379.
Use of uninitialized value in printf at ./Run line 1378.
Use of uninitialized value in printf at ./Run line 1379.
Use of uninitialized value in printf at ./Run line 1378.
Use of uninitialized value in printf at ./Run line 1379.
Use of uninitialized value in printf at ./Run line 1588.
Use of uninitialized value in printf at ./Run line 1589.
Use of uninitialized value in printf at ./Run line 1588.
Use of uninitialized value in printf at ./Run line 1589.
Use of uninitialized value in printf at ./Run line 1588.
Use of uninitialized value in printf at ./Run line 1589.
Use of uninitialized value in printf at ./Run line 1588.
Use of uninitialized value in printf at ./Run line 1589.

1 x Dhrystone 2 using register variables  1 2 3 4 5 6 7 8 9 10

1 x Double-Precision Whetstone  1 2 3 4 5 6 7 8 9 10

1 x Execl Throughput  1 2 3

1 x File Copy 1024 bufsize 2000 maxblocks  1 2 3

1 x File Copy 256 bufsize 500 maxblocks  1 2 3

1 x File Copy 4096 bufsize 8000 maxblocks  1 2 3

1 x Pipe Throughput  1 2 3 4 5 6 7 8 9 10

1 x Pipe-based Context Switching  1 2 3 4 5 6 7 8 9 10

1 x Process Creation  1 2 3

1 x System Call Overhead  1 2 3 4 5 6 7 8 9 10

1 x Shell Scripts (1 concurrent)  1 2 3

1 x Shell Scripts (8 concurrent)  1 2 3
Wide character in printf at ./Run line 1483.

4 x Dhrystone 2 using register variables  1 2 3 4 5 6 7 8 9 10

4 x Double-Precision Whetstone  1 2 3 4 5 6 7 8 9 10

4 x Execl Throughput  1 2 3

4 x File Copy 1024 bufsize 2000 maxblocks  1 2 3

4 x File Copy 256 bufsize 500 maxblocks  1 2 3

4 x File Copy 4096 bufsize 8000 maxblocks  1 2 3

4 x Pipe Throughput  1 2 3 4 5 6 7 8 9 10

4 x Pipe-based Context Switching  1 2 3 4 5 6 7 8 9 10

4 x Process Creation  1 2 3

4 x System Call Overhead  1 2 3 4 5 6 7 8 9 10

4 x Shell Scripts (1 concurrent)  1 2 3

4 x Shell Scripts (8 concurrent)  1 2 3
Wide character in printf at ./Run line 1483.

========================================================================
   BYTE UNIX Benchmarks (Version 5.1.2)

   System: aml: GNU/Linux
   OS: GNU/Linux -- 5.5.0-rc6-aml-s9xxx -- #rc1.037 SMP PREEMPT Wed Feb 5 17:28:41 MSK 2020
   Machine: aarch64 (aarch64)
   Language: en_US.utf8 (charmap=&amp;quot;UTF-8&amp;quot;, collate=&amp;quot;UTF-8&amp;quot;)
   CPU 0: ARMv8 Processor rev 4 (v8l) (0.0 bogomips)

   CPU 1: ARMv8 Processor rev 4 (v8l) (0.0 bogomips)

   CPU 2: ARMv8 Processor rev 4 (v8l) (0.0 bogomips)

   CPU 3: ARMv8 Processor rev 4 (v8l) (0.0 bogomips)

   19:35:59 up  2:44,  1 user,  load average: 2.13, 2.07, 2.01; runlevel 5

------------------------------------------------------------------------
Benchmark Run: 一 3月 02 2020 19:35:59 - 20:03:58
4 CPUs in system; running 1 parallel copy of tests

Dhrystone 2 using register variables        6888588.0 lps   (10.0 s, 7 samples)
Double-Precision Whetstone                     1373.9 MWIPS (9.8 s, 7 samples)
Execl Throughput                                877.5 lps   (30.0 s, 2 samples)
File Copy 1024 bufsize 2000 maxblocks        168765.4 KBps  (30.0 s, 2 samples)
File Copy 256 bufsize 500 maxblocks           49199.4 KBps  (30.0 s, 2 samples)
File Copy 4096 bufsize 8000 maxblocks        445012.9 KBps  (30.0 s, 2 samples)
Pipe Throughput                              327924.7 lps   (10.0 s, 7 samples)
Pipe-based Context Switching                  69606.2 lps   (10.0 s, 7 samples)
Process Creation                               2416.8 lps   (30.0 s, 2 samples)
Shell Scripts (1 concurrent)                   2283.5 lpm   (60.0 s, 2 samples)
Shell Scripts (8 concurrent)                    656.5 lpm   (60.0 s, 2 samples)
System Call Overhead                         632162.6 lps   (10.0 s, 7 samples)

System Benchmarks Index Values               BASELINE       RESULT    INDEX
Dhrystone 2 using register variables         116700.0    6888588.0    590.3
Double-Precision Whetstone                       55.0       1373.9    249.8
Execl Throughput                                 43.0        877.5    204.1
File Copy 1024 bufsize 2000 maxblocks          3960.0     168765.4    426.2
File Copy 256 bufsize 500 maxblocks            1655.0      49199.4    297.3
File Copy 4096 bufsize 8000 maxblocks          5800.0     445012.9    767.3
Pipe Throughput                               12440.0     327924.7    263.6
Pipe-based Context Switching                   4000.0      69606.2    174.0
Process Creation                                126.0       2416.8    191.8
Shell Scripts (1 concurrent)                     42.4       2283.5    538.6
Shell Scripts (8 concurrent)                      6.0        656.5   1094.1
System Call Overhead                          15000.0     632162.6    421.4
                                                                   ========
System Benchmarks Index Score                                         369.1

------------------------------------------------------------------------
Benchmark Run: 一 3月 02 2020 20:03:58 - 20:32:08
4 CPUs in system; running 4 parallel copies of tests

Dhrystone 2 using register variables       26826718.3 lps   (10.0 s, 7 samples)
Double-Precision Whetstone                     5449.1 MWIPS (9.8 s, 7 samples)
Execl Throughput                               2965.8 lps   (30.0 s, 2 samples)
File Copy 1024 bufsize 2000 maxblocks        291243.4 KBps  (30.0 s, 2 samples)
File Copy 256 bufsize 500 maxblocks           80902.5 KBps  (30.0 s, 2 samples)
File Copy 4096 bufsize 8000 maxblocks        827300.0 KBps  (30.0 s, 2 samples)
Pipe Throughput                             1252522.5 lps   (10.0 s, 7 samples)
Pipe-based Context Switching                 217969.4 lps   (10.0 s, 7 samples)
Process Creation                               6193.8 lps   (30.0 s, 2 samples)
Shell Scripts (1 concurrent)                   5216.1 lpm   (60.0 s, 2 samples)
Shell Scripts (8 concurrent)                    701.8 lpm   (60.1 s, 2 samples)
System Call Overhead                        2375324.0 lps   (10.0 s, 7 samples)

System Benchmarks Index Values               BASELINE       RESULT    INDEX
Dhrystone 2 using register variables         116700.0   26826718.3   2298.8
Double-Precision Whetstone                       55.0       5449.1    990.7
Execl Throughput                                 43.0       2965.8    689.7
File Copy 1024 bufsize 2000 maxblocks          3960.0     291243.4    735.5
File Copy 256 bufsize 500 maxblocks            1655.0      80902.5    488.8
File Copy 4096 bufsize 8000 maxblocks          5800.0     827300.0   1426.4
Pipe Throughput                               12440.0    1252522.5   1006.9
Pipe-based Context Switching                   4000.0     217969.4    544.9
Process Creation                                126.0       6193.8    491.6
Shell Scripts (1 concurrent)                     42.4       5216.1   1230.2
Shell Scripts (8 concurrent)                      6.0        701.8   1169.6
System Call Overhead                          15000.0    2375324.0   1583.5
                                                                   ========
System Benchmarks Index Score                                         943.1
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>YandexDisk命令行客户端</title>
      <link>https://unixetc.com/post/yandex-disk-console-client-for-linux/</link>
      <pubDate>Sat, 29 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/yandex-disk-console-client-for-linux/</guid>
      <description>&lt;p&gt;Linux的Yandex.Disk控制台客户端使您可以在Yandex.Disk上管理文件，而无需使用&lt;a href=&#34;https://yandex.com/support/disk/cli-clients.html#cli-gui&#34;&gt;窗口界面&lt;/a&gt;或支持&lt;a href=&#34;https://yandex.com/support/disk/webdav.html#concept3&#34;&gt;WebDAV的程序&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;与WebDAV连接相比，使用控制台客户端的优势：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Low system resource requirements.&lt;/li&gt;
&lt;li&gt;Faster file reading and writing speeds.&lt;/li&gt;
&lt;li&gt;Faster syncing with the Yandex.Disk server.&lt;/li&gt;
&lt;li&gt;Manage files offline.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;控制台客户端可以安装在以下操作系统上：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Ubuntu Linux 8.04 及以上版本&lt;/li&gt;
&lt;li&gt;Debian 5 及以上版本&lt;/li&gt;
&lt;li&gt;Fedora 9 及以上版本&lt;/li&gt;
&lt;li&gt;Red Hat Enterprise Linux 6 及以上版本&lt;/li&gt;
&lt;li&gt;CentOS 6 及以上版本&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;安装客户端&#34;&gt;安装客户端&lt;/h3&gt;
&lt;p&gt;要自动安装客户端，请使用命令进行快速软件包安装。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;.deb软件包&lt;/em&gt; 安装示例&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;echo &amp;quot;deb http://repo.yandex.ru/yandex-disk/deb/ stable main&amp;quot; | sudo tee -a /etc/apt/sources.list.d/yandex-disk.list &amp;gt; /dev/null
wget http://repo.yandex.ru/yandex-disk/YANDEX-DISK-KEY.GPG -O- | sudo apt-key add - 
sudo apt-get update
sudo apt-get install -y yandex-disk
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;要手动安装客户端，请从下面的相应链接下载相应版本的软件包。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;包格式&lt;/th&gt;
&lt;th&gt;32位&lt;/th&gt;
&lt;th&gt;64位&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;.deb (Ubuntu, Debian)&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://repo.yandex.ru/yandex-disk/yandex-disk_latest_i386.deb&#34;&gt;yandex-disk_latest_i386&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://repo.yandex.ru/yandex-disk/yandex-disk_latest_amd64.deb&#34;&gt;yandex-disk_latest_amd64&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;.rpm (Fedora, Red Hat Enterprise Linux, CentOS)&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://repo.yandex.ru/yandex-disk/yandex-disk-latest.i386.rpm&#34;&gt;yandex-disk-latest.i386&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://repo.yandex.ru/yandex-disk/yandex-disk-latest.x86_64.rpm&#34;&gt;yandex-disk-latest.x86_64&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;使用dpkg软件包管理器的安装示例&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# dpkg -i yandex-disk_0.1.0.103_i386.deb
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;注意:该存储库自动安装在&lt;code&gt;/etc/apt/sources.list.d/yandex.list&lt;/code&gt;中&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;使用rpm软件包管理器进行安装的示例&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# rpm -ivh yandex-disk-0.1.0.103-1.fedora.i386.rpm
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;注意：该存储库将自动安装到&lt;code&gt;/etc/yum.repos.d/yandex.repo&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;您还可以将包含yandex-disk软件包的存储库添加到可用的软件包管理器存储库列表中，并使用apt-get或yum实用程序安装该软件包。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;使用apt-get安装&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# echo &amp;quot;deb http://repo.yandex.ru/yandex-disk/deb/ stable main&amp;quot; &amp;gt;&amp;gt; /etc/apt/sources.list.d/yandex-disk.list
# apt-get update
# apt-get install yandex-disk
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;使用yum安装&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# nano /etc/yum.repos.d/yandex.repo
# rpm --import http://repo.yandex.ru/yandex-disk/YANDEX-DISK-KEY.GPG
# yum install yandex-disk
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;yandex.repo&lt;/code&gt;内容：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[yandex]
name=Yandex
failovermethod=priority
baseurl=http://repo.yandex.ru/yandex-disk/rpm/stable/$basearch/
enabled=1
metadata_expire=1d
gpgcheck=1
gpgkey=http://repo.yandex.ru/yandex-disk/YANDEX-DISK-KEY.GPG
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;您可能需要将一个打开的GPG密钥导入系统以检查软件包的数字签名。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;为.deb包导入GPG密钥&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;wget -O YANDEX-DISK-KEY.GPG http://repo.yandex.ru/yandex-disk/YANDEX-DISK-KEY.GPG
sudo apt-key add YANDEX-DISK-KEY.GPG
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;*&lt;strong&gt;为.rpm包导入GPG密钥&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo rpm --import http://repo.yandex.ru/yandex-disk/YANDEX-DISK-KEY.GPG
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;设置向导&#34;&gt;设置向导&lt;/h3&gt;
&lt;p&gt;您可以使用&lt;code&gt;setup&lt;/code&gt;命令运行客户端安装程序。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ yandex-disk setup
&lt;/code&gt;&lt;/pre&gt;&lt;ol&gt;
&lt;li&gt;输入存储Yandex.Disk本地副本的目录的名称。如果将名称保留为空白，则会在主目录中创建一个Yandex.Disk文件夹。&lt;/li&gt;
&lt;li&gt;指示是否使用代理服务器（是/否）。&lt;/li&gt;
&lt;li&gt;指示是否在启动时启动客户端（是/否）。&lt;/li&gt;
&lt;li&gt;输入您的Yandex用户名。&lt;/li&gt;
&lt;li&gt;输入您的Yandex密码。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;注意：如果您使用或以前使用过两次身份验证，则需要由“Yandex.Key”移动应用程序生成的一次性密码登录到Yandex.Disk程序。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;设置向导完成后，将在&lt;code&gt;~/.config/yandex-disk&lt;/code&gt;中创建&lt;code&gt;config.cfg&lt;/code&gt;配置文件。&lt;/p&gt;
&lt;h3 id=&#34;使用客户端&#34;&gt;使用客户端&lt;/h3&gt;
&lt;h4 id=&#34;命令&#34;&gt;命令&lt;/h4&gt;
&lt;p&gt;使用以下命令与客户端一起使用：&lt;/p&gt;
&lt;p&gt;. &lt;code&gt;Token&lt;/code&gt; 为您的Yandex用户名（USERNAME）获取授权密钥（OAuth令牌）。输入命令时，您可以输入您的Yandex密码（PASSWORD）以及令牌文件及其目录（FILE）。如果未指定其他选项，将在&lt;code&gt;~/.config/yandex-disk&lt;/code&gt;中创建&lt;code&gt;passwd&lt;/code&gt;文件来存储令牌。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ yandex-disk token [-p, --password=PASSWORD] [OPTION] USERNAME [FILE]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;. &lt;code&gt;Start&lt;/code&gt; 启动守护程序并同步除exclude-dirs排除列表中的所有文件夹之外的所有文件夹。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ yandex-disk start [OPTION]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;. &lt;code&gt;Status&lt;/code&gt; 显示守护程序的状态（同步状态，同步错误，已同步文件列表以及Yandex.Disk上的总空间和可用空间）。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ yandex-disk status [OPTION]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;. &lt;code&gt;Stop&lt;/code&gt; 停止守护程序。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ yandex-disk stop [OPTION]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;. &lt;code&gt;Sync&lt;/code&gt; 同步除exclude-dirs排除列表中的文件夹以外的所有文件夹。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ yandex-disk sync [OPTION]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;. &lt;code&gt;Publish&lt;/code&gt; 获取指向指定文件或文件夹（FILE）的公共链接。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ yandex-disk publish [OPTION] FILE&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;. &lt;code&gt;Unpublish&lt;/code&gt; 取消发布指定的文件或文件夹（FILE）。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$ yandex-disk unpublish FILE&lt;/code&gt;&lt;/p&gt;
&lt;h4 id=&#34;其他选项option&#34;&gt;其他选项[OPTION]&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&amp;ndash;config=FILE, -c FILE&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;显示配置文件。默认为&lt;code&gt;~/.config/yandex-disk&lt;/code&gt;下的&lt;code&gt;config.cfg&lt;/code&gt;文件&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;ndash;dir=DIR, -d DIR&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;输入要存储Yandex.Disk本地副本的目录。如果在初始设置过程中未输入名称，则默认情况下将使用&lt;code&gt;~/Yandex.Disk&lt;/code&gt;。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;ndash;auth=FILE, -a FILE&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;输入包含授权数据的文件。默认文件是&lt;code&gt;passwd&lt;/code&gt;，它是使用&lt;code&gt;token&lt;/code&gt;命令或设置向导创建的，并存储在&lt;code&gt;~/.config/yandex-disk&lt;/code&gt;中。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;ndash;exclude-dirs=DIR1,DIR2,&amp;hellip;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;不要同步指定的目录。 为了使这些设置始终适用，必须将这些目录添加到&lt;code&gt;config.cfg&lt;/code&gt;文件中的&lt;code&gt;exclude-dirs&lt;/code&gt;排除列表中。 为了使设置正常工作，排除目录的名称应用逗号而不是空格分隔。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;ndash;read-only&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;禁止更改Yandex.Disk服务器上的文件，并且仅同步本地副本。如果发生同步冲突，则将重命名本地文件。如果还启用了&lt;code&gt;--overwrite&lt;/code&gt;设置，则将覆盖本地文件。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;ndash;overwrite&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;与服务器同步时，要覆盖对Yandex.Disk本地副本所做的更改。与&lt;code&gt;--read-only&lt;/code&gt;选项一起使用。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;ndash;no-daemon, -D&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;启动守护程序而不将管理返回到控制台。要返回管理，必须通过在另一个控制台中启动命令&lt;code&gt;yandex-disk stop&lt;/code&gt;或关闭当前控制台来停止守护程序。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;ndash;help, -h&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;显示帮助。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&amp;ndash;proxy=PARAM&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;配置代理服务器。有效参数：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Auto — 使用系统代理设置（默认使用）。&lt;/li&gt;
&lt;li&gt;no — 不要使用代理服务器。&lt;/li&gt;
&lt;li&gt;protocol,address,port,login,password — 手动设置服务器。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;使用命令的例子&#34;&gt;使用命令的例子&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;$ yandex-disk start -c ~/ydconfig/newconfig.cfg # launch the daemon and sync with specified configuration file 
$ yandex-disk start --exclude-dirs=Foto # do not sync folder &#39;Photo&#39;
$ yandex-disk sync --read-only # sync folders in &#39;read-only&#39; mode
$ yandex-disk publish Photo # get a public link to the folder &#39;Photo&#39;
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;configcfg文件的示例&#34;&gt;&amp;lsquo;config.cfg&amp;rsquo;文件的示例&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;# Path to file with authorization dataauth=&amp;quot;/home/user/ydconfig/my_passwd&amp;quot; 
# Folder for storing the local copy of Yandex.Disk.dir=&amp;quot;/home/user/myDisk&amp;quot;
# Do not sync specified folders.
# exclude-dirs=&amp;quot;exclude/dir1,exclude/dir2,path/to/another/exclude/dir&amp;quot;
# Specify proxy server. Examples:
#proxy=https,127.0.0.1,80
#proxy=https,127.0.0.1,80,login,password
#proxy=https,127.0.0.1,443
#proxy=socks4,my.proxy.local,1080,login,password
#proxy=socks5,my.another.proxy.local,1081
#proxy=auto
#proxy=no
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;faq&#34;&gt;FAQ&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;控制台客户端中有哪些Yandex.Disk功能？&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;使用控制台客户端时，Yandex.Disk的所有主要功能都可用：同步和共享文件和文件夹，以及自定义文件夹同步。&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;自定义文件夹同步在控制台客户端中是否起作用？&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Yes. You can choose not to sync certain folders by entering the command (setting &amp;ndash;exclude-dirs=DIR1,DIR2,&amp;hellip;) or by adding them to the exclude-dirs exclusion list in config.cfg.
是。您可以通过输入命令（设置&amp;ndash;exclude-dirs = DIR1，DIR2，&amp;hellip;）或将其添加到config.cfg中的exclude-dirs排除列表中，选择不同步某些文件夹。&lt;/p&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;控制台客户端是否支持符号链接？&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;是的，它确实。&lt;/p&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;控制台客户端可以用于数据复制吗？&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;是。可以使用&amp;ndash;read-only参数复制数据。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;via &lt;a href=&#34;https://yandex.com/support/disk/cli-clients.html&#34;&gt;https://yandex.com/support/disk/cli-clients.html&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>CentOS安装Hugo</title>
      <link>https://unixetc.com/post/centos-install-hugo-via-repo/</link>
      <pubDate>Tue, 04 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/centos-install-hugo-via-repo/</guid>
      <description>&lt;p&gt;Hugo是由Go语言实现的静态网站生成器。简单、易用、高效、易扩展、快速部署。&lt;/p&gt;
&lt;p&gt;新建&lt;code&gt;hugo.repo&lt;/code&gt;文件，&lt;code&gt;sudo vi /etc/yum.repos.d/hugo.repo&lt;/code&gt;，填入以下内容。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[daftaupe-hugo]
name=Copr repo for hugo owned by daftaupe
baseurl=https://copr-be.cloud.fedoraproject.org/results/daftaupe/hugo/epel-7-$basearch/
type=rpm-md
skip_if_unavailable=True
gpgcheck=1
gpgkey=https://copr-be.cloud.fedoraproject.org/results/daftaupe/hugo/pubkey.gpg
repo_gpgcheck=0
enabled=1
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;保存后更新安装Hugo&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo yum update
sudo yum install hugo -y
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>Gnome美化简介</title>
      <link>https://unixetc.com/post/gnome-landscaping-guide/</link>
      <pubDate>Sun, 08 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/gnome-landscaping-guide/</guid>
      <description>&lt;h3 id=&#34;安装必要软件&#34;&gt;安装必要软件&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;sudo apt install gnome-tweak-tool chrome-gnome-shell
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;安装gnome-shell-extensions&#34;&gt;安装Gnome Shell Extensions&lt;/h3&gt;
&lt;p&gt;使用Firefox浏览&lt;a href=&#34;https://extensions.gnome.org/&#34;&gt;https://extensions.gnome.org/&lt;/a&gt;，第一次访问根据提示安装Firefox插件，如下图:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://i.loli.net/2019/12/08/5CTzZAgmjRhQnoP.png&#34; alt=&#34;Click here to install browser extension&#34;&gt;&lt;/p&gt;
&lt;p&gt;安装完成后，访问&lt;a href=&#34;https://extensions.gnome.org/&#34;&gt;https://extensions.gnome.org/&lt;/a&gt;搜索安装以下三个GnomeShellExtension&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;User Themes  加载用户主题，加载目录为~/.local/share/themes&lt;/li&gt;
&lt;li&gt;Dash to Dock 定制 Dash/Dock&lt;/li&gt;
&lt;li&gt;Gnome Global Application Menu   Gnome全局菜单&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;安装方法如下，进入到扩展详情后，点击标题后的开关，按照提示安装即可&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://i.loli.net/2019/12/08/SMOrIxFGWBuVlbK.png&#34; alt=&#34;install gnome shell extension&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;安装主题&#34;&gt;安装主题&lt;/h3&gt;
&lt;p&gt;访问&lt;a href=&#34;https://www.gnome-look.org/&#34;&gt;https://www.gnome-look.org/&lt;/a&gt;，在GTK3 Themes分类下下载主题，下载后解压拷贝至&lt;code&gt;~/.local/share/themes&lt;/code&gt;下，然后打开gnome-tweak，在外观中即可选择已安装的主题。&lt;/p&gt;
&lt;p&gt;在&lt;code&gt;~/.local/share/&lt;/code&gt;下新建&lt;strong&gt;themes&lt;/strong&gt;、&lt;strong&gt;icons&lt;/strong&gt;和&lt;strong&gt;fonts&lt;/strong&gt;三个目录，分别对应主题、图标、字体，这些资源都可以在&lt;a href=&#34;https://www.gnome-look.org/&#34;&gt;https://www.gnome-look.org/&lt;/a&gt;找得到。&lt;/p&gt;
&lt;p&gt;以下为本人的桌面截图，仅供参考：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://i.loli.net/2019/12/08/2wlakxOTfGcshYu.png&#34; alt=&#34;桌面截图&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>在Linux中安装Windows字体</title>
      <link>https://unixetc.com/post/linux-install-windows-fonts/</link>
      <pubDate>Thu, 21 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/linux-install-windows-fonts/</guid>
      <description>&lt;p&gt;使用的系统为&lt;strong&gt;Ubuntu 19.10&lt;/strong&gt;，Windows系统分区lable为&lt;strong&gt;sys&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;参考如下操作：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;alair@e6440:~$ sudo mkdir /usr/share/fonts/winfonts
[sudo] alair 的密码： 
alair@e6440:~$ sudo cp /media/alair/sys/Windows/Fonts/* /usr/share/fonts/winfonts/  
alair@e6440:~$ sudo rm -rf /usr/share/fonts/winfonts/*.fon
alair@e6440:~$ sudo mkfontscale 
alair@e6440:~$ sudo mkfontdir 
alair@e6440:~$ sudo fc-cache 
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;打完收工！&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Armbian更改软件源</title>
      <link>https://unixetc.com/post/armbian-change-software-source/</link>
      <pubDate>Tue, 05 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/armbian-change-software-source/</guid>
      <description>&lt;p&gt;上一篇文章介绍了&lt;a href=&#34;https://unixetc.com/post/phicomm-n1-install-armbian/&#34;&gt;如何在斐迅N1上安装Armbian&lt;/a&gt;，现在介绍如何更改软件源为国内镜像。&lt;/p&gt;
&lt;p&gt;编辑&lt;code&gt;/etc/apt/sources.list&lt;/code&gt;替换为以下内容：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;deb https://mirrors.tuna.tsinghua.edu.cn/debian/ buster main contrib non-free
# deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ buster main contrib non-free
deb https://mirrors.tuna.tsinghua.edu.cn/debian/ buster-updates main contrib non-free
# deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ buster-updates main contrib non-free
deb https://mirrors.tuna.tsinghua.edu.cn/debian/ buster-backports main contrib non-free
# deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ buster-backports main contrib non-free
deb https://mirrors.tuna.tsinghua.edu.cn/debian-security buster/updates main contrib non-free
# deb-src https://mirrors.tuna.tsinghua.edu.cn/debian-security buster/updates main contrib non-free
deb http://ftp.debian.org/debian jessie-backports main
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;接着编辑&lt;code&gt;/etc/apt/sources.list.d/armbian.list &lt;/code&gt;，替换为以下内容：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;deb http://mirrors.tuna.tsinghua.edu.cn/armbian/ buster main buster-utils buster-desktop
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;保存后，刷新缓存更新系统：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo apt update
sudo apt upgrade -y
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>斐讯N1安装Armbian</title>
      <link>https://unixetc.com/post/phicomm-n1-install-armbian/</link>
      <pubDate>Sun, 03 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/phicomm-n1-install-armbian/</guid>
      <description>&lt;p&gt;最近入手斐讯N1一枚，买的是白色未拆封，到手版本为&lt;strong&gt;V2.19_0307_NS&lt;/strong&gt;，刚好省了降级的麻烦，以下为斐讯N1安装armbian操作过程。&lt;/p&gt;
&lt;h3 id=&#34;开启adb调试模式&#34;&gt;开启adb调试模式&lt;/h3&gt;
&lt;p&gt;将N1通过HDMI连接显示器，将鼠标插到N1的USB口上，开机后用鼠标点击&lt;strong&gt;系统版本:V2.19_0307_NS&lt;/strong&gt;区域，多次点击后会出现提示&amp;quot;开启adb调试模式&amp;rdquo;，即可。&lt;/p&gt;
&lt;p&gt;从此下载&lt;a href=&#34;https://tc5.us/file/18418398-405909486&#34;&gt;minimal_adb_fastboot&lt;/a&gt;，下载后安装。&lt;/p&gt;
&lt;h3 id=&#34;准备刷机u盘&#34;&gt;准备刷机U盘&lt;/h3&gt;
&lt;p&gt;准备一个不小区8G的U盘，下载镜像写入工具&lt;a href=&#34;https://tc5.us/file/18418398-404861253&#34;&gt;balenaEtcher&lt;/a&gt;，下载后安装。&lt;/p&gt;
&lt;p&gt;下载&lt;strong&gt;Armbian&lt;/strong&gt;镜像，在此以&lt;strong&gt;Armbian_5.98_Aml-g12_Debian_buster_dev_5.4.0-rc4_20191025.img.xz&lt;/strong&gt;为例，镜像为debian最新版，不带桌面系统。如果需要其他的可以从&lt;a href=&#34;https://yadi.sk/d/pHxaRAs-tZiei&#34;&gt;此处&lt;/a&gt;自行下载。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://tc5.us/file/18418398-404861253&#34;&gt;Armbian_5.98_Aml-g12_Debian_buster_dev_5.4.0-rc4_20191025.img.xz&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;将下载后的镜像文件用&lt;strong&gt;balenaEtcher&lt;/strong&gt;写入U盘，写入完成后先别拔掉U盘，进入到&lt;strong&gt;BOOT&lt;/strong&gt;分区，找到&lt;strong&gt;uEnv.ini&lt;/strong&gt;文件，将&lt;strong&gt;dtb_name&lt;/strong&gt;行改为如下内容：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;dtb_name=/dtb/amlogic/meson-gxl-s905d-phicomm-n1.dtb&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;然后退出U盘备用。&lt;/p&gt;
&lt;p&gt;如果你的&lt;strong&gt;BOOT&lt;/strong&gt;分区下&lt;code&gt;/dtd/amlogic/&lt;/code&gt;目录中没有&lt;code&gt;meson-gxl-s905d-phicomm-n1.dtb&lt;/code&gt;文件，那么可以点击&lt;a href=&#34;https://tc5.us/file/18418398-405918006&#34;&gt;meson-gxl-s905d-phicomm-n1.dtb&lt;/a&gt;下载放入相应目录即可。&lt;/p&gt;
&lt;h3 id=&#34;从u盘引导armbian&#34;&gt;从U盘引导Armbian&lt;/h3&gt;
&lt;p&gt;将制作好的系统U盘插到靠近HDMI一侧的U口，另外一个U口插入双公头的刷机线连接电脑，将N1通过HDMI连接显示器，并且插好网线然后开机。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://unixetc.com/imgs/n1lianxian.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;开机后可以从显示器上看到盒子的IP地址，电脑上运行&lt;strong&gt;Minimal ADB and Fastboot&lt;/strong&gt;，然后输入&lt;code&gt;adb connect 192.168.1.54&lt;/code&gt;命令连接盒子，连接成功后会有如下提示：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;connected to 192.168.1.54:5555&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;然后输入&lt;code&gt;adb shell reboot update&lt;/code&gt;开始从U盘引导Armbian系统，盒子重启后成功引导armbian，此时可以将&lt;strong&gt;usb刷机线&lt;/strong&gt;拔掉，插入一个外接键盘，开始后面操作。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Armbian&lt;/strong&gt;系统默认账号为&lt;strong&gt;root&lt;/strong&gt;，密码为&lt;strong&gt;1234&lt;/strong&gt;，按照提示输入账号信息进行登录，登录后会有更改默认密码提示，按照提示更改默认密码。&lt;/p&gt;
&lt;p&gt;接下来会有新建账号提示:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Creating a new user account. Press &amp;lt;Ctrl-C&amp;gt; to abort

Please provide a username (eg. your forename):
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;可以按照该提示新建账号，或者按&lt;!-- raw HTML omitted --&gt;Ctrl+c&lt;!-- raw HTML omitted --&gt;终止，继续用&lt;strong&gt;root&lt;/strong&gt;账号登录。&lt;/p&gt;
&lt;h3 id=&#34;将armbian安装到n1中&#34;&gt;将Armbian安装到N1中&lt;/h3&gt;
&lt;p&gt;以上只是从U盘成功引导登录Armbian，接下来我们将Armbian安装到N1内置存储(eMMC)，即可拔掉U盘了。&lt;/p&gt;
&lt;p&gt;如果是通过&lt;strong&gt;root&lt;/strong&gt;登录的话，那么直接运行root目录下&lt;code&gt;install.sh&lt;/code&gt;即可安装，如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; root@aml:~# ./install. sh
 Start script create MBR and filesystem
 /dev/mmcblk1
 Start backup u-boot default
 4＋0 records in
 4＋0 records out
4194304 bytes（4.2mb，4.omib） copied，o.793832s，52.8mb/s Start create MBR and partittion
 start restore u-boot
 442＋0 records in
 442＋0 records out
 442 bytes copied， 0.0123705 s， 35.7 KB/
 8191＋0 records in
 8191＋0 records out
 4193792 bytes （4.2 MB， 4.0 MiB） copied， 0.414592， 10.1 MB/s Done
 Start copy system for eMMC.
 Formatting BOOT partition... mkfs. fat 4.1 （2017-01-24）
 done.
 Cppying BOOT... done.
 Edit init config... done.
 Formatt ing ROOT partition...
 e2fsck1.44.5（15-dec-2018）
 ROOT EMMC: clean， 11/427392 files， 50723/1706240 blocks
 done.
 Copying ROOTFS.
 Copy BIN
 Create DEV
 Copy ETC
 Copy HOME
 Copy LIB
 Create MEDIA
 Create MNT
 Copy OPT
 Create PROC
 Copy ROOT
 Create RUN
 Copy SBIN
 Copy SEL INUX
 Copy SRV
 Create SYS
 Create TMP
 Copy USR
 Copy VAR
 Copy fstab
*****************************
 Complete copy os to eMMC
*****************************
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;提示&lt;strong&gt;Complete copy OS to eMMC&lt;/strong&gt;就表示安装完成，然后输入&lt;code&gt;halt&lt;/code&gt;关机，拔掉U盘后重新加电启动盒子即可。&lt;/p&gt;
&lt;p&gt;如果不是通过root用户登录的话，那么按照如下操作进行安装。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$su
#cd /root/
#./install.sh
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>Debian10中sudo配置</title>
      <link>https://unixetc.com/post/sudo-configuration-in-debian10/</link>
      <pubDate>Wed, 10 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/sudo-configuration-in-debian10/</guid>
      <description>&lt;p&gt;Debian10中&lt;code&gt;/etc/sudoers&lt;/code&gt;中提示了需要通过&lt;code&gt;visudo&lt;/code&gt;来编辑该文件，如下：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This file MUST be edited with the &amp;lsquo;visudo&amp;rsquo; command as root.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;但奇葩的是系统中没有&lt;code&gt;visudo&lt;/code&gt;命令，&lt;code&gt;apt&lt;/code&gt;搜索也搜不到，-_-!&lt;/p&gt;
&lt;p&gt;因此只能通过以下方法来编辑：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#echo &amp;quot;alair  ALL=(ALL:ALL) ALL&amp;quot; &amp;gt;&amp;gt; /etc/sudoers
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;保存后用户&lt;code&gt;alair&lt;/code&gt;就可以使用&lt;code&gt;sudo&lt;/code&gt;命令来进行&lt;strong&gt;root&lt;/strong&gt;权限操作了。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>CentOS7安装ffsend快速分享文件</title>
      <link>https://unixetc.com/post/centos7-install-ffsend-to-share-files/</link>
      <pubDate>Thu, 04 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/centos7-install-ffsend-to-share-files/</guid>
      <description>&lt;h3 id=&#34;firefox-send是什么&#34;&gt;Firefox Send是什么？&lt;/h3&gt;
&lt;p&gt;Firefox Send是一个简单、私密的文件分享服务，使用Firefox Send端到端加密分享文件，链接到期即焚。分享更私密，文件到期真正无痕迹。&lt;/p&gt;
&lt;h3 id=&#34;安装ffsend&#34;&gt;安装ffsend&lt;/h3&gt;
&lt;p&gt;ffsend是一款Firefox Send的客户端，支持多种操作系统(Linux、Windows、MacOS&amp;hellip;)&lt;/p&gt;
&lt;p&gt;以下为CentOS7安装ffsend实例：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#wget https://glare.now.sh/timvisee/ffsend/linux-x64-static -o /usr/local/bin/ffsend
#chmod +x /usr/local/bin/ffsend
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;其他版本安装可以参考&lt;a href=&#34;https://github.com/timvisee/ffsend&#34;&gt;ffsend官网&lt;/a&gt;和&lt;a href=&#34;https://github.com/timvisee/ffsend/releases&#34;&gt;ffsend官方下载&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;ffsend使用方法&#34;&gt;ffsend使用方法&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;上传文件&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ffsend upload fenix.apk
Upload complete
https://send.firefox.com/download/4cecb9c1ab628f8e/#m5is-YRSfnBIQ-pBaSds0A
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;高级上传&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;指定下再限制20&lt;/p&gt;
&lt;p&gt;输入密码加密文件&lt;/p&gt;
&lt;p&gt;在上传之前归档文件&lt;/p&gt;
&lt;p&gt;将共享链接复制到剪贴板&lt;/p&gt;
&lt;p&gt;在浏览器中打开共享链接&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code&gt;ffsend upload --downloads 20 --password --archive --copy --open fenix.apk
Password: ******
https://send.firefox.com/download/4cecb9c1ab628f8e/#m5is-YRSfnBIQ-pBaSds0A
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;上传到自定义主机&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ffsend u -h https://example.com/ my-file.txt
https://example.com/#sample-share-url
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;下载文件&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ffsend download https://send.firefox.com/download/4cecb9c1ab628f8e/#m5is-YRSfnBIQ-pBaSds0A
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Ubuntu中v2ray客户端配置实例</title>
      <link>https://unixetc.com/post/v2ray-client-configuration-example-in-ubuntu/</link>
      <pubDate>Sat, 18 May 2019 09:00:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/v2ray-client-configuration-example-in-ubuntu/</guid>
      <description>&lt;p&gt;首先使用&lt;code&gt;bash &amp;lt;(curl -L -s https://install.direct/go.sh)&lt;/code&gt;来快捷安装v2ray，如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;root@vm:~# bash &amp;lt;(curl -L -s https://install.direct/go.sh)
Installing V2Ray v4.18.0 on x86_64
Downloading V2Ray: https://github.com/v2ray/v2ray-core/releases/download/v4.18.0/v2ray-linux-64.zip
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100   608    0   608    0     0    581      0 --:--:--  0:00:01 --:--:--   581
100 10.5M  100 10.5M    0     0   172k      0  0:01:02  0:01:02 --:--:--  194k
Extracting V2Ray package to /tmp/v2ray.
Archive:  /tmp/v2ray/v2ray.zip
  inflating: /tmp/v2ray/config.json  
   creating: /tmp/v2ray/doc/
  inflating: /tmp/v2ray/doc/readme.md  
  inflating: /tmp/v2ray/geoip.dat    
  inflating: /tmp/v2ray/geosite.dat  
   creating: /tmp/v2ray/systemd/
  inflating: /tmp/v2ray/systemd/v2ray.service  
   creating: /tmp/v2ray/systemv/
  inflating: /tmp/v2ray/systemv/v2ray  
  inflating: /tmp/v2ray/v2ctl        
 extracting: /tmp/v2ray/v2ctl.sig    
  inflating: /tmp/v2ray/v2ray        
 extracting: /tmp/v2ray/v2ray.sig    
  inflating: /tmp/v2ray/vpoint_socks_vmess.json  
  inflating: /tmp/v2ray/vpoint_vmess_freedom.json  
PORT:51332
UUID:7378f6a4-790a-11e9-8f9e-2a86e4085a59
Created symlink /etc/systemd/system/multi-user.target.wants/v2ray.service → /etc/systemd/system/v2ray.service.
V2Ray v4.18.0 is installed.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后编辑&lt;code&gt;/etc/v2ray/config.json&lt;/code&gt;文件，如下设置：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{
  &amp;quot;inbounds&amp;quot;: [{
    &amp;quot;port&amp;quot;: 1080,  // SOCKS 代理端口，在浏览器中需配置代理并指向这个端口
    &amp;quot;listen&amp;quot;: &amp;quot;127.0.0.1&amp;quot;,
    &amp;quot;protocol&amp;quot;: &amp;quot;socks&amp;quot;,
    &amp;quot;settings&amp;quot;: {
      &amp;quot;udp&amp;quot;: true
    }
  }],
  &amp;quot;outbounds&amp;quot;: [{
    &amp;quot;protocol&amp;quot;: &amp;quot;vmess&amp;quot;,
    &amp;quot;settings&amp;quot;: {
      &amp;quot;vnext&amp;quot;: [{
        &amp;quot;address&amp;quot;: &amp;quot;server&amp;quot;, // 服务器地址，请修改为你自己的服务器 ip 或域名
        &amp;quot;port&amp;quot;: 10086,  // 服务器端口
        &amp;quot;users&amp;quot;: [{ &amp;quot;id&amp;quot;: &amp;quot;b831381d-6324-4d53-ad4f-8cda48b30811&amp;quot; }]
      }]
    }
  },{
    &amp;quot;protocol&amp;quot;: &amp;quot;freedom&amp;quot;,
    &amp;quot;tag&amp;quot;: &amp;quot;direct&amp;quot;,
    &amp;quot;settings&amp;quot;: {}
  }],
  &amp;quot;routing&amp;quot;: {
    &amp;quot;domainStrategy&amp;quot;: &amp;quot;IPOnDemand&amp;quot;,
    &amp;quot;rules&amp;quot;: [{
      &amp;quot;type&amp;quot;: &amp;quot;field&amp;quot;,
      &amp;quot;ip&amp;quot;: [&amp;quot;geoip:private&amp;quot;],
      &amp;quot;outboundTag&amp;quot;: &amp;quot;direct&amp;quot;
    }]
  }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;编辑完成后保存，重新启动v2ray&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;root@vm:~# service v2ray stop
root@vm:~# service v2ray start
root@vm:~# service v2ray status
● v2ray.service - V2Ray Service
   Loaded: loaded (/etc/systemd/system/v2ray.service; enabled; vendor preset: en
   Active: active (running) since Sat 2019-05-18 08:58:43 CST; 5s ago
 Main PID: 8025 (v2ray)
    Tasks: 7 (limit: 2311)
   CGroup: /system.slice/v2ray.service
           └─8025 /usr/bin/v2ray/v2ray -config /etc/v2ray/config.json

5月 18 08:58:43 vm systemd[1]: Started V2Ray Service.
5月 18 08:58:43 vm v2ray[8025]: V2Ray 4.18.0 (Po) 20190228
5月 18 08:58:43 vm v2ray[8025]: A unified platform for anti-censorship.
5月 18 08:58:44 vm v2ray[8025]: 2019/05/18 08:58:44 [Warning] v2ray.com/core: V2
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后Firefox设置代理如下：&lt;/p&gt;
&lt;p&gt;设置-常规-网络设置
勾选&lt;strong&gt;手动代理配置&lt;/strong&gt;，在&lt;strong&gt;SOCKS主机&lt;/strong&gt;中填入&lt;code&gt;127.0.0.1&lt;/code&gt;本地IP和&lt;strong&gt;端口&lt;/strong&gt;，协议勾选&lt;strong&gt;SOCKS_v5&lt;/strong&gt;
建议勾选&lt;strong&gt;使用SOCKSv5时代理DNS查询&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://unixetc.com/imgs/3178501606.webp&#34; alt=&#34;20190518090412.webp&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>VMware安装Alpine Linux实例</title>
      <link>https://unixetc.com/post/vmware-installs-alpine-linux-instance/</link>
      <pubDate>Tue, 14 May 2019 12:59:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/vmware-installs-alpine-linux-instance/</guid>
      <description>&lt;h2 id=&#34;alpinelinux介绍&#34;&gt;AlpineLinux介绍&lt;/h2&gt;
&lt;p&gt;Alpine 的意思是“高山的”，比如 Alpine plants高山植物，Alpine skiing高山滑雪、the alpine resort阿尔卑斯山胜地。&lt;/p&gt;
&lt;p&gt;Alpine Linux 网站首页注明“Small！Simple！Secure！Alpine Linux is a security-oriented, lightweight Linux distribution based on musl libc and busybox.”概括了以下特点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;小巧：基于Musl libc和busybox，和busybox一样小巧，最小的Docker镜像只有5MB；&lt;/li&gt;
&lt;li&gt;安全：面向安全的轻量发行版；&lt;/li&gt;
&lt;li&gt;简单：提供APK包管理工具，软件的搜索、安装、删除、升级都非常方便。&lt;/li&gt;
&lt;li&gt;适合容器使用：由于小巧、功能完备，非常适合作为容器的基础镜像。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;准备工作&#34;&gt;准备工作&lt;/h2&gt;
&lt;p&gt;安装&lt;strong&gt;VMware&lt;/strong&gt;虚拟机软件，新建虚拟机，配置如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://unixetc.com/imgs/2143496721.png&#34; alt=&#34;小Q截图-20190514141914.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;下载AlpineLinux镜像文件&lt;strong&gt;alpine-standard-3.9.4-x86_64.iso&lt;/strong&gt;，下载地址: &lt;a href=&#34;https://www.alpinelinux.org/downloads/&#34;&gt;https://www.alpinelinux.org/downloads/&lt;/a&gt;
设置虚拟机光驱挂载镜像文件&lt;strong&gt;alpine-standard-3.9.4-x86_64.iso&lt;/strong&gt;。&lt;/p&gt;
&lt;h2 id=&#34;开始安装alpine-linux&#34;&gt;开始安装Alpine Linux&lt;/h2&gt;
&lt;p&gt;启动虚拟机，开始从光驱引导系统，进入系统后，输入&lt;code&gt;root&lt;/code&gt;登录，然后输入&lt;code&gt;setup-alpine&lt;/code&gt;开始启动安装程序。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://unixetc.com/imgs/533902894.png&#34; alt=&#34;小Q截图-20190514142253.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;下来设置键盘布局(us)、主机名(vm)以及网络配置：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://unixetc.com/imgs/3363240078.png&#34; alt=&#34;小Q截图-20190514142520.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;接着设置时区(timezone)&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://unixetc.com/imgs/4004563438.png&#34; alt=&#34;小Q截图-20190514142650.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://unixetc.com/imgs/3391016607.png&#34; alt=&#34;小Q截图-20190514142733.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后是网络代理和网络时间同步(NTP)设置&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://unixetc.com/imgs/3373348860.png&#34; alt=&#34;小Q截图-20190514142824.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;接下里选择软件源镜像(mirrors)，我选择了兰州大学的镜像：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://unixetc.com/imgs/281887034.png&#34; alt=&#34;小Q截图-20190514142926.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后选择SSH服务程序，设置安装磁盘以及使用方式，完成安装后会提示**Installation is complete. Please reboot.**至此安装完成。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://unixetc.com/imgs/996094300.png&#34; alt=&#34;小Q截图-20190514143121.png&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;安装awesome桌面&#34;&gt;安装Awesome桌面&lt;/h2&gt;
&lt;h3 id=&#34;添加普通用户&#34;&gt;添加普通用户&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;#adduser alair
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://unixetc.com/imgs/3896725846.png&#34; alt=&#34;小Q截图-20190514143635.png&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;启用community-repository&#34;&gt;启用Community Repository&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;vi /etc/apk/repositories&lt;/code&gt;编辑软件源配置，去掉其中Community Repository前面的注释符(#)&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://unixetc.com/imgs/1068991935.png&#34; alt=&#34;小Q截图-20190514143853.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;apk update&amp;amp;&amp;amp;apk upgrade&lt;/code&gt;更新软件。&lt;/p&gt;
&lt;h3 id=&#34;安装awesome&#34;&gt;安装awesome&lt;/h3&gt;
&lt;p&gt;使用以下命令安装awesome、lua、feh和lxterminal&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#apk add awesome lua feh lxterminal
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;其他桌面应用可以按需添加，比如firefox, gnumeric, xchat, gimp, pidgin, geany, vim等。&lt;/p&gt;
&lt;h3 id=&#34;设置xorg服务&#34;&gt;设置Xorg服务&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;#setup-xorg-base
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;启动awesome桌面&#34;&gt;启动Awesome桌面&lt;/h2&gt;
&lt;p&gt;安装&lt;code&gt;sudo&lt;/code&gt;，配置普通用户权限&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#apk add sudo
#visudo
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;添加如下内容&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;alair ALL=(ALL) ALL&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;退出当前root用户，用普通用户登录。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ echo &#39;awesome&#39; &amp;gt;&amp;gt; /home/alair/.xinitrc
$ mkdir /home/alair/.config
$ cp -r /etc/xdg/awesome  /home/alair/.config
$ vi /home/alair/.config/awesome/rc.lua
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;在&lt;code&gt;rc.lua&lt;/code&gt;文件中搜索&lt;strong&gt;terminal&lt;/strong&gt;行，将其中的&lt;code&gt;xterm&lt;/code&gt;替换为&lt;code&gt;lxterminal&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://unixetc.com/imgs/2773853826.png&#34; alt=&#34;小Q截图-20190514145228.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后通过以下命令启动Awesome桌面&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$startx
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://unixetc.com/imgs/3499710974.png&#34; alt=&#34;微信截图_20190514150556.png&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>NokiaN900刷机方法</title>
      <link>https://unixetc.com/post/nokia-n900-installation-firmware/</link>
      <pubDate>Wed, 01 May 2019 12:14:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/nokia-n900-installation-firmware/</guid>
      <description>&lt;p&gt;刷机工具以及固件文件下再地址见文章末尾。&lt;/p&gt;
&lt;p&gt;首先安装刷机工具&lt;strong&gt;maemo flasher&lt;/strong&gt;，然后下载固件，固件分以下两个文件，下载地址&lt;a href=&#34;https://blbl.dev/NokiaN900/index.html&#34;&gt;https://blbl.dev/NokiaN900/index.html&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;emmc(vanilla)&lt;/li&gt;
&lt;li&gt;firmware(combined)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;切记，先刷&lt;code&gt;emmc&lt;/code&gt;再刷&lt;code&gt;firmware&lt;/code&gt;，并且两次刷机中间不可以开机。&lt;/p&gt;
&lt;p&gt;将手机关机，然后按住键盘上的&lt;!-- raw HTML omitted --&gt;u&lt;!-- raw HTML omitted --&gt;键，再用数据线将手机链接电脑，这是手机会显示NOKIA字样界面，并且右上角显示有USB图标，即进入刷机模式。&lt;/p&gt;
&lt;p&gt;首先写入&lt;code&gt;EMMC&lt;/code&gt;文件，命令如下&lt;code&gt;flasher-3.5 -F emmc.bin -f&lt;/code&gt;，以下为linux下操作实例，以供参考&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;alair@zb14:~/下载$ sudo flasher-3.5 -F RX-51_2009SE_10.2010.13-2.VANILLA_PR_EMMC_MR0_ARM.bin -f
[sudo] alair 的密码： 
flasher v2.5.2 (Oct 21 2009)

Image &#39;mmc&#39;, size 255947 kB
    Version RX-51_2009SE_10.2010.13-2.VANILLA
USB device found found at bus 002, device address 012.
Found device RX-51, hardware revision 2204
NOLO version 1.4.14
Version of &#39;sw-release&#39;: RX-51_2009SE_21.2011.38-1_PR_MR0
Booting device into flash mode.
Suitable USB device not found, waiting.
USB device found found at bus 002, device address 013.
Raw data transfer EP found at EP2.
Image(s) flashed successfully in 27.304 s (9373 kB/s)!   
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后断开链接，取出电池，重新将电池放入再次刷机模式链接电脑，下来写入&lt;code&gt;firmware&lt;/code&gt;文件，命令&lt;code&gt;flasher-3.5 -F firmware.bin -f -R&lt;/code&gt;，以下为Linux操作实例，以供参考。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;alair@zb14:~/下载$ sudo flasher-3.5 -F RX-51_2009SE_20.2010.36-2_PR_COMBINED_MR0_ARM.bin -f -R
flasher v2.5.2 (Oct 21 2009)

SW version in image: RX-51_2009SE_20.2010.36-2_PR_MR0
Image &#39;kernel&#39;, size 1705 kB
    Version 2.6.28-20103103+0m5
Image &#39;rootfs&#39;, size 185728 kB
    Version RX-51_2009SE_20.2010.36-2_PR_MR0
Image &#39;cmt-2nd&#39;, size 81408 bytes
    Version BB5_09.36
Image &#39;cmt-algo&#39;, size 519808 bytes
    Version BB5_09.36
Image &#39;cmt-mcusw&#39;, size 5826 kB
    Version rx51_ICPR82_10w08
Image &#39;2nd&#39;, size 14720 bytes
    Valid for RX-51: 2217, 2218, 2219, 2220, 2120
    Version 1.4.14.9+0m5
Image &#39;xloader&#39;, size 14848 bytes
    Valid for RX-51: 2217, 2218, 2219, 2220, 2120
    Version 1.4.14.9+0m5
Image &#39;secondary&#39;, size 109440 bytes
    Valid for RX-51: 2217, 2218, 2219, 2220, 2120
    Version 1.4.14.9+0m5
Image &#39;2nd&#39;, size 14720 bytes
    Valid for RX-51: 2101, 2102, 2103
    Version 1.4.14.9+0m5
Image &#39;xloader&#39;, size 14848 bytes
    Valid for RX-51: 2101, 2102, 2103
    Version 1.4.14.9+0m5
Image &#39;secondary&#39;, size 109440 bytes
    Valid for RX-51: 2101, 2102, 2103
    Version 1.4.14.9+0m5
Image &#39;2nd&#39;, size 14848 bytes
    Valid for RX-51: 2307, 2308, 2309, 2310
    Version 1.4.14.9+0m5
Image &#39;xloader&#39;, size 14848 bytes
    Valid for RX-51: 2307, 2308, 2309, 2310
    Version 1.4.14.9+0m5
Image &#39;secondary&#39;, size 109440 bytes
    Valid for RX-51: 2307, 2308, 2309, 2310
    Version 1.4.14.9+0m5
Image &#39;2nd&#39;, size 14848 bytes
    Valid for RX-51: 2407, 2408, 2409, 2410
    Version 1.4.14.9+0m5
Image &#39;xloader&#39;, size 14848 bytes
    Valid for RX-51: 2407, 2408, 2409, 2410
    Version 1.4.14.9+0m5
Image &#39;secondary&#39;, size 109440 bytes
    Valid for RX-51: 2407, 2408, 2409, 2410
    Version 1.4.14.9+0m5
Image &#39;2nd&#39;, size 14848 bytes
    Valid for RX-51: 2301, 2302, 2303, 2304, 2305, 2306
    Version 1.4.14.9+0m5
Image &#39;xloader&#39;, size 14848 bytes
    Valid for RX-51: 2301, 2302, 2303, 2304, 2305, 2306
    Version 1.4.14.9+0m5
Image &#39;secondary&#39;, size 109440 bytes
    Valid for RX-51: 2301, 2302, 2303, 2304, 2305, 2306
    Version 1.4.14.9+0m5
Image &#39;2nd&#39;, size 14848 bytes
    Valid for RX-51: 2401, 2402, 2403, 2404, 2405, 2406
    Version 1.4.14.9+0m5
Image &#39;xloader&#39;, size 14848 bytes
    Valid for RX-51: 2401, 2402, 2403, 2404, 2405, 2406
    Version 1.4.14.9+0m5
Image &#39;secondary&#39;, size 109440 bytes
    Valid for RX-51: 2401, 2402, 2403, 2404, 2405, 2406
    Version 1.4.14.9+0m5
Image &#39;2nd&#39;, size 14720 bytes
    Valid for RX-51: 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119
    Version 1.4.14.9+0m5
Image &#39;xloader&#39;, size 14848 bytes
    Valid for RX-51: 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119
    Version 1.4.14.9+0m5
Image &#39;secondary&#39;, size 109440 bytes
    Valid for RX-51: 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119
    Version 1.4.14.9+0m5
Image &#39;2nd&#39;, size 14848 bytes
    Valid for RX-51: 2501, 2502, 2503, 2504, 2505, 2506
    Version 1.4.14.9+0m5
Image &#39;xloader&#39;, size 14848 bytes
    Valid for RX-51: 2501, 2502, 2503, 2504, 2505, 2506
    Version 1.4.14.9+0m5
Image &#39;secondary&#39;, size 109440 bytes
    Valid for RX-51: 2501, 2502, 2503, 2504, 2505, 2506
    Version 1.4.14.9+0m5
Image &#39;2nd&#39;, size 14848 bytes
    Valid for RX-51: 2607, 2608, 2609, 2610
    Version 1.4.14.9+0m5
Image &#39;xloader&#39;, size 14848 bytes
    Valid for RX-51: 2607, 2608, 2609, 2610
    Version 1.4.14.9+0m5
Image &#39;secondary&#39;, size 109440 bytes
    Valid for RX-51: 2607, 2608, 2609, 2610
    Version 1.4.14.9+0m5
Image &#39;2nd&#39;, size 14848 bytes
    Valid for RX-51: 2507, 2508, 2509, 2510
    Version 1.4.14.9+0m5
Image &#39;xloader&#39;, size 14848 bytes
    Valid for RX-51: 2507, 2508, 2509, 2510
    Version 1.4.14.9+0m5
Image &#39;secondary&#39;, size 109440 bytes
    Valid for RX-51: 2507, 2508, 2509, 2510
    Version 1.4.14.9+0m5
Image &#39;2nd&#39;, size 14720 bytes
    Valid for RX-51: 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216
    Version 1.4.14.9+0m5
Image &#39;xloader&#39;, size 14848 bytes
    Valid for RX-51: 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216
    Version 1.4.14.9+0m5
Image &#39;secondary&#39;, size 109440 bytes
    Valid for RX-51: 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216
    Version 1.4.14.9+0m5
Image &#39;2nd&#39;, size 14848 bytes
    Valid for RX-51: 2601, 2602, 2603, 2604, 2605, 2606
    Version 1.4.14.9+0m5
Image &#39;xloader&#39;, size 14848 bytes
    Valid for RX-51: 2601, 2602, 2603, 2604, 2605, 2606
    Version 1.4.14.9+0m5
Image &#39;secondary&#39;, size 109440 bytes
    Valid for RX-51: 2601, 2602, 2603, 2604, 2605, 2606
    Version 1.4.14.9+0m5
Suitable USB device not found, waiting.
USB device found found at bus 002, device address 016.
Found device RX-51, hardware revision 2204
NOLO version 1.4.14
Version of &#39;sw-release&#39;: RX-51_2009SE_21.2011.38-1_PR_MR0
Sending xloader image (14 kB)...
100% (14 of 14 kB, avg. 3625 kB/s)
Sending secondary image (106 kB)...
100% (106 of 106 kB, avg. 15267 kB/s)
Flashing bootloader... done.
Sending cmt-2nd image (79 kB)...
100% (79 of 79 kB, avg. 13250 kB/s)
Sending cmt-algo image (507 kB)...
100% (507 of 507 kB, avg. 29860 kB/s)
Sending cmt-mcusw image (5826 kB)...
100% (5826 of 5826 kB, avg. 36645 kB/s)
Flashing cmt-mcusw... done.
Sending kernel image (1705 kB)...
100% (1705 of 1705 kB, avg. 6742 kB/s)
Flashing kernel... done.
Sending and flashing rootfs image (185728 kB)...
100% (185728 of 185728 kB, avg. 16144 kB/s)
Finishing flashing... done
CMT flashed successfully
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;刷机完成后，手机自动重启。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>NokiaN900删除不必要的软件</title>
      <link>https://unixetc.com/post/n900-removes-unnecessary-software-and-games/</link>
      <pubDate>Tue, 30 Apr 2019 13:40:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/n900-removes-unnecessary-software-and-games/</guid>
      <description>&lt;p&gt;NokiaN900自带的软件不少，还有一些游戏，以下为这些软件的删除方式。&lt;/p&gt;
&lt;p&gt;首先，建议安装&lt;code&gt;rootsh&lt;/code&gt;以&lt;a href=&#34;https://unixetc.com/post/nokia-n900-and-ssh/&#34;&gt;获取ROOT权限&lt;/a&gt;，然后在xTermianl进行以下操作。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;名称&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;th&gt;删除命令&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Mahjong&lt;/td&gt;
&lt;td&gt;游戏&lt;/td&gt;
&lt;td&gt;apt-get remove -y osso-mahjong&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Chess&lt;/td&gt;
&lt;td&gt;游戏&lt;/td&gt;
&lt;td&gt;apt-get remove -y gnuchess&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Blocks&lt;/td&gt;
&lt;td&gt;游戏&lt;/td&gt;
&lt;td&gt;apt-get remove -y maemoblocks&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Marbles&lt;/td&gt;
&lt;td&gt;游戏&lt;/td&gt;
&lt;td&gt;apt-get remove -y osso-lmarbles&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;AP News&lt;/td&gt;
&lt;td&gt;软件&lt;/td&gt;
&lt;td&gt;apt-get remove -y ap-installer&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Docs To Go&lt;/td&gt;
&lt;td&gt;软件&lt;/td&gt;
&lt;td&gt;apt-get remove -y dtg-installer&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Sketch&lt;/td&gt;
&lt;td&gt;画图&lt;/td&gt;
&lt;td&gt;apt-get remove -y osso-sketch&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Backup&lt;/td&gt;
&lt;td&gt;备份&lt;/td&gt;
&lt;td&gt;apt-get remove -y osso-backup&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;PDF reader&lt;/td&gt;
&lt;td&gt;PDF阅读&lt;/td&gt;
&lt;td&gt;apt-get remove -y osso-pdf-viewer&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;RSS&lt;/td&gt;
&lt;td&gt;RSS订阅&lt;/td&gt;
&lt;td&gt;apt-get remove -y osso-rss-feed-reader&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Notes&lt;/td&gt;
&lt;td&gt;记事本&lt;/td&gt;
&lt;td&gt;apt-get remove -y osso-notes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Amazon&lt;/td&gt;
&lt;td&gt;Amazon安装快捷方式&lt;/td&gt;
&lt;td&gt;rm   /usr/share/maemo-installer-utils/amazon.install        rm /usr/share/applications/hildon/amazon.desktop&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Facebook&lt;/td&gt;
&lt;td&gt;Facebook安装快捷方式&lt;/td&gt;
&lt;td&gt;rm   /usr/share/applications/hildon/facebook.desktop       rm /usr/share/maemo-installer-utils/facebook.install&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Maps&lt;/td&gt;
&lt;td&gt;Nokia地图&lt;/td&gt;
&lt;td&gt;apt-get remove -y nokia-maps*&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Force Weather&lt;/td&gt;
&lt;td&gt;天气预报安装快捷方式&lt;/td&gt;
&lt;td&gt;rm   /usr/share/maemo-installer-utils/foreca.install      rm /usr/share/applications/hildon/foreca.desktop&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;User Guide&lt;/td&gt;
&lt;td&gt;用户手册快捷方式&lt;/td&gt;
&lt;td&gt;rm /usr/share/applications/hildon/user-guide.desktop&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Get started&lt;/td&gt;
&lt;td&gt;开始使用指南&lt;/td&gt;
&lt;td&gt;apt-get remove -y tutorial-home-applet&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Store&lt;/td&gt;
&lt;td&gt;Nokia商店快捷方式&lt;/td&gt;
&lt;td&gt;rm /usr/share/applications/hildon/ovi.desktop&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</description>
    </item>
    
    <item>
      <title>N900安装最新版Nemo</title>
      <link>https://unixetc.com/post/nokia-n900-install-nemo/</link>
      <pubDate>Sun, 28 Apr 2019 15:56:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/nokia-n900-install-nemo/</guid>
      <description>&lt;p&gt;准备&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;安装最新uboot&lt;/li&gt;
&lt;li&gt;一张至少4g以上的TF卡&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;下载地址&lt;a href=&#34;http://releases.nemomobile.org/releases/&#34;&gt;http://releases.nemomobile.org/releases/&lt;/a&gt;
以最新目录为例，下载&lt;a href=&#34;http://releases.nemomobile.org/releases/latest/images/nemo-armv7hl-n900/&#34;&gt;http://releases.nemomobile.org/releases/latest/images/nemo-armv7hl-n900/&lt;/a&gt;里的&lt;strong&gt;nemo-armv7hl-n900-mmcblk0p.raw.bz2&lt;/strong&gt;
解压出raw文件，然后改后缀为img。Windows下用&lt;strong&gt;Win32DiskImager&lt;/strong&gt;将镜像文件写入TF卡。
Linux下可以使用&lt;code&gt;dd&lt;/code&gt;命令直接写入，不需要改后缀名：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;alair@e6440:/media/alair/bak/downloads$ sudo dd if=nemo-armv7hl-n900-mmcblk0p.raw of=/dev/sdc bs=1M
[sudo] alair 的密码： 
记录了3640+1 的读入
记录了3640+1 的写出
3816816641 bytes (3.8 GB, 3.6 GiB) copied, 185.35 s, 20.6 MB/s
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Windwos中用&lt;strong&gt;winscp&lt;/strong&gt;在你的N900的&lt;code&gt;/etc/bootmenu.d/&lt;/code&gt;新建一个&lt;code&gt;40-nemo.item&lt;/code&gt;文件，贴入以下内容：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ITEM_NAME=&amp;quot;Mer-Nemo Mobile&amp;quot;
ITEM_ID=&amp;quot;nemo&amp;quot;
ITEM_DEVICE=&amp;quot;${EXT_CARD}p3&amp;quot;
ITEM_KERNEL=&amp;quot;uImage&amp;quot;
ITEM_FSTYPE=&amp;quot;vfat&amp;quot;
ITEM_CMDLINE=&amp;quot;root=/dev/mmcblk0p1 rootwait ro console=ttyO2,115200n8 console=tty0 omapfb.vram=0:2M,1:2M,2:2M mtdoops.mtddev=2 quiet&amp;quot;
ITEM_OMAPATAG=1
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Linux系统下可以直接&lt;a href=&#34;https://unixetc.com/post/nokia-n900-and-ssh/&#34;&gt;SSH连接N900&lt;/a&gt;进行操作。
然后root运行&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;u-boot-update-bootmenu
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;关机，插入TF卡，然后推开键盘开机，选&lt;strong&gt;Mer-Nemo Mobile&lt;/strong&gt;进入即可。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>查出VPS流量消耗元凶</title>
      <link>https://unixetc.com/post/find-the-vps-traffic-consumption-culprit/</link>
      <pubDate>Thu, 11 Apr 2019 22:23:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/find-the-vps-traffic-consumption-culprit/</guid>
      <description>&lt;p&gt;上月不知什么原因VPS流量提前消耗完了，然后通知这月10号重新reset，于是只能临时开了一个月的locvps进行过渡。好不容易熬到昨儿，reset后赶紧把数据和站点又搬回来。
今儿偶尔登录vps，突然发现流量消耗咋一直很高，两天不到就消耗了170G，额滴神呐!查看详细使用统计，发现从昨儿reset以来，OUT bps一直维持在19M左右，瞬间脑袋瓜嗡嗡的！&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://unixetc.com/imgs/3715399508.webp&#34; alt=&#34;3119891104.webp&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://unixetc.com/imgs/1518624033.webp&#34; alt=&#34;1516117547.webp&#34;&gt;&lt;/p&gt;
&lt;p&gt;于是赶紧动手找找，看看消耗流量的元凶到底是谁？&lt;/p&gt;
&lt;p&gt;首先，安装&lt;strong&gt;iftop&lt;/strong&gt;来检查网络使用情况。官网在这里&lt;a href=&#34;http://www.ex-parrot.com/~pdw/iftop/&#34;&gt;http://www.ex-parrot.com/~pdw/iftop/&lt;/a&gt;，CentOS安装方法如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;yum install -y flex byacc libpcap ncurses ncurses-devel libpcap-devel #安装需求软件
wget http://www.ex-parrot.com/~pdw/iftop/download/iftop-0.17.tar.gz
tar zxf iftop-0.17.tar.gz
cd iftop-0.17
./configure
make &amp;amp;&amp;amp; make install
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;安装完成后，可以通过iftop来运行，建议加上-P参数，显示使用端口信息，如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://unixetc.com/imgs/594645281.png&#34; alt=&#34;1554992334.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;主界面中左侧为本地端，右侧为远端，中间的&amp;lt;=和=&amp;gt;表示流量方向。
下面的TX：发送流量/RX：接收流量/TOTAL：总流量/Cumm：运行iftop到目前时间的总流量/peak：流量峰值/rates：分别表示过去 2s 10s 40s 的平均流量&lt;/p&gt;
&lt;p&gt;从上图来看，本地IP一直在向一个&lt;strong&gt;140.249.34.53&lt;/strong&gt;发送数据，从peak统计来看，速率在&lt;strong&gt;22.3Mb&lt;/strong&gt;左右，和网站统计相符。
知道端口后，可以通过 &lt;code&gt;netstat -ntlup|grep 端口号&lt;/code&gt;来查看具体进程，没有的话可以通过&lt;code&gt;yum install net-tools&lt;/code&gt;来安装。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://unixetc.com/imgs/4210544047.png&#34; alt=&#34;1554992405.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;我试着查了下这个IP，发现是山东青岛的，再通过IP反查域名，真想才出来了，原来是百度云的相关IP。这才想起来，我安装了BaiduPCS-Go百度网盘客户端，用来对vps数据进行备份，原来搞鬼的是这个东西。找到元凶就好办了，首先把这个IP给禁了&lt;code&gt;iptables -A INPUT -p tcp -s 140.249.34.53 -j DROP&lt;/code&gt;
禁完后，实时流量一下子就降了下来，如下所示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://unixetc.com/imgs/730509471.png&#34; alt=&#34;1554992503.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;而后将BaiduPCS-Go删除，以绝后患！&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>GRUB引导ISO镜像</title>
      <link>https://unixetc.com/post/grub-boot-iso-image-file/</link>
      <pubDate>Sun, 08 Jul 2018 17:18:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/grub-boot-iso-image-file/</guid>
      <description>&lt;p&gt;家里电脑安装了双系统(Xubuntu+Windows7)，平时一直不关机，开着TeamViewer便于在办公室远程操作。&lt;/p&gt;
&lt;p&gt;这次不知怎么回事儿，远程掉了，回家一看Windows意外关机，再开机直接蓝屏。&lt;/p&gt;
&lt;p&gt;由于为了省资源，关闭了系统保护，没法进行还原，多次试着拯救都没能解决，无限蓝屏……&lt;/p&gt;
&lt;p&gt;手头刚好没有WinPE的U盘，没法ghost恢复或重装Windows，只有xubuntu可用，一筹莫展。&lt;/p&gt;
&lt;p&gt;突然想到grub是否可以引导iso？ 网上找了下，还真可以，于是下载了个WinPE镜像文件，打算通过grub来引导以修复Windows。&lt;/p&gt;
&lt;p&gt;具体操作如下：&lt;/p&gt;
&lt;p&gt;安装&lt;strong&gt;grub-imageboot&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;alair@e6440:~$ apt search memdisk
正在排序... 完成
全文搜索... 完成  
grub-imageboot/bionic,bionic 0.6 all
boot iso, harddisk and floppy images with grub2 and syslinux memdisk

alair@e6440:~$ sudo apt install grub-imageboot
[sudo] alair 的密码： 
正在读取软件包列表... 完成
正在分析软件包的依赖关系树       
正在读取状态信息... 完成       
将会同时安装下列软件：
syslinux-common
下列【新】软件包将被安装：
grub-imageboot syslinux-common
升级了 0 个软件包，新安装了 2 个软件包，要卸载 0 个软件包，有 4 个软件包未被升级。
需要下载 1,176 kB 的归档。
解压缩后会消耗 3,684 kB 的额外空间。
您希望继续执行吗？ [Y/n] y
获取:1 http://mirrors.cqu.edu.cn/ubuntu bionic/main amd64 syslinux-common all 3:6.03+dfsg1-2 [1,171 kB]
获取:2 http://mirrors.cqu.edu.cn/ubuntu bionic/universe amd64 grub-imageboot all 0.6 [4,424 B]
已下载 1,176 kB，耗时 1秒 (1,947 kB/s)
正在选中未选择的软件包 syslinux-common。
(正在读取数据库 ... 系统当前共安装有 181845 个文件和目录。)
正准备解包 .../syslinux-common_3%3a6.03+dfsg1-2_all.deb  ...
正在解包 syslinux-common (3:6.03+dfsg1-2) ...
正在选中未选择的软件包 grub-imageboot。
正准备解包 .../grub-imageboot_0.6_all.deb  ...
正在解包 grub-imageboot (0.6) ...
正在设置 syslinux-common (3:6.03+dfsg1-2) ...
正在设置 grub-imageboot (0.6) ...
Copy syslinux memdisk to /boot/memdisk
alair@e6440:~$ 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;下载WinPE镜像文件(efi.iso)，拷贝至&lt;code&gt;/boot/&lt;/code&gt;目录&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;alair@e6440:~$sudo cp efi.iso /boot/
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;编辑&lt;code&gt;/etc/grub.d/40_custom&lt;/code&gt;文件，加入以下内容：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;menuentry &amp;quot;WinPE&amp;quot; { 
linux16 /boot/memdisk iso raw
initrd16 /boot/efi.iso
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;运行&lt;code&gt;sudo update-grub&lt;/code&gt;使设置生效，完成后重启时grub中会出现&lt;strong&gt;WinPE&lt;/strong&gt;菜单，选择该项则加载自定义winpe镜像，下来就在WinPE下恢复Windows系统咯!!!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Ubuntu配置Livepatch服务</title>
      <link>https://unixetc.com/post/canonical-livepatch-service/</link>
      <pubDate>Fri, 25 May 2018 05:25:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/canonical-livepatch-service/</guid>
      <description>&lt;p&gt;CLS(Canonical Livepatch Service)是Ubuntu母公司Canonical提供的一项服务，该服务可以为处于LTS的Ubuntu版本提供内核关键补丁修复，而不需要重新启动系统，特别适用于用作Server的系统。&lt;/p&gt;
&lt;p&gt;使用CLS的前提是必须注册一个Ubuntu帐号，地址为&lt;a href=&#34;https://login.ubuntu.com/+login&#34;&gt;https://login.ubuntu.com/+login&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;注册完成后，即可访问CLS主页&lt;a href=&#34;https://www.ubuntu.com/server/livepatch&#34;&gt;https://www.ubuntu.com/server/livepatch&lt;/a&gt;进行登录配置。&lt;/p&gt;
&lt;p&gt;登陆后选择用户类型，一般个人用户选择&lt;strong&gt;Ubuntu User&lt;/strong&gt;，然后点击&lt;strong&gt;Get your Livepatch token&lt;/strong&gt;获取密匙&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/get_cls_token.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;按照下一步提示进行操作，启用CLS服务。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/cls_token_setup.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;运行完成后即成功启用CLS服务。&lt;/p&gt;
&lt;p&gt;检查CLS服务配置状态可以使用以下命令:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;alair@e6440:~$ sudo canonical-livepatch status --verbose
client-version: 8.0.2
machine-id: 08e0*****************750db
machine-token: 4753a054c*****************a2eb84c7
architecture: x86_64
cpu-model: Intel(R) Core(TM) i5-4310M CPU @ 2.70GHz
last-check: 2018-05-25T19:55:15.537634075+08:00
boot-time: 2018-05-25T19:47:51+08:00
uptime: 14m43s
status:
- kernel: 4.15.0-22.24-generic
  running: true
  livepatch:
    checkState: checked
    patchState: nothing-to-apply
    version: &amp;quot;&amp;quot;
    fixes: &amp;quot;&amp;quot;
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>Linux下修复分辨率显示异常</title>
      <link>https://unixetc.com/post/linux-fix-resolution-display-exception/</link>
      <pubDate>Sat, 26 Aug 2017 18:26:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/linux-fix-resolution-display-exception/</guid>
      <description>&lt;p&gt;家里放了台老旧的台式机，显卡是GTX 660Ti，windows下必须安装特定的驱动版本才能显示最佳分辨率(1680x1050)，如果更新到最新的Nvidia驱动，反而显示器无法正常显示(1024x768)。&lt;/p&gt;
&lt;p&gt;没想到，这种情况在Linux下依然存在，不论是安装Debian还是Linux Mint或者Ubuntu，默认都是1024x768。&lt;/p&gt;
&lt;p&gt;网上找到了修复分辨率异常的方法，整理如下。&lt;/p&gt;
&lt;h4 id=&#34;检查当前显卡硬件情况&#34;&gt;检查当前显卡硬件情况&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;$ lspci |grep VGA
01:00.0 VGA compatible controller: NVIDIA Corporation GK104 [GeForce GTX 660 Ti] (rev a2)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;可以看到，显卡硬件识别正常。&lt;/p&gt;
&lt;h4 id=&#34;检查显卡分辨率情况&#34;&gt;检查显卡分辨率情况&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;$ xrandr
Screen 0: minimum 320 x 200, current 1024 x 768, maximum 8192 x 8192
VGA-1 disconnected (normal left inverted right x axis y axis)
DVI-I-1 connected primary 1024x768+0+0 (normal left inverted right x axis y axis) 0mm x 0mm
1024x768      60.00* 
800x600       60.32    56.25  
848x480       60.00  
640x480       59.94  
HDMI-1 disconnected (normal left inverted right x axis y axis)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;可以看到，有三个视频输出，当前正在用的是&lt;strong&gt;DVI-I-1&lt;/strong&gt;，分辨率就是1024x768，第一行显示最大支持8192x8192。&lt;/p&gt;
&lt;p&gt;我们需要通过手动定义，将分辨率调整为最佳的1680x1050&lt;/p&gt;
&lt;h4 id=&#34;新增分辨率模式&#34;&gt;新增分辨率模式&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;$ sudo cvt 1680 1050
# 1680x1050 59.95 Hz (CVT 1.76MA) hsync: 65.29 kHz; pclk: 146.25 MHz
Modeline &amp;quot;1680x1050_60.00&amp;quot;  146.25  1680 1784 1960 2240  1050 1053 1059 1089 -hsync +vsync
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;这里定义了一个1680x1050 60Hz的新分辨率模式。&lt;/p&gt;
&lt;p&gt;下来将新的分辨率模式应用生效。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$sudo xrandr --newmode &amp;quot;1680x1050&amp;quot;  146.25  1680 1784 1960 2240  1050 1053 1059 1089 -hsync +vsync
$sudo xrandr --addmode DVI-I-1 1680x1050
$sudo xrandr --output DVI-I-1 --mode 1600x1050
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;执行完以上命令后，但前显示分辨率就调整为1680x1050了。&lt;/p&gt;
&lt;p&gt;为了使新的分辨率模式每次启动都生效，需要将以下命令添加到&lt;code&gt;~/.profile&lt;/code&gt;中。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cvt 1680 1050
xrandr --newmode &amp;quot;1680x1050&amp;quot;  146.25  1680 1784 1960 2240  1050 1053 1059 1089 -hsync +vsync
xrandr --addmode DVI-I-1 1680x1050&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>sitemap-generators使用实例</title>
      <link>https://unixetc.com/post/sitemap-generators-usage/</link>
      <pubDate>Sun, 13 Aug 2017 23:23:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/sitemap-generators-usage/</guid>
      <description>&lt;p&gt;&lt;strong&gt;sitemap-generators&lt;/strong&gt;是一款Sitemap生成工具，使用它可以生成符合sitemap.org规范的Sitemap文件，以便于提交给各个网站工具平台。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://code.google.com/archive/p/sitemap-generators/&#34;&gt;项目地址&lt;/a&gt;  &amp;amp;&amp;amp;  &lt;a href=&#34;https://code.google.com/archive/p/sitemap-generators/downloads&#34;&gt;下载地址&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;下载&lt;strong&gt;sitemap_gen_1.5.tar.gz&lt;/strong&gt;解压，得到以下内容：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;root@bwgzl:~/sitemap_gen# ls -lh
total 140K
-r--r-----  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;502&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;502&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;22&lt;/span&gt; Jun &lt;span style=&#34;color:#ae81ff&#34;&gt;17&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;2005&lt;/span&gt; AUTHORS
-r--r--r--  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;502&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;502&lt;/span&gt; 2.6K Jul &lt;span style=&#34;color:#ae81ff&#34;&gt;19&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;2007&lt;/span&gt; ChangeLog
-r--r-----  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;502&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;502&lt;/span&gt; 1.8K Jun &lt;span style=&#34;color:#ae81ff&#34;&gt;17&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;2005&lt;/span&gt; COPYING
-rw-r--r--  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;502&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;502&lt;/span&gt; 6.4K Jul &lt;span style=&#34;color:#ae81ff&#34;&gt;19&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;2007&lt;/span&gt; example_config.xml
-rw-r-----  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;502&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;502&lt;/span&gt; 1.6K Jun &lt;span style=&#34;color:#ae81ff&#34;&gt;26&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;2007&lt;/span&gt; example_urllist.txt
drwxr-xr-x &lt;span style=&#34;color:#ae81ff&#34;&gt;23&lt;/span&gt; root root 4.0K Aug  &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; 14:25 getos.org
-rw-r--r--  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;502&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;502&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;244&lt;/span&gt; Jul &lt;span style=&#34;color:#ae81ff&#34;&gt;19&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;2007&lt;/span&gt; PKG-INFO
-r--r--r--  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;502&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;502&lt;/span&gt; 1.1K Jun &lt;span style=&#34;color:#ae81ff&#34;&gt;25&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;2007&lt;/span&gt; README
-r-xr-xr-x  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;502&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;502&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;301&lt;/span&gt; Jul &lt;span style=&#34;color:#ae81ff&#34;&gt;19&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;2007&lt;/span&gt; setup.py
-rwxr-xr-x  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;502&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;502&lt;/span&gt;  66K Jul &lt;span style=&#34;color:#ae81ff&#34;&gt;19&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;2007&lt;/span&gt; sitemap_gen.py
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;将默认的&lt;strong&gt;example_config.xml&lt;/strong&gt;拷贝为&lt;strong&gt;ac.xml&lt;/strong&gt;，参考以下修改：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34;?&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;site&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;base_url=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;http://getos.org/&amp;#34;&lt;/span&gt;
  &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;/**&lt;/span&gt; &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;以下为sitemap.xml文件存放目录**/&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;store_into=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/root/sitemap_gen/sitemap.xml&amp;#34;&lt;/span&gt;
  &lt;span style=&#34;color:#a6e22e&#34;&gt;verbose=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1&amp;#34;&lt;/span&gt;
  &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;lt;urllist&lt;/span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;path=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;urllist.txt&amp;#34;&lt;/span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;encoding=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;UTF-8&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;/&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;filter&lt;/span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;action=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;drop&amp;#34;&lt;/span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;type=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;wildcard&amp;#34;&lt;/span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;pattern=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;*~&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;/&amp;gt;&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;filter&lt;/span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;action=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;drop&amp;#34;&lt;/span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;type=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;regexp&amp;#34;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;pattern=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/\.[^/]*&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/site&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;接下来，使用&lt;code&gt;wget&lt;/code&gt;来遍历网站所有URL，将结果保存为&lt;strong&gt;urlinfolist.txt&lt;/strong&gt;。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;wget -mk --spider -r  http://getos.org/ -o urlinfolist.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;-r: 递归遍历目录&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;处理wget到的&lt;strong&gt;urlinfolist.txt&lt;/strong&gt;文件，删除不需要的内容。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;cat urlinfolist.txt | tr &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;\012&amp;#39;&lt;/span&gt; | grep &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;^http&amp;#34;&lt;/span&gt; | egrep -vi &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;[?]|[.]jpg&lt;/span&gt;$&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; | sort -u &amp;gt; urllist.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;最后使用如下命令来生成&lt;strong&gt;sitemap.xml&lt;/strong&gt;。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;python sitemap_gen.py --config&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ac.xml 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;按照配置文件所示，在&lt;strong&gt;sitemap.xml&lt;/strong&gt;文件保存在_/root/sitemap_gen/_目录下。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Dropbox脚本工具DropboxUploader</title>
      <link>https://unixetc.com/post/powerful-dropbox-scripting-tool-dropbox-uploader/</link>
      <pubDate>Fri, 28 Jul 2017 17:28:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/powerful-dropbox-scripting-tool-dropbox-uploader/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Dropbox Uploader&lt;/strong&gt;是一款专为&lt;strong&gt;Dropbox&lt;/strong&gt;开发的&lt;strong&gt;BASH&lt;/strong&gt;脚本，可以实现上传、下载、删除、列出文件清单、在线分享、同步和备份等功能。&lt;/p&gt;
&lt;p&gt;它使用&lt;strong&gt;BASH&lt;/strong&gt;脚本语言写成，只需要&lt;strong&gt;cURL&lt;/strong&gt;即可使用。&lt;/p&gt;
&lt;p&gt;项目主页 &lt;a href=&#34;https://github.com/andreafabrizi/Dropbox-Uploader&#34;&gt;GiHub project page&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;为什么使用此脚本?&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;绿色轻便:&lt;strong&gt;使用&lt;/strong&gt;BASH&lt;/strong&gt;脚本语言写成，仅仅需要&lt;strong&gt;cURL&lt;/strong&gt;一个软件(curl是一个数据传输工具，大部分linux发行版均会内置该软件)。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;安全:&lt;/strong&gt; 不需要提供帐号密码，该脚本使用官方API进行验证。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;更多的扩展信息和使用技巧请参考&lt;a href=&#34;https://github.com/andreafabrizi/Dropbox-Uploader/wiki&#34;&gt;官方wiki&lt;/a&gt;，该wiki同时提供&lt;strong&gt;Dropbox Uploader&lt;/strong&gt;相关的使用实例和脚本。&lt;/p&gt;
&lt;h3 id=&#34;特性&#34;&gt;特性&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;跨平台&lt;/li&gt;
&lt;li&gt;支持官方Dropbox API v2&lt;/li&gt;
&lt;li&gt;无需密码&lt;/li&gt;
&lt;li&gt;简单的配置提示&lt;/li&gt;
&lt;li&gt;分块文件上传&lt;/li&gt;
&lt;li&gt;递归文档下载&lt;/li&gt;
&lt;li&gt;递归文档上传&lt;/li&gt;
&lt;li&gt;Shell通配符扩展 (仅上传)&lt;/li&gt;
&lt;li&gt;删除/移动/重命名/拷贝/列出/分享文件&lt;/li&gt;
&lt;li&gt;创建分享连接&lt;/li&gt;
&lt;li&gt;监视变化&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;安装配置dropboxuploader&#34;&gt;安装配置DropboxUploader&lt;/h3&gt;
&lt;p&gt;使用git拷贝官方仓库：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;git clone https://github.com/andreafabrizi/Dropbox-Uploader.git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;或者直接下载脚本：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;curl &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://raw.githubusercontent.com/andreafabrizi/Dropbox-Uploader/master/dropbox_uploader.sh&amp;#34;&lt;/span&gt; -o dropbox_uploader.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;给脚本添加执行权限并运行：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt; $chmod +x dropbox_uploader.sh
 $./dropbox_uploader.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;第一次运行&lt;code&gt;dropbox_uploader&lt;/code&gt;时，会有鉴权提示，按照提示在&lt;a href=&#34;https://www.dropbox.com/developers/apps&#34;&gt;https://www.dropbox.com/developers/apps&lt;/a&gt;新建api app，然后在app管理页找到&lt;strong&gt;Generated access token&lt;/strong&gt;创建&lt;strong&gt;access token&lt;/strong&gt;，将&lt;strong&gt;access token&lt;/strong&gt;粘贴到DropboxUploader提示行按回车键，随后会提示成功接入&lt;strong&gt;Dropbox&lt;/strong&gt;。配置文件保存在&lt;code&gt;~/.dropbox_uploader&lt;/code&gt;。&lt;/p&gt;
&lt;h3 id=&#34;使用dropboxuploader&#34;&gt;使用DropboxUploader&lt;/h3&gt;
&lt;p&gt;DropboxUploader语法非常简单:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./dropbox_uploader.sh [PARAMETERS] COMMAND...

[%%]: 可选参数
&amp;lt;%%&amp;gt;: 必须参数
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;可使用命令:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;upload&lt;/strong&gt; &amp;lt;LOCAL_FILE/DIR &amp;hellip;&amp;gt; &amp;lt;REMOTE_FILE/DIR&amp;gt;&lt;/p&gt;
&lt;p&gt;上传本地文件或目录到Dropbox。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;download&lt;/strong&gt; &amp;lt;REMOTE_FILE/DIR&amp;gt; [LOCAL_FILE/DIR]&lt;br&gt;
从Dropbox下载文件或目录到本地&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;delete&lt;/strong&gt; &amp;lt;REMOTE_FILE/DIR&amp;gt;&lt;br&gt;
删除Dropbox上的文件或目录&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;move&lt;/strong&gt; &amp;lt;REMOTE_FILE/DIR&amp;gt; &amp;lt;REMOTE_FILE/DIR&amp;gt;&lt;br&gt;
移动或重命名远端文件或目录&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;copy&lt;/strong&gt; &amp;lt;REMOTE_FILE/DIR&amp;gt; &amp;lt;REMOTE_FILE/DIR&amp;gt;&lt;br&gt;
拷贝远端文件或目录&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;mkdir&lt;/strong&gt; &amp;lt;REMOTE_DIR&amp;gt;&lt;br&gt;
在Dropbox创建目录&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;list&lt;/strong&gt; [REMOTE_DIR]&lt;br&gt;
列出Dropbox目录内容&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;monitor&lt;/strong&gt; [REMOTE_DIR][TIMEOUT]&lt;/p&gt;
&lt;p&gt;监控远端目录变化，如果超时退出，则会反馈第一次变化。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;share&lt;/strong&gt; &amp;lt;REMOTE_FILE&amp;gt;&lt;br&gt;
获取远端文件或目录的公开连接&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;saveurl&lt;/strong&gt; &amp;lt;URL&amp;gt; &amp;lt;REMOTE_DIR&amp;gt;&lt;/p&gt;
&lt;p&gt;从URL下载文件到Dropbox&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;search&lt;/strong&gt; &amp;lt;QUERY&amp;gt;&lt;/p&gt;
&lt;p&gt;搜索特定文件&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;info&lt;/strong&gt;&lt;br&gt;
显示Dropbox帐户相关信息&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;space&lt;/strong&gt;
示当前帐户容量使用情况&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;unlink&lt;/strong&gt;&lt;br&gt;
断开Dropbox帐户连接&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;扩展参数:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;-f &amp;lt;FILENAME&amp;gt;&lt;/strong&gt;&lt;br&gt;
从特定文件加载配置&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;-s&lt;/strong&gt;&lt;br&gt;
Skip already existing files when download/upload. Default: Overwrite&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;-d&lt;/strong&gt;&lt;br&gt;
开启DEBUG模式&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;-q&lt;/strong&gt;&lt;br&gt;
Quiet mode. Don&amp;rsquo;t show progress meter or messages&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;-h&lt;/strong&gt;&lt;br&gt;
显示可读的文件大小格式&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;-p&lt;/strong&gt;&lt;br&gt;
显示cURL过程提示&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;-k&lt;/strong&gt;&lt;br&gt;
不检查SSL证书(不安全)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;DropboxUploader使用实例:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;    ./dropbox_uploader.sh upload /etc/passwd /myfiles/passwd.old
    ./dropbox_uploader.sh upload *.zip /
    ./dropbox_uploader.sh download /backup.zip
    ./dropbox_uploader.sh delete /backup.zip
    ./dropbox_uploader.sh mkdir /myDir/
    ./dropbox_uploader.sh upload &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;My File.txt&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;My File 2.txt&amp;#34;&lt;/span&gt;
    ./dropbox_uploader.sh share &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;My File.txt&amp;#34;&lt;/span&gt;
    ./dropbox_uploader.sh list
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;已通过测试环境&#34;&gt;已通过测试环境&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;GNU Linux&lt;/li&gt;
&lt;li&gt;FreeBSD 8.3/10.0&lt;/li&gt;
&lt;li&gt;MacOSX&lt;/li&gt;
&lt;li&gt;Windows/Cygwin&lt;/li&gt;
&lt;li&gt;Raspberry Pi&lt;/li&gt;
&lt;li&gt;QNAP&lt;/li&gt;
&lt;li&gt;iOS&lt;/li&gt;
&lt;li&gt;OpenWRT&lt;/li&gt;
&lt;li&gt;Chrome OS&lt;/li&gt;
&lt;li&gt;OpenBSD&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;设置代理&#34;&gt;设置代理&lt;/h4&gt;
&lt;p&gt;如果需要使用代理服务器，只需对&lt;strong&gt;https_proxy&lt;/strong&gt;变量进行设置即可：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Linux:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;    export HTTP_PROXY_USER&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;XXXX
    export HTTP_PROXY_PASSWORD&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;YYYY
    export https_proxy&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;http://192.168.0.1:8080
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;BSD:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;    setenv HTTP_PROXY_USER XXXX
    setenv HTTP_PROXY_PASSWORD YYYY
    setenv https_proxy http://192.168.0.1:8080
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;bash和curl安装&#34;&gt;BASH和Curl安装&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;Debian &amp;amp; Ubuntu Linux:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;    sudo apt-get install bash &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Probably BASH is already installed on your system&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
    sudo apt-get install curl
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;BSD:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;    cd /usr/ports/shells/bash &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; make install clean
    cd /usr/ports/ftp/curl &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; make install clean
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Cygwin:&lt;/strong&gt;&lt;br&gt;
需要安装以下文件:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;curl&lt;/li&gt;
&lt;li&gt;ca-certificates&lt;/li&gt;
&lt;li&gt;dos2unix&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;运行脚本前，你需要使用&lt;code&gt;dos2unix&lt;/code&gt;对脚本进行转换。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;从源码安装cURL:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;从这里下载源码 &lt;a href=&#34;http://curl.haxx.se/download.html&#34;&gt;http://curl.haxx.se/download.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;参考安装指南进行安装&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Linux下批量转换PNG和JPG</title>
      <link>https://unixetc.com/post/batch-conversion-png-and-jpg-under-linux/</link>
      <pubDate>Mon, 17 Jul 2017 07:17:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/batch-conversion-png-and-jpg-under-linux/</guid>
      <description>&lt;p&gt;我们用到的软件名为&lt;strong&gt;imagemagick&lt;/strong&gt;，一款强大的图片处理软件。&lt;/p&gt;
&lt;p&gt;Debian系使用&lt;code&gt;apt-get install imagemagick&lt;/code&gt;来安装，Fedora系通过&lt;code&gt;yum install imagemagick&lt;/code&gt;来安装。&lt;/p&gt;
&lt;p&gt;其他系统可以到官方下载页进行下载安装 &lt;a href=&#34;https://www.imagemagick.org/script/download.php&#34;&gt;https://www.imagemagick.org/script/download.php&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;安装完成后，可以通过&lt;code&gt;convert tst.jpg tsg.png&lt;/code&gt;将JPG文件转换为PNG，反之亦可。&lt;/p&gt;
&lt;p&gt;下来进行批量替换：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;root@bwgzl:/data/wwwroot/getos.org/images# ll
total &lt;span style=&#34;color:#ae81ff&#34;&gt;188&lt;/span&gt;
drwxr-xr-x  &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; www www  &lt;span style=&#34;color:#ae81ff&#34;&gt;4096&lt;/span&gt; Aug  &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; 15:48 ./
drwxr-xr-x &lt;span style=&#34;color:#ae81ff&#34;&gt;27&lt;/span&gt; www www  &lt;span style=&#34;color:#ae81ff&#34;&gt;4096&lt;/span&gt; Aug  &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; 15:32 ../
-rw-r--r--  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; www www &lt;span style=&#34;color:#ae81ff&#34;&gt;18778&lt;/span&gt; Aug  &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; 15:43 clip_image002.jpg
-rw-r--r--  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; www www &lt;span style=&#34;color:#ae81ff&#34;&gt;17637&lt;/span&gt; Aug  &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; 15:43 clip_image004.jpg
-rw-r--r--  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; www www &lt;span style=&#34;color:#ae81ff&#34;&gt;28075&lt;/span&gt; Aug  &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; 15:43 clip_image006.jpg
-rw-r--r--  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; www www &lt;span style=&#34;color:#ae81ff&#34;&gt;30916&lt;/span&gt; Aug  &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; 15:43 clip_image008.jpg
-rw-r--r--  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; www www &lt;span style=&#34;color:#ae81ff&#34;&gt;13538&lt;/span&gt; Aug  &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; 15:43 clip_image010.jpg
-rw-r--r--  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; www www &lt;span style=&#34;color:#ae81ff&#34;&gt;11845&lt;/span&gt; Aug  &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; 15:43 clip_image012.jpg
-rw-r--r--  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; www www &lt;span style=&#34;color:#ae81ff&#34;&gt;14519&lt;/span&gt; Aug  &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; 15:43 clip_image014.jpg
-rw-r--r--  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; www www &lt;span style=&#34;color:#ae81ff&#34;&gt;33052&lt;/span&gt; Aug  &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; 15:43 clip_image016.jpg
root@bwgzl:/data/wwwroot/getos.org/images# ls -1 *.jpg | xargs -n &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; bash -c &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;convert &amp;#34;$0&amp;#34; &amp;#34;${0%.jpg}.png&amp;#34;&amp;#39;&lt;/span&gt;
root@bwgzl:/data/wwwroot/getos.org/images# ls -ltr
total &lt;span style=&#34;color:#ae81ff&#34;&gt;1172&lt;/span&gt;
-rw-r--r-- &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; www  www   &lt;span style=&#34;color:#ae81ff&#34;&gt;18778&lt;/span&gt; Aug  &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; 15:43 clip_image002.jpg
-rw-r--r-- &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; www  www   &lt;span style=&#34;color:#ae81ff&#34;&gt;17637&lt;/span&gt; Aug  &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; 15:43 clip_image004.jpg
-rw-r--r-- &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; www  www   &lt;span style=&#34;color:#ae81ff&#34;&gt;28075&lt;/span&gt; Aug  &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; 15:43 clip_image006.jpg
-rw-r--r-- &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; www  www   &lt;span style=&#34;color:#ae81ff&#34;&gt;30916&lt;/span&gt; Aug  &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; 15:43 clip_image008.jpg
-rw-r--r-- &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; www  www   &lt;span style=&#34;color:#ae81ff&#34;&gt;13538&lt;/span&gt; Aug  &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; 15:43 clip_image010.jpg
-rw-r--r-- &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; www  www   &lt;span style=&#34;color:#ae81ff&#34;&gt;11845&lt;/span&gt; Aug  &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; 15:43 clip_image012.jpg
-rw-r--r-- &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; www  www   &lt;span style=&#34;color:#ae81ff&#34;&gt;14519&lt;/span&gt; Aug  &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; 15:43 clip_image014.jpg
-rw-r--r-- &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; www  www   &lt;span style=&#34;color:#ae81ff&#34;&gt;33052&lt;/span&gt; Aug  &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; 15:43 clip_image016.jpg
-rw-r--r-- &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root &lt;span style=&#34;color:#ae81ff&#34;&gt;132411&lt;/span&gt; Aug  &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; 16:00 clip_image002.png
-rw-r--r-- &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root &lt;span style=&#34;color:#ae81ff&#34;&gt;106702&lt;/span&gt; Aug  &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; 16:00 clip_image004.png
-rw-r--r-- &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root &lt;span style=&#34;color:#ae81ff&#34;&gt;197143&lt;/span&gt; Aug  &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; 16:00 clip_image006.png
-rw-r--r-- &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root  &lt;span style=&#34;color:#ae81ff&#34;&gt;79397&lt;/span&gt; Aug  &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; 16:00 clip_image008.png
-rw-r--r-- &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root  &lt;span style=&#34;color:#ae81ff&#34;&gt;37643&lt;/span&gt; Aug  &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; 16:00 clip_image010.png
-rw-r--r-- &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root  &lt;span style=&#34;color:#ae81ff&#34;&gt;81090&lt;/span&gt; Aug  &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; 16:00 clip_image012.png
-rw-r--r-- &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root  &lt;span style=&#34;color:#ae81ff&#34;&gt;88635&lt;/span&gt; Aug  &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; 16:00 clip_image014.png
-rw-r--r-- &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root &lt;span style=&#34;color:#ae81ff&#34;&gt;272537&lt;/span&gt; Aug  &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; 16:00 clip_image016.png
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;注意第二条命令即为批量转换操作&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;ls -1 *.jpg | xargs -n &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; bash -c &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;convert &amp;#34;$0&amp;#34; &amp;#34;${0%.jpg}.png&amp;#34;&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>p7zip使用实例</title>
      <link>https://unixetc.com/post/p7zip-usage/</link>
      <pubDate>Fri, 16 Jun 2017 23:12:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/p7zip-usage/</guid>
      <description>&lt;p&gt;以下是&lt;strong&gt;CentOS7&lt;/strong&gt;中&lt;strong&gt;7za&lt;/strong&gt;的使用实例,&lt;strong&gt;CentOS&lt;/strong&gt;下安装&lt;strong&gt;p7zip&lt;/strong&gt;可以&lt;a href=&#34;https://unixetc.com/post/centos7-installation-and-use-p7zip/&#34;&gt;参考此文&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;root@localhost ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 7za&lt;/span&gt;

7-Zip &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;64&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; 16.02 : Copyright &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;c&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;locale&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;en_US.UTF-8,Utf16&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;on,HugeFiles&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;on,64 bits,1 CPU x64&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;

Usage: 7za &amp;lt;command&amp;gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&amp;lt;switches&amp;gt;...&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &amp;lt;archive_name&amp;gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&amp;lt;file_names&amp;gt;...&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
       &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&amp;lt;@listfiles...&amp;gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;

&amp;lt;Commands&amp;gt;
  a : Add files to archive
  b : Benchmark
  d : Delete files from archive
  e : Extract files from archive &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;without using directory names&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
  h : Calculate hash values &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; files
  i : Show information about supported formats
  l : List contents of archive
  rn : Rename files in archive
  t : Test integrity of archive
  u : Update files to archive
  x : eXtract files with full paths

&amp;lt;Switches&amp;gt;
  -- : Stop switches parsing
  -ai&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;r&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-|0&lt;span style=&#34;color:#f92672&#34;&gt;]]{&lt;/span&gt;@listfile|!wildcard&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; : Include archives
  -ax&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;r&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-|0&lt;span style=&#34;color:#f92672&#34;&gt;]]{&lt;/span&gt;@listfile|!wildcard&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; : eXclude archives
  -ao&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;a|s|t|u&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; : set Overwrite mode
  -an : disable archive_name field
  -bb&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0-3&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; : set output log level
  -bd : disable progress indicator
  -bs&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;o|e|p&lt;span style=&#34;color:#f92672&#34;&gt;}{&lt;/span&gt;0|1|2&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; : set output stream &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; output/error/progress line
  -bt : show execution time statistics
  -i&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;r&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-|0&lt;span style=&#34;color:#f92672&#34;&gt;]]{&lt;/span&gt;@listfile|!wildcard&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; : Include filenames
  -m&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Parameters&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; : set compression Method
    -mmt&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;N&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; : set number of CPU threads
  -o&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Directory&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; : set Output directory
  -p&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Password&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; : set Password
  -r&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-|0&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; : Recurse subdirectories
  -sa&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;a|e|s&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; : set Archive name mode
  -scc&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;UTF-8|WIN|DOS&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; : set charset &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; console input/output
  -scs&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;UTF-8|UTF-16LE|UTF-16BE|WIN|DOS|&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;id&lt;span style=&#34;color:#f92672&#34;&gt;}}&lt;/span&gt; : set charset &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; list files
  -scrc&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;CRC32|CRC64|SHA1|SHA256|*&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; : set hash &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; x, e, h commands
  -sdel : delete files after compression
  -seml&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;.&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; : send archive by email
  -sfx&lt;span style=&#34;color:#f92672&#34;&gt;[{&lt;/span&gt;name&lt;span style=&#34;color:#f92672&#34;&gt;}]&lt;/span&gt; : Create SFX archive
  -si&lt;span style=&#34;color:#f92672&#34;&gt;[{&lt;/span&gt;name&lt;span style=&#34;color:#f92672&#34;&gt;}]&lt;/span&gt; : read data from stdin
  -slp : set Large Pages mode
  -slt : show technical information &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; l &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;List&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; command
  -snh : store hard links as links
  -snl : store symbolic links as links
  -sni : store NT security information
  -sns&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; : store NTFS alternate streams
  -so : write data to stdout
  -spd : disable wildcard matching &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; file names
  -spe : eliminate duplication of root folder &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; extract command
  -spf : use fully qualified file paths
  -ssc&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; : set sensitive &lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt; mode
  -ssw : compress shared files
  -stl : set archive timestamp from the most recently modified file
  -stm&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;HexMask&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; : set CPU thread affinity mask &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;hexadecimal number&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
  -stx&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Type&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; : exclude archive type
  -t&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Type&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; : Set type of archive
  -u&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-&lt;span style=&#34;color:#f92672&#34;&gt;][&lt;/span&gt;p#&lt;span style=&#34;color:#f92672&#34;&gt;][&lt;/span&gt;q#&lt;span style=&#34;color:#f92672&#34;&gt;][&lt;/span&gt;r#&lt;span style=&#34;color:#f92672&#34;&gt;][&lt;/span&gt;x#&lt;span style=&#34;color:#f92672&#34;&gt;][&lt;/span&gt;y#&lt;span style=&#34;color:#f92672&#34;&gt;][&lt;/span&gt;z#&lt;span style=&#34;color:#f92672&#34;&gt;][&lt;/span&gt;!newArchiveName&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; : Update options
  -v&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Size&lt;span style=&#34;color:#f92672&#34;&gt;}[&lt;/span&gt;b|k|m|g&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; : Create volumes
  -w&lt;span style=&#34;color:#f92672&#34;&gt;[{&lt;/span&gt;path&lt;span style=&#34;color:#f92672&#34;&gt;}]&lt;/span&gt; : assign Work directory. Empty path means a temporary directory
  -x&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;r&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-|0&lt;span style=&#34;color:#f92672&#34;&gt;]]{&lt;/span&gt;@listfile|!wildcard&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; : eXclude filenames
  -y : assume Yes on all queries
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;压缩文档&#34;&gt;压缩文档&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;root@localhost oneinstack&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# du -sh     ##当前目录大小&lt;/span&gt;
1.8M    .
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;root@localhost oneinstack&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 7za a oi.7z *   ##将当前目录所有文件压缩保存为oi.7z&lt;/span&gt;

7-Zip &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;64&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; 16.02 : Copyright &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;c&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;locale&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;en_US.UTF-8,Utf16&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;on,HugeFiles&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;on,64 bits,1 CPU x64&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;

Scanning the drive:
&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt; folders, &lt;span style=&#34;color:#ae81ff&#34;&gt;128&lt;/span&gt; files, &lt;span style=&#34;color:#ae81ff&#34;&gt;1541017&lt;/span&gt; bytes &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1505&lt;/span&gt; KiB&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;

Creating archive: oi.7z

Items to compress: &lt;span style=&#34;color:#ae81ff&#34;&gt;135&lt;/span&gt;


Files read from disk: &lt;span style=&#34;color:#ae81ff&#34;&gt;128&lt;/span&gt;
Archive size: &lt;span style=&#34;color:#ae81ff&#34;&gt;131726&lt;/span&gt; bytes &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;129&lt;/span&gt; KiB&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
Everything is Ok
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;root@localhost oneinstack&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# ls -lh oi.7z  ###压缩后大小&lt;/span&gt;
-rw-r--r-- &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root 129K Jun &lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt; 15:59 oi.7z
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;p7zip&lt;/strong&gt;默认使用&lt;strong&gt;7z&lt;/strong&gt;格式，当然它还支持一些通用的压缩格式，如7z, lzma, cab, zip, gzip, bzip2, Z 和tar等等……&lt;/p&gt;
&lt;h3 id=&#34;解压缩&#34;&gt;解压缩&lt;/h3&gt;
&lt;p&gt;解压缩有两个参数可用，&lt;code&gt;e&lt;/code&gt;和&lt;code&gt;x&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;e&lt;/code&gt;  解压到当前目录，不使用压缩包的目录名&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;root@localhost test&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 7za -e mx9.7z&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;root@localhost test&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# tree&lt;/span&gt;
.
├── gor
├── gor.exe
├── linux32
├── linux64
├── linuxarm
├── mx9.7z
├── win32
└── win64
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;x&lt;/code&gt; 按照压缩包内文档结构进行解压，&lt;strong&gt;一般这个使用这个参数较多&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;root@localhost test&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 7za x mx9.7z&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;root@localhost test&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# tree .&lt;/span&gt;
.
├── gor370
│   ├── linux32
│   │   └── gor
│   ├── linux64
│   ├── linuxarm
│   │   └── gor
│   ├── win32
│   │   └── gor.exe
│   └── win64
│       └── gor.exe
└── mx9.7z
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;格式设置&#34;&gt;格式设置&lt;/h3&gt;
&lt;p&gt;使用&lt;code&gt;-t&lt;/code&gt;参数来指定压缩格式，使用如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;7z a -tzip archive.zip *.txt
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;将当前目录下所有&lt;strong&gt;txt&lt;/strong&gt;文件打包压缩为&lt;strong&gt;archive.zip&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;7z t -t7z.split archive.7z.001
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;测试&lt;strong&gt;archive.7z.001&lt;/strong&gt;中的所有文件，同时还支持多7z存档。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;7z x -t# sfxarchive.exe
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;使用解析模式提取&lt;strong&gt;sfxarchive.exe&lt;/strong&gt;文件&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;7z x -tiso archive.iso
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;以&lt;strong&gt;ISO&lt;/strong&gt;存档模式解压&lt;strong&gt;archive.iso&lt;/strong&gt;文件&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;7z x -tudf archive.iso

&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;以&lt;strong&gt;UDF&lt;/strong&gt;存档模式解压&lt;strong&gt;archive.iso&lt;/strong&gt;文件，&lt;strong&gt;UDF&lt;/strong&gt;说明&lt;a href=&#34;https://en.wikipedia.org/wiki/Universal_Disk_Format&#34;&gt;在此&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;压缩模式设置&#34;&gt;压缩模式设置&lt;/h3&gt;
&lt;p&gt;使用&lt;code&gt;-m&lt;/code&gt;参数来设置模式，此项设置与文档类型有关。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;7z&lt;/strong&gt;类型的压缩模式参数：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-mx&lt;/code&gt;  设置压缩级别，x=[0 | 1 | 3 | 5 | 7 | 9 ]&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;等级&lt;/th&gt;
&lt;th&gt;模式&lt;/th&gt;
&lt;th&gt;字典&lt;/th&gt;
&lt;th&gt;FastBytes&lt;/th&gt;
&lt;th&gt;MatchFinder&lt;/th&gt;
&lt;th&gt;Filter&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;Copy&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;无压缩&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;LZMA2&lt;/td&gt;
&lt;td&gt;64 KB&lt;/td&gt;
&lt;td&gt;32&lt;/td&gt;
&lt;td&gt;HC4&lt;/td&gt;
&lt;td&gt;BCJ&lt;/td&gt;
&lt;td&gt;最快压缩&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;LZMA2&lt;/td&gt;
&lt;td&gt;1 MB&lt;/td&gt;
&lt;td&gt;32&lt;/td&gt;
&lt;td&gt;HC4&lt;/td&gt;
&lt;td&gt;BCJk&lt;/td&gt;
&lt;td&gt;快速压缩&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;LZMA2&lt;/td&gt;
&lt;td&gt;16 MB&lt;/td&gt;
&lt;td&gt;32&lt;/td&gt;
&lt;td&gt;BT4&lt;/td&gt;
&lt;td&gt;BCJ&lt;/td&gt;
&lt;td&gt;一般压缩&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;LZMA2&lt;/td&gt;
&lt;td&gt;32 MB&lt;/td&gt;
&lt;td&gt;64&lt;/td&gt;
&lt;td&gt;BT4&lt;/td&gt;
&lt;td&gt;BCJz&lt;/td&gt;
&lt;td&gt;最大压缩&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;LZMA2&lt;/td&gt;
&lt;td&gt;64 MB&lt;/td&gt;
&lt;td&gt;64&lt;/td&gt;
&lt;td&gt;BT4&lt;/td&gt;
&lt;td&gt;BCJ2j&lt;/td&gt;
&lt;td&gt;极致压缩&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;实例如下&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;root@localhost ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#7za -mx=0 a mx0.7z gor370/*&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;root@localhost ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#7za -mx=1 a mx1.7z gor370/*&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;root@localhost ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#7za -mx=3 a mx3.7z gor370/*&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;root@localhost ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#7za -mx=5 a mx5.7z gor370/*&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;root@localhost ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#7za -mx=7 a mx7.7z gor370/*&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;root@localhost ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#7za -mx=9 a mx9.7z gor370/*&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;root@localhost ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# du -sh gor370/&lt;/span&gt;
31M     gor370/
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;root@localhost ~&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# ls -lh m*.7z&lt;/span&gt;
-rw-r--r-- &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root  31M Jun &lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt; 16:34 mx0.7z
-rw-r--r-- &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root 8.0M Jun &lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt; 16:34 mx1.7z
-rw-r--r-- &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root 7.8M Jun &lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt; 16:34 mx3.7z
-rw-r--r-- &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root 6.6M Jun &lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt; 16:34 mx5.7z
-rw-r--r-- &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root 6.5M Jun &lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt; 16:35 mx7.7z
-rw-r--r-- &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root 6.4M Jun &lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt; 16:35 mx9.7z
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;可以看出压缩级别越高，压缩后的文件体积越小。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>在Linux中运行Android软件</title>
      <link>https://unixetc.com/post/anbox-run-android-applications-on-linux/</link>
      <pubDate>Fri, 09 Jun 2017 06:09:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/anbox-run-android-applications-on-linux/</guid>
      <description>&lt;p&gt;想要在PC上运行Android软件就需要模拟器，Windows版的Android模拟器软件很多，但是Linux平台的就不多了，今天推荐一款Linux下的Android模拟器软件&lt;strong&gt;Anbox&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Anbox官方介绍为Android in a Box,Run Android applications on any GNU/Linux operating system.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Anbox&lt;/strong&gt;现在还处于测试阶段，很多功能还不完善和稳定，请谨慎使用。&lt;/p&gt;
&lt;h3 id=&#34;安装anbox&#34;&gt;安装Anbox&lt;/h3&gt;
&lt;p&gt;首先得安装&lt;strong&gt;Snaps&lt;/strong&gt;,官方地址为&lt;a href=&#34;https://snapcraft.io/&#34;&gt;https://snapcraft.io/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;LinuxMint中安装Snaps和必须包&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo apt install snapd
sudo apt install pulseaudio
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;接下来按照官方指南安装&lt;strong&gt;Anbox&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;snap install --classic anbox-installer &amp;amp;&amp;amp; anbox-installer
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;我试着通过snap来安装一直存在权限问题，一般权限不能运行&lt;code&gt;snap install --classic anbox-installer&lt;/code&gt;，root运行完&lt;code&gt;snap install --classic anbox-installer&lt;/code&gt;后，但运行&lt;code&gt;anbox-installer&lt;/code&gt;又提示不能使用root权限，一般权限根本无法运行&lt;code&gt;anbox-installer&lt;/code&gt;，搞了半天都没有成功，于是就有了下文。&lt;/p&gt;
&lt;p&gt;通过常规方法安装&lt;strong&gt;Anbox&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;wget https://raw.githubusercontent.com/anbox/anbox-installer/master/installer.sh -O anbox-installer
chmod +x ./anbox-installer
./anbox-installer
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;安装完成后会有重启系统的提示&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;To ensure all changes made to your system you should now reboot
your system. If you don&amp;rsquo;t do this no Android applications will
show up in the system application launcher.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;重启后就会在系统菜单中找到&lt;strong&gt;Anbox&lt;/strong&gt;，点击打开，见下图(注意Cuto是我自己安装的，原来没有)&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/org.anbox.appmgr.webp&#34; alt=&#34;org.anbox.appmgr&#34;&gt;&lt;/p&gt;
&lt;p&gt;一个基本的Android系统已经成功了，可以看看系统信息&lt;strong&gt;Settings&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/anbox.settings.webp&#34; alt=&#34;anbox_settings&#34;&gt;&lt;/p&gt;
&lt;p&gt;可以看到，Android版本为7.1.1，很新咯!&lt;/p&gt;
&lt;h4 id=&#34;在anbox中安装android软件&#34;&gt;在Anbox中安装Android软件&lt;/h4&gt;
&lt;p&gt;首先需要安装&lt;strong&gt;adb&lt;/strong&gt;工具&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo apt install adb
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;安装成功后，可以使用adb来识别模拟器是否链接&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;adb devices

List of devices attached
emulator-6663	device
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;可以看到出现了一个名为emulator-6663的设备&lt;/p&gt;
&lt;p&gt;下来安装Android软件&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;alair@vbs ~/下载 $ ls
Cuto-1.2.1-28-for-30644-o_1bgano4o21gjj1l1v183893n1sdkr-uid-423508.apk
nautilus_nutstore_amd64.deb
alair@vbs ~/下载 $ adb install ./Cuto-1.2.1-28-for-30644-o_1bgano4o21gjj1l1v183893n1sdkr-uid-423508.apk 
18112 KB/s (7389673 bytes in 0.398s)
Success
alair@vbs ~/下载 $ 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;以上以安装&lt;strong&gt;Cuto&lt;/strong&gt;为例，安装完成后就可以点击运行咯。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>CentOS7安装使用p7zip</title>
      <link>https://unixetc.com/post/centos7-installation-and-use-p7zip/</link>
      <pubDate>Tue, 06 Jun 2017 06:06:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/centos7-installation-and-use-p7zip/</guid>
      <description>&lt;p&gt;在此只推荐从源码安装&lt;strong&gt;p7zip&lt;/strong&gt;，下载地址 &lt;a href=&#34;http://www.7-zip.org/download.html&#34;&gt;http://www.7-zip.org/download.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;源码在这里下载 &lt;a href=&#34;https://sourceforge.net/projects/p7zip/files/p7zip/&#34;&gt;https://sourceforge.net/projects/p7zip/files/p7zip/&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;wget https://sourceforge.net/projects/p7zip/files/p7zip/16.02/p7zip_16.02_src_all.tar.bz2
tar jxf p7zip_16.02_src_all.tar.bz2
cd p7zip_16.02
make 
make install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;使用p7zip&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[root@localhost ~]# 7za
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;7-Zip &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;a&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;64&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; 16.02 : Copyright &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;c&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;locale&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;en_US.UTF-8,Utf16&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;on,HugeFiles&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;on,64 bits,1 CPU x64&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;

Usage: 7za &amp;lt;command&amp;gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&amp;lt;switches&amp;gt;...&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &amp;lt;archive_name&amp;gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&amp;lt;file_names&amp;gt;...&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
   &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&amp;lt;@listfiles...&amp;gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;

&amp;lt;Commands&amp;gt;
  a : Add files to archive
  b : Benchmark
  d : Delete files from archive
  e : Extract files from archive &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;without using directory names&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
  h : Calculate hash values &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; files
  i : Show information about supported formats
  l : List contents of archive
  rn : Rename files in archive
  t : Test integrity of archive
  u : Update files to archive
  x : eXtract files with full paths
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;压缩文件&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;7za a pak.7z ./photos/*.jpg    &lt;span style=&#34;color:#75715e&#34;&gt;#压缩./photo/目录下所有jpg文件为pak.7z&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;解压缩文件&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;7za x pak.7z
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>理解Linux中Shell初始化文件和用户Profiles文件</title>
      <link>https://unixetc.com/post/understand-linux-shell-initialization-files-and-user-profiles-files/</link>
      <pubDate>Tue, 25 Apr 2017 14:25:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/understand-linux-shell-initialization-files-and-user-profiles-files/</guid>
      <description>&lt;p&gt;Linux是一个多用户、实时共享的操作系统，意味着不止一个用户可以登录同一个系统。系统管理员通过任务管理来分配不同用户的权限，比如安装、升级、卸载应用程序，运行编译程序，文件查看、编辑等等。&lt;/p&gt;
&lt;p&gt;Linux允许通过两种主要方式来创建用户环境：系统级(全局)和用户级(个人)。一般情况下，Linux系统都会运行基本shell程序，当用户登录成功后shell会在初始化时根据某些文件开创建环境。&lt;/p&gt;
&lt;h3 id=&#34;linux中的shell初始化&#34;&gt;Linux中的Shell初始化&lt;/h3&gt;
&lt;p&gt;当&lt;strong&gt;Shell&lt;/strong&gt;被调用时，会有一些初始化/启动文件被启用，它们的主要作用是为shell本身或用户设定运行环境，包含一些函数、	变量、别名等等。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Shell&lt;/strong&gt;可以读取以下两种初始化文件:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;系统级启动文件&lt;/strong&gt; – 包含一些应用于户所有用户的全局配置，一般存在于**/etc**目录中，如 **/etc/profiles** 、**/etc/bashrc** 或者 **/etc/bash.bashrc**。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;用户级启动文件&lt;/strong&gt; – 包含一些应用于单用户的配置文件，一般存放在各个用户目录，这些配置可以覆盖系统级全局配置，如**.profiles**、 **.bash_profile**、 **.bashrc** 和 **.bash_login**.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Shell&lt;/strong&gt;存在三种调用模式：&lt;/p&gt;
&lt;h4 id=&#34;1-交互式登录shell&#34;&gt;1. 交互式登录Shell&lt;/h4&gt;
&lt;p&gt;当用户成功登录系统后调用该&lt;strong&gt;Shell&lt;/strong&gt;,使用**/bin/login**登录，随后读取**/etc/passwd**文件。&lt;/p&gt;
&lt;p&gt;当启动交互式&lt;strong&gt;shell&lt;/strong&gt;后，将读取**/etc/profile**文件以及特定的用户文件**~/.bash_profile**&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;login as: pi
pi@pi.raspi.in&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;s password:

The programs included with the Debian GNU/Linux system are free software;
the exact distribution terms &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; each program are described in the
individual files in /usr/share/doc/*/copyright.

Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent
permitted by applicable law.
Last login: Tue Apr &lt;span style=&#34;color:#ae81ff&#34;&gt;25&lt;/span&gt; 10:43:53 &lt;span style=&#34;color:#ae81ff&#34;&gt;2017&lt;/span&gt; from 211.137.135.200
pi@raspi:~ $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;2-非登录交互式shell&#34;&gt;2. 非登录交互式Shell&lt;/h4&gt;
&lt;p&gt;当使用如&lt;strong&gt;$/bin/bash&lt;/strong&gt; or &lt;strong&gt;$/bin/zsh&lt;/strong&gt;的命令行时，将会系统非登录交互式&lt;strong&gt;shell&lt;/strong&gt;。他也可以通过**/bin/su**命令来运行。&lt;/p&gt;
&lt;p&gt;另外，在打开如&lt;strong&gt;konsole&lt;/strong&gt;、&lt;strong&gt;terminator&lt;/strong&gt;和&lt;strong&gt;xterm&lt;/strong&gt;等图形化终端程序时 ，非登录交互式&lt;strong&gt;shell&lt;/strong&gt;也将被调用。&lt;/p&gt;
&lt;p&gt;这种情况下调用时，它将拷贝父&lt;strong&gt;shell&lt;/strong&gt;的环境，并读取相应用户级的 &lt;strong&gt;~/.bashrc&lt;/strong&gt; 配置文件。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;pi@raspi:~ $ sudo -s
root@raspi:/home/pi# cd
root@raspi:~# ls -la
total &lt;span style=&#34;color:#ae81ff&#34;&gt;56&lt;/span&gt;
drwx------  &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt; root root &lt;span style=&#34;color:#ae81ff&#34;&gt;4096&lt;/span&gt; Apr &lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt; 10:26 .
drwxr-xr-x &lt;span style=&#34;color:#ae81ff&#34;&gt;22&lt;/span&gt; root root &lt;span style=&#34;color:#ae81ff&#34;&gt;4096&lt;/span&gt; Feb  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; 20:28 ..
-rw-------  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root &lt;span style=&#34;color:#ae81ff&#34;&gt;2177&lt;/span&gt; Apr &lt;span style=&#34;color:#ae81ff&#34;&gt;25&lt;/span&gt; 11:21 .bash_history
-rw-r--r--  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root  &lt;span style=&#34;color:#ae81ff&#34;&gt;765&lt;/span&gt; Feb  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; 20:48 .bashrc
drwx------  &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; root root &lt;span style=&#34;color:#ae81ff&#34;&gt;4096&lt;/span&gt; Mar  &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; 14:28 .cache
drwxr-xr-x  &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; root root &lt;span style=&#34;color:#ae81ff&#34;&gt;4096&lt;/span&gt; Mar  &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; 11:15 .config
drwxr-xr-x  &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; root root &lt;span style=&#34;color:#ae81ff&#34;&gt;4096&lt;/span&gt; Mar  &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; 11:15 .local
drwxr-xr-x  &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; root root &lt;span style=&#34;color:#ae81ff&#34;&gt;4096&lt;/span&gt; Apr &lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt; 10:26 .oracle_jre_usage
drwxr-xr-x  &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; root root &lt;span style=&#34;color:#ae81ff&#34;&gt;4096&lt;/span&gt; Feb &lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt; 11:18 .pip
-rw-r--r--  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root  &lt;span style=&#34;color:#ae81ff&#34;&gt;140&lt;/span&gt; Nov &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;2007&lt;/span&gt; .profile
-rw-------  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root   &lt;span style=&#34;color:#ae81ff&#34;&gt;41&lt;/span&gt; Mar  &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; 11:39 .python_history
drwx------  &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; root root &lt;span style=&#34;color:#ae81ff&#34;&gt;4096&lt;/span&gt; Mar  &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; 11:20 .ssh
-rw-------  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root &lt;span style=&#34;color:#ae81ff&#34;&gt;6342&lt;/span&gt; Mar &lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt; 17:30 .viminfo
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;3-非交互式shell&#34;&gt;3. 非交互式Shell&lt;/h4&gt;
&lt;p&gt;当运行脚本时则条用非交互式&lt;strong&gt;shell&lt;/strong&gt;。在这种模式下，它将处理所运行的脚本中的命令、函数等操作，不需要进行交互式输入，除非脚本需求。使用的环境继承自&lt;strong&gt;父shell&lt;/strong&gt;。&lt;/p&gt;
&lt;h3 id=&#34;理解系统级shell启动文件&#34;&gt;理解系统级Shell启动文件&lt;/h3&gt;
&lt;p&gt;下来，我们来看看一些系统级启动文件都有什么内容：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/etc/profile file&lt;/strong&gt;文件存储登录时系统级环境配置和启动程序。如果你想配置应用于所有用户的环境设置，可以加入此文件。&lt;/p&gt;
&lt;p&gt;比如，你可在这里设置全局路径变量。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;pi@raspi:~ $ cat /etc/profile
&lt;span style=&#34;color:#75715e&#34;&gt;# /etc/profile: system-wide .profile file for the Bourne shell (sh(1))&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# and Bourne compatible shells (bash(1), ksh(1), ash(1), ...).&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;`id -u`&amp;#34;&lt;/span&gt; -eq &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
  PATH&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/usr/local/sbin:/usr/local/usr/sbin:/usr/sbin:/bin&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#old bak  PATH=&amp;#34;/usr/local/sbin:/usr/local/usr/sbin:/usr/sbin:/bin:/usr/local/games:/usr/games&amp;#34;&lt;/span&gt;
PATH&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/bin:/sbin:/usr/local/games:/usr/games&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
export PATH

&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$PS1&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
  &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$BASH&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$BASH&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; !&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/bin/sh&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
    &lt;span style=&#34;color:#75715e&#34;&gt;# The file bash.bashrc already sets the default PS1.&lt;/span&gt;
    &lt;span style=&#34;color:#75715e&#34;&gt;# PS1=&amp;#39;\h:\w\$ &amp;#39;&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -f /etc/bash.bashrc &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
      . /etc/bash.bashrc
    &lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
  &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;`id -u`&amp;#34;&lt;/span&gt; -eq &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
      PS1&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;# &amp;#39;&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;
      PS1&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;$ &amp;#39;&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
  &lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -d /etc/profile.d &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
  &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i in /etc/profile.d/*.sh; &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -r $i &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
      . $i
    &lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
  &lt;span style=&#34;color:#66d9ef&#34;&gt;done&lt;/span&gt;
  unset i
&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
export PATH&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;/usr/local/nginx/sbin:$PATH
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：当你使用&lt;strong&gt;RHEL/CentOS7&lt;/strong&gt;系统时，会看到如下提示&amp;quot;It’s not recommended to change this file unless you know what you are doing. It’s much better to create a custom &lt;strong&gt;.sh&lt;/strong&gt; shell script in &lt;strong&gt;/etc/profile.d/&lt;/strong&gt; to make custom changes to your environment, as this will prevent the need for merging in future updates&amp;rdquo;。&lt;/p&gt;
&lt;p&gt;提示中的 &lt;strong&gt;/etc/profile.d/&lt;/strong&gt; 目录保存着所有的自定义修改运行环境的脚本。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;pi@raspi:~ $ cd /etc/profile.d/
pi@raspi:/etc/profile.d $ ls -l
total &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;
-rw-r--r-- &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root &lt;span style=&#34;color:#ae81ff&#34;&gt;663&lt;/span&gt; Mar &lt;span style=&#34;color:#ae81ff&#34;&gt;23&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;2014&lt;/span&gt; bash_completion.sh
-rw-r--r-- &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root &lt;span style=&#34;color:#ae81ff&#34;&gt;387&lt;/span&gt; Mar &lt;span style=&#34;color:#ae81ff&#34;&gt;31&lt;/span&gt; 11:47 oneinstack.sh
pi@raspi:/etc/profile.d $
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;/etc/bashrc&lt;/strong&gt; 或 &lt;strong&gt;/etc/bash.bashrc&lt;/strong&gt;文件，包含应用于所有用户的系统级函数、变量、别名等配置信息。&lt;/p&gt;
&lt;p&gt;如果你的系统包含多种&lt;strong&gt;Shell&lt;/strong&gt;程序，建议你可以将一些特定的配置放到这里。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;root@raspi:~# cat /etc/bash.bashrc
&lt;span style=&#34;color:#75715e&#34;&gt;# System-wide .bashrc file for interactive bash(1) shells.&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# To enable the settings / commands in this file for login shells as well,&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# this file has to be sourced in /etc/profile.&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# If not running interactively, don&amp;#39;t do anything&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -z &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$PS1&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# check the window size after each command and, if necessary,&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# update the values of LINES and COLUMNS.&lt;/span&gt;
shopt -s checkwinsize

&lt;span style=&#34;color:#75715e&#34;&gt;# set variable identifying the chroot you work in (used in the prompt below)&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -z &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;debian_chroot&lt;span style=&#34;color:#66d9ef&#34;&gt;:-&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -r /etc/debian_chroot &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
    debian_chroot&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;cat /etc/debian_chroot&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# set a fancy prompt (non-color, overwrite the one in /etc/profile)&lt;/span&gt;
PS1&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;${debian_chroot:+($debian_chroot)}\u@\h:\w\$ &amp;#39;&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# Commented out, don&amp;#39;t overwrite xterm -T &amp;#34;title&amp;#34; -n &amp;#34;icontitle&amp;#34; by default.&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# If this is an xterm set the title to user@host:dir&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#case &amp;#34;$TERM&amp;#34; in&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#xterm*|rxvt*)&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#    PROMPT_COMMAND=&amp;#39;echo -ne &amp;#34;\033]0;${USER}@${HOSTNAME}: ${PWD}\007&amp;#34;&amp;#39;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#    ;;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#*)&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#    ;;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#esac&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# enable bash completion in interactive shells&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#if ! shopt -oq posix; then&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#  if [ -f /usr/share/bash-completion/bash_completion ]; then&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#    . /usr/share/bash-completion/bash_completion&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#  elif [ -f /etc/bash_completion ]; then&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#    . /etc/bash_completion&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#  fi&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#fi&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# if the command-not-found package is installed, use it&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -x /usr/lib/command-not-found -o -x /usr/share/command-not-found/command-not-found &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; command_not_found_handle &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;
                &lt;span style=&#34;color:#75715e&#34;&gt;# check because c-n-f could&amp;#39;ve been removed in the meantime&lt;/span&gt;
                &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -x /usr/lib/command-not-found &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
                   /usr/lib/command-not-found -- &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$1&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
                   &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; $?
                &lt;span style=&#34;color:#66d9ef&#34;&gt;elif&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -x /usr/share/command-not-found/command-not-found &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
                   /usr/share/command-not-found/command-not-found -- &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$1&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
                   &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; $?
                &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;
                   printf &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;%s: command not found\n&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$1&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &amp;gt;&amp;amp;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
                   &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;127&lt;/span&gt;
                &lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;理解用户级shell启动文件&#34;&gt;理解用户级Shell启动文件&lt;/h3&gt;
&lt;p&gt;接下来，我们看一下用户级启动文件，它们中的配置只应用户对应用户，一般放置在相对应的用户目录中：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;root@raspi:~# ls -la
total &lt;span style=&#34;color:#ae81ff&#34;&gt;56&lt;/span&gt;
drwx------  &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt; root root &lt;span style=&#34;color:#ae81ff&#34;&gt;4096&lt;/span&gt; Apr &lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt; 10:26 .
drwxr-xr-x &lt;span style=&#34;color:#ae81ff&#34;&gt;22&lt;/span&gt; root root &lt;span style=&#34;color:#ae81ff&#34;&gt;4096&lt;/span&gt; Feb  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; 20:28 ..
-rw-------  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root &lt;span style=&#34;color:#ae81ff&#34;&gt;2177&lt;/span&gt; Apr &lt;span style=&#34;color:#ae81ff&#34;&gt;25&lt;/span&gt; 11:21 .bash_history
-rw-r--r--  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root  &lt;span style=&#34;color:#ae81ff&#34;&gt;765&lt;/span&gt; Feb  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; 20:48 .bashrc
drwx------  &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; root root &lt;span style=&#34;color:#ae81ff&#34;&gt;4096&lt;/span&gt; Mar  &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; 14:28 .cache
drwxr-xr-x  &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; root root &lt;span style=&#34;color:#ae81ff&#34;&gt;4096&lt;/span&gt; Mar  &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; 11:15 .config
drwxr-xr-x  &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; root root &lt;span style=&#34;color:#ae81ff&#34;&gt;4096&lt;/span&gt; Mar  &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; 11:15 .local
drwxr-xr-x  &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; root root &lt;span style=&#34;color:#ae81ff&#34;&gt;4096&lt;/span&gt; Apr &lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt; 10:26 .oracle_jre_usage
drwxr-xr-x  &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; root root &lt;span style=&#34;color:#ae81ff&#34;&gt;4096&lt;/span&gt; Feb &lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt; 11:18 .pip
-rw-r--r--  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root  &lt;span style=&#34;color:#ae81ff&#34;&gt;140&lt;/span&gt; Nov &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;2007&lt;/span&gt; .profile
-rw-------  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root   &lt;span style=&#34;color:#ae81ff&#34;&gt;41&lt;/span&gt; Mar  &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; 11:39 .python_history
drwx------  &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; root root &lt;span style=&#34;color:#ae81ff&#34;&gt;4096&lt;/span&gt; Mar  &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; 11:20 .ssh
-rw-------  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; root root &lt;span style=&#34;color:#ae81ff&#34;&gt;6342&lt;/span&gt; Mar &lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt; 17:30 .viminfo
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;~/.bash_profile&lt;/strong&gt;包含一些用户级的环境变量、启动程序、配置信息等等。你可以在这里自定义路径信息、变量等内容：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# cat ~/.bash_profile&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# .bash_profile&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# Get the aliases and functions&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -f ~/.bashrc &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
        . ~/.bashrc
&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# User specific environment and startup programs&lt;/span&gt;
export PATH
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;~/.bashrc&lt;/strong&gt;文件中包含用户自定义别名和函数等。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;pi@raspi:~ $ cat ~/.bashrc
&lt;span style=&#34;color:#75715e&#34;&gt;# ~/.bashrc: executed by bash(1) for non-login shells.&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# for examples&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# If not running interactively, don&amp;#39;t do anything&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt; $- in
    *i*&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; ;;
      *&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;;;
&lt;span style=&#34;color:#66d9ef&#34;&gt;esac&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# don&amp;#39;t put duplicate lines or lines starting with space in the history.&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# See bash(1) for more options&lt;/span&gt;
HISTCONTROL&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;ignoreboth

&lt;span style=&#34;color:#75715e&#34;&gt;# append to the history file, don&amp;#39;t overwrite it&lt;/span&gt;
shopt -s histappend

&lt;span style=&#34;color:#75715e&#34;&gt;# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)&lt;/span&gt;
HISTSIZE&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1000&lt;/span&gt;
HISTFILESIZE&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2000&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# check the window size after each command and, if necessary,&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# update the values of LINES and COLUMNS.&lt;/span&gt;
shopt -s checkwinsize

&lt;span style=&#34;color:#75715e&#34;&gt;# If set, the pattern &amp;#34;**&amp;#34; used in a pathname expansion context will&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# match all files and zero or more directories and subdirectories.&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#shopt -s globstar&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# make less more friendly for non-text input files, see lesspipe(1)&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#[ -x /usr/bin/lesspipe ] &amp;amp;&amp;amp; eval &amp;#34;$(SHELL=/bin/sh lesspipe)&amp;#34;&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# set variable identifying the chroot you work in (used in the prompt below)&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -z &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;debian_chroot&lt;span style=&#34;color:#66d9ef&#34;&gt;:-&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -r /etc/debian_chroot &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
    debian_chroot&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;cat /etc/debian_chroot&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# set a fancy prompt (non-color, unless we know we &amp;#34;want&amp;#34; color)&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$TERM&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; in
    xterm-color&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; color_prompt&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;yes;;
&lt;span style=&#34;color:#66d9ef&#34;&gt;esac&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# uncomment for a colored prompt, if the terminal has the capability; turned&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# off by default to not distract the user: the focus in a terminal window&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# should be on the output of commands, not on the prompt&lt;/span&gt;
force_color_prompt&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;yes

&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -n &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$force_color_prompt&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -x /usr/bin/tput &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; tput setaf &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &amp;gt;&amp;amp;/dev/null; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
        &lt;span style=&#34;color:#75715e&#34;&gt;# We have color support; assume it&amp;#39;s compliant with Ecma-48&lt;/span&gt;
        &lt;span style=&#34;color:#75715e&#34;&gt;# (ISO/IEC-6429). (Lack of such support is extremely rare, and such&lt;/span&gt;
        &lt;span style=&#34;color:#75715e&#34;&gt;# a case would tend to support setf rather than setaf.)&lt;/span&gt;
        color_prompt&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;yes
    &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;
        color_prompt&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$color_prompt&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; yes &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
    PS1&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w \$\[\033[00m\] &amp;#39;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;
    PS1&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;${debian_chroot:+($debian_chroot)}\u@\h:\w\$ &amp;#39;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
unset color_prompt force_color_prompt

&lt;span style=&#34;color:#75715e&#34;&gt;# If this is an xterm set the title to user@host:dir&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$TERM&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; in
xterm*|rxvt*&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
    PS1&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\[\e]0;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;debian_chroot:+($debian_chroot)&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;\u@\h: \w\a\]&lt;/span&gt;$PS1&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
    ;;
*&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
    ;;
&lt;span style=&#34;color:#66d9ef&#34;&gt;esac&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# enable color support of ls and also add handy aliases&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -x /usr/bin/dircolors &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
    test -r ~/.dircolors &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; eval &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;dircolors -b ~/.dircolors&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;||&lt;/span&gt; eval &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;dircolors -b&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
    alias ls&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ls --color=auto&amp;#39;&lt;/span&gt;
    &lt;span style=&#34;color:#75715e&#34;&gt;#alias dir=&amp;#39;dir --color=auto&amp;#39;&lt;/span&gt;
    &lt;span style=&#34;color:#75715e&#34;&gt;#alias vdir=&amp;#39;vdir --color=auto&amp;#39;&lt;/span&gt;

    alias grep&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;grep --color=auto&amp;#39;&lt;/span&gt;
    alias fgrep&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;fgrep --color=auto&amp;#39;&lt;/span&gt;
    alias egrep&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;egrep --color=auto&amp;#39;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# colored GCC warnings and errors&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#export GCC_COLORS=&amp;#39;error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01&amp;#39;&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# some more ls aliases&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#alias ll=&amp;#39;ls -l&amp;#39;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#alias la=&amp;#39;ls -A&amp;#39;&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#alias l=&amp;#39;ls -CF&amp;#39;&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# Alias definitions.&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# You may want to put all your additions into a separate file like&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# ~/.bash_aliases, instead of adding them here directly.&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# See /usr/share/doc/bash-doc/examples in the bash-doc package.&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -f ~/.bash_aliases &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
    . ~/.bash_aliases
&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;

&lt;span style=&#34;color:#75715e&#34;&gt;# enable programmable completion features (you don&amp;#39;t need to enable&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# this, if it&amp;#39;s already enabled in /etc/bash.bashrc and /etc/profile&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;# sources /etc/bash.bashrc).&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; ! shopt -oq posix; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
  &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -f /usr/share/bash-completion/bash_completion &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
    . /usr/share/bash-completion/bash_completion
  &lt;span style=&#34;color:#66d9ef&#34;&gt;elif&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; -f /etc/bash_completion &lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;; &lt;span style=&#34;color:#66d9ef&#34;&gt;then&lt;/span&gt;
    . /etc/bash_completion
  &lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;fi&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;~/.bash_login&lt;/strong&gt; 文件包含一些登陆时运行的配置信息。当&lt;strong&gt;~/.bash_profile&lt;/strong&gt;缺失时，&lt;strong&gt;bash&lt;/strong&gt;将读取&lt;strong&gt;~/.bash_login&lt;/strong&gt; 。&lt;/p&gt;
&lt;p&gt;当 &lt;strong&gt;~/.bash_profile&lt;/strong&gt; 和 &lt;strong&gt;~/.bash_login&lt;/strong&gt;缺失时，&lt;strong&gt;bash&lt;/strong&gt;将读取 &lt;strong&gt;~/.profile&lt;/strong&gt;文件。它同样包含配置信息、函数、变量、别名的信息。&lt;/p&gt;
&lt;p&gt;下面，我们再看看两个&lt;strong&gt;bash&lt;/strong&gt;初始化时非必须，但是比较重要的配置文件。&lt;/p&gt;
&lt;p&gt;Linux系统有的一个&lt;strong&gt;历史命令&lt;/strong&gt;功能，该功能按用户记录运行的所有命令历史，存储在 &lt;strong&gt;~/.bash_history&lt;/strong&gt; 文件中。&lt;/p&gt;
&lt;p&gt;查看历史命令：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;root@bwgzl:~# history
    &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;  2017-04-25 11:41:34 root cd sf/
    &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;  2017-03-31 10:46:17 root ls
    &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;  2017-03-31 10:46:29 root ./setup-seafile-mysql.sh
    &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;  2017-03-31 10:47:47 root mysql -u sf -h localhost -p
    &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;  2017-03-31 10:47:57 root reboot
    &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;  2017-03-31 10:48:28 root ls
    &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;  2017-03-31 10:48:33 root ls
    &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;  2017-03-31 10:48:36 root cd sf
    &lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;  2017-03-31 10:48:36 root ls
   &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;  2017-03-31 10:48:42 root ./setup-seafile-mysql.sh
   &lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;  2017-03-31 10:48:48 root exit
   &lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;  2017-03-31 11:16:54 root cd /data/wwwroot/unixetc.com/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;最后一个是 &lt;strong&gt;~/.bash_logout&lt;/strong&gt; 文件，它不用于&lt;strong&gt;shell&lt;/strong&gt;启动，但存储一些特殊的指令当用户注销时执行。&lt;/p&gt;
&lt;p&gt;一个很有用的例子就是当用户注销后，清空所有屏幕内容。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;root@bwgzl:~# cat bash_logout 
&lt;span style=&#34;color:#75715e&#34;&gt;# ~/.bash_logout&lt;/span&gt;

clear
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>python-pip安装实例</title>
      <link>https://unixetc.com/post/python-pip-installation/</link>
      <pubDate>Thu, 20 Apr 2017 14:28:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/python-pip-installation/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Python-pip&lt;/strong&gt; 是一个现代的，通用的 &lt;strong&gt;Python&lt;/strong&gt;包管理工具。提供了对 Python 包的查找、下载、安装、卸载的功能。&lt;/p&gt;
&lt;p&gt;以下为多个操作系统平台下&lt;strong&gt;Python-pip&lt;/strong&gt;安装方法&lt;/p&gt;
&lt;h3 id=&#34;通用方法&#34;&gt;通用方法&lt;/h3&gt;
&lt;p&gt;通过&lt;strong&gt;get-pip.py&lt;/strong&gt;文件来安装，建议&lt;strong&gt;Windows&lt;/strong&gt;用户使用，前提是你必须首先安装&lt;strong&gt;Python&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;版本要求Python 2 &amp;gt;=2.7.9 或Python 3 &amp;gt;=3.4，可从官网下载&lt;a href=&#34;http://www.python.org/&#34;&gt;http://www.python.org/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;然后下载&lt;strong&gt;get-pip.py&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;下载地址 &lt;a href=&#34;https://bootstrap.pypa.io/get-pip.py&#34;&gt;https://bootstrap.pypa.io/get-pip.py&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;通过&lt;code&gt;python get-pip.py&lt;/code&gt;命令来进行安装。&lt;/p&gt;
&lt;h3 id=&#34;linux下通过软件管理工具来安装python-pip&#34;&gt;Linux下通过软件管理工具来安装Python-pip&lt;/h3&gt;
&lt;h4 id=&#34;fedora21&#34;&gt;Fedora21&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Python2&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo yum upgrade python-setuptools
sudo yum install python-pip python-wheel
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Python3&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo yum install python3 python3-wheel
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;fedora22&#34;&gt;Fedora22&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Python2&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo dnf upgrade python-setuptools
sudo dnf install python-pip python-wheel
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Python3&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo dnf install python3 python3-wheel
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;centosrhel&#34;&gt;CentOS/RHEL&lt;/h4&gt;
&lt;p&gt;首先得启用&lt;strong&gt;EPEL repository&lt;/strong&gt;,&lt;a href=&#34;https://fedoraproject.org/wiki/EPEL#How_can_I_use_these_extra_packages.3F&#34;&gt;可参考此文&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;EPEL 6/EPEL 7&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo yum install python-pip
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;EPEL 7&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-bsh&#34; data-lang=&#34;bsh&#34;&gt;sudo yum install python-wheel
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;opensuse&#34;&gt;OpenSUSE&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Python 2:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo zypper install python-pip python-setuptools python-wheel

&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Python 3:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo zypper install python3-pip python3-setuptools python3-wheel
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;debianubuntu&#34;&gt;Debian/Ubuntu&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;sudo apt-get install python-pip
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;当系统安装的是&lt;strong&gt;Python3&lt;/strong&gt;是，则安装&lt;code&gt;python3-pip&lt;/code&gt;&lt;/p&gt;
&lt;h4 id=&#34;archlinux&#34;&gt;Archlinux&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Python 2:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo pacman -S python2-pip

&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Python 3:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo pacman -S python-pip
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>树莓派动态IP更新器</title>
      <link>https://unixetc.com/post/raspberrypi-dynamic-ip-updater/</link>
      <pubDate>Wed, 19 Apr 2017 21:28:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/raspberrypi-dynamic-ip-updater/</guid>
      <description>&lt;p&gt;这是一个python3的脚本，每隔10分钟监控一次IP地址，如果发生变化则会通过AutoRemote消息通知你。 关于AutoRemote的使用可&lt;a href=&#34;http://www.notenoughtech.com/raspberry-pi/tasker-raspberrypi/&#34;&gt;参考这里&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这里推荐使用&lt;a href=&#34;https://github.com/phoemur/ipgetter&#34;&gt;&lt;strong&gt;ipgetter&lt;/strong&gt;&lt;/a&gt;来获取外网IP，地址为&lt;a href=&#34;https://github.com/phoemur/ipgetter&#34;&gt;https://github.com/phoemur/ipgetter&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;安装ipgetter&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo apt-get install python3 pip
sudo pip3 install ipgetter
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;你可以从以下地址获取每个通知设备的AutoRemote所需google key&lt;/p&gt;
&lt;p&gt;​	http://autoremotejoaomgcd.appspot.com/?key=[it&amp;rsquo;s the part that is here]&lt;/p&gt;
&lt;p&gt;以下为python3脚本:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;import ipgetter
import urllib.request
import requests

currentIP &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ipgetter.myip&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#AutoRemote function to send a notification YOUR_KEY goes here&lt;/span&gt;
def sendAR&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;x&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;:
	AR_key &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;YOUR_KEY&amp;#39;&lt;/span&gt;
	AR_url &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;http://autoremotejoaomgcd.appspot.com/sendmessage?key=&amp;#39;&lt;/span&gt;+ AR_key +&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;amp;message=IP%20&amp;#39;&lt;/span&gt;
	message &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; AR_url + x
	response &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; urllib.request.urlopen&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;message&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;.read&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;
	print&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;x&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;	
&lt;span style=&#34;color:#75715e&#34;&gt;#check the internet  and check if previous file is present&lt;/span&gt;
try:
	requests.get&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;http://www.google.com&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
	print&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Internet present&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
	IPfile &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; open&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ipfile.txt&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;r&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
	lastIP &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; IPfile.read&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;	
	&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; lastIP &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; currentIP:
		print&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;No changes last IP: &amp;#39;&lt;/span&gt; + lastIP + &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; current IP: &amp;#39;&lt;/span&gt; + currentIP&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
	&lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;:
		with open&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ipfile.txt&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;w+&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; as f:
			f.write&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;currentIP&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
			f.close&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;
			sendAR&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;currentIP&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
			print&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;IP updated&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#handle no file&lt;/span&gt;			
except IOError:
	&lt;span style=&#34;color:#75715e&#34;&gt;#print(IOError)&lt;/span&gt;
	with open&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ipfile.txt&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;w+&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; as f:
		IPfile &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ipgetter.myip&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;
		f.write&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;IPfile&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
		f.close&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;
		print&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;created file with current IP&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
		sendAR&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;currentIP&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
		quit&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;
&lt;span style=&#34;color:#75715e&#34;&gt;#Handle no internet&lt;/span&gt;		
except requests.ConnectionError:
	quit&lt;span style=&#34;color:#f92672&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;运行脚本后，会监视ip变化，如果发生变化则通知最新ip，如果未发生变化则不通知。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Linux开启TCP BBR算法</title>
      <link>https://unixetc.com/post/linux_enable_tcp_bbr/</link>
      <pubDate>Mon, 17 Apr 2017 14:28:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/linux_enable_tcp_bbr/</guid>
      <description>&lt;p&gt;Linux Kernel 4.9+已经支持tcp_bbr拥塞控制算法，因此建议将内核升级为最新版。&lt;/p&gt;
&lt;h3 id=&#34;将内核升级到最新版&#34;&gt;将内核升级到最新版&lt;/h3&gt;
&lt;h4 id=&#34;debianubuntu升级最新内核&#34;&gt;Debian/Ubuntu升级最新内核&lt;/h4&gt;
&lt;p&gt;最新内核下载地址 &lt;a href=&#34;http://kernel.ubuntu.com/~kernel-ppa/mainline&#34;&gt;http://kernel.ubuntu.com/~kernel-ppa/mainline&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;下载安装新内核&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;wget http://kernel.ubuntu.com/~kernel-ppa/mainline/v4.10.10/linux-image-4.10.10-041010-generic_4.10.10-041010.201704120813_amd64.deb&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;
dpkg -i linux-image-4.10.10-041010-generic_4.10.10-041010.201704120813_amd64.deb
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;更新GRUB并且重启&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;update-grub
reboot
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;centos-7-升级最新内核&#34;&gt;Centos 7 升级最新内核&lt;/h4&gt;
&lt;p&gt;内核下载地址 &lt;a href=&#34;http://elrepo.org/linux/kernel/el7/x86_64/RPMS/&#34;&gt;http://elrepo.org/linux/kernel/el7/x86_64/RPMS/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;安装最新内核&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;rpm --import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org
rpm -Uvh http://www.elrepo.org/elrepo-release-7.0-2.el7.elrepo.noarch.rpm
yum --enablerepo&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;elrepo-kernel install kernel-ml -y
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;检查内核是否安装完成&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;rpm -qa | grep kernel&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;更新GRUB并重启主机&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;egrep ^menuentry /etc/grub2.cfg | cut -f &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; -d &lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#39;&lt;/span&gt;
grub2-set-default &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;#default 0表示第一个内核设置为默认运行, 选择最新内核就对了&lt;/span&gt;
reboot
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;a href=&#34;http://elrepo.org/linux/kernel/&#34;&gt;http://elrepo.org/linux/kernel/&lt;/a&gt;下&lt;code&gt;e15&lt;/code&gt;、&lt;code&gt;e16&lt;/code&gt;分别对应Centos5、Centos6，可参考以上安装&lt;/p&gt;
&lt;h3 id=&#34;开启bbr&#34;&gt;开启BBR&lt;/h3&gt;
&lt;p&gt;重启后&lt;code&gt;uname -r&lt;/code&gt; 检查内核版本是不是4.9+&lt;/p&gt;
&lt;p&gt;然后执行以下操作&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;net.core.default_qdisc=fq&amp;#34;&lt;/span&gt; &amp;gt;&amp;gt; /etc/sysctl.conf
echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;net.ipv4.tcp_congestion_control=bbr&amp;#34;&lt;/span&gt; &amp;gt;&amp;gt; /etc/sysctl.conf
sysctl -p
sysctl net.ipv4.tcp_available_congestion_control
sysctl net.ipv4.tcp_congestion_control
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;运行结果中有&lt;strong&gt;bbr&lt;/strong&gt;则成功了&lt;/p&gt;
&lt;p&gt;通过&lt;code&gt;lsmod | grep bbr&lt;/code&gt;可以检查是否开启&lt;strong&gt;bbr&lt;/strong&gt;模块&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>使用手机远程控制树莓派GPIO</title>
      <link>https://unixetc.com/post/use-your-phone-to-remotely-control-raspberrypi/</link>
      <pubDate>Thu, 13 Apr 2017 14:14:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/use-your-phone-to-remotely-control-raspberrypi/</guid>
      <description>&lt;p&gt;必备条件：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;树莓派已联网&lt;/li&gt;
&lt;li&gt;安装官方镜像&lt;/li&gt;
&lt;li&gt;只支持Raspberry Pi 2/3 Model B&lt;/li&gt;
&lt;li&gt;只支持Android手机&lt;/li&gt;
&lt;li&gt;安装Java8&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;安装官方镜像raspbian&#34;&gt;安装官方镜像Raspbian&lt;/h3&gt;
&lt;p&gt;下载地址 &lt;a href=&#34;https://www.raspberrypi.org/downloads/&#34;&gt;https://www.raspberrypi.org/downloads/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;安装java8&#34;&gt;安装Java8&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;sudo apt install oracle-java8-jdk
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;下载Marsiot到树莓派&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;wget http://www.marsiot.com/download/marsiot.jar
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;下载Marsiot到手机，安装&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://www.marsiot.com/download/marsiot.apk&#34;&gt;http://www.marsiot.com/download/marsiot.apk&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在树莓派上运行&lt;strong&gt;Marsiot&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pi@raspi:~ $ sudo java -jar marsiot.jar

Current version &amp;lt;101&amp;gt;
More help: sudo java -jar marsiot.jar help

Connect to www.marsiot.com...
Connected ok!

GPIO init...
GPIO init ok!

ID-CODE:c1fa PASS-CODE：11c6
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;记住以上&lt;strong&gt;ID-CODE&lt;/strong&gt;、&lt;strong&gt;PASS-CODE&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在手机上打开&lt;strong&gt;火星互联&lt;/strong&gt;,&lt;strong&gt;事件中心&lt;/strong&gt;时间轴上会显示所有新加入设备，以&lt;strong&gt;ID-CODE&lt;/strong&gt;区分，找到你对应的设备点击，按照提示输入&lt;strong&gt;PASS-CODE&lt;/strong&gt;即可连接。&lt;/p&gt;
&lt;p&gt;连接后可以在&lt;strong&gt;我的设备&lt;/strong&gt;中看到已连接的设备，点击通用视图即可实时监控&lt;strong&gt;GPIO&lt;/strong&gt;端口状态。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Linux下设置IP、网关、掩码、MAC和DNS</title>
      <link>https://unixetc.com/post/linux-set-ip-netmask-gateway-mac-dns/</link>
      <pubDate>Mon, 20 Mar 2017 13:20:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/linux-set-ip-netmask-gateway-mac-dns/</guid>
      <description>&lt;p&gt;先用&lt;code&gt;ifconfig&lt;/code&gt;来查看所有活动网络接口&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;eth0      Link encap:Ethernet  HWaddr b8:27:eb:1b:63:a8
        inet addr:192.168.1.6  Bcast:192.168.1.255  Mask:255.255.255.0
        inet6 addr: fe80::6502:67ff:89b:b2fd/64 Scope:Link
        UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
        RX packets:43239 errors:0 dropped:24 overruns:0 frame:0
        TX packets:30644 errors:0 dropped:0 overruns:0 carrier:0
        collisions:0 txqueuelen:1000
        RX bytes:25068614 (23.9 MiB)  TX bytes:5993030 (5.7 MiB)

lo        Link encap:Local Loopback
        inet addr:127.0.0.1  Mask:255.0.0.0
        inet6 addr: ::1/128 Scope:Host
        UP LOOPBACK RUNNING  MTU:65536  Metric:1
        RX packets:1961 errors:0 dropped:0 overruns:0 frame:0
        TX packets:1961 errors:0 dropped:0 overruns:0 carrier:0
        collisions:0 txqueuelen:1
        RX bytes:160232 (156.4 KiB)  TX bytes:160232 (156.4 KiB)
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;设置ip和掩码&#34;&gt;设置IP和掩码&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;ifconfig eth0 192.168.1.6 netmask 255.255.255.0 
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;设置网关&#34;&gt;设置网关&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;route add default gw 192.168.1.1
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;修改网卡mac&#34;&gt;修改网卡MAC&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;ifconfig eth0 down
ifconfig eth0 hw ether b877c322f8
ifconfig eth0 up
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;设置dns&#34;&gt;设置DNS&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;vi /etc/resolv.conf

nameserver 114.114.114.114
nameserver 114.114.115.115
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;重启网络服务生效 &lt;code&gt;service network restart&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;最新的ubuntu已经不能简单通过修改&lt;code&gt;/etc/resolv.conf&lt;/code&gt;来实现，需要修改&lt;code&gt;resolvconf&lt;/code&gt;配置文件，然后通过命令&lt;code&gt;resolvconf&lt;/code&gt;命令来操作&lt;/p&gt;
&lt;p&gt;修改&lt;code&gt;/etc/resolvconf/resolv.conf/&lt;/code&gt;目录下的head文件&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;nameserver 114.114.114.114
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后通过更新配置来生效&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;resolvconf -u&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Windows10开启Linux子系统</title>
      <link>https://unixetc.com/post/windows10-enabled-linux-subsystem/</link>
      <pubDate>Fri, 10 Mar 2017 11:13:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/windows10-enabled-linux-subsystem/</guid>
      <description>&lt;h3 id=&#34;打开功能&#34;&gt;打开功能&lt;/h3&gt;
&lt;p&gt;设置-系统-应用和功能，右侧下拉到底，点击“相关设置”下的“程序和功能”&lt;/p&gt;
&lt;p&gt;在打开的“程序和功能”左侧菜单中，找到“启用或关闭windows功能”，点击打开。&lt;/p&gt;
&lt;p&gt;在接下来的“windows功能”菜单中，下拉勾选“适用于linux的windows子系统（beta）”，确认后重启系统。&lt;/p&gt;
&lt;h3 id=&#34;开启开发人员模式&#34;&gt;开启开发人员模式&lt;/h3&gt;
&lt;p&gt;设置-更新和安全-针对开发人员，在右侧打开“开发人员模式”&lt;/p&gt;
&lt;h3 id=&#34;安装linux子系统&#34;&gt;安装linux子系统&lt;/h3&gt;
&lt;p&gt;Win+R输入cmd回车，打开cmd&lt;/p&gt;
&lt;p&gt;输入“bash”按照提示安装设置用户名密码即可使用。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/windows10-linux-subsystem.png&#34; alt=&#34;Windows 10 Linux Subsystem&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后就可以使用ubuntu提供的linux子系统了。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Termux软件包管理</title>
      <link>https://unixetc.com/post/termux-package-management/</link>
      <pubDate>Thu, 09 Mar 2017 13:19:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/termux-package-management/</guid>
      <description>&lt;p&gt;首次安装Termux后，内含一个基础系统，包括apt软件包管理功能，并且集成了一些busybox系统工具。&lt;/p&gt;
&lt;p&gt;其余的软件包可使用apt进行安装管理，命令如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;apt update
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;更新可用软件包清单。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;apt search &amp;lt;query&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;按名称搜索可用软件。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;apt install &amp;lt;package&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;安装软件&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;apt upgrade
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;更新所有可更新软件。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;apt show &amp;lt;package&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;显示软件信息&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;apt list
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;列出可用软件清单&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;apt list --installed
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;列出所有已安装软件清单&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;apt remove &amp;lt;package&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;卸载已安装软件&lt;/p&gt;
&lt;p&gt;Apt是基于dpkg格式的软件管理工具，一般没必要直接使用dpkg来进行操作，不过以下两个例子可以参考：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;dpkg -L &amp;lt;package&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;列出已安装软件&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;dpkg --verify
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;验证已安装软件的完整性&lt;/p&gt;
&lt;p&gt;更多信息请检阅apt manual page (通过apt install man来安装)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>修复树莓派PATH变量</title>
      <link>https://unixetc.com/post/fix-raspberry-path-variable/</link>
      <pubDate>Fri, 03 Mar 2017 13:13:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/fix-raspberry-path-variable/</guid>
      <description>&lt;p&gt;使用lnmp一键工具安装完nmp后，重启进入系统就提示&lt;code&gt;bash command not found&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;然后试了试&lt;code&gt;service&lt;/code&gt;,&lt;code&gt;who&lt;/code&gt;等命令也无法使用&lt;/p&gt;
&lt;p&gt;只有最基本的系统命令&lt;code&gt;ls&lt;/code&gt;,&lt;code&gt;cat&lt;/code&gt;等可以用&lt;/p&gt;
&lt;p&gt;看来安装lnmp后，我的PATH变量被动了&lt;/p&gt;
&lt;p&gt;先临时修改下PATH，便于后面操作&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;export PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin:$PATH
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后检查&lt;code&gt;~/.profile&lt;/code&gt;,&lt;code&gt;/etc/profile&lt;/code&gt;是否存在，存在&lt;/p&gt;
&lt;p&gt;检查其中的PATH赋值是否异常&lt;/p&gt;
&lt;p&gt;经过排查，发现&lt;code&gt;/etc/profile&lt;/code&gt;中的PATH赋值异常，修改之重启OK！&lt;/p&gt;
&lt;p&gt;在此分享正确的原始&lt;code&gt;~/.profile&lt;/code&gt;和&lt;code&gt;/etc/profile&lt;/code&gt;文件&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;~/.profile 内容&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# ~/.profile: executed by the command interpreter for login shells.
# This file is not read by bash(1), if ~/.bash_profile or ~/.bash_login
# exists.
# see /usr/share/doc/bash/examples/startup-files for examples.
# the files are located in the bash-doc package.

# the default umask is set in /etc/profile; for setting the umask
# for ssh logins, install and configure the libpam-umask package.
#umask 022

# if running bash
if [ -n &amp;quot;$BASH_VERSION&amp;quot; ]; then
    # include .bashrc if it exists
    if [ -f &amp;quot;$HOME/.bashrc&amp;quot; ]; then
        . &amp;quot;$HOME/.bashrc&amp;quot;
    fi
fi

# set PATH so it includes user&#39;s private bin if it exists
if [ -d &amp;quot;$HOME/bin&amp;quot; ] ; then
    PATH=&amp;quot;$HOME/bin:$PATH&amp;quot;
fi
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;**/etc/profile内容 **&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# /etc/profile: system-wide .profile file for the Bourne shell (sh(1))
# and Bourne compatible shells (bash(1), ksh(1), ash(1), ...).

if [ &amp;quot;`id -u`&amp;quot; -eq 0 ]; then
PATH=&amp;quot;/usr/local/sbin:/usr/local/usr/sbin:/usr/sbin:/bin&amp;quot;
else
#old bak  PATH=&amp;quot;/usr/local/sbin:/usr/local/usr/sbin:/usr/sbin:/bin:/usr/local/games:/usr/games&amp;quot;
PATH=&amp;quot;/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/bin:/sbin:/usr/local/games:/usr/games&amp;quot;
fi
export PATH

if [ &amp;quot;$PS1&amp;quot; ]; then
if [ &amp;quot;$BASH&amp;quot; ] &amp;amp;&amp;amp; [ &amp;quot;$BASH&amp;quot; != &amp;quot;/bin/sh&amp;quot; ]; then
    # The file bash.bashrc already sets the default PS1.
    # PS1=&#39;\h:\w\$ &#39;
    if [ -f /etc/bash.bashrc ]; then
    . /etc/bash.bashrc
    fi
else
    if [ &amp;quot;`id -u`&amp;quot; -eq 0 ]; then
    PS1=&#39;# &#39;
    else
    PS1=&#39;$ &#39;
    fi
fi
fi

if [ -d /etc/profile.d ]; then
for i in /etc/profile.d/*.sh; do
    if [ -r $i ]; then
    . $i
    fi
done
unset i
fi
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Over!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Debian下安装Zbook14无线网卡驱动</title>
      <link>https://unixetc.com/post/zbook14-install-wireless-driver-under-debian/</link>
      <pubDate>Wed, 17 Aug 2016 08:17:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/zbook14-install-wireless-driver-under-debian/</guid>
      <description>&lt;p&gt;首先查看无线网卡型号&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;alair@zb14:~$ lspci|grep less
02:00.0 Network controller: Intel Corporation Wireless 7260 (rev 73)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;搜索Inter相关固件
​
alair@zb14:~$ apt-cache search iwlwifi
firmware-iwlwifi - Binary firmware for Intel Wireless cards&lt;/p&gt;
&lt;p&gt;安装之
​
&lt;code&gt;alair@zb14:~$ apt-get install firmware-iwlwifi&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;重启完事儿！&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>ubuntu修改grub引导菜单</title>
      <link>https://unixetc.com/post/ubuntu-modify-the-grub-boot-menu/</link>
      <pubDate>Mon, 27 Jun 2016 17:42:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/ubuntu-modify-the-grub-boot-menu/</guid>
      <description>&lt;p&gt;先运行&lt;code&gt;update-grub&lt;/code&gt;命令生成一次grub配置，顺便查看一下识别出来的引导菜单内容&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;root@alairpc:~# update-grub
Generating grub configuration file ...
Found linux image: /boot/vmlinuz-4.4.0-21-generic
Found initrd image: /boot/initrd.img-4.4.0-21-generic
Found memtest86+ image: /boot/memtest86+.elf
Found memtest86+ image: /boot/memtest86+.bin
Found Windows 7 (loader) on /dev/sda1
done
root@alairpc:~# 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;注意看，以上共有5个菜单项，最后一个是windows7&lt;/p&gt;
&lt;p&gt;接下来我们来看看gurb配置文件&lt;code&gt;/etc/default/grub&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;root@alairpc:~# cat /etc/default/grub 
# If you change this file, run &#39;update-grub&#39; afterwards to update
# /boot/grub/grub.cfg.
# For full documentation of the options in this file, see:
#   info -f grub -n &#39;Simple configuration&#39;

GRUB_DEFAULT=4
#GRUB_HIDDEN_TIMEOUT=0
GRUB_HIDDEN_TIMEOUT_QUIET=true
GRUB_TIMEOUT=3
GRUB_DISTRIBUTOR=`lsb_release -i -s 2&amp;gt; /dev/null || echo Debian`
GRUB_CMDLINE_LINUX_DEFAULT=&amp;quot;quiet splash&amp;quot;
GRUB_CMDLINE_LINUX=&amp;quot;locale=zh_CN&amp;quot;

# Uncomment to enable BadRAM filtering, modify to suit your needs
# This works with Linux (no patch required) and with any kernel that obtains
# the memory map information from GRUB (GNU Mach, kernel of FreeBSD ...)
#GRUB_BADRAM=&amp;quot;0x01234567,0xfefefefe,0x89abcdef,0xefefefef&amp;quot;

# Uncomment to disable graphical terminal (grub-pc only)
#GRUB_TERMINAL=console

# The resolution used on graphical terminal
# note that you can use only modes which your graphic card supports via VBE
# you can see them in real GRUB with the command `vbeinfo&#39;
#GRUB_GFXMODE=640x480

# Uncomment if you don&#39;t want GRUB to pass &amp;quot;root=UUID=xxx&amp;quot; parameter to Linux
#GRUB_DISABLE_LINUX_UUID=true

# Uncomment to disable generation of recovery mode menu entries
#GRUB_DISABLE_RECOVERY=&amp;quot;true&amp;quot;

# Uncomment to get a beep at grub start
#GRUB_INIT_TUNE=&amp;quot;480 440 1&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;其中&lt;strong&gt;GRUB_DEFAULT&lt;/strong&gt;就是默认引导项，这里设置为4,对应的为windows7,说明一下，这个引导序列号是从0开始排的，所以第五项window7的序列号应为为4&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;GRUB_TIMEOUT&lt;/strong&gt;表示菜单等待时间，单位为秒(s)&lt;/p&gt;
&lt;p&gt;还值得说明的是&lt;strong&gt;GRUB_GFXMODE&lt;/strong&gt;，设置grub显示的分辨率&lt;/p&gt;
&lt;p&gt;自定义编辑完grub配置文件后，运行&lt;code&gt;update-grub&lt;/code&gt;使配置生效即可。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>使用Syncthing在多个设备之间同步文件</title>
      <link>https://unixetc.com/post/use-syncthing-synchronize-files-between-multiple-devices/</link>
      <pubDate>Fri, 06 May 2016 15:16:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/use-syncthing-synchronize-files-between-multiple-devices/</guid>
      <description>&lt;p&gt;Syncthing是一款开源的多平台同步软件，使用他可以在多个设备间进行文件同步，并且带有版本控制功能。&lt;/p&gt;
&lt;p&gt;Syncthing官网地址 **&lt;a href=&#34;https://syncthing.net/&#34;&gt;https://syncthing.net/&lt;/a&gt;**Github地址 &lt;strong&gt;&lt;a href=&#34;https://github.com/syncthing/syncthing&#34;&gt;https://github.com/syncthing/syncthing&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;安装syncthing&#34;&gt;安装Syncthing&lt;/h3&gt;
&lt;p&gt;Syncthing官网提供多平台安装包，下载地址为 &lt;a href=&#34;https://github.com/syncthing/syncthing/releases/&#34;&gt;https://github.com/syncthing/syncthing/releases/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;并且针对Debian/Ubuntu平台，官方提供了apt-get安装方法&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# Add the release PGP keys:
curl -s https://syncthing.net/release-key.txt | sudo apt-key add -

# Add the &amp;quot;release&amp;quot; channel to your APT sources:
echo &amp;quot;deb http://apt.syncthing.net/ syncthing release&amp;quot; | sudo tee /etc/apt/sources.list.d/syncthing.list

# Update and install syncthing:
sudo apt-get update
sudo apt-get install syncthing
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;运行syncthing&#34;&gt;运行Syncthing&lt;/h3&gt;
&lt;p&gt;Linux下直接使用&lt;code&gt;syncthing&lt;/code&gt;命令运行&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;syncthing &amp;amp;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Windows下直接打开下载的&lt;strong&gt;syncthing.exe&lt;/strong&gt;文件，而后浏览器自动打开&lt;code&gt;http://127.0.0.1:8384&lt;/code&gt;进行设置管理。&lt;/p&gt;
&lt;h3 id=&#34;管理syncthing&#34;&gt;管理Syncthing&lt;/h3&gt;
&lt;p&gt;如果是在VPS上安装Syncthing ,运行&lt;code&gt;syncthing&lt;/code&gt;后，只能通过&lt;code&gt;http://127.0.0.1:8384&lt;/code&gt;进行管理，我们可以通过以下方法在本地管理。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ssl -L 9891:localhost:8384 root@ip
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;输入root密码登录成功后，即可本地浏览&lt;code&gt;http://127.0.0.1:9891&lt;/code&gt;对VPS上的Synchting进行管理。&lt;/p&gt;
&lt;h4 id=&#34;添加设备&#34;&gt;添加设备&lt;/h4&gt;
&lt;p&gt;每个设备均有一个&lt;strong&gt;设备标识&lt;/strong&gt;，可以通过操作-&amp;gt;显示设备标识来查看。&lt;/p&gt;
&lt;p&gt;不同的设备之间进行链接，就是通过添加对方的&lt;strong&gt;设备标志&lt;/strong&gt;来实现。&lt;/p&gt;
&lt;p&gt;例如，在本地点击&lt;strong&gt;添加远程设备&lt;/strong&gt;，然后将VPS端的&lt;strong&gt;设备标识&lt;/strong&gt;填写入，设备名称可以置空。&lt;/p&gt;
&lt;p&gt;在此提醒勾选&lt;strong&gt;介绍人设备&lt;/strong&gt;选项，这样当对方添加了其他第三方设备，可以自动添加到本设备中，而不需要在本设备与第三方设备间进行再次添加。&lt;/p&gt;
&lt;h4 id=&#34;添加同步文件&#34;&gt;添加同步文件&lt;/h4&gt;
&lt;p&gt;点击&lt;strong&gt;添加文件夹&lt;/strong&gt;来设置进行共享的文件内容。&lt;/p&gt;
&lt;p&gt;首先设置&lt;strong&gt;文件夹标识&lt;/strong&gt;和&lt;strong&gt;文件夹路径&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;然后如果已经添加了其他远程设备，在&lt;strong&gt;共享给&lt;/strong&gt;下方勾选需要进行同步的远程设备。&lt;/p&gt;
&lt;h4 id=&#34;接收同步文件夹&#34;&gt;接收同步文件夹&lt;/h4&gt;
&lt;p&gt;Syncthing共享操作时双向的，通过上一步进行分享文件夹后，还需要在另外一个设备上进行确认共享。&lt;/p&gt;
&lt;p&gt;收到远程设备的共享信息后，选择确认共享，然后设置共享文件夹接收目录即可。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>使用OptiPNG优化压缩图片</title>
      <link>https://unixetc.com/post/optimize-and-compress-image-by-optipng/</link>
      <pubDate>Sun, 03 Apr 2016 12:34:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/optimize-and-compress-image-by-optipng/</guid>
      <description>&lt;p&gt;因工作需要，得处理一张7872x5904体积为178MB的图片，格式为TIFF。&lt;/p&gt;
&lt;p&gt;网上搜了半天，找到一个名为&lt;strong&gt;OptiPNG&lt;/strong&gt;的软件，主要为PNG优化，但也支持TIFF格式。&lt;/p&gt;
&lt;p&gt;下面是OptiPNG的官方介绍&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;OptiPNG is a PNG optimizer that recompresses image files to a smaller size, without losing any information. This program also converts external formats (BMP, GIF, PNM and TIFF) to optimized PNG, and performs PNG integrity checks and corrections.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;OptiPNG可以将PNG文件重新压缩，压缩后体积变得更小，并且不会丢失任何信息。同时optipng还支持其他格式的图片，如BMP、GIF、PNM和TIFF。&lt;/p&gt;
&lt;p&gt;至于OptiPNG的威力如何，请看本次实例&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;root@raspi:~# ls -lh huxian.tif                         
-rw-r--r-- 1 root root 178M Apr  4 16:54 huxian.tif    //原始文件178MB
root@raspi:~# optipng huxian.tif
** Processing: huxian.tif
Importing TIFF
7872x5904 pixels, 4x8 bits/pixel, RGB+alpha   //分辨率7872x5904
Reducing image to 3x8 bits/pixel, RGB
Input file size = 186000368 bytes

Trying:
zc = 9  zm = 8  zs = 0  f = 0         IDAT size = 4273133

Selecting parameters:
zc = 9  zm = 8  zs = 0  f = 0         IDAT size = 4273133

Output file: huxian.png

Output IDAT size = 4273133 bytes
Output file size = 4273190 bytes (181727178 bytes = 97.70% decrease)

root@raspi:~# ls -lh huxian*
-rw-r--r-- 1 root root 4.1M Apr  4 17:02 huxian.png   //压缩结果4.1MB
-rw-r--r-- 1 root root 178M Apr  4 16:54 huxian.tif
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;看来OptiPNG还是很牛的嘛！！!&lt;/p&gt;
&lt;p&gt;OptiPNG官方地址 &lt;a href=&#34;http://optipng.sourceforge.net/&#34;&gt;http://optipng.sourceforge.net/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;官方提供源码和Windows编译版，Debian/Ubuntu系统可以通过&lt;code&gt;apt-get install optipng&lt;/code&gt;来安装。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>LFTP使用实例</title>
      <link>https://unixetc.com/post/lftp-use-case/</link>
      <pubDate>Fri, 01 Apr 2016 14:21:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/lftp-use-case/</guid>
      <description>&lt;h3 id=&#34;lftp介绍&#34;&gt;LFTP介绍&lt;/h3&gt;
&lt;p&gt;lftp是一个功能强大的ftp/http客户端，作者是 Alexander Lukyanov。&lt;/p&gt;
&lt;p&gt;lftp支持多种传输协议，如ftp、http、https、sftp、exp等。&lt;/p&gt;
&lt;p&gt;如同BASH一样，lftp支持任务管理。并且具备书签管理、内置镜像和多线程传送功能。&lt;/p&gt;
&lt;h3 id=&#34;使用lftp&#34;&gt;使用LFTP&lt;/h3&gt;
&lt;h4 id=&#34;登录服务器&#34;&gt;登录服务器&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;lftp ftp://user:password@ip:port
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;以上是一个完整的lftp登录示例，其中包含协议(ftp)、用户名(user)、密码(password)、主机(ip)以及端口(port)&lt;/p&gt;
&lt;p&gt;默认情况下lftp直接访问ftp服务，默认登录端口为22，因此我们可以使用以下方法来便捷登录主机&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;lftp user@ip
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后系统会提示输入&lt;strong&gt;password&lt;/strong&gt;，完成后登录成功！&lt;/p&gt;
&lt;h4 id=&#34;lftp命令行参数&#34;&gt;lftp命令行参数&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;lftp :~&amp;gt; help
    !&amp;lt;shell-command&amp;gt;                     (commands)
    alias [&amp;lt;name&amp;gt; [&amp;lt;value&amp;gt;]]             attach [PID]
    bookmark [SUBCMD]                    cache [SUBCMD]
    cat [-b] &amp;lt;files&amp;gt;                     cd &amp;lt;rdir&amp;gt;
    chmod [OPTS] mode file...            close [-a]
    [re]cls [opts] [path/][pattern]      debug [&amp;lt;level&amp;gt;|off] [-o &amp;lt;file&amp;gt;]
    du [options] &amp;lt;dirs&amp;gt;                  exit [&amp;lt;code&amp;gt;|bg]
    get [OPTS] &amp;lt;rfile&amp;gt; [-o &amp;lt;lfile&amp;gt;]      glob [OPTS] &amp;lt;cmd&amp;gt; &amp;lt;args&amp;gt;
    help [&amp;lt;cmd&amp;gt;]                         history -w file|-r file|-c|-l [cnt]
    jobs [-v] [&amp;lt;job_no...&amp;gt;]              kill all|&amp;lt;job_no&amp;gt;
    lcd &amp;lt;ldir&amp;gt;                           lftp [OPTS] &amp;lt;site&amp;gt;
    ln [-s] &amp;lt;file1&amp;gt; &amp;lt;file2&amp;gt;              ls [&amp;lt;args&amp;gt;]
    mget [OPTS] &amp;lt;files&amp;gt;                  mirror [OPTS] [remote [local]]
    mkdir [-p] &amp;lt;dirs&amp;gt;                    module name [args]
    more &amp;lt;files&amp;gt;                         mput [OPTS] &amp;lt;files&amp;gt;
    mrm &amp;lt;files&amp;gt;                          mv &amp;lt;file1&amp;gt; &amp;lt;file2&amp;gt;
    [re]nlist [&amp;lt;args&amp;gt;]                   open [OPTS] &amp;lt;site&amp;gt;
    pget [OPTS] &amp;lt;rfile&amp;gt; [-o &amp;lt;lfile&amp;gt;]     put [OPTS] &amp;lt;lfile&amp;gt; [-o &amp;lt;rfile&amp;gt;]
    pwd [-p]                             queue [OPTS] [&amp;lt;cmd&amp;gt;]
    quote &amp;lt;cmd&amp;gt;                          repeat [OPTS] [delay] [command]
    rm [-r] [-f] &amp;lt;files&amp;gt;                 rmdir [-f] &amp;lt;dirs&amp;gt;
    scache [&amp;lt;session_no&amp;gt;]                set [OPT] [&amp;lt;var&amp;gt; [&amp;lt;val&amp;gt;]]
    site &amp;lt;site-cmd&amp;gt;                      source &amp;lt;file&amp;gt;
    torrent [-O &amp;lt;dir&amp;gt;] &amp;lt;file|URL&amp;gt;...     user &amp;lt;user|URL&amp;gt; [&amp;lt;pass&amp;gt;]
    wait [&amp;lt;jobno&amp;gt;]                       zcat &amp;lt;files&amp;gt;
    zmore &amp;lt;files&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;常用的命令解释如下：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;远端操作&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ls 显示远端目录列表&lt;/li&gt;
&lt;li&gt;cd 切换远端目录&lt;/li&gt;
&lt;li&gt;get 下载文件&lt;/li&gt;
&lt;li&gt;put 上传文件&lt;/li&gt;
&lt;li&gt;mv 移动远端文件&lt;/li&gt;
&lt;li&gt;rm 删除远端文件&lt;/li&gt;
&lt;li&gt;pwd 显示远端目录&lt;/li&gt;
&lt;li&gt;du 计算远端目录大小&lt;/li&gt;
&lt;li&gt;退出&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;本地操作&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;!ls 显示本地目录列表&lt;/li&gt;
&lt;li&gt;lcd 切换本地目录&lt;/li&gt;
&lt;li&gt;lpwd 显示本地目录&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;lftp使用范例&#34;&gt;LFTP使用范例&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;登录服务器&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;root@hostus:~# lftp qxu1128@qxu1128.my3w.com
Password:
lftp qxu1128@qxu1128.my3w.com:~&amp;gt; ls
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;列出服务器目录文件&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;lftp qxu1128@qxu1128.my3w.com:/&amp;gt; ls
drwxr-xr-x    2 0        0            4096 Jan 23  2015 backup
drwxr-xr-x    2 675      100          4096 Jan 23  2015 cgi-bin
drwxr-xr-x    2 0        0            4096 Apr 01 03:40 ftplogs
drwxr-xr-x    4 675      100          4096 Apr 01 11:02 htdocs
drwxr-xr-x    2 675      100          4096 Jan 23  2015 myfolder
drwxr-xr-x    2 0        0            4096 Apr 01 02:03 wwwlogs
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;切换远端目录&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;lftp qxu1128@qxu1128.my3w.com:/&amp;gt; cd htdocs/
lftp qxu1128@qxu1128.my3w.com:/htdocs&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;上传文件&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;lftp qxu1128@qxu1128.my3w.com:/htdocs&amp;gt; put tb7302.apk
`tb7302.apk&#39; at 1913856 (24%) 77.7K/s eta:75s [Sending data]

7713808 bytes transferred in 78 seconds (97.0K/s)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;下载文件&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;lftp qxu1128@qxu1128.my3w.com:/htdocs&amp;gt; get bk.apk
`bk.apk&#39; at 124528 (1%) 28.1K/s eta:4m [Receiving data]

7713808 bytes transferred in 519 seconds (14.5K/s)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;上传文件夹&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;lftp qxu1128@qxu1128.my3w.com:/htdocs&amp;gt; mirror -R bootstrap/
Total: 4 directories, 14 files, 0 symlinks
New: 14 files, 0 symlinks
1079609 bytes transferred in 7 seconds (150.7 KiB/s)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;下载文件夹&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;lftp qxu1128@qxu1128.my3w.com:/htdocs&amp;gt; mirror bootstrap/ new
Total: 4 directories, 14 files, 0 symlinks
New: 14 files, 0 symlinks
1079609 bytes transferred in 6 seconds (189.9 KiB/s)
lftp qxu1142380172@qxu1142380172.my3w.com:/htdocs&amp;gt; !ls new/
css  fonts  js
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;中文乱码&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;有时由于编码问题，我们看到的中文可能是乱码，如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;lftp qxu1128@qxu1128.my3w.com:/&amp;gt; ls
drwxr-xr-x    2 0        0            4096 Jan 23  2015 backup
drwxr-xr-x    2 675      100          4096 Jan 23  2015 cgi-bin
drwxr-xr-x    2 0        0            4096 Apr 01 03:40 ftplogs
drwxr-xr-x    4 675      100          4096 Apr 01 11:02 htdocs
drwxr-xr-x    2 675      100          4096 Jan 23  2015 myfolder
drwxr-xr-x    2 0        0            4096 Apr 01 02:03 wwwlogs
-r-xr--r--    1 55961    100           606 Aug 31  2015 ▒▒▒ȶ▒▒▒.txt
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;如果出现这种情况，就需要进行编码设置，如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;lftp qxu1128@qxu1128.my3w.com:/&amp;gt; set ftp:charset GBK
lftp qxu1128@qxu1128.my3w.com:/&amp;gt; set file:charset UTF-8
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;设置完成后再看：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;lftp qxu1128@qxu1128.my3w.com:/&amp;gt; ls
drwxr-xr-x    2 0        0            4096 Jan 23  2015 backup
drwxr-xr-x    2 675      100          4096 Jan 23  2015 cgi-bin
drwxr-xr-x    2 0        0            4096 Apr 01 03:40 ftplogs
drwxr-xr-x    4 675      100          4096 Apr 01 11:33 htdocs
drwxr-xr-x    2 675      100          4096 Jan 23  2015 myfolder
drwxr-xr-x    2 0        0            4096 Apr 01 02:03 wwwlogs
-r-xr--r--    1 55961    100           606 Aug 31  2015 请先读我.txt
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;以上两条&lt;strong&gt;set&lt;/strong&gt;命令可以写入lftp配置文件，以方便以后使用，关于lftp配置文件参考下节介绍。&lt;/p&gt;
&lt;h4 id=&#34;lftp书签使用方法&#34;&gt;LFTP书签使用方法&lt;/h4&gt;
&lt;p&gt;我们可以使用书签来存储一些商用的ftp登录信息，lftp的书签文件为&lt;code&gt;~/.lftp/bookmarks&lt;/code&gt;，我们可以编辑它来添加书签&lt;/p&gt;
&lt;p&gt;lftp书签格式如下&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;bkname ftp://user:password@ip:port
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;设置好书签后，可以使用&lt;code&gt;lftp&lt;/code&gt;加书签名来登录&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;lftp bkname
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;书签使用示例：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;root@hostus:~# cat ~/.lftp/bookmarks
aliyun ftp://qxu172@qxu150172.my3w.com
root@hostus:~# lftp aliyun
Password:
lftp qxu1128@qxu1128.my3w.com:~&amp;gt; ls
drwxr-xr-x    2 0        0            4096 Jan 23  2015 backup
drwxr-xr-x    2 675      100          4096 Jan 23  2015 cgi-bin
drwxr-xr-x    2 0        0            4096 Apr 01 03:40 ftplogs
drwxr-xr-x    4 675      100          4096 Apr 01 11:33 htdocs
drwxr-xr-x    2 675      100          4096 Jan 23  2015 myfolder
drwxr-xr-x    2 0        0            4096 Apr 01 02:03 wwwlogs
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;lftp配置文件&#34;&gt;LFTP配置文件&lt;/h3&gt;
&lt;p&gt;lftp执行配置文件顺序为&lt;code&gt;/etc/lftp.conf&lt;/code&gt;、&lt;code&gt;~/.lftprc&lt;/code&gt;、&lt;code&gt;~/.lftp/rc&lt;/code&gt;，我们可以编辑这些修改这些文件，来达到全局配置或者用户自定义配置。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;set&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在设置文件中，使用set来设置一些变量的值，如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;set ftp:ssl-force on
set ssl:verify-certificate on
set ftp:use-feat off
set ftp:ssl-protect-data on
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;debug&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;默认情况下lftp是静默提示的，如果需要查看一些提示信息，就要对&lt;strong&gt;debug&lt;/strong&gt;进行设置&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;debug 5 显示所有调试信息&lt;/li&gt;
&lt;li&gt;debug 3 仅显示欢迎信息和错误信息&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;alias&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;定义命令别名，比如为ls设置别名dir以方便个人使用习惯，如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;alias dir ls
alias less more
alias zless zmore
alias bzless bzmore
alias reconnect &amp;quot;close; cache flush; cd .&amp;quot;
alias edit &amp;quot;eval -f &amp;quot;get $0 -o ~/.lftp/edit.tmp.$$ &amp;amp;&amp;amp; shell \\&amp;quot;cp -p ~/.lftp/edit.tmp.$$ ~/.lftp/edit.tmp.$$.orig &amp;amp;&amp;amp; vim ~/.lftp/edit.tmp.$$ &amp;amp;&amp;amp; test ~/.lftp/edit.tmp.$$ -nt ~/.lftp/edit.tmp.$$.orig\\&amp;quot; &amp;amp;&amp;amp; put ~/.lftp/edit.tmp.$$ -o $0; shell rm -f ~/.lftp/edit.tmp.$$*&amp;quot;&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Linux下查看修改PATH</title>
      <link>https://unixetc.com/post/linux-check-and-set-the-path/</link>
      <pubDate>Tue, 29 Mar 2016 13:29:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/linux-check-and-set-the-path/</guid>
      <description>&lt;h3 id=&#34;什么是path&#34;&gt;什么是PATH?&lt;/h3&gt;
&lt;p&gt;要搞清什么是&lt;strong&gt;PATH&lt;/strong&gt;，应该先搞清什么是环境变量？&lt;/p&gt;
&lt;p&gt;在计算机中，如果需要运行一个软件，那么我们就要找到它所在的位置，但是每次运行程序时如果都要进入到相应目录，那么显然是很繁琐的。于是就有了环境变量，环境变量就是一个系统参数，里面记录了一些目录，运行软件的时候，相关的程序将会按照该目录寻找相关文件。&lt;/p&gt;
&lt;p&gt;而在Linux中，系统会有一个默认的&lt;strong&gt;PATH&lt;/strong&gt;环境变量，里面记录了系统级的相关命令目录，比如当我们输入&lt;code&gt;ls&lt;/code&gt;、&lt;code&gt;cd&lt;/code&gt;、&lt;code&gt;pwd&lt;/code&gt;等命令时，我们不需要指定它们所在的目录，因为包含这些命令的系统目录已经写入&lt;strong&gt;PATH&lt;/strong&gt;参数，因而方便我们调用。&lt;/p&gt;
&lt;h3 id=&#34;查看path&#34;&gt;查看PATH&lt;/h3&gt;
&lt;p&gt;在linux中，可以使用&lt;code&gt;export&lt;/code&gt;命令来查看所有环境变量，如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pi@raspi:~$ export
declare -x HOME=&amp;quot;/home/pi&amp;quot;
declare -x LANG=&amp;quot;en_GB.UTF-8&amp;quot;
declare -x LOGNAME=&amp;quot;pi&amp;quot;
declare -x MAIL=&amp;quot;/var/mail/pi&amp;quot;
declare -x OLDPWD
declare -x PATH=&amp;quot;/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin:/home/pi/bin&amp;quot;
declare -x PWD=&amp;quot;/home/pi&amp;quot;
declare -x SHELL=&amp;quot;/bin/bash&amp;quot;
declare -x SHLVL=&amp;quot;1&amp;quot;
declare -x SSH_CLIENT=&amp;quot;101.135.216.146 28249 22&amp;quot;
declare -x SSH_CONNECTION=&amp;quot;101.135.216.146 28249 192.168.1.111 22&amp;quot;
declare -x SSH_TTY=&amp;quot;/dev/pts/1&amp;quot;
declare -x TERM=&amp;quot;xterm&amp;quot;
declare -x USER=&amp;quot;pi&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;使用&lt;code&gt;echo&lt;/code&gt;来查看单独的环境变量&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pi@raspi:~$ echo $PATH
/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin:/home/pi/bin
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;我们可以看到，以上&lt;strong&gt;PATH&lt;/strong&gt;值包含了一些系统命令的目录，而这些目录都用&lt;code&gt;:&lt;/code&gt;隔开。&lt;/p&gt;
&lt;h3 id=&#34;修改path&#34;&gt;修改PATH&lt;/h3&gt;
&lt;p&gt;我们可以使用&lt;code&gt;export&lt;/code&gt;命令来添加目录，如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;export PATH=/mydoc:$PATH
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;以上命令在原有的&lt;strong&gt;PATH&lt;/strong&gt;前添加了&lt;code&gt;/mydoc&lt;/code&gt;这个目录，设置完成后的&lt;strong&gt;PATH&lt;/strong&gt;值如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pi@raspi:~$ echo $PATH
/mydoc:/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin:/home/pi/bin
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;以上方法修改&lt;strong&gt;PATH&lt;/strong&gt;值，在终端退出后就会失效，因此建议通过修改&lt;code&gt;/etc/profile&lt;/code&gt;来设定&lt;strong&gt;PATH&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;看一下&lt;code&gt;/etc/profile&lt;/code&gt;中到底有什么东西&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pi@raspi:~$ cat /etc/profile
# /etc/profile: system-wide .profile file for the Bourne shell (sh(1))
# and Bourne compatible shells (bash(1), ksh(1), ash(1), ...).

if [ &amp;quot;`id -u`&amp;quot; -eq 0 ]; then
PATH=&amp;quot;/usr/local/sbin:/usr/local/usr/sbin:/usr/sbin:/bin&amp;quot;
else
PATH=&amp;quot;/usr/local/sbin:/usr/local/usr/sbin:/usr/sbin:/bin:/usr/local/games:/usr/games&amp;quot;
fi
export PATH

if [ &amp;quot;$PS1&amp;quot; ]; then
if [ &amp;quot;$BASH&amp;quot; ] &amp;amp;&amp;amp; [ &amp;quot;$BASH&amp;quot; != &amp;quot;/bin/sh&amp;quot; ]; then
    # The file bash.bashrc already sets the default PS1.
    # PS1=&#39;\h:\w\$ &#39;
    if [ -f /etc/bash.bashrc ]; then
    . /etc/bash.bashrc
    fi
else
    if [ &amp;quot;`id -u`&amp;quot; -eq 0 ]; then
    PS1=&#39;# &#39;
    else
    PS1=&#39;$ &#39;
    fi
fi
fi

if [ -d /etc/profile.d ]; then
for i in /etc/profile.d/*.sh; do
    if [ -r $i ]; then
    . $i
    fi
done
unset i
fi
export PATH=/usr/local/nginx/sbin:/usr/local/php:$PATH
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;看来&lt;code&gt;/etc/profile&lt;/code&gt;中默认将一部分系统目录都添加到了&lt;strong&gt;PATH&lt;/strong&gt;中，而我们只需要更改最后一行，将一些自定义的目录添加到&lt;strong&gt;PATH&lt;/strong&gt;即可。&lt;/p&gt;
&lt;p&gt;通过编辑&lt;code&gt;/etc/profile&lt;/code&gt;来设定的&lt;strong&gt;PATH&lt;/strong&gt;值会在下次进入系统时生效，如果需要当即生效，只需要执行以下命令即可：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;source /etc/profile&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Ubunt下安装H2O</title>
      <link>https://unixetc.com/post/install-h2o-on-ubuntu/</link>
      <pubDate>Sat, 26 Mar 2016 13:26:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/install-h2o-on-ubuntu/</guid>
      <description>&lt;h3 id=&#34;更新系统&#34;&gt;更新系统&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;apt-get update &amp;amp;&amp;amp; apt-get upgrade -y &amp;amp;&amp;amp; apt-get dist-upgrade -y &amp;amp;&amp;amp; apt-get autoremove --purge -y &amp;amp;&amp;amp; apt-get autoclean -y
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;安装必备软件&#34;&gt;安装必备软件&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;apt-get install locate git cmake build-essential checkinstall autoconf pkg-config libtool python-sphinx wget libcunit1-dev nettle-dev libyaml-dev libuv-dev -y
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;安装wslay&#34;&gt;安装wslay&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;git clone https://github.com/tatsuhiro-t/wslay.git
cd wslay/
autoreconf -i
automake
autoconf
./configure
make
make install
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;安装完成后检查lib文件，如下所示：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ls /usr/local/lib/
libuv.a   libuv.so.1      libwslay.la    libwslay.so.0.0.1  python3.4
libuv.la  libuv.so.1.0.0  libwslay.so    pkgconfig
libuv.so  libwslay.a      libwslay.so.0  python2.7
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;安装最新版openssl&#34;&gt;安装最新版OpenSSL&lt;/h3&gt;
&lt;p&gt;删除旧版OpenSSL&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;apt-get remove --purge openssl libssl-dev
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;下载新版OpenSSL&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;wget https://www.openssl.org/source/openssl-1.0.2.tar.gz --no-check-certificate
tar -xvzf openssl-1.0.2.tar.gz
mv openssl-1.0.2 openssl
cd openssl/
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;建立&lt;code&gt;openssl.ld&lt;/code&gt;文件，内容如下:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;vi openssl.ld

OPENSSL_1.0.0 {
    global:
        *;

    local:
        *;
};

OPENSSL_1.0.1 {
} OPENSSL_1.0.0;

OPENSSL_1.0.1d {
} OPENSSL_1.0.1;

OPENSSL_1.0.2 {
} OPENSSL_1.0.1d;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;接下开始安装OpenSSL&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;./config -fPIC shared -Wl,--version-script=/root/openssl/openssl.ld -Wl,-Bsymbolic-functions
make
make test
make install
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;检查安装结果&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;/usr/local/ssl/bin/openssl version
OpenSSL 1.0.2 22 Jan 2015
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;设置环境变量&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;export OPENSSL_INCLUDE_DIR=/usr/local/ssl/include/
export OPENSSL_LIBRARIES=&#39;/usr/local/ssl/lib/libssl.so;/usr/local/ssl/lib/libcrypto.so&#39;
export LD_LIBRARY_PATH=/usr/local/ssl/lib/
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;安装h2o&#34;&gt;安装H2O&lt;/h3&gt;
&lt;p&gt;新建&lt;code&gt;FindOpenSSL.cmake&lt;/code&gt;文件&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd h2o/
vi cmake/FindOpenSSL.cmake
FIND_PATH(OPENSSL_INCLUDE_DIR NAMES openssl/ssl.h)

INCLUDE(FindPackageHandleStandardArgs)
FIND_PACKAGE_HANDLE_STANDARD_ARGS(OPENSSL DEFAULT_MSG OPENSSL_LIBRARIES
OPENSSL_INCLUDE_DIR)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;编译安装H2O&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cmake -DCMAKE_INSTALL_PREFIX=/usr/local/h2o -DOPENSSL_LIBRARIES=&#39;/usr/local/ssl/lib/libssl.so;/usr/local/ssl/lib/libcrypto.so&#39; -DOPENSSL_INCLUDE_DIR=/usr/local/ssl/include/
make
make install
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;运行h2o&#34;&gt;运行H2O&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;/usr/local/h2o/bin/h2o -c examples/h2o/h2o.conf&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>使用net_speeder加速VPS</title>
      <link>https://unixetc.com/post/use-net-speeder-accelerate-vps/</link>
      <pubDate>Sun, 07 Feb 2016 12:32:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/use-net-speeder-accelerate-vps/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;当使用国外服务器时，经常会发现，下载速度只有十几k。平时可能不太注意，认为服务器带宽不足，或者自己使用的宽带不给力，其实很有可能原因并不在此。&lt;/p&gt;
&lt;p&gt;由于光速的局限性，延迟会比较高（即使光沿直线传播，太平洋一个往返也要一百多毫秒）。并且由于距离较远，途径路由跳数较多，并且网络拥堵的原因。经常会发生丢包的情况。&lt;/p&gt;
&lt;p&gt;对于平时使用最广泛的TCP协议来讲，发送端发出包后，接收端会回复ACK，表示自己收到了。用这种机制来保证可靠性。但对于高延迟链路来讲，如果每发送一个包都等待应答，那么大部分时间都在等待数据包到达，而链路则空置了。为此一般会采用滑动窗口技术。即在窗口满之前，发送端一直发送包，然后收到应答后将确认收到的包从窗口中移除。这样可以提高链路利用率。&lt;/p&gt;
&lt;p&gt;TCP还有一个特性则是拥塞控制。当发送端检测到链路发生丢包时，则会主动缩小窗口大小以减慢发送速度，避免拥塞。不过对于跳数较多的链路来讲，只要有一个路由不够稳定丢包，就会被发送端判断为拥塞，从而影响网络速度。&lt;/p&gt;
&lt;p&gt;为了解决丢包问题，最简单粗暴的方法就是双倍发送，即同一份数据包发送两份。这样的话在服务器带宽充足情况下，丢包率会平方级降低。&lt;/p&gt;
&lt;p&gt;这种方式下，直接优点是降低丢包率，直接缺点是耗费双倍流量。一些延伸影响是更容易触发快速恢复逻辑，避免了丢包时窗口缩减过快。一定程度也能提高网络速度。&lt;/p&gt;
&lt;p&gt;最近比较忙，空闲时间做了一个最简单的程序，试用效果很好，在一台VPS上测试后发现，未开启时单线程下载、ssh管道速度在十几K级别。开启后可以达到平均300KB+的速度。效果非常明显。但对于不加速就可以跑满带宽的类型来讲（多线程下载），开启后反而由于多出来的无效流量，导致速度减半。所以对于多线程/高速链路，这个方案是不适合的。&lt;/p&gt;
&lt;p&gt;目前版本是最简单的逻辑，未来会进行细化（主动触发快速恢复、快速重传等），降低流量浪费，提升加速效果。&lt;/p&gt;
&lt;p&gt;目前程序起名net-speeder，相对于修改协议栈来讲，由于后者需要重新升级编译内核，使用用户态程序部署更方便，稳定性更高，兼容性更好。缺点则是性能开销稍大和自由度有损失。总体比较起来，个人使用还是使用用户态程序更合适一些，特别是在虚拟机中使用（OpenVZ，LXC等虚拟机无法自己定制内核）。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;em&gt;摘自http://www.snooda.com/read/324&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;net_speeder项目主页 &lt;a href=&#34;https://github.com/snooda/net-speeder&#34;&gt;https://github.com/snooda/net-speeder&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;安装net_speeder&#34;&gt;安装net_speeder&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;apt-get install libnet-dev libpcap-dev -y
git clone https://github.com/snooda/net-speeder.git
cd net-speeder
sh build.sh
mv net_speeder /usr/local/bin/
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;使用net_speeder&#34;&gt;使用net_speeder&lt;/h3&gt;
&lt;p&gt;使用&lt;code&gt;ifconfig&lt;/code&gt;查看网卡端口，我的端口为&lt;code&gt;venet0&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;nohup net_speeder venet0 &amp;quot;ip&amp;quot; &amp;gt;/dev/null 2&amp;gt;&amp;amp;1 &amp;amp;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;添加到开机启动&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;echo &#39;nohup net_speeder venet0 &amp;quot;ip&amp;quot; &amp;gt;/dev/null 2&amp;gt;&amp;amp;1 &amp;amp;&#39; &amp;gt;&amp;gt; /etc/rc.local&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>查看cp、mv等命令的执行进度</title>
      <link>https://unixetc.com/post/check-cp-dd-etc-commands-progress/</link>
      <pubDate>Thu, 04 Feb 2016 02:04:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/check-cp-dd-etc-commands-progress/</guid>
      <description>&lt;p&gt;Linux中进行文件拷贝和移动时，我们是看不到具体命令的执行情况，不知道还需要多久才可以执行完成。在此推荐一个软件名为progress，用它可以查看一些命令的具体执行情况，包括进度、时间等等。&lt;/p&gt;
&lt;p&gt;该软件的具体解释为&lt;strong&gt;Coreutils Progress Viewer&lt;/strong&gt;，即核心程序进度查看，用它可以监视很多linux程序的执行情况，比如cp、mv、dd、tar,、gzip、cat等等，甚至于firefox的下载进度或者nginx的运行情况。&lt;/p&gt;
&lt;h3 id=&#34;安装progress&#34;&gt;安装progress&lt;/h3&gt;
&lt;p&gt;progress主页 &lt;a href=&#34;https://github.com/Xfennec/progress&#34;&gt;https://github.com/Xfennec/progress&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;安装progress方法&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git clone https://github.com/Xfennec/progress.git
cd progress
make
make install
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;使用progress&#34;&gt;使用progress&lt;/h3&gt;
&lt;p&gt;简单的执行方法&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;progress
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;几个示例：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;监控所有可监控软件的执行情况&lt;/p&gt;
&lt;p&gt;watch progress -q&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;然后进行文件操作即可看到如下内容:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/progress_1.webp&#34; alt=&#34;progress监控窗口&#34; title=&#34;progress监控窗口&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;查看下载进度&lt;/p&gt;
&lt;p&gt;watch progress -wc firefox&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;查看网页服务器活动情况&lt;/p&gt;
&lt;p&gt;progress -c nginx&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>使用Google Authenticator两步验证加强SSH登录</title>
      <link>https://unixetc.com/post/use-google-authenticator-set-2step-verification-strengthening-ssh-login/</link>
      <pubDate>Thu, 28 Jan 2016 12:33:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/use-google-authenticator-set-2step-verification-strengthening-ssh-login/</guid>
      <description>&lt;p&gt;Google Authenticator开源版主页 &lt;a href=&#34;https://github.com/google/google-authenticator&#34;&gt;https://github.com/google/google-authenticator&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;安装google-authenticator&#34;&gt;安装Google Authenticator&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Ubuntu&lt;/strong&gt;已经包含libpam-google-authenticator软件(Ubuntu 11.10以上版本),可以直接使用&lt;code&gt;apt-get&lt;/code&gt;安装&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;apt-get install libpam-google-authenticator
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;其他系统可以通过源码编译安装&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git clone https://github.com/google/google-authenticator-libpam.git
cd google-authenticator-libpam/
./bootstrap.sh
./configure
make
make install
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;注意：在Debian7中执行&lt;code&gt;./configure&lt;/code&gt;时可能存在以下错误提示&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;configure: error: Unable to find the PAM library or the PAM header files
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;在此需要安装&lt;code&gt;libpam0g-dev&lt;/code&gt;和&lt;code&gt;libtool&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;apt-get -y install libpam0g-dev libtool
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;设置google-authenticator&#34;&gt;设置Google Authenticator&lt;/h3&gt;
&lt;p&gt;在手机端搜索安装&lt;strong&gt;Google Authenticator&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;google-authenticator
Do you want authentication tokens to be time-based (y/n) y
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后出现二维码，使用手机端&lt;strong&gt;Google Authenticator&lt;/strong&gt;扫码,接下来服务器端继续设置&lt;/p&gt;
&lt;p&gt;如果没有出现二维码，可以将提示的以**&lt;a href=&#34;https://www.google.com/chart?&#34;&gt;https://www.google.com/chart?&lt;/a&gt;**开头的连接复制到浏览器中，就可以看到二维码了&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Do you want me to update your &amp;quot;/root/.google_authenticator&amp;quot; file (y/n) y

Do you want to disallow multiple uses of the same authentication
token? This restricts you to one login about every 30s, but it increases
your chances to notice or even prevent man-in-the-middle attacks (y/n) Do you want to disallow multiple uses of the same authentication
token? This restricts you to one login about every 30s, but it increases
your chances to notice or even prevent man-in-the-middle attacks (y/n) y

By default, tokens are good for 30 seconds and in order to compensate for
possible time-skew between the client and the server, we allow an extra
token before and after the current time. If you experience problems with poor
time synchronization, you can increase the window from its default
size of 1:30min to about 4min. Do you want to do so (y/n) y

If the computer that you are logging into isn&#39;t hardened against brute-force
login attempts, you can enable rate-limiting for the authentication module.
By default, this limits attackers to no more than 3 login attempts every 30s.
Do you want to enable rate-limiting (y/n) y
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;接下来将&lt;strong&gt;Google Authenticator&lt;/strong&gt;验证配置到SSH登录中&lt;/p&gt;
&lt;p&gt;编辑&lt;code&gt;/etc/pam.d/sshd&lt;/code&gt;文件，添加下行保存&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;auth required pam_google_authenticator.so
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;编辑&lt;code&gt;/etc/ssh/sshd_config&lt;/code&gt;找到下行&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ChallengeResponseAuthentication no
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;更改为&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ChallengeResponseAuthentication yes
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;重启SSH服务&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;service ssh restart
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;再次登录的话输入用户名后就跟着提示两部验证码，然后才输入用户密码，如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;login as: root
Using keyboard-interactive authentication.
Verification code:
Using keyboard-interactive authentication.
Password:
Welcome to Ubuntu 14.04.2 LTS (GNU/Linux 2.6.32-042stab108.8 i686)

* Documentation:  https://help.ubuntu.com/
Last login: Thu Jan 28 15:04:20 2016 from 61.185.216.146
root@hkvps:~#
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;参考 &lt;a href=&#34;https://wzyboy.im/post/765.html&#34;&gt;https://wzyboy.im/post/765.html&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>树莓派安装Dnsmasq加速DNS解析</title>
      <link>https://unixetc.com/post/raspberry-pi-install-dnsmasq-and-dnsmasq-china-list/</link>
      <pubDate>Mon, 18 Jan 2016 21:28:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/raspberry-pi-install-dnsmasq-and-dnsmasq-china-list/</guid>
      <description>&lt;p&gt;天朝的dns服务商尿性不是一般的大，动不动就抽风或者劫持，为了避免这种情况，可以在树莓派上安装Dnsmasq来加速dns解析，提高网络浏览体验。&lt;/p&gt;
&lt;h3 id=&#34;安装配置dnsmasq&#34;&gt;安装配置dnsmasq&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;apt-get install dnsmasq
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;配置dnsmasq,&lt;code&gt;vi /etc/dnsmasq.conf&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;我的配置文件如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;domain=Raspi2
resolv-file=/etc/resolv.dnsmasq
conf-dir=/etc/dnsmasq.d
min-port=4096
server=114.114.114.114
server=114.114.115.115
server=223.5.5.5
server=223.6.6.6
server=119.29.29.29
server=182.254.116.116
server=112.124.47.27
server=114.215.126.16
server=101.226.4.6
server=218.30.118.6
server=42.120.21.30
server=199.91.73.222
server=178.79.131.110
server=8.8.8.8
server=8.8.4.4

cache-size=10000
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;配置完重启dnsmasq服务&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;service dnsmasq restart
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;其中的&lt;code&gt;server&lt;/code&gt;字段为上游DNS&lt;/p&gt;
&lt;h3 id=&#34;配置dnsmasq-china-list&#34;&gt;配置dnsmasq-china-list&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;git clone https://github.com/felixonmars/dnsmasq-china-list.git
cd dnsmasq-china-list/
cp *.conf  /etc/dnsmasq.d/
service dnsmasq restart
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;至此设置完成，可以在路由器中将首选dns设为树莓派ip，这样局域网内的所有设备都可以体验dns解析加速了！&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>树莓派下安装配置Noip</title>
      <link>https://unixetc.com/post/install-configure-noip-client-in-raspberry-pi/</link>
      <pubDate>Mon, 11 Jan 2016 12:13:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/install-configure-noip-client-in-raspberry-pi/</guid>
      <description>&lt;h3 id=&#34;注册noip&#34;&gt;注册noip&lt;/h3&gt;
&lt;p&gt;首先在&lt;a href=&#34;http://noip.com&#34;&gt;http://noip.com&lt;/a&gt;注册账户&lt;/p&gt;
&lt;p&gt;然后在主机管理(Manage Hosts)中添加主机(Add A Host)，根据提示设置二级域名，IP可以随意填写。&lt;/p&gt;
&lt;h3 id=&#34;安装noip客户端&#34;&gt;安装Noip客户端&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;wget https://www.noip.com/client/linux/noip-duc-linux.tar.gz
tar zxf noip-duc-linux.tar.gz
cd noip-2.1.9-1
sudo make install
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;安装过程中，按照提示输入noip帐号信息，时间间隔建议设为5s，默认30s&lt;/p&gt;
&lt;h3 id=&#34;设置开机启动&#34;&gt;设置开机启动&lt;/h3&gt;
&lt;p&gt;在&lt;code&gt;/etc/init.d/&lt;/code&gt;中建立&lt;code&gt;noip2&lt;/code&gt;脚本&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo vi /etc/init.d/noip2
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;脚本内容如下&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#! /bin/sh

### BEGIN INIT INFO
# Provides:          noip2
# Required-Start:    $syslog
# Required-Stop:     $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: noip.com client service
### END INIT INFO

# . /lib/lsb/init-functions
case &amp;quot;$1&amp;quot; in
    start)
        echo &amp;quot;Starting noip2.&amp;quot;
        /usr/local/bin/noip2
    ;;
    stop)
        echo &amp;quot;Shutting down noip2.&amp;quot;
        killall noip2
        #killproc /usr/local/bin/noip2
    ;;
    *)
        echo &amp;quot;Usage: $0 {start|stop}&amp;quot;
        exit 1
esac

exit 0
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;设置开机启动&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo chmod +x /etc/init.d/noip2
sudo update-rc.d noip2 defaults
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;设置dmz转发&#34;&gt;设置DMZ转发&lt;/h3&gt;
&lt;p&gt;进入到路由器管理平台，为树莓派指定一个固定IP，然后在&lt;strong&gt;转发规则&lt;/strong&gt;下设置&lt;strong&gt;DMZ主机&lt;/strong&gt;将树莓派ip添加设置，重启生效。&lt;/p&gt;
&lt;p&gt;至此设置完成，可以ping一下自定义域名，看ip是正确，以后就可以通过自定义域名访问树莓派了。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>树莓派使用ddclient和DDNS</title>
      <link>https://unixetc.com/post/raspberry-pi-using-ddclient-and-ddns/</link>
      <pubDate>Thu, 07 Jan 2016 12:31:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/raspberry-pi-using-ddclient-and-ddns/</guid>
      <description>&lt;h3 id=&#34;域名解析&#34;&gt;域名解析&lt;/h3&gt;
&lt;p&gt;首先得有个域名，在域名管理中将域名DNS设为he.net的DNS地址，如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ns1.he.net
ns2.he.net
ns3.he.net
ns4.he.net
ns5.he.net
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后在&lt;a href=&#34;http://dns.he.net&#34;&gt;http://dns.he.net&lt;/a&gt;注册账号，添加域名(Add a new domain)&lt;/p&gt;
&lt;p&gt;接下来添加A记录(New A)，勾选允许动态域名解析(Enable entry for dynamic dns)&lt;/p&gt;
&lt;p&gt;点击域名后DDNS列中的刷新按钮，新建一个DDNS密匙(Generate a DDNS key.)&lt;/p&gt;
&lt;h3 id=&#34;安装设置ddclient&#34;&gt;安装设置ddclient&lt;/h3&gt;
&lt;p&gt;在树莓派上安装ddclient&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo apt-get install ddclient
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;编辑ddclient配置文件，路径为&lt;code&gt;/etc/ddclient.conf&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;protocol=dyndns2
use=web,web=myip.dnsomatic.com
server=dyn.dns.he.net
login=raspi.in
password=&#39;ddnskey&#39;
www.raspi.in,raspi.in
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;其中&lt;strong&gt;password&lt;/strong&gt;为设置DDNS时的key&lt;/p&gt;
&lt;p&gt;重启ddclient服务&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;service ddclient restart
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;验证IP查询结果&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo ddclient -query
use=if, if=eth0 address is 192.168.1.111
use=if, if=lo address is 127.0.0.1
use=web, web=dnspark address is 36.40.143.235
use=web, web=dyndns address is NOT FOUND
use=web, web=loopia address is 36.40.143.235
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;其中if方式查询到的是内网地址和本机地址，web方式查询到的时外网IP&lt;/p&gt;
&lt;p&gt;至此设置完成，可以ping一下域名试试咯！&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>SSL安全优化</title>
      <link>https://unixetc.com/post/ssl-security-optimization/</link>
      <pubDate>Mon, 21 Dec 2015 12:21:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/ssl-security-optimization/</guid>
      <description>&lt;p&gt;先贴出本站的SSL安全评级,测试地址为&lt;a href=&#34;https://www.ssllabs.com/ssltest/analyze.html?d=alair.cn&#34;&gt;https://www.ssllabs.com/ssltest/analyze.html?d=alair.cn&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/ssl-rank.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;以下是本站&lt;strong&gt;Nginx&lt;/strong&gt;配置中关于SSL部分&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;listen 443 ssl http2;

ssl_certificate /etc/letsencrypt/live/alair.cn/fullchain.pem;  
ssl_certificate_key /etc/letsencrypt/live/alair.cn/privkey.pem; 

ssl_session_timeout 60m;
ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
ssl_ciphers ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-RC4-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:RC4-SHA:!aNULL:!eNULL:!EXPORT:!DES:!3DES:!MD5:!DSS:!PKS;

ssl_prefer_server_ciphers on;
ssl_session_cache builtin:1000 shared:SSL:10m;
ssl_dhparam /etc/ssl/certs/dhparam.pem;
ssl_stapling on;
ssl_stapling_verify on;

add_header Strict-Transport-Security &amp;quot;max-age=63072000; includeSubdomains; preload&amp;quot;;
add_header X-Frame-Options &amp;quot;DENY&amp;quot;;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;说明：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;dhparam.pem&lt;/strong&gt;可以使用&lt;code&gt;openssl dhparam -out dhparam.pem 4096&lt;/code&gt;命令生成，这个命令会执行很长时间，也可以将字节数改为2048&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>使用MD5校验文件</title>
      <link>https://unixetc.com/post/md5sum-usage/</link>
      <pubDate>Sun, 13 Dec 2015 12:13:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/md5sum-usage/</guid>
      <description>&lt;p&gt;md5sum命令用于生成和校验文件的md5值。它会逐位对文件的内容进行校验。是文件的内容，与文件名无关，也就是文件内容相同，其md5值相同。md5值是一个128位的二进制数据，转换成16进制则是32（128/4）位的进制值。&lt;/p&gt;
&lt;p&gt;md5校验，有很小的概率不同的文件生成的md5可能相同。比md5更安全的校验算法还有SHA*系列的。&lt;/p&gt;
&lt;p&gt;在网络传输时，我们校验源文件获得其md5sum，传输完毕后，校验其目标文件，并对比如果源文件和目标文件md5 一致的话，则表示文件传输无异常。否则说明文件在传输过程中未正确传输。&lt;/p&gt;
&lt;h3 id=&#34;md5sum示例&#34;&gt;md5sum示例&lt;/h3&gt;
&lt;h4 id=&#34;生成文件md5&#34;&gt;生成文件md5&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;pi@raspi:~ $ md5sum bs.conf
fcd3e1243d1cd5903d4e38c46671b84f  bs.conf
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;md5sum校验是根据文件内容为准，与名称无关，意思是即便文件名修改了，但md5校验值应该不会改变，如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pi@raspi:~ $ cp bs.conf bs.conf.bak
pi@raspi:~ $ md5sum bs*
fcd3e1243d1cd5903d4e38c46671b84f  bs.conf
fcd3e1243d1cd5903d4e38c46671b84f  bs.conf.bak
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;根据md5校验文件是否更改&#34;&gt;根据md5校验文件是否更改&lt;/h4&gt;
&lt;p&gt;一般网上分享的大文件都会附带一个.md5文件，这就是所分享文件的md5值，可以使用&lt;code&gt;-c&lt;/code&gt;参数来直接使用.md5文件来检验文件是否完整&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pi@raspi:~ $ md5sum bs.conf&amp;gt;bs.conf.md5
pi@raspi:~ $ md5sum -c bs.conf.md5
bs.conf: OK
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;如上例，将bs.conf的md5值定向到一个bs.conf.md5文件，然后使用&lt;code&gt;md5sum -c bs.conf.md5&lt;/code&gt;直接检验相应文件是否完整一致，校验通过的话会输出提示&lt;strong&gt;OK&lt;/strong&gt;，如果文件经过修改，内容已经不一致，则不会通过校验，则会显示&lt;strong&gt;FAILED&lt;/strong&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>使用SCP传输文件</title>
      <link>https://unixetc.com/post/transfer-files-using-scp/</link>
      <pubDate>Tue, 08 Dec 2015 21:38:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/transfer-files-using-scp/</guid>
      <description>&lt;p&gt;&lt;strong&gt;示例：用户名root 地址 2.33.153.67&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;下载文件&#34;&gt;下载文件&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;scp root@2.33.153.67:/root/test.mp4 /home/pi/
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;将服务器上的/root/test.mp4下载到本地/home/pi文件夹&lt;/p&gt;
&lt;h3 id=&#34;上传文件&#34;&gt;上传文件&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;scp /home/pi/ok.txt root@2.33.153.67:/root
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;将本地/home/pi/ok.txt上传至服务器/root文件夹&lt;/p&gt;
&lt;h3 id=&#34;下载文件夹&#34;&gt;下载文件夹&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;scp -r root@2.33.153.67:/root/ebooks /home/pi
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;将服务器上的/root/ebooks文件夹下载至本地/home/pi下&lt;/p&gt;
&lt;h3 id=&#34;上传文件夹&#34;&gt;上传文件夹&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;scp  -r /home/pi/music root@2.33.153.67:/media
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;将本地/home/pi/music文件夹上传至服务器/media下&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Linux下更改时区</title>
      <link>https://unixetc.com/post/change-timezone-in-centos/</link>
      <pubDate>Mon, 30 Nov 2015 11:30:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/change-timezone-in-centos/</guid>
      <description>&lt;p&gt;Linux中时区代码都在&lt;code&gt;/usr/share/zoneinfo/&lt;/code&gt;目录中&lt;/p&gt;
&lt;p&gt;首先删除默认时区&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#rm /etc/localtime
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;设定新的时区&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#ln -s /usr/share/zoneinfo/Asia/Shanghai /etc/localtime
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;完成！&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>树莓派安装ffmpeg</title>
      <link>https://unixetc.com/post/raspberry-pi-install-ffmpeg/</link>
      <pubDate>Sat, 07 Nov 2015 21:23:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/raspberry-pi-install-ffmpeg/</guid>
      <description>&lt;p&gt;先安装h264编码器&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#!/bin/bash
cd /usr/src
git clone git://git.videolan.org/x264
cd x264
./configure --host=arm-unknown-linux-gnueabi --enable-static --disable-opencl
make
sudo make install
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;下载源码编译安装ffmpeg&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd /usr/src
git clone git://source.ffmpeg.org/ffmpeg.git
cd ffmpeg
sudo ./configure --arch=armel --target-os=linux --enable-gpl --enable-libx264 --enable-nonfree
make
sudo make install
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;由于树莓派原因，这个过程很长……很长……  建议开&lt;code&gt;screen&lt;/code&gt;，然后Ctrl+a+d&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>linux下将mp3转换为ogg</title>
      <link>https://unixetc.com/post/linux-mp3-converted-to-ogg/</link>
      <pubDate>Wed, 21 Oct 2015 11:21:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/linux-mp3-converted-to-ogg/</guid>
      <description>&lt;p&gt;安装软件&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;apt-get install mpg321 vorbis-tools 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;使用如下命令转换&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mpg321 tweet.mp3 -w raw &amp;amp;&amp;amp; oggenc raw -o tweet.ogg &amp;amp;&amp;amp; rm -rf raw
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;示例:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;root@hkvps:/home/res# mpg321 tweet.mp3 -w raw &amp;amp;&amp;amp; oggenc raw -o tweet.ogg &amp;amp;&amp;amp; rm -rf raw
High Performance MPEG 1.0/2.0/2.5 Audio Player for Layer 1, 2, and 3.
Version 0.3.2-1 (2012/03/25). Written and copyrights by Joe Drew,
now maintained by Nanakos Chrysostomos and others.
Uses code from various people. See &#39;README&#39; for more!
THIS SOFTWARE COMES WITH ABSOLUTELY NO WARRANTY! USE AT YOUR OWN RISK!

Playing MPEG stream from tweet.mp3 ...
MPEG 1.0 layer III, 192 kbit/s, 44100 Hz joint-stereo

[4:45] Decoding of tweet.mp3 finished.
Opening with wav module: WAV file reader
Encoding &amp;quot;raw&amp;quot; to
        &amp;quot;tweet.ogg&amp;quot;
at quality 3.00
        [ 99.7%] [ 0m00s remaining] |

Done encoding file &amp;quot;tweet.ogg&amp;quot;

        File length:  4m 45.0s
        Elapsed time: 0m 16.3s
        Rate:         17.5056
        Average bitrate: 112.1 kb/s

root@hkvps:/home/res# ll&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Gandi免费SSL证书使用方法</title>
      <link>https://unixetc.com/post/gandi-free-ssl-certificate-usage/</link>
      <pubDate>Thu, 24 Sep 2015 19:23:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/gandi-free-ssl-certificate-usage/</guid>
      <description>&lt;p&gt;首先澄清此文中的&lt;strong&gt;免费&lt;/strong&gt;不是真的免费，而是新注册或转移域名到Gandi，都可以获得标准版SSL证书一年的免费使用。&lt;/p&gt;
&lt;p&gt;符合以上条件的话，可以进行下面操作了！&lt;/p&gt;
&lt;p&gt;在Gandi上购买SSL证书，选择标准版，在结算的时候系统会自动判断是否免单，正常情况下会0元结单，完成后接着配置SSL证书。&lt;/p&gt;
&lt;p&gt;首先提交CSR，这里需要自己生产CSR。&lt;/p&gt;
&lt;p&gt;在此以&lt;strong&gt;3c.lc&lt;/strong&gt;域名为例，在Ubuntu中操作。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;openssl req -nodes -newkey rsa:2048 -sha1 -keyout 3clc.key -out 3clc.csr
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后根据提示填写以下内容：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Country Name (2 letter code) [AU]:                          #国家代码，中国为CN&lt;/p&gt;
&lt;p&gt;State or Province Name (full name) [Some-State]:            #省份&lt;/p&gt;
&lt;p&gt;Locality Name (eg, city) []:                                #城市&lt;/p&gt;
&lt;p&gt;Organization Name (eg, company) [Internet Widgits Pty Ltd]: #组织名&lt;/p&gt;
&lt;p&gt;Organizational Unit Name (eg, section) []:                  #部门名&lt;/p&gt;
&lt;p&gt;Common Name (e.g. server FQDN or YOUR name) []:3c.lc        #注意，这里需要填写你的域名。&lt;/p&gt;
&lt;p&gt;Email Address []:2b@3c.lc                                   #邮箱&lt;/p&gt;
&lt;p&gt;Please enter the following &amp;lsquo;extra&amp;rsquo; attributes&lt;/p&gt;
&lt;p&gt;to be sent with your certificate request&lt;/p&gt;
&lt;p&gt;A challenge password []:                                    #注意，为了后面方便配置nginx，建议密码置空。&lt;/p&gt;
&lt;p&gt;An optional company name []:                                #扩展组织名&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;完成后，就会生成&lt;strong&gt;3clc.key&lt;/strong&gt;和&lt;strong&gt;3clc.csr&lt;/strong&gt;两个文件。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cat 3clc.csr
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;将显示的文件内容粘贴到Gandi提交。&lt;/p&gt;
&lt;p&gt;接下来验证域名所有者权限，有三种方法，建议使用email验证，比较方便。&lt;/p&gt;
&lt;p&gt;下来是凭证验证，这个得等待系统完成,完成后即可获得SSL证书一枚。&lt;/p&gt;
&lt;p&gt;至于如何在&lt;strong&gt;Nginx&lt;/strong&gt;中使用SSL，可参考&lt;a href=&#34;https://unixetc.com/post/Nginx-configuration-SSL-certificate/&#34;&gt;Nginx配置SSL证书&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>树莓派开启root登录</title>
      <link>https://unixetc.com/post/raspberry-pi-allow-root-login/</link>
      <pubDate>Fri, 18 Sep 2015 21:28:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/raspberry-pi-allow-root-login/</guid>
      <description>&lt;p&gt;想要通过ssh登录树莓派进行管理，使用默认的&lt;strong&gt;pi&lt;/strong&gt;用户有时真的不便，对于linux老手来说，可以直接开启&lt;strong&gt;root&lt;/strong&gt;用户ssh登录，这就方便多了，方法如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo passwd root
sudo passwd --unlock root
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;设置SSH&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo vi /etc/ssh/sshd_config
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;将其中的&lt;code&gt;PermitRootLogin without-password&lt;/code&gt;改为&lt;code&gt;PermitRootLogin yes&lt;/code&gt;，然后重启ssh服务&lt;code&gt;sudo service ssh restart&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Over!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Linux下使用grive管理Google Drive</title>
      <link>https://unixetc.com/post/linux-use-grive-management-google-drive/</link>
      <pubDate>Wed, 26 Aug 2015 18:23:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/linux-use-grive-management-google-drive/</guid>
      <description>&lt;p&gt;找到一个linux下可用的google drive客户端，纯cli操作，值得推荐&lt;/p&gt;
&lt;p&gt;grive项目主页 &lt;a href=&#34;https://github.com/Grive/grive&#34;&gt;https://github.com/Grive/grive&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Ubuntu中下通过PPA安装grive&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo add-apt-repository ppa:nilarimogard/webupd8 
sudo apt-get update
sudo apt-get install grive
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;使用grive同步Google Drive&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;mkdir googledrive
cd googledrive
grive -a
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;第一次运行，会有验证提示，将提示的url代码粘贴到浏览器中验证帐户，完了后将生成的验证代码粘贴到grive进行验证。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>无法使用add-apt-repository命令</title>
      <link>https://unixetc.com/post/can-not-use-add-apt-repository/</link>
      <pubDate>Sun, 23 Aug 2015 08:23:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/can-not-use-add-apt-repository/</guid>
      <description>&lt;p&gt;在Ubuntu中使用&lt;strong&gt;PPA&lt;/strong&gt;安装软件时，需要用到&lt;code&gt;add-apt-repository&lt;/code&gt;命令，但有的&lt;strong&gt;VPS&lt;/strong&gt;系统因为体量原因，可能没有该命令，因此需要通过以下方法来安装：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;apt-get install python-software-properties 
apt-get install software-properties-common&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>树莓派安装配置minidlna</title>
      <link>https://unixetc.com/post/raspberry-pi-install-minidlna-to-create-digital-media-server/</link>
      <pubDate>Thu, 06 Aug 2015 18:26:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/raspberry-pi-install-minidlna-to-create-digital-media-server/</guid>
      <description>&lt;h3 id=&#34;树莓派挂载移动存储&#34;&gt;树莓派挂载移动存储&lt;/h3&gt;
&lt;p&gt;可以挂载移动硬盘或者大容量的U盘，参考以下文章：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://unixetc.com/post/raspberry-pi-mount-udisk-as-the-storage-partition/&#34;&gt;树莓派挂载U盘作为存储分区&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://unixetc.com/post/examples-of-fdisk-partition/&#34;&gt;fdisk分区实例&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;安装配置minidlna&#34;&gt;安装配置minidlna&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;#sudo apt-get install -y minidlna
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;编辑minidlna配置文件&lt;code&gt;/etc/minidlna.conf&lt;/code&gt;，内容如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;media_dir=/home/pi/dlnadoc  #媒体文件目录
db_dir=/var/lib/minidlna    #minidlna通过SQLite来建立媒体库索引，因此需要定义数据库目录
listening_ip=192.168.1.111  #树莓派IP
port=8200					#web端口，可以通过ip:port查看索引状态
friendly_name=Raspi_DLNA    #服务器命名
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;重启&lt;code&gt;minidlna&lt;/code&gt;服务&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo service minidlna restart
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;强制刷新&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo service minidlna force-reload
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;查看索引状态,浏览http://192.168.1.111:8200&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;MiniDLNA status
Audio files: 0
Video files: 2
Image files: 0
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;dlna客户端&#34;&gt;DLNA客户端&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;PC&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Windows7下将网络设置为&lt;strong&gt;家庭网络&lt;/strong&gt;，完成后刷新，在&lt;strong&gt;网络&lt;/strong&gt;中&lt;strong&gt;媒体设备&lt;/strong&gt;下就可以自动发现&lt;strong&gt;Rasp_DLNA&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;点击进去就可以使用MediaPlayer来浏览。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Android&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;VPlayer+ VPlayer uPnP DLNA Plugin&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;IOS&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;RushPlayer&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>树莓派使用DietPi</title>
      <link>https://unixetc.com/post/raspberry-pi-use-dietpi/</link>
      <pubDate>Tue, 04 Aug 2015 18:23:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/raspberry-pi-use-dietpi/</guid>
      <description>&lt;h3 id=&#34;下载安装dietpi&#34;&gt;下载安装DietPi&lt;/h3&gt;
&lt;p&gt;DietPi项目主页 &lt;a href=&#34;http://dietpi.com/&#34;&gt;http://dietpi.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;DietPi下载地址 &lt;a href=&#34;http://fuzon.co.uk/downloads/DietPi.7z&#34;&gt;http://fuzon.co.uk/downloads/DietPi.7z&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这个压缩包91MB，解压后的img文件522MB,比官方的小多了。&lt;/p&gt;
&lt;p&gt;然后将镜像写入到SD卡中，linux下使用&lt;code&gt;dd&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;dd if=DietPi_v74.img of=/dev/sdc bs=2M
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Windows下使用&lt;strong&gt;Win32 Disk Imager&lt;/strong&gt;，&lt;a href=&#34;http://sourceforge.net/projects/win32diskimager/&#34;&gt;戳这里&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;写入完成后将SD卡插入树莓派，加电启动。&lt;/p&gt;
&lt;h3 id=&#34;预设置wifi链接&#34;&gt;预设置Wifi链接&lt;/h3&gt;
&lt;p&gt;首次使用时，可以通过编辑&lt;strong&gt;dietpi.txt&lt;/strong&gt;来进行wifi预设置。&lt;/p&gt;
&lt;p&gt;将TF卡插入电脑读卡器，打开对应的磁盘，找到&lt;strong&gt;dietpi.txt&lt;/strong&gt;文件，打开。&lt;/p&gt;
&lt;p&gt;找到&lt;code&gt;Wifi_Enabled=0&lt;/code&gt;，将其设置为&lt;strong&gt;1&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;然后找到&lt;code&gt;Wifi_SSID&lt;/code&gt;和&lt;code&gt;Wifi_KEY&lt;/code&gt;分别设置wifi节点名和密码，保存即可。&lt;/p&gt;
&lt;h3 id=&#34;配置dietpi&#34;&gt;配置DietPi&lt;/h3&gt;
&lt;p&gt;DietPi默认用户名密码为&lt;code&gt;root dietpi&lt;/code&gt;，第一次启动DietPi提示检测升级，按提示操作。&lt;/p&gt;
&lt;p&gt;不过由于天朝网路问题，可能升级比较缓慢，建议&lt;strong&gt;Ctrl+c&lt;/strong&gt;终止升级，修改&lt;code&gt;sources.list&lt;/code&gt;为朝内镜像。&lt;/p&gt;
&lt;p&gt;DietPi默认没有&lt;code&gt;vi&lt;/code&gt;,使用&lt;code&gt;nano&lt;/code&gt;进行编辑，添加Aliyun源。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;deb http://mirrors.aliyun.com/raspbian/raspbian/ wheezy main non-free contrib
deb-src http://mirrors.aliyun.com/raspbian/raspbian/ wheezy main non-free contrib
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;更新软件&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;apt-get update&amp;amp;&amp;amp;apt-get upgrade -y
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后运行&lt;code&gt;dietpi-config&lt;/code&gt;进行配置。&lt;/p&gt;
&lt;p&gt;DietPi - Config&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;           ┌────┤ ---------- DietPi-Config ---------- ├─────┐
           │  Hardware : Raspberry Pi 1 (512MB)             │
           │                                                │
           │           1 Display Options                    │
           │           2 Audio Options                      │
           │           3 Performance Options                │
           │           4 Advanced Options                   │
           │           5 Language/Regional Options          │
           │           6 Security Options                   │
           │           7 Networking Options                 │
           │           8 AutoBoot Options                   │
           │           9 Tools                              │
           │                                                │
           │                                                │
           │           &amp;lt;Ok&amp;gt;               &amp;lt;Exit&amp;gt;            │
           │                                                │
           └────────────────────────────────────────────────┘
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;推荐配置：&lt;/p&gt;
&lt;p&gt;Display Options -&amp;gt; GPU/RAM Memory Split ，不适用桌面系统的话，建议选择&lt;code&gt;Server&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Performance Options -&amp;gt; Change Overclocking Profile ，设置超频选项&lt;/p&gt;
&lt;p&gt;Language/Regional Options-&amp;gt;  Locale/Timezone ，设置语言与时区，建议将&lt;strong&gt;zh_CN&lt;/strong&gt;的四个语言全部勾选。时区选择Asia/Chongqing。&lt;/p&gt;
&lt;p&gt;Security Options -&amp;gt; Change Root Password/Change Hostname ，修改密码和主机名&lt;/p&gt;
&lt;p&gt;Networking Options中干货比较多，大家自行设置&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;┌──────────────────┤ --- DietPi - Network Options --- ├───────────────────┐
│                                                                         │
│  Ethernet     : Not Found | Enabled | Disconnected                      │
│  Wifi         : Not Found | Disabled | Disconnected                     │
│  Internet     : Please run Internet Test                                │
│  Samba client : Not Installed                                           │
│  FTP client   : Not Installed                                           │
│  NoIp status  : Not Installed                                           │
│                                                                         │
│        Ethernet     Change Wired Network Settings                       │
│        Wifi         Change Wireless Network Settings                    │
│        Test         Run the Internet Connection Test                    │
│        Samba Client Install now to access Windows shares                │
│        Ftp Client   Install now to access FTP as filesystem mount       │
│        NoIp         Install No-Ip now                                   │
│                                                                         │
│                                                                         │
│                   &amp;lt;Ok&amp;gt;                       &amp;lt;Back&amp;gt;                     │
│                                                                         │
└─────────────────────────────────────────────────────────────────────────┘
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;设置完成后重启系统。&lt;/p&gt;
&lt;h3 id=&#34;dietpi软件快捷安装工具&#34;&gt;DietPi软件快捷安装工具&lt;/h3&gt;
&lt;p&gt;DietPi自带一个便捷的软件安装工具&lt;code&gt;dietpi-software&lt;/code&gt;，可以通过这个工具快速安装一些常用软件&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Setup USB Dedicated Drive?
    ┌───────────────────┤ Setup USB Dedicated Drive? ├───────────────────┐
    │                                                                    │
    │ Will you be using a dedicated USB hard drive with this DietPi      │
    │ installation?                                                      │
    │                                                                    │
    │ (NOTICE) Your decision now is final and cannot be changed at a     │
    │ later date. DietPi will automatically setup your future software   │
    │ installations to utilize the USB drive instead of MicroSD.         │
    │ As USB hard drives are generally faster than MicroSD, using a USB  │
    │ drive can vastly improve system performance.                       │
    │                                                                    │
    │  This is recommended for:                                          │
    │  - BitTorrent (Store downloads)                                    │
    │  - OwnCloud                                                        │
    │  - Kodi (Store Media Files)                                        │
    │  - RetroPie (Store Roms)                                           │
    │  - Hifi (Store Music)                                              │
    │                                                                    │
    │                                                                    │
    │                  &amp;lt;Yes&amp;gt;                     &amp;lt;No&amp;gt;                    │
    │                                                                    │
    └────────────────────────────────────────────────────────────────────┘

      ┌────┤ ---------- DietPi - Software Setup ---------- ├─────┐
      │                                                          │
      │           1  Select DietPi Optimized Software.           │
      │           2  Select Additional Linux Software.           │
      │           3  SSH Server  : Dropbear                      │
      │           4  File Server : None                          │
      │           5  Log System  : DietPi-Ramlog #1              │
      │           6  DietPi-Config                               │
      │           7  Help!                                       │
      │           Go Start Install                               │
      │                                                          │
      │                                                          │
      │              &amp;lt;Ok&amp;gt;                  &amp;lt;Exit&amp;gt;                │
      │                                                          │
      └──────────────────────────────────────────────────────────┘
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;1  Select DietPi Optimized Software.包含以下软件:&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;2  Select Additional Linux Software.包含以下软件&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
</description>
    </item>
    
    <item>
      <title>安装Nginx和ngx_pagespeed</title>
      <link>https://unixetc.com/post/install-nginx-and-ngx_pagespeed-on-vps/</link>
      <pubDate>Fri, 24 Jul 2015 17:24:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/install-nginx-and-ngx_pagespeed-on-vps/</guid>
      <description>&lt;p&gt;VPS配置:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Ubuntu 14.04 x86
RAM 512M
SWAP 64M
DISK 5G
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;准备工作&#34;&gt;准备工作&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;sudo apt-get update&amp;amp;&amp;amp;apt-get upgrade -y
sudo apt-get install build-essential zlib1g-dev libpcre3 libpcre3-dev unzip libssl-dev -y
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;下载ngx_pagespeed&#34;&gt;下载ngx_pagespeed&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;cd
NPS_VERSION=1.9.32.4
wget https://github.com/pagespeed/ngx_pagespeed/archive/release-${NPS_VERSION}-beta.zip
unzip release-${NPS_VERSION}-beta.zip
cd ngx_pagespeed-release-${NPS_VERSION}-beta/
wget https://dl.google.com/dl/page-speed/psol/${NPS_VERSION}.tar.gz
tar -xzvf ${NPS_VERSION}.tar.gz 
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;安装nginx&#34;&gt;安装Nginx&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;cd
groupadd www
useradd -s /sbin/nologin -g www www
NGINX_VERSION=1.8.0
wget http://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz
tar -xvzf nginx-${NGINX_VERSION}.tar.gz
cd nginx-${NGINX_VERSION}/
./configure \
--user=www \
--group=www  \
--prefix=/usr/local/nginx \
--with-http_stub_status_module \
--with-http_ssl_module \
--with-http_spdy_module \
--with-http_gzip_static_module \
--with-http_sub_module \
--add-module=$HOME/ngx_pagespeed-release-${NPS_VERSION}-beta \

sudo make
sudo make install
sudo ln -sf /usr/local/nginx/sbin/nginx /usr/bin/nginx
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;配置&lt;code&gt;/etc/init.d/nginx&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo wget https://raw.github.com/JasonGiedymin/nginx-init-ubuntu/master/nginx -O /etc/init.d/nginx
sudo chmod +x /etc/init.d/nginx
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;管理Nginx服务&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;service nginx {start|stop|restart|force-reload|reload|status|configtest|quietupgrade|terminate|destroy}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;测试安装结果&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;root@bwgvps:~# nginx -t
nginx: the configuration file /usr/local/nginx/conf/nginx.conf syntax is ok
nginx: configuration file /usr/local/nginx/conf/nginx.conf test is successful
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;配置ngx_pagespeed&#34;&gt;配置ngx_pagespeed&lt;/h3&gt;
&lt;p&gt;编辑Nginx的配置文件(/usr/local/nginx/conf/nginx.conf)&lt;/p&gt;
&lt;p&gt;在server段内添加&lt;code&gt;include gp.conf&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;在&lt;code&gt;/usr/local/nginx/conf/&lt;/code&gt;内新建&lt;code&gt;gp.conf&lt;/code&gt;,内容如下:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pagespeed on;
pagespeed FileCachePath /usr/local/nginx/pagespeed/;
pagespeed RewriteLevel PassThrough;
pagespeed EnableFilters collapse_whitespace;
pagespeed EnableFilters canonicalize_javascript_libraries;
pagespeed EnableFilters combine_css;
pagespeed EnableFilters combine_javascript;
pagespeed EnableFilters elide_attributes;
pagespeed EnableFilters extend_cache;
pagespeed EnableFilters flatten_css_imports;
pagespeed CssFlattenMaxBytes 5120;
pagespeed EnableFilters lazyload_images;
pagespeed EnableFilters rewrite_javascript;
pagespeed EnableFilters rewrite_images;
pagespeed EnableFilters insert_dns_prefetch;
pagespeed EnableFilters prioritize_critical_css;	
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Nginx reload后，用&lt;code&gt;curl&lt;/code&gt;验证是否开启&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;root@bwgvps:~# curl -I 127.0.0.1
HTTP/1.1 200 OK
Server: nginx/1.8.0
Content-Type: text/html
Connection: keep-alive
Date: Sat, 07 Feb 1970 00:54:49 GMT
X-Page-Speed: 1.9.32.4-7251
Cache-Control: max-age=0, no-cache
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;以上X-Page-Speed代表已经OK!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;参考:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://developers.google.com/speed/pagespeed/module/build_ngx_pagespeed_from_source&#34;&gt;https://developers.google.com/speed/pagespeed/module/build_ngx_pagespeed_from_source&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/JasonGiedymin/nginx-init-ubuntu&#34;&gt;https://github.com/JasonGiedymin/nginx-init-ubuntu&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://lnmp.org&#34;&gt;http://lnmp.org&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>将Nginx更换为H2O</title>
      <link>https://unixetc.com/post/install-h2o-on-bandwagon-vps/</link>
      <pubDate>Tue, 21 Jul 2015 17:31:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/install-h2o-on-bandwagon-vps/</guid>
      <description>&lt;h3 id=&#34;安装必须的软件&#34;&gt;安装必须的软件&lt;/h3&gt;
&lt;p&gt;预备工具软件&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#apt-get install autoconf automake m4 build-essential
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;libssl-dev &lt;strong&gt;必选&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#apt-get install openssl libssl-dev
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;以下为可选包，可自行搜索安装&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;libuv&lt;/li&gt;
&lt;li&gt;libyaml&lt;/li&gt;
&lt;li&gt;wslay&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;安装h2o&#34;&gt;安装H2O&lt;/h3&gt;
&lt;p&gt;下载安装最新版h2o  &lt;a href=&#34;https://github.com/h2o/h2o/releases&#34;&gt;https://github.com/h2o/h2o/releases&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#wget https://github.com/h2o/h2o/archive/v1.4.1.tar.gz
#tar zxf v1.4.1.tar.gz
#cd h2o-1.4.1
#cmake -DWITH_BUNDLED_SSL=on .
#make
#sudo make install
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;编辑h2o站点配置文件&#34;&gt;编辑H2O站点配置文件&lt;/h3&gt;
&lt;p&gt;以下是一个简单的http与https配置文件，可自行参考修改&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;hosts:
&amp;quot;www.example.com&amp;quot;:
    listen:
    port: 80
    listen:
    port: 443
    ssl:
        certificate-file: /path/to/server-certificate.crt
        key-file:         /path/to/private-key.crt
    paths:
    &amp;quot;/&amp;quot;:
        file.dir: /path/to/doc-root

access-log: /path/to/the/access-log
error-log: /path/to/the/error-log
pid-file: /path/to/the/pid-file
http2-reprioritize-blocking-assets: ON   # performance tuning option
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;启动H2O&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#h2o h2o.conf
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;以daemon模式启动&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#h2o -m daemon -c h2o.conf&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Xively与树莓派监控温度与湿度</title>
      <link>https://unixetc.com/post/use-xively-monitor-raspberry-pi/</link>
      <pubDate>Tue, 14 Jul 2015 14:14:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/use-xively-monitor-raspberry-pi/</guid>
      <description>&lt;p&gt;进入&lt;a href=&#34;https://www.xively.com/&#34;&gt;https://www.xively.com/&lt;/a&gt;注册登录&lt;/p&gt;
&lt;h3 id=&#34;添加设备add-device&#34;&gt;添加设备(Add Device)&lt;/h3&gt;
&lt;p&gt;在&lt;strong&gt;Development Devices&lt;/strong&gt;页面点击&lt;strong&gt;Add Device&lt;/strong&gt;添加设备&lt;/p&gt;
&lt;p&gt;填写&lt;strong&gt;Device Name&lt;/strong&gt;和&lt;strong&gt;Device Description&lt;/strong&gt;，将&lt;strong&gt;Privacy&lt;/strong&gt;设定为&lt;strong&gt;Public Device&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;设置api-key&#34;&gt;设置API Key&lt;/h4&gt;
&lt;p&gt;进入Device详情页，在&lt;strong&gt;API Keys&lt;/strong&gt;中点击&lt;strong&gt;Add Key&lt;/strong&gt;添加一个Key,将&lt;strong&gt;Permissions&lt;/strong&gt;中的&lt;strong&gt;Read,Create,Update,Delete&lt;/strong&gt;全部勾选，&lt;strong&gt;Label&lt;/strong&gt;随便填。&lt;/p&gt;
&lt;h3 id=&#34;向xively提交数据&#34;&gt;向Xively提交数据&lt;/h3&gt;
&lt;p&gt;在这里通过&lt;strong&gt;CURL&lt;/strong&gt;向xively提交&lt;strong&gt;JSON&lt;/strong&gt;格式的数据&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;JSON数据格式&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{
  &amp;quot;datastreams&amp;quot;: [
    {
       &amp;quot;id&amp;quot;: &amp;quot;load&amp;quot;,
       &amp;quot;current_value&amp;quot;: &amp;quot;9.00&amp;quot;
    },
    {
      &amp;quot;id&amp;quot;: &amp;quot;temp&amp;quot;,
      &amp;quot;current_value&amp;quot;: &amp;quot;89.15&amp;quot;
    }
  ]
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;其中每个id为数据定义的idcurrent_value为提交的值&lt;/p&gt;
&lt;p&gt;脚本文件&lt;strong&gt;send_xively.sh&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#!/bin/bash
LOCATION=&#39;/home/pi/xively_data&#39;   #Path of Xively JSON DATA file
API_KEY=&#39;orxUhgjqSYPDbv5243534tG65464345eArxSVY9pE8ITnE&#39; #API Key
FEED_ID=&#39;1354438558&#39; #FEED_ID
####################################################

COSM_URL=https://api.xively.com/v2/feeds/${FEED_ID}?timezone=+8
cpu_load=`cat /proc/loadavg | awk &#39;{print $2}&#39;`
sen_t=`sudo /home/pi/st`
sen_h=`sudo /home/pi/sh`

for i in 1 2 3 4 5; do
        cpu_t=`cat /sys/class/thermal/thermal_zone0/temp | awk &#39;{print $1/1000}&#39;`
        if [[ &amp;quot;${cpu_t}&amp;quot; =~ ^- ]]
        then
                cpu_t=&#39;0.0&#39;
        else
                echo ${cpu_t}
                break
        fi
done

STR=`awk &#39;BEGIN{printf &amp;quot;{\&amp;quot;datastreams\&amp;quot;:[ {\&amp;quot;id\&amp;quot;:\&amp;quot;cpu_load\&amp;quot;,\&amp;quot;current_value\&amp;quot;:\&amp;quot;%.2f\&amp;quot;}, {\&amp;quot;id\&amp;quot;:\&amp;quot;cpu_temp\&amp;quot;,\&amp;quot;current_value\&amp;quot;:\&amp;quot;%.2f\&amp;quot;},{\&amp;quot;id\&amp;quot;:\&amp;quot;sensor_t\&amp;quot;,\&amp;quot;current_value\&amp;quot;:\&amp;quot;%.2f\&amp;quot;}, {\&amp;quot;id\&amp;quot;:\&amp;quot;sensor_h\&amp;quot;,\&amp;quot;current_value\&amp;quot;:\&amp;quot;%.2f\&amp;quot;}] } &amp;quot;,&#39;$cpu_load&#39;,&#39;$cpu_t&#39;,&#39;$sen_t&#39;,&#39;$sen_h&#39;}&#39;`

echo ${cpu_t}
echo ${cpu_load}
echo ${sen_t}
echo ${sen_h}
echo ${STR}
echo ${STR} &amp;gt; ${LOCATION}/cosm.json
curl -s -v --request PUT --header &amp;quot;X-ApiKey: ${API_KEY}&amp;quot; --data-binary @${LOCATION}/cosm.json ${COSM_URL}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;其中&lt;strong&gt;LOCATION&lt;/strong&gt;为JSON文件存放目录，没有的话请新建。API_KEY和FEED_ID按照自己的配置填写。&lt;/p&gt;
&lt;p&gt;其中**/home/pi/**下的**st,sh**为通过DHT11采集温度与湿度程序，参考&lt;a href=&#34;https://unixetc.com/post/Raspberry-Pi-by-DHT11-collecting-temperature-and-humidity.html&#34;&gt;树莓派通过DHT11采集温度与湿度&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;接下来添加cronta任务，每隔1分钟运行一次该脚本&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# m h  dom mon dow   command
*/1 * * * * /home/pi/send_xively.sh&amp;gt;/dev/null 2&amp;gt;&amp;amp;1 &amp;amp;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后可以通过&lt;a href=&#34;https://personal.xively.com/feeds/1255758558&#34;&gt;https://personal.xively.com/feeds/1255758558&lt;/a&gt;来查看具体的数据以及图表&lt;/p&gt;
&lt;p&gt;监控页面&lt;a href=&#34;http://zjq.in/raspi_sensor&#34;&gt;http://zjq.in/raspi_sensor&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;参考:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;http://www.dqy.me/2013/use-cosm.html&#34;&gt;http://www.dqy.me/2013/use-cosm.html&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://personal.xively.com/dev/tutorials/pi/&#34;&gt;https://personal.xively.com/dev/tutorials/pi/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Ubuntu下安装Ghost博客系统</title>
      <link>https://unixetc.com/post/ubuntu-install-ghost-blog-system/</link>
      <pubDate>Sat, 06 Jun 2015 16:26:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/ubuntu-install-ghost-blog-system/</guid>
      <description>&lt;h3 id=&#34;安装nodejs&#34;&gt;安装Nodejs&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;sudo add-apt-repository ppa:chris-lea/node.js
sudo apt-get update
sudo apt-get install nodejs
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;检查是否安装成功&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;root@hkvps:~# node -v
v0.10.37
root@hkvps:~# npm -v
1.4.28
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;安装ghost&#34;&gt;安装Ghost&lt;/h3&gt;
&lt;p&gt;Ghost下载地址&lt;a href=&#34;https://ghost.org/download/&#34;&gt;https://ghost.org/download/&lt;/a&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;wget https://ghost.org/zip/ghost-0.6.4.zip
unzip ghost-0.6.4.zip -d ghost
cd ghost
npm install --production
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;运行Ghost&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;npm start
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;可以通过127.0.0.1:2368来访问&lt;/p&gt;
&lt;p&gt;通过&lt;code&gt;nmp start&lt;/code&gt;来运行Ghost，退出后就会停止，因此需要一个方法让Ghost一直运行&lt;/p&gt;
&lt;h3 id=&#34;让ghost一直运行&#34;&gt;让Ghost一直运行&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;安装forever&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;npm install forever -g
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;进入ghost目录，执行以下命令，让Ghost一直运行&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;NODE_ENV=production forever start index.js
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;停止ghost&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;forever stop index.js
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;查看forever运行列表&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;forever list
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;结合nginx配置域名&#34;&gt;结合Nginx配置域名&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;安装Nginx&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo apt-get install nginx
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;编辑配置文件&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo vi /etc/nginx/sites-available/ghost.conf
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;写入如下内容&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;server {
    listen 80;
    server_name aquan.me;

    location / {
        proxy_set_header   X-Real-IP $remote_addr;
        proxy_set_header   Host      $http_host;
        proxy_pass         http://127.0.0.1:2368;
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;重启Nginx&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo ln -s /etc/nginx/sites-available/ghost.conf /etc/nginx/sites-enabled/ghost.conf
sudo service nginx restart
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;参考:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://docs.ghostchina.com/zh/&#34;&gt;http://docs.ghostchina.com/zh/&lt;/a&gt;
&lt;a href=&#34;http://972169909-qq-com.iteye.com/blog/1739928&#34;&gt;http://972169909-qq-com.iteye.com/blog/1739928&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Nginx配置SSL证书</title>
      <link>https://unixetc.com/post/nginx-configuration-ssl-certificate/</link>
      <pubDate>Mon, 25 May 2015 15:25:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/nginx-configuration-ssl-certificate/</guid>
      <description>&lt;h3 id=&#34;申请wosign免费ssl证书&#34;&gt;申请Wosign免费SSL证书&lt;/h3&gt;
&lt;p&gt;申请地址: &lt;a href=&#34;https://www.wosign.com/products/free_ssl.htm&#34;&gt;https://www.wosign.com/products/free_ssl.htm&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;申请成功后，收到类似于&lt;strong&gt;aquan.me_sha256_cn.zip&lt;/strong&gt;的文件,解压后包含如下文件&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;for Apache.zip
for IIS.zip
for Nginx.zip
for Other Server.zip
for Tomcat.zip
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;其中&lt;strong&gt;for Nginx.zip&lt;/strong&gt;中包含如下两个文件，将其上传到VPS自定义位置。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1_aquan.me_bundle.crt&lt;/li&gt;
&lt;li&gt;2_aquan.me.key&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;配置nginx&#34;&gt;配置Nginx&lt;/h3&gt;
&lt;p&gt;不多说了，直接贴代码:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#### Add Wosign SSL Start ####
listen 443;
ssl on;
ssl_certificate /usr/local/nginx/ssl/ssl.crt;
ssl_certificate_key /usr/local/nginx/ssl/ssl.key;
ssl_session_timeout 5m;
ssl_protocols SSLv2 SSLv3 TLSv1;
ssl_ciphers ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP;
ssl_prefer_server_ciphers on;
#### Add Wosign SSL End ####
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;将以上代码插入&lt;code&gt;listen 80;&lt;/code&gt;之后。&lt;/p&gt;
&lt;p&gt;重启Nginx生效&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;/etc/init.d/nginx restart
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;以上设置完成，就可以通过https来浏览网站，同时http也可以浏览。&lt;/p&gt;
&lt;h3 id=&#34;合并wosign根证书&#34;&gt;合并Wosign根证书&lt;/h3&gt;
&lt;p&gt;有的浏览器会提示不信任证书，可以通过合并Wosign根证书来解决&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;wget https://www.wosign.com/Root/Bundle_DV_St.crt  
cat Bundle_DV_St.crt &amp;gt;&amp;gt; /usr/local/nginx/ssl/ssl.crt
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;设置http跳转https&#34;&gt;设置http跳转https&lt;/h3&gt;
&lt;p&gt;如果想将http跳转至https，可以进行如下设置:&lt;/p&gt;
&lt;p&gt;将原&lt;code&gt;server&lt;/code&gt;字段中的&lt;code&gt;listen 80;&lt;/code&gt;注释掉，新添加&lt;code&gt;server&lt;/code&gt;专门监听80端口进行跳转&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;server { 
listen 80; 
server_name ciux.org www.ciux.org; 
rewrite ^/(.*) https://$server_name/$1 permanent; 
}&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Linux下安装最新版golang</title>
      <link>https://unixetc.com/post/install-the-last-version-golang-for-linux/</link>
      <pubDate>Mon, 11 May 2015 15:11:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/install-the-last-version-golang-for-linux/</guid>
      <description>&lt;p&gt;ubuntu中可以使用&lt;code&gt;apt-get install golang&lt;/code&gt;来安装go，但是版本稍旧&lt;/p&gt;
&lt;p&gt;如果需要安装最新版的golang，那就得自己动手咧&lt;/p&gt;
&lt;h3 id=&#34;安装golang&#34;&gt;安装golang&lt;/h3&gt;
&lt;p&gt;从官网下载最新版，手动安装&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;apt-get install build-essential
wget https://storage.googleapis.com/golang/go1.4.2.linux-386.tar.gz
tar zxf go1.4.2.linux-386.tar.gz
cd go/src
./all.bash
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;设置path&#34;&gt;设置PATH&lt;/h3&gt;
&lt;p&gt;安装完成后需要设置PATH才能随地使用&lt;code&gt;go&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;export PATH=&amp;quot;/root/go/bin:$PATH&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;检查版本&#34;&gt;检查版本&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;go version
go version go1.4.2 linux/386&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>使用speedtest-cli测试带宽</title>
      <link>https://unixetc.com/post/use-speedtest-cli-tests-network-bandwidth/</link>
      <pubDate>Thu, 26 Mar 2015 13:26:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/use-speedtest-cli-tests-network-bandwidth/</guid>
      <description>&lt;h3 id=&#34;安装speedtest-cli&#34;&gt;安装speedtest-cli&lt;/h3&gt;
&lt;p&gt;安装speedtest-cli方法如下:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo apt-get install python-pip
sudo pip install speedtest-cli
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;或&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pip install git+https://github.com/sivel/speedtest-cli.git
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;或&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git clone https://github.com/sivel/speedtest-cli.git
python speedtest-cli/setup.py install
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;或&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;wget -O speedtest-cli https://raw.githubusercontent.com/sivel/speedtest-cli/master/speedtest_cli.py
chmod +x speedtest-cli
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;或&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;curl -Lo speedtest-cli https://raw.githubusercontent.com/sivel/speedtest-cli/master/speedtest_cli.py
chmod +x speedtest-cli
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;使用speedtest-cli&#34;&gt;使用speedtest-cli&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;root@MyUbuntuCloud:~# speedtest-cli -h
usage: speedtest-cli [-h] [--bytes] [--share] [--simple] [--list]
                 [--server SERVER] [--mini MINI] [--source SOURCE]
                 [--timeout TIMEOUT] [--version]

Command line interface for testing internet bandwidth using speedtest.net.
--------------------------------------------------------------------------
https://github.com/sivel/speedtest-cli

optional arguments:
  -h, --help         show this help message and exit
  --bytes            Display values in bytes instead of bits. Does not affect
                     the image generated by --share
  --share            Generate and provide a URL to the speedtest.net share
                     results image
  --simple           Suppress verbose output, only show basic information
  --list             Display a list of speedtest.net servers sorted by
                     distance
  --server SERVER    Specify a server ID to test against
  --mini MINI        URL of the Speedtest Mini server
  --source SOURCE    Source IP address to bind to
  --timeout TIMEOUT  HTTP timeout in seconds. Default 10
  --version          Show the version number and exit
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;以下为两则实例：&lt;/p&gt;
&lt;p&gt;HKVPS:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;root@MyUbuntuCloud:~# speedtest-cli --share
Retrieving speedtest.net configuration...
Retrieving speedtest.net server list...
Testing from Shanghai Anchnet Network Technology (118.193.151.193)...
Selecting best server based on latency...
Hosted by ChinaTelecom (Guangzhou) [2.51 km]: 6.646 ms
Testing download speed........................................
Download: 19.66 Mbit/s
Testing upload speed..................................................
Upload: 0.81 Mbit/s
Share results: https://www.speedtest.net/result/4242720179.png
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/str4242720179.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Raspberry Pi:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pi@araspi ~ $ ./speedtest-cli --share
Retrieving speedtest.net configuration...
Retrieving speedtest.net server list...
Testing from China Unicom Shannxi (123.138.35.2)...
Selecting best server based on latency...
Hosted by Xi&#39;an branch,Chinaunicom (Xian) [2.79 km]: 14.556 ms
Testing download speed........................................
Download: 38.05 Mbit/s
Testing upload speed..................................................
Upload: 7.34 Mbit/s
Share results: https://www.speedtest.net/result/4242749590.png
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/str4242749590.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>fdisk分区实例</title>
      <link>https://unixetc.com/post/examples-of-fdisk-partition/</link>
      <pubDate>Thu, 19 Mar 2015 12:31:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/examples-of-fdisk-partition/</guid>
      <description>&lt;h3 id=&#34;查看磁盘分区详情&#34;&gt;查看磁盘分区详情&lt;/h3&gt;
&lt;p&gt;直接使用fdisk -l 或者使用fdisk /dev/sda，再使用p命令来查看&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Command (m for help): p

Disk /dev/sda: 32.2 GB, 32212254720 bytes
255 heads, 63 sectors/track, 3916 cylinders, total 62914560 sectors
Units = sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
Disk identifier: 0x000657c3

   Device Boot      Start         End      Blocks   Id  System
/dev/sda1   *        2048    61868031    30932992   83  Linux
/dev/sda2        61870078    62912511      521217    5  Extended
/dev/sda5        61870080    62912511      521216   82  Linux swap / Solaris
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;fdisk命令&#34;&gt;fdisk命令&lt;/h3&gt;
&lt;p&gt;fdisk有以下命令可用，其中常用的已简单说明&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Command (m for help): m
Command action
   a   toggle a bootable flag   //切换可引导标记
   b   edit bsd disklabel
   c   toggle the dos compatibility flag
   d   delete a partition   //删除分区
   l   list known partition types   //查看所有分区类型
   m   print this menu   //返回此菜单
   n   add a new partition   //新建分区
   o   create a new empty DOS partition table
   p   print the partition table   //查看当前分区表
   q   quit without saving changes   //取消更改并退出
   s   create a new empty Sun disklabel
   t   change a partition&#39;s system id   //修改分区系统id
   u   change display/entry units
   v   verify the partition table   //验证分区表
   w   write table to disk and exit   //保存更改并退出
   x   extra functionality (experts only)
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;操作范例&#34;&gt; 操作范例&lt;/h3&gt;
&lt;p&gt;1,删除分区&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Command (m for help): p   //显示分区表

Disk /dev/sda: 32.2 GB, 32212254720 bytes
255 heads, 63 sectors/track, 3916 cylinders, total 62914560 sectors
Units = sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
Disk identifier: 0x000657c3

   Device Boot      Start         End      Blocks   Id  System
/dev/sda1   *        2048    61868031    30932992   83  Linux
/dev/sda2        61870078    62912511      521217    5  Extended
/dev/sda5        61870080    62912511      521216   82  Linux swap / Solaris

Command (m for help): d   //删除分区
Partition number (1-5): 5   //分区号
Command (m for help): d 
Partition number (1-5): 2

Command (m for help): p

Disk /dev/sda: 32.2 GB, 32212254720 bytes
255 heads, 63 sectors/track, 3916 cylinders, total 62914560 sectors
Units = sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
Disk identifier: 0x000657c3

   Device Boot      Start         End      Blocks   Id  System
/dev/sda1   *        2048    61868031    30932992   83  Linux

Command (m for help):
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;2,新建分区&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Command (m for help): n   //新建分区
Partition type:  //分区类型
   p   primary (1 primary, 0 extended, 3 free)  //主分区
   e   extended   //扩展分区
Select (default p):  //默认主分区
Using default response p
Partition number (1-4, default 2):  //分区号，默认升序分配
Using default value 2
First sector (61868032-62914559, default 61868032):   //首sector，默认接着上一分区
Using default value 61868032
Last sector, +sectors or +size{K,M,G} (61868032-62914559, default 62914559): +300M  //容量大小，可用单位K,M,G
Command (m for help): n
Partition type:
   p   primary (2 primary, 0 extended, 2 free)
   e   extended
Select (default p):
Using default response p
Partition number (1-4, default 3):
Using default value 3
First sector (62482432-62914559, default 62482432):
Using default value 62482432
Last sector, +sectors or +size{K,M,G} (62482432-62914559, default 62914559): //默认使用全部剩余容量
Using default value 62914559

Command (m for help): p

Disk /dev/sda: 32.2 GB, 32212254720 bytes
255 heads, 63 sectors/track, 3916 cylinders, total 62914560 sectors
Units = sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
Disk identifier: 0x000657c3

   Device Boot      Start         End      Blocks   Id  System
/dev/sda1   *        2048    61868031    30932992   83  Linux
/dev/sda2        61868032    62482431      307200   83  Linux
/dev/sda3        62482432    62914559      216064   83  Linux

Command (m for help):
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;3,切换可引导标记&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Command (m for help): a  //切换可引导标记
Partition number (1-4): 2   //分区号

Command (m for help): p

Disk /dev/sda: 32.2 GB, 32212254720 bytes
255 heads, 63 sectors/track, 3916 cylinders, total 62914560 sectors
Units = sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
Disk identifier: 0x000657c3

   Device Boot      Start         End      Blocks   Id  System
/dev/sda1   *        2048    61868031    30932992   83  Linux
/dev/sda2   *    61868032    62482431      307200   83  Linux   //已增加可引导标记
/dev/sda3        62482432    62914559      216064   83  Linux

Command (m for help): a
Partition number (1-4): 2

Command (m for help): p

Disk /dev/sda: 32.2 GB, 32212254720 bytes
255 heads, 63 sectors/track, 3916 cylinders, total 62914560 sectors
Units = sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
Disk identifier: 0x000657c3

   Device Boot      Start         End      Blocks   Id  System
/dev/sda1   *        2048    61868031    30932992   83  Linux
/dev/sda2        61868032    62482431      307200   83  Linux   //取消可引导标记
/dev/sda3        62482432    62914559      216064   83  Linux

Command (m for help):
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;4,更改分区类型&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Command (m for help): l   //查看所有分区类型

 0  Empty           24  NEC DOS         81  Minix / old Lin bf  Solaris
 1  FAT12           27  Hidden NTFS Win 82  Linux swap / So c1  DRDOS/sec (FAT-
 2  XENIX root      39  Plan 9          83  Linux           c4  DRDOS/sec (FAT-
 3  XENIX usr       3c  PartitionMagic  84  OS/2 hidden C:  c6  DRDOS/sec (FAT-
 4  FAT16 &amp;lt;32M      40  Venix 80286     85  Linux extended  c7  Syrinx
 5  Extended        41  PPC PReP Boot   86  NTFS volume set da  Non-FS data
 6  FAT16           42  SFS             87  NTFS volume set db  CP/M / CTOS / .
 7  HPFS/NTFS/exFAT 4d  QNX4.x          88  Linux plaintext de  Dell Utility
 8  AIX             4e  QNX4.x 2nd part 8e  Linux LVM       df  BootIt
 9  AIX bootable    4f  QNX4.x 3rd part 93  Amoeba          e1  DOS access
 a  OS/2 Boot Manag 50  OnTrack DM      94  Amoeba BBT      e3  DOS R/O
 b  W95 FAT32       51  OnTrack DM6 Aux 9f  BSD/OS          e4  SpeedStor
 c  W95 FAT32 (LBA) 52  CP/M            a0  IBM Thinkpad hi eb  BeOS fs
 e  W95 FAT16 (LBA) 53  OnTrack DM6 Aux a5  FreeBSD         ee  GPT
 f  W95 Ext&#39;d (LBA) 54  OnTrackDM6      a6  OpenBSD         ef  EFI (FAT-12/16/
10  OPUS            55  EZ-Drive        a7  NeXTSTEP        f0  Linux/PA-RISC b
11  Hidden FAT12    56  Golden Bow      a8  Darwin UFS      f1  SpeedStor
12  Compaq diagnost 5c  Priam Edisk     a9  NetBSD          f4  SpeedStor
14  Hidden FAT16 &amp;lt;3 61  SpeedStor       ab  Darwin boot     f2  DOS secondary
16  Hidden FAT16    63  GNU HURD or Sys af  HFS / HFS+      fb  VMware VMFS
17  Hidden HPFS/NTF 64  Novell Netware  b7  BSDI fs         fc  VMware VMKCORE
18  AST SmartSleep  65  Novell Netware  b8  BSDI swap       fd  Linux raid auto
1b  Hidden W95 FAT3 70  DiskSecure Mult bb  Boot Wizard hid fe  LANstep
1c  Hidden W95 FAT3 75  PC/IX           be  Solaris boot    ff  BBT
1e  Hidden W95 FAT1 80  Old Minix

Command (m for help): t  //更改分区类型
Partition number (1-4): 2  //分区号
Hex code (type L to list codes): 82 //82号:交换分区
Changed system type of partition 2 to 82 (Linux swap / Solaris)

Command (m for help): p

Disk /dev/sda: 32.2 GB, 32212254720 bytes
255 heads, 63 sectors/track, 3916 cylinders, total 62914560 sectors
Units = sectors of 1 * 512 = 512 bytes
Sector size (logical/physical): 512 bytes / 512 bytes
I/O size (minimum/optimal): 512 bytes / 512 bytes
Disk identifier: 0x000657c3

   Device Boot      Start         End      Blocks   Id  System
/dev/sda1   *        2048    61868031    30932992   83  Linux
/dev/sda2        61868032    62482431      307200   82  Linux swap / Solaris   //已更改为交换分区
/dev/sda3        62482432    62914559      216064   83  Linux

Command (m for help):&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>使用youtube-dl下载YouTube视频</title>
      <link>https://unixetc.com/post/use-youtube-dl-to-download-youtube-video/</link>
      <pubDate>Thu, 08 Jan 2015 11:28:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/use-youtube-dl-to-download-youtube-video/</guid>
      <description>&lt;h3 id=&#34;什么是youtube-dl&#34;&gt;什么是youtube-dl&lt;/h3&gt;
&lt;p&gt;youtube-dl是一个简单的下载youtube视频脚本工具，基于Python。&lt;/p&gt;
&lt;h3 id=&#34;安装youtube-dl&#34;&gt;安装youtube-dl&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;官方安装方法&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo curl https://yt-dl.org/latest/youtube-dl -o /usr/local/bin/youtube-dl
sudo chmod a+x /usr/local/bin/youtube-dl
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;或者&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo wget https://yt-dl.org/downloads/latest/youtube-dl -O /usr/local/bin/youtube-dl
sudo chmod a+x /usr/local/bin/youtube-dl
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;还有两种方法:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo pip install youtube-dl
brew install youtube-dl
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;使用youtube-dl&#34;&gt;使用youtube-dl&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;youtube-dl [OPTIONS] URL [URL...]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;youtube-dl官网&lt;/strong&gt; &lt;a href=&#34;https://github.com/rg3/youtube-dl/&#34;&gt;https://github.com/rg3/youtube-dl/&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Linux VPS中安装Shadowsocks</title>
      <link>https://unixetc.com/post/linux-vps-install-shadowsocks/</link>
      <pubDate>Sat, 13 Dec 2014 23:12:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/linux-vps-install-shadowsocks/</guid>
      <description>&lt;p&gt;&lt;strong&gt;VPS系统版本:&lt;/strong&gt; Ubuntu 12.04 32bit&lt;/p&gt;
&lt;h3 id=&#34;最简单的办法&#34;&gt;最简单的办法&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;#apt-get install python-pip
#pip install shadowsocks
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;启动Shadowsock&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#ssserver -p 4000 -k sss4k -d start
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;-p&lt;/code&gt;后定义端口号，&lt;code&gt;-k&lt;/code&gt;后面设定密码，&lt;code&gt;-d start&lt;/code&gt;代表以&lt;strong&gt;daemon&lt;/strong&gt;方式启动&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;下面是另外一种方法:&lt;/p&gt;
&lt;h3 id=&#34;安装shadowsocks-libev&#34;&gt;安装shadowsocks-libev&lt;/h3&gt;
&lt;p&gt;先用&lt;code&gt;aptitude show&lt;/code&gt;查看libssl-dev版本&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;aptitude show libssl-dev
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后根据版本执行以下修改：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;libssl &amp;gt; 1.0.1&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在&lt;code&gt;/etc/apt/sources.list&lt;/code&gt;添加下行：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;deb http://shadowsocks.org/debian wheezy main
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;libssl &amp;gt; 0.9.8 但 &amp;lt; 1.0.0&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在&lt;code&gt;/etc/apt/sources.list&lt;/code&gt;添加下行：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;deb http://shadowsocks.org/debian squeeze main
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;添加GPG&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;wget http://shadowsocks.org/debian/1D27208A.gpg
sudo apt-key add 1D27208A.gpg
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;添加完成后更新软件源，然后安装shadowsocks&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo apt-get update
sudo apt-get install python-m2crypto
sudo apt-get install shadowsocks-libev
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;配置管理shadowsocks服务&#34;&gt;配置/管理shadowsocks服务&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;配置&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo vim /etc/shadowsocks-libev/config.json
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;以下为一则配置实例：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;root@hkvps:~# cat /etc/shadowsocks-libev/config.json 
{
    &amp;quot;server&amp;quot;:&amp;quot;118.193.151.193&amp;quot;,
    &amp;quot;server_port&amp;quot;:&amp;quot;8388&amp;quot;,
    &amp;quot;local_port&amp;quot;:&amp;quot;1080&amp;quot;,
    &amp;quot;password&amp;quot;:&amp;quot;foolish&amp;quot;,
    &amp;quot;timeout&amp;quot;:&amp;quot;60&amp;quot;,
    &amp;quot;method&amp;quot;:&amp;quot;aes-256-cfb&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;管理shadowsocks服务&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo /etc/init.d/shadowsocks-libev start  //开启服务
sudo /etc/init.d/shadowsocks-libev stop   //关闭服务&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>CentOS中Crontab安装和使用</title>
      <link>https://unixetc.com/post/install-crontab-on-centos-and-usage/</link>
      <pubDate>Mon, 22 Sep 2014 19:22:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/install-crontab-on-centos-and-usage/</guid>
      <description>&lt;h4 id=&#34;安装crontab&#34;&gt;安装crontab:&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;[root@CentOS ~]# yum install vixie-cron
[root@CentOS ~]# yum install crontabs
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;说明：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;vixie-cron软件包是cron的主程序；&lt;/li&gt;
&lt;li&gt;crontabs软件包是用来安装、卸装、或列举用来驱动 cron 守护进程的表格的程序。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;cron 是linux的内置服务，但它不自动起来，可以用以下的方法启动、关闭这个服务：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;/sbin/service crond start //启动服务
/sbin/service crond stop //关闭服务
/sbin/service crond restart //重启服务
/sbin/service crond reload //重新载入配置
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;查看crontab服务状态：&lt;code&gt;service crond status&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;手动启动crontab服务：&lt;code&gt;service crond start&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;查看crontab服务是否已设置为开机启动，执行命令：&lt;code&gt;ntsysv&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;加入开机自动启动:&lt;code&gt;chkconfig --level 35 crond on&lt;/code&gt;&lt;/p&gt;
&lt;h4 id=&#34;rontab命令&#34;&gt;rontab命令&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;功能说明：&lt;/strong&gt;
设置计时器。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;语法：&lt;/strong&gt;
crontab [-u &amp;lt;用户名称&amp;gt;][配置文件] 或 crontab [-u &amp;lt;用户名称&amp;gt;][-elr]&lt;/p&gt;
&lt;h4 id=&#34;补充说明&#34;&gt;补充说明：&lt;/h4&gt;
&lt;p&gt;cron是一个常驻服务，它提供计时器的功能，让用户在特定的时间得以执行预设的指令或程序。只要用户会编辑计时器的配置文件，就可以使用计时器的功能。其配置文件格式如下：
Minute Hour Day Month DayOFWeek Command&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;参数:&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;-e 　编辑该用户的计时器设置。
-l 　列出该用户的计时器设置。
-r 　删除该用户的计时器设置。
-u&amp;lt;用户名称&amp;gt; 　指定要设定计时器的用户名称。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;crontab-格式&#34;&gt;crontab 格式&lt;/h4&gt;
&lt;p&gt;基本格式 :&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;* *　 *　 *　 *　　command
分　时　日　月　周　 命令
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;第1列表示分钟1～59 每分钟用*或者 */1表示&lt;/li&gt;
&lt;li&gt;第2列表示小时1～23（0表示0点）&lt;/li&gt;
&lt;li&gt;第3列表示日期1～31&lt;/li&gt;
&lt;li&gt;第4列表示月份1～12&lt;/li&gt;
&lt;li&gt;第5列标识号星期0～6（0表示星期天）&lt;/li&gt;
&lt;li&gt;第6列要运行的命令&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;crontab文件的一些例子：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;30 21 * * * /usr/local/etc/rc.d/lighttpd restart
上面的例子表示每晚的21:30重启apache。

45 4 1,10,22 * * /usr/local/etc/rc.d/lighttpd restart
上面的例子表示每月1、10、22日的4 : 45重启apache。

10 1 * * 6,0 /usr/local/etc/rc.d/lighttpd restart
上面的例子表示每周六、周日的1 : 10重启apache。

0,30 18-23 * * * /usr/local/etc/rc.d/lighttpd restart
上面的例子表示在每天18 : 00至23 : 00之间每隔30分钟重启apache。

0 23 * * 6 /usr/local/etc/rc.d/lighttpd restart
上面的例子表示每星期六的11 : 00 pm重启apache。

* */1 * * * /usr/local/etc/rc.d/lighttpd restart
每一小时重启apache

* 23-7/1 * * * /usr/local/etc/rc.d/lighttpd restart
晚上11点到早上7点之间，每隔一小时重启apache

0 11 4 * mon-wed /usr/local/etc/rc.d/lighttpd restart
每月的4号与每周一到周三的11点重启apache

0 4 1 jan * /usr/local/etc/rc.d/lighttpd restart
一月一号的4点重启apache

*/30 * * * * /usr/sbin/ntpdate 210.72.145.44
每半小时同步一下时间
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;crontab命令主要参数&#34;&gt;crontab命令主要参数&lt;/h4&gt;
&lt;p&gt;　　-e ：编辑用户的crontab。&lt;/p&gt;
&lt;p&gt;　　-l　：列出用户的crontab的内容。&lt;/p&gt;
&lt;p&gt;　　-r　：删除用户的crontab的内容。&lt;/p&gt;
&lt;p&gt;　　执行crontab -e，将自动打开编辑器，你可以编辑自己的crontab文件，语法和 /etc/crontab 文件一样，不同的只是，不必再指出执行的用户，编辑后保存即可。&lt;/p&gt;
&lt;p&gt;　　crontab -l用来查看自己的crontab文件内能，crontab -r删除自己的crontab。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Linux下CLI模式使用Dropbox</title>
      <link>https://unixetc.com/post/cli-model-of-linux-using-dropbox/</link>
      <pubDate>Tue, 19 Aug 2014 08:19:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/cli-model-of-linux-using-dropbox/</guid>
      <description>&lt;h3 id=&#34;下载dropbox&#34;&gt;下载Dropbox&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;32-bit:&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd ~ &amp;amp;&amp;amp; wget -O - &amp;quot;https://www.dropbox.com/download?plat=lnx.x86&amp;quot; | tar xzf -
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;64-bit:&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd ~ &amp;amp;&amp;amp; wget -O - &amp;quot;https://www.dropbox.com/download?plat=lnx.x86_64&amp;quot; | tar xzf -
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;连接到dropbox&#34;&gt;连接到Dropbox&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;~/.dropbox-dist/dropboxd
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;按照提示，在浏览器中打开链接，确认授权。&lt;/p&gt;
&lt;h3 id=&#34;cli模式使用dropbox&#34;&gt;CLI模式使用Dropbox&lt;/h3&gt;
&lt;p&gt;下载执行脚本:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;wget https://www.dropbox.com/download?dl=packages/dropbox.py
chmod +x dropbox.py
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;dropbox.py使用&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;root@hkvps:~# ./dropbox.py help
Dropbox command-line interface
commands:
Note: use dropbox help &amp;lt;command&amp;gt; to view usage for a specific command.

 status       get current status of the dropboxd
 help         provide help
 puburl       get public url of a file in your dropbox
 stop         stop dropboxd
 running      return whether dropbox is running
 start        start dropboxd
 filestatus   get current sync status of one or more files
 ls           list directory contents with current sync status
 autostart    automatically start dropbox at login
 exclude      ignores/excludes a directory from syncing
 lansync      enables or disables LAN sync&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>树莓派中使用TL-WN725N</title>
      <link>https://unixetc.com/post/use-tl-wn725n-in-raspberry-pi/</link>
      <pubDate>Tue, 12 Aug 2014 18:12:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/use-tl-wn725n-in-raspberry-pi/</guid>
      <description>&lt;p&gt;Raspbian版本 &lt;strong&gt;2014-01-07-wheezy-raspbian.img&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;下载地址为&lt;a href=&#34;http://cdn.lyq.wiki/res/8188eu-20140616.tar.gz&#34;&gt;http://cdn.lyq.wiki/res/8188eu-20140616.tar.gz&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;首先固网链接树莓派，通过SSH登录&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;wget http://cdn.lyq.wiki/res/8188eu_31024_614.zip
unzip 8188eu_31024_614.zip
sudo mv 8188eu.ko /lib/modules/`uname -r`/kernel/drivers/net/wireless
sudo chown root:root /lib/modules/`uname -r`/kernel/drivers/net/wireless/8188eu.ko
sudo mv rtl8188eufw.bin /lib/firmware/rtlwifi/
sudo chown root:root /lib/firmware/rtlwifi/rtl8188eufw.bin
sudo depmod -a
sudo modprobe 8188eu
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后编辑&lt;code&gt;/etc/netwok/interfaces&lt;/code&gt;，添加以下内容&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;allow-hotplug wlan0
auto wlan0

iface wlan0 inet manual
wpa-roam /etc/mywpa.conf
iface default inet dhcp
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;新建&lt;code&gt;mywpa.conf&lt;/code&gt;写入链接配置&lt;code&gt;vi /etc/mywpa.conf&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;network={
ssid=&amp;quot;YOUR SSID&amp;quot;
proto=RSN
key_mgmt=WPA-PSK
pairwise=CCMP TKIP
group=CCMP TKIP
psk=&amp;quot;YOUR PASSWORD&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;重启系统&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>CentOS7安装指南</title>
      <link>https://unixetc.com/post/centos7-installation-guide/</link>
      <pubDate>Sat, 09 Aug 2014 08:09:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/centos7-installation-guide/</guid>
      <description>&lt;p&gt;下载Centos7安装镜像: &lt;a href=&#34;http://mirrors.aliyun.com/centos/7.0.1406/isos/x86_64/CentOS-7.0-1406-x86_64-GnomeLive.iso&#34;&gt;http://mirrors.aliyun.com/centos/7.0.1406/isos/x86_64/CentOS-7.0-1406-x86_64-GnomeLive.iso&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;将下载后的镜像写入U盘:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#dd if=CentOS-7.0-1406-x86_64-GnomeLive.iso of=/dev/sdb bs=4M &amp;amp;&amp;amp; sync
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;关闭电脑，从U盘启动。&lt;/p&gt;
&lt;p&gt;进入桌面后，点击&lt;strong&gt;Install to Hard Drive&lt;/strong&gt;开始安装。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/co7i15.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;选择语言&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这里选择&lt;strong&gt;简体中文(中国)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/co7i01.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;安装信息摘要&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;这里需要设置四部分内容：&lt;strong&gt;日期和时间&lt;/strong&gt;、&lt;strong&gt;键盘&lt;/strong&gt;、&lt;strong&gt;安装位置&lt;/strong&gt;、&lt;strong&gt;网络和主机名&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/co7i02.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;设置&lt;strong&gt;安装目标和位置&lt;/strong&gt;,选择本地磁盘，然后勾选&lt;strong&gt;我要配置分区&lt;/strong&gt;以自定义分区信息。&lt;/p&gt;
&lt;p&gt;点击&lt;strong&gt;完成&lt;/strong&gt;进入&lt;strong&gt;手动分区&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/co7i03.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;在左侧选择具体磁盘分区，右边编辑挂载信息，然后点击&lt;strong&gt;更新设置&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/co7i04.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;以下为编辑/home挂载点信息：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/co7i05.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;下图为编辑后的分区信息，点击左上角&lt;strong&gt;完成&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/co7i06.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;查看&lt;strong&gt;更改摘要&lt;/strong&gt;，确认没问题了就点击&lt;strong&gt;接受更改&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/co7i07.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;设置&lt;strong&gt;网络和主机名&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/co7i08.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;完成设置后，点击右下角&lt;strong&gt;开始安装&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/co7i09.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;用户设置&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/co7i10.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;设置&lt;strong&gt;ROOT密码&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/co7i11.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;创建用户&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/co7i12.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;所有配置完成后，等待安装结束。。。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/co7i13.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;提示安装完成，点击右下角&lt;strong&gt;Quit&lt;/strong&gt;退出。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/co7i14.webp&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>创建固定大小的文件</title>
      <link>https://unixetc.com/post/create-a-fixed-size-file/</link>
      <pubDate>Thu, 10 Jul 2014 07:10:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/create-a-fixed-size-file/</guid>
      <description>&lt;p&gt;有时我们需要新建指定大小的文件，很多人可能使用压缩软件的分割功能，分割出指定大小的文件。&lt;/p&gt;
&lt;p&gt;其实操作系统本身自带的命令就可以胜任以上任务。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Windows&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;新建名为1G-File，大小1G的文件&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;fsutil file createnew 1G-File 1073741824
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Linux&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;新建名为2G-File，大小为2G的文件&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;dd if=/dev/zero  of=./2G-File bs=1M count=2048&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>树莓派配置VNC</title>
      <link>https://unixetc.com/post/raspberry-pi-configuration-vnc/</link>
      <pubDate>Tue, 11 Mar 2014 00:23:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/raspberry-pi-configuration-vnc/</guid>
      <description>&lt;p&gt;&lt;strong&gt;安装VNC Server&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$sudo apt-get install tightvncserver
$sudo apt-get install ttf-wqy-microhei //安装中文字体
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;使用VNC Server&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$vncserver -geometry 1024x768 //分辨率，推荐960x640，或者640x480
$vncserver -kill :1  //结束vncserver进程
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Real VNC Viewer&lt;/strong&gt;链接方法： 192.168.1.2:1&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;http://cdn.lyq.wiki/imgs/raspi_vnc_viewer.webp&#34; alt=&#34;VNC&#34; title=&#34;VNC&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>树莓派与DNSPod动态域名解析</title>
      <link>https://unixetc.com/post/raspberry-pi-and-dnspod-dynamic-dns/</link>
      <pubDate>Mon, 03 Mar 2014 03:03:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/raspberry-pi-and-dnspod-dynamic-dns/</guid>
      <description>&lt;p&gt;&lt;strong&gt;所需条件&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Raspberry Pi&lt;/li&gt;
&lt;li&gt;TP-Link路由器&lt;/li&gt;
&lt;li&gt;DNSPod帐户&lt;/li&gt;
&lt;li&gt;域名&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;配置路由器&#34;&gt;配置路由器&lt;/h3&gt;
&lt;p&gt;进入路由器的&lt;strong&gt;DHCP服务器&lt;/strong&gt;-&amp;gt;&lt;strong&gt;静态地址分配&lt;/strong&gt;菜单，为Raspberry Pi分配静态IP地址，例如：&lt;code&gt;192.168.1.200&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;进入路由器的&lt;strong&gt;安全功能&lt;/strong&gt;-&amp;gt;&lt;strong&gt;远端WEB管理&lt;/strong&gt;菜单，设置&lt;code&gt;WEB管理端口&lt;/code&gt;为一个&lt;strong&gt;非80&lt;/strong&gt;值，例如82&lt;/p&gt;
&lt;p&gt;进入路由器的&lt;strong&gt;转发规则&lt;/strong&gt;-&amp;gt;&lt;strong&gt;DMZ主机&lt;/strong&gt;菜单，将&lt;code&gt;DMZ主机IP地址&lt;/code&gt;设置为Raspberry Pi的ip地址，然后启用保存。&lt;/p&gt;
&lt;h3 id=&#34;设置dnspod动态域名解析&#34;&gt;设置DNSPod动态域名解析&lt;/h3&gt;
&lt;p&gt;首先登录DNSPod网页管理域名，将二级域名&lt;code&gt;www&lt;/code&gt; 的&lt;code&gt;A记录&lt;/code&gt;解析到路由器外网IP(可通过路由器管理首页查询，或者通过浏览ip138.com来获得)&lt;/p&gt;
&lt;p&gt;注：一级域名请解析**@**的A记录。&lt;/p&gt;
&lt;p&gt;下载&lt;strong&gt;DNSPod官方客户端Lite&lt;/strong&gt; &lt;a href=&#34;https://support.dnspod.cn/Support/api&#34;&gt;https://support.dnspod.cn/Support/api&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;解压后双击打开登录，从右侧信息列表中也可以看到本机最新IP，点击相应域名后的&lt;strong&gt;动态解析&lt;/strong&gt;按钮，在动态解析设置中右键点击相应的动态记录启用即可，关闭&lt;strong&gt;DNSPod官方客户端Lite&lt;/strong&gt;。&lt;/p&gt;
&lt;h3 id=&#34;设置raspberry-pi&#34;&gt;设置Raspberry Pi&lt;/h3&gt;
&lt;p&gt;安装Web服务器软件(Nginx)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#apt-get install nginx
#/etc/init.d/nginx start
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;内网可以通过浏览`http://192.168.1.129&amp;quot;来检查Nginx是否正常运行。&lt;/p&gt;
&lt;p&gt;浏览&lt;a href=&#34;https://gist.githubusercontent.com/chuangbo/833369&#34;&gt;https://gist.githubusercontent.com/chuangbo/833369&lt;/a&gt;，下载动态域名解析脚本(pypod.py)&lt;/p&gt;
&lt;p&gt;编辑&lt;code&gt;pypod.py&lt;/code&gt;修改以下内容：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;login_email=&amp;quot;email&amp;quot;, # DSNPod帐户邮箱
login_password=&amp;quot;password&amp;quot;, # DSNPod帐户密码
domain_id=100, # 域名id
record_id=100, # 记录id
sub_domain=&amp;quot;www&amp;quot;, # 子域名
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;其中&lt;strong&gt;域名id&lt;/strong&gt;与&lt;strong&gt;记录id&lt;/strong&gt;可以通过以下命令获取：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;curl -k https://dnsapi.cn/Domain.List -d &amp;quot;login_email=xxx&amp;amp;login_password=xxx&amp;quot;
curl -k https://dnsapi.cn/Record.List -d &amp;quot;login_email=xxx&amp;amp;login_password=xxx&amp;amp;domain_id=xxx&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;提示：如果你使用了&lt;strong&gt;www&lt;/strong&gt;子域名，则需要获取&lt;strong&gt;www&lt;/strong&gt;的记录id，如果使用一级域名(@)，则需要获取**@**的记录id。&lt;/p&gt;
&lt;p&gt;编辑完&lt;code&gt;pypod.py&lt;/code&gt;保存退出，使用以下命令运行：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#python pypod.py
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;现在可以通过域名来浏览Raspberry Pi上的Web内容了。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;pypod.py开机运行&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;添加&lt;code&gt;/usr/bin/python /home/pi/pypod.py&lt;/code&gt;到**/etc/rc.local**。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>开始使用树莓派</title>
      <link>https://unixetc.com/post/starting-use-raspberry-pi/</link>
      <pubDate>Fri, 28 Feb 2014 12:28:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/starting-use-raspberry-pi/</guid>
      <description>&lt;h3 id=&#34;安装系统&#34;&gt;安装系统&lt;/h3&gt;
&lt;p&gt;从官网下载系统镜像，推荐Raspbian&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://downloads.raspberrypi.org/raspbian_latest&#34;&gt;http://downloads.raspberrypi.org/raspbian_latest&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;将下载后的zip文件解压，得到&lt;strong&gt;2014-01-07-wheezy-raspbian.img&lt;/strong&gt;文件。&lt;/p&gt;
&lt;p&gt;准备一张SD卡，最好容量大于4GB，Class10&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;将镜像写入SD卡&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux下推荐使用&lt;code&gt;dd&lt;/code&gt;名来写入镜像&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;使用&lt;code&gt;fdisk -l&lt;/code&gt;检查分区信息，比如sd卡设备为**/dev/sdb**，使用以下命令写入：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#dd if=2014-01-07-wheezy-raspbian.img of=/dev/sdb bs=1M
&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Windows下推荐使用&lt;strong&gt;Win32DiskImager&lt;/strong&gt;写入镜像&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Win32DiskImager下载地址：&lt;a href=&#34;http://sourceforge.net/projects/win32diskimager/&#34;&gt;http://sourceforge.net/projects/win32diskimager/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;下载后打开软件，选择好镜像文件与USB设备，然后点击&lt;strong&gt;Write&lt;/strong&gt;写入。&lt;/p&gt;
&lt;h3 id=&#34;开机进入系统&#34;&gt;开机进入系统&lt;/h3&gt;
&lt;p&gt;将已写入系统的SD卡插入Raspberry Pi，通过固网链接路由器，然后使用USB供电启动。&lt;/p&gt;
&lt;p&gt;正常启动后，板载的&lt;strong&gt;ACT&lt;/strong&gt;，&lt;strong&gt;PWR&lt;/strong&gt;、&lt;strong&gt;FDX&lt;/strong&gt;、&lt;strong&gt;LNK&lt;/strong&gt;、&lt;strong&gt;100&lt;/strong&gt;五个指示灯均点亮。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;通过SSH连接Raspberry Pi&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;查看Raspberry Pi IP地址&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#nmap -sP 192.168.1/24
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;检查出MAC后标注(Raspberry Pi Foundation)的即为Raspberry Pi主机。&lt;/p&gt;
&lt;p&gt;然后通过SSH来链接主机&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#ssh 192.168.1.127
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;用户名为&lt;strong&gt;pi&lt;/strong&gt;，默认密码为&lt;strong&gt;raspberry&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Widnows下推荐使用&lt;a href=&#34;http://www.chiark.greenend.org.uk/~sgtatham/putty/&#34; title=&#34;PuTTY: a free telnet/ssh client&#34;&gt;Putty&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;设置raspberry&#34;&gt;设置Raspberry&lt;/h3&gt;
&lt;p&gt;运行设置工具&lt;code&gt;sudo raspi-config&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;选择&lt;code&gt;Expand Filesystem&lt;/code&gt;扩展文件系统&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Change User Passwd&lt;/code&gt; 修改默认用户&lt;code&gt;pi&lt;/code&gt;的密码，当然也可以在系统中使用&lt;code&gt;passwd&lt;/code&gt;命令来更改。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Advanced Options&lt;/code&gt;-&amp;gt;&lt;code&gt;Hostname&lt;/code&gt; 修改主机名&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Overclock&lt;/code&gt; 超频，建议900Mhz&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Ubuntu下安装VPN</title>
      <link>https://unixetc.com/post/install-vpn-on-ubuntu/</link>
      <pubDate>Sun, 23 Feb 2014 12:23:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/install-vpn-on-ubuntu/</guid>
      <description>&lt;p&gt;&lt;strong&gt;安装pptpd&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#apt-get install pptpd 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;IP设置&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#vi /etc/pptpd.conf 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;添加以下内容:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;localip 192.18.0.1
remoteip 192.168.0.200-230
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;设置DNS&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#vi/etc/ppp/pptpd-options
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;添加以下内容：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ms-dns 192.168.1.1
ms-dns 8.8.8.8
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;添加用户&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#vi /etc/ppp/chap-secrets
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;添加以下内容:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;name * passwd *
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;重启vpn&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#/etc/init.d/pptpd restart 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;允许ip4访问外网&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#vi /etc/sysctl.conf

net.ipv4.ip_forward=1 //取消本行前注释符(*)

#sysctl -p&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>VPS优化</title>
      <link>https://unixetc.com/post/optimization-vps/</link>
      <pubDate>Sat, 01 Feb 2014 12:31:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/optimization-vps/</guid>
      <description>&lt;h3 id=&#34;pdksh替代bash&#34;&gt;pdksh替代bash&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;$sudo apt-get install pdksh
$sudo vi /etc/shells
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;添加/bin/pdksh到/etc/shells文件&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$chsh -s /bin/pdksh
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;重新登录即可。&lt;/p&gt;
&lt;h3 id=&#34;修改ssh端口&#34;&gt;修改SSH端口&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;#vi /etc/ssh/sshd_config    
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;将Port 22中的22改为自定义数字即可&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# /etc/init.d/ssh restart
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;dropbear替代openssh&#34;&gt;dropbear替代openssh&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;$sudo apt-get install dropbear
$sudo /etc/init.d/ssh stop
$sudo vi /etc/default/dropbear
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;修改NO_START=&lt;strong&gt;0&lt;/strong&gt;,修改DROPBEAR_PORT为自定义端口号&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$sudo /etc/init.d/dropbear start
$sudo apt-get remove openssh-server
$sudo apt-get autoremove
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;关闭多余的tty&#34;&gt;关闭多余的TTY&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Ubuntu 12.04 server&lt;/strong&gt;如下操作&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#cd /etc/init/
#mv tty2.conf tty2.conf.bak
#mv tty3.conf tty2.conf.bak
#mv tty4.conf tty2.conf.bak
#mv tty5.conf tty2.conf.bak
#mv tty6.conf tty2.conf.bak
#reboot
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Debian 7&lt;/strong&gt;如下操作&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#vi /etc/inittab
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;找到如下行&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1:2345:respawn:/sbin/getty 38400 tty1
2:23:respawn:/sbin/getty 38400 tty2
3:23:respawn:/sbin/getty 38400 tty3
4:23:respawn:/sbin/getty 38400 tty4
5:23:respawn:/sbin/getty 38400 tty5
6:23:respawn:/sbin/getty 38400 tty6
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;将不需要的行注释掉(#)即可，重启完成。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>VPS下自动备份文件和数据库</title>
      <link>https://unixetc.com/post/automatic-backup-files-and-database-on-vps/</link>
      <pubDate>Mon, 13 Jan 2014 01:13:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/automatic-backup-files-and-database-on-vps/</guid>
      <description>&lt;p&gt;新建脚本，名为&lt;strong&gt;autoback.sh&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#vi autoback.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;脚本(autoback.sh)内容如下:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#!/bin/sh

#备份网站目录/home/www/
tar zcvf /home/backup/www$(date + &amp;quot;%Y%m%d&amp;quot;).tar.gz /home/www/*

#备份数据库 www
/usr/local/mysql/bin/mysqldump -uroot -ppassword dbname &amp;gt; /home/backup/dbname$(date +&amp;quot;%Y%m%d&amp;quot;).sql

#删除三天前的备份
cd /home/backup/
rm -f *$(date -d -3day +&amp;quot;%Y%m%d&amp;quot;)*
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;将脚本(autoback.sh)添加到自动执行任务列表:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#chmod +x autoback.sh
#crontab -e
59 23 * * * /root/autoback.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://db.tt/i3IUvwPq&#34; title=&#34;注册Dropbox&#34;&gt;推荐注册Dropbox&lt;/a&gt;&lt;/strong&gt;，参考**&lt;a href=&#34;https://unixetc.com/post/cli-model-of-linux-using-dropbox/&#34;&gt;Linux下CLI模式使用Dropbox&lt;/a&gt;**，将备份文件自动同步到Dropbox。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>修复grub引导</title>
      <link>https://unixetc.com/post/repair-grub-boot/</link>
      <pubDate>Thu, 12 Dec 2013 12:13:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/repair-grub-boot/</guid>
      <description>&lt;p&gt;笔记本原来安装的Linux/Windows XP双系统，今天重新安装了Windows7，但是开机的grub引导被搞掉了，找了下grub的man看了半天，摸索出来如何修复原来的grub引导。&lt;/p&gt;
&lt;p&gt;首先，使用Linux live cd引导系统，然后按照以下操作：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;检查分区信息&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ubuntu@ubuntu:~$ sudo -s
root@ubuntu:~# lsblk 
NAME    MAJ:MIN RM   SIZE RO TYPE MOUNTPOINT
sda       8:0    0 465.8G  0 disk 
├─sda1    8:1    0    40G  0 part 
├─sda2    8:2    0     1K  0 part 
├─sda5    8:5    0     4G  0 part [SWAP]
├─sda6    8:6    0    20G  0 part 
├─sda7    8:7    0    20G  0 part 
├─sda8    8:8    0   100G  0 part 
├─sda9    8:9    0   200G  0 part 
└─sda10   8:10   0  81.8G  0 part 
sr0      11:0    1   1.6G  0 rom  /cdrom
loop0     7:0    0   1.5G  1 loop /rofs
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;以上的sda6是我的/home目录，根目录为sda7&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;挂载相应分区，重新安装grub&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;root@ubuntu:~# mount /dev/sda7 /mnt/
root@ubuntu:~# mount /dev/sda6 /mnt/home/
root@ubuntu:~# grub-install --root-directory=/mnt/ /dev/sda
Installation finished. No error reported.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;至此所有操作完成，重启后即可看到原来的引导菜单。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>fstab自动挂载分区</title>
      <link>https://unixetc.com/post/fstab-automatically-mount-partitions/</link>
      <pubDate>Sun, 08 Sep 2013 19:18:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/fstab-automatically-mount-partitions/</guid>
      <description>&lt;p&gt;使用&lt;code&gt;fdisk -l&lt;/code&gt;查看分区信息&lt;/p&gt;
&lt;p&gt;以下为需要自动挂载的分区:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;分区       |      格式
------------------------------
/dev/sd1   |    NTFS
/dev/sd5   |    NTFS
/dev/sd6   |    NTFS
/dev/sd7   |    NTFS
/dev/sd8   |    NTFS
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;新建挂载目录&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#mkdir /media/{a,b,c,d,e}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;编辑fstab文件&lt;code&gt;vi /etc/fstab&lt;/code&gt;写入以下内容&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;/dev/sda1 /media/a ntfs-3g defaults,iocharset=gb2312 0 0
/dev/sda5 /media/b ntfs-3g defaults,iocharset=gb2312 0 0
/dev/sda6 /media/c ntfs-3g defaults,iocharset=gb2312 0 0
/dev/sda7 /media/d ntfs-3g defaults,iocharset=gb2312 0 0
/dev/sda8 /media/e ntfs-3g defaults,iocharset=gb2312 0 0
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;说明:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;/dev/sdax      表示分区&lt;/li&gt;
&lt;li&gt;/mnt/xxx       表示挂载点&lt;/li&gt;
&lt;li&gt;vat/ntfs-3g    表示分区格式&lt;/li&gt;
&lt;li&gt;iocharset=xxx  设置字符集,为了支持windows中文目录，应设为&lt;strong&gt;gb2312&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Debian下安装Jekyll</title>
      <link>https://unixetc.com/post/install-jekyll-on-debian/</link>
      <pubDate>Fri, 06 Sep 2013 19:16:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/install-jekyll-on-debian/</guid>
      <description>&lt;h3 id=&#34;安装rvm&#34;&gt;安装Rvm&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;$sudo aptitude install curl
$curl -L get.rvm.io | bash -s stable
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;加载Rvm&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$source ~/.rvm/scripts/rvm
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;检查安装必备组件&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$rvm requirements
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;安装-ruby-193&#34;&gt;安装 Ruby 1.9.3&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;$rvm install 1.9.3
$ruby -v
$gem -v
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;更改Gem软件源&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$gem sources -a http://ruby.taobao.org/
$gem sources -r http://rubygems.org/
$gem sources -l
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;安装jekyll&#34;&gt;安装Jekyll&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;$gem install jekyll
$jekyll -v
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;打完收工!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>卸载linux旧内核</title>
      <link>https://unixetc.com/post/uninstall-the-old-linux-kernel/</link>
      <pubDate>Tue, 13 Aug 2013 23:13:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/uninstall-the-old-linux-kernel/</guid>
      <description>&lt;p&gt;当linux内核更新后，开机的GRUB引导菜单中会存在新旧内核多个引导菜单，当新内核使用稳定后，我们可以将旧的内核删除以减少开机引导项，以下是在fedora与ubuntu中删除旧内核的方法，其他的YUM系或APT系系统可以参考参考&lt;/p&gt;
&lt;p&gt;fedora中删除旧内核:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[aquan@localhost ~]$ uname -r
2.6.32-220.13.1.el6.i686
[aquan@localhost ~]$ rpm -qa|grep kernel
kernel-2.6.32-220.13.1.el6.i686
kernel-2.6.32-220.el6.i686
kernel-firmware-2.6.32-220.13.1.el6.noarch
dracut-kernel-004-256.el6_2.1.noarch
[aquan@localhost ~]$ sudo yum remove kernel-2.6.32-220.el6.i686
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;ubunu中删除旧内核:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo apt-get purge ~ilinux-image-.*\(\!`uname -r`\)&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Linux下部署goAgent</title>
      <link>https://unixetc.com/post/linux-deployment-goagent/</link>
      <pubDate>Thu, 30 May 2013 15:30:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/linux-deployment-goagent/</guid>
      <description>&lt;h3 id=&#34;准备工作&#34;&gt;准备工作&lt;/h3&gt;
&lt;p&gt;下载Google Appengine SDK For Pyahont与goAgent&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1.Google App Engine SDK for Python
https://developers.google.com/appengine/downloads?hl=zh-CN#Google_App_Engine_SDK_for_Python

2.goagent
https://code.google.com/p/goagent/
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;下载后解压，将goagent文件夹放到google_appengine目录下，目录结构如下:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;~/google_appengine/goagent-goagent-d488f2
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;准备好Google Application_ID与两步验证密码,如何申请问&lt;a href=&#34;http://google.com&#34;&gt;Google&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;配置goagent&#34;&gt;配置goagent&lt;/h3&gt;
&lt;p&gt;编辑&lt;strong&gt;~/google_appengine/goagent-goagent-d488f2/local/proxy.ini&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;填写正确的appid，在此建议将profile由默认的&lt;code&gt;google_cn&lt;/code&gt;改为&lt;code&gt;google_hk&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;参考以下步骤执行：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;aquan@edge ~/google_appengine $ python appcfg.py update goagent-goagent-d4488f2/server/python/
07:03 PM Host: appengine.google.com
07:03 PM Application: wrchiublog; version: 1
07:03 PM 
Starting update of app: wrchiublog, version: 1
07:03 PM Getting current resource limits.
Email: wrchiu@126.com  //在此填写googleid
Password for wrchiu@126.com:    //此处填写两步验证密码，而不是帐号密码
07:04 PM Scanning files on local disk.
07:04 PM Cloning 1 static file.
07:04 PM Cloning 6 application files.
07:04 PM Uploading 1 files and blobs.
07:04 PM Uploaded 1 files and blobs
07:04 PM Compilation starting.
07:04 PM Compilation completed.
07:04 PM Starting deployment.
07:04 PM Checking if deployment succeeded.
07:04 PM Deployment successful.
07:04 PM Checking if updated app version is serving.
07:04 PM Completed update of app: wrchiublog, version: 1
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;完成后，在**~/google_appengine/goagent-goagent-d488f2/local/**目录下运行goAgent&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ python proxy.py&amp;amp;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;**注意:**在更新app时出现如下错误&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;aquan@edge ~/google_appengine $ python appcfg.py update goagent-goagent-d4488f2/server/python/
07:00 PM Host: appengine.google.com
Error parsing yaml file:
Unable to assign value &#39;your_appid&#39; to attribute &#39;application&#39;:
Value &#39;your_appid&#39; for application does not match expression &#39;^(?:(?:[a-z\d\-]{1,100}\~)?(?:(?!\-)[a-z\d\-\.]{1,100}:)?(?!-)[a-z\d\-]{0,99}[a-z\d])$&#39;
  in &amp;quot;goagent-goagent-d4488f2/server/python/app.yaml&amp;quot;, line 1, column 14
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;按照提示修改&lt;strong&gt;goagent-goagent-d4488f2/server/python/app.yaml&lt;/strong&gt;中的application为正确的appid&lt;/p&gt;
&lt;p&gt;至此Linux下goAgent部署完成!&lt;/p&gt;
&lt;p&gt;&lt;em&gt;在此提供包含goagent的压缩包&lt;a href=&#34;http://pan.baidu.com/share/link?shareid=472887&amp;amp;uk=1493434283&#34;&gt;http://pan.baidu.com/share/link?shareid=472887&amp;amp;uk=1493434283&lt;/a&gt;(goagent 3.0.1)&lt;/em&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Ubuntu Server中安装VNC Server</title>
      <link>https://unixetc.com/post/install-vnc-server-on-ubuntu-server/</link>
      <pubDate>Sat, 11 May 2013 15:11:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/install-vnc-server-on-ubuntu-server/</guid>
      <description>&lt;p&gt;安装所有软件&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#aptitude install openbox firefox ttf-wqy-microhei
#aptitude install vnc4server
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;设置openbox启动&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#update-alternatives --config x-session-manager
然后选择openbox-session
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;设置vncserver密码:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#vncpasswd
Password: ******
Verify:*****
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;运行vncserver&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# vncserver  //运行
# vncserver -kill :1  //终止
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;编辑~/.vnc/xstartup文件&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#vi ~/.vnc/xstartup
#!/bin/sh

# Uncomment the following two lines for normal desktop:
# unset SESSION_MANAGER
# exec /etc/X11/xinit/xinitrc

[ -x /etc/vnc/xstartup ] &amp;amp;&amp;amp; exec /etc/vnc/xstartup
[ -r $HOME/.Xresources ] &amp;amp;&amp;amp; xrdb $HOME/.Xresources
xsetroot -solid grey
vncconfig -iconic &amp;amp;
x-terminal-emulator -geometry 80x24+10+10 -ls -title &amp;quot;$VNCDESKTOP Desktop&amp;quot; &amp;amp;
x-window-manager &amp;amp;
startx&amp;amp; //添加此行
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;链接VNC&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#vncserver :8
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;链接时需要输入 ip:8&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Debian使用apt-spy选择最佳源</title>
      <link>https://unixetc.com/post/debian-use-apt-spy-to-select-the-best-source/</link>
      <pubDate>Thu, 09 May 2013 05:09:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/debian-use-apt-spy-to-select-the-best-source/</guid>
      <description>&lt;p&gt;&lt;strong&gt;安装apt-spy&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#apt-get install apt-spy
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;使用apt-spy选择最佳源&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#apt-spy update
#apt-spy -d stable -a asia -t 3
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;结果保存在&lt;code&gt;/etc/apt/sources.list.d/apt-spy.list&lt;/code&gt;，可手动替换到&lt;code&gt;/etc/apt/sources.list&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;apt-spy选项:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;-d 系统版本，可选stable,testing,unstable&lt;/li&gt;
&lt;li&gt;-a 区域,如asia,europe等，可用项可cat /etc/apt-spy.conf&lt;/li&gt;
&lt;li&gt;-t 超时阀值(s)，可筛掉长时间不响应的地址&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>使用wget下载整站</title>
      <link>https://unixetc.com/post/download-the-entire-station-using-wget/</link>
      <pubDate>Sun, 21 Apr 2013 04:21:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/download-the-entire-station-using-wget/</guid>
      <description>&lt;p&gt;命令实例:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$wget -r -p -np -k -e robots=off -U &amp;quot;Mozilla/5.0 (Windows; U; Windows NT 5.1; zh-CN; rv:1.9.1.6) Gecko/20091201 Firefox/3.5.6&amp;quot; &amp;quot;http://baidu.com&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;参数解释:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;-r,--recursive 递归下载
-p, --page-requisites 下载显示HTML文件的所有图片
-np, --no-parent 不要追溯到父目录
-k, --convert-links 转换非相对链接为相对链接
-e,–execute=COMMAND 执行一个 “.wgetrc”命令
robots=off 无视robots.txt
-U, --user-agent=AGENT 设定代理的名称为 AGENT
&amp;quot;Mozilla/5.0 (Windows; U; Windows NT 5.1; zh-CN; rv:1.9.1.6) Gecko/20091201 Firefox/3.5.6&amp;quot; 伪装agent&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Archlinux下修改网卡名称</title>
      <link>https://unixetc.com/post/archlinux-modify-the-network-adapter-name/</link>
      <pubDate>Wed, 06 Mar 2013 03:06:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/archlinux-modify-the-network-adapter-name/</guid>
      <description>&lt;p&gt;刚刚安装了Archlinux，用的archlinux-2013.03.01-dual.iso镜像，最新的systemd将网卡名更改了，不在是原来默认的eth0/wlan0&lt;/p&gt;
&lt;p&gt;我的ifconfig -a输出如下:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;enp9s0: flags=4098 mtu 1500
ether 04:7d:7b:f8:25:9d txqueuelen 1000 (Ethernet)
RX packets 0 bytes 0 (0.0 B)
RX errors 0 dropped 0 overruns 0 frame 0
TX packets 0 bytes 0 (0.0 B)
TX errors 0 dropped 0 overruns 0 carrier 0 collisions 0

lo: flags=73mtu 65536
inet 127.0.0.1 netmask 255.0.0.0
inet6 ::1 prefixlen 128 scopeid 0x10
loop txqueuelen 0 (Local Loopback)
RX packets 0 bytes 0 (0.0 B)
RX errors 0 dropped 0 overruns 0 frame 0
TX packets 0 bytes 0 (0.0 B)
TX errors 0 dropped 0 overruns 0 carrier 0 collisions 0

wlp3s0: flags=4098mtu 1500
ether 88:9f:fa:f8:c3:06 txqueuelen 1000 (Ethernet)
RX packets 0 bytes 0 (0.0 B)
RX errors 0 dropped 0 overruns 0 frame 0
TX packets 0 bytes 0 (0.0 B)
TX errors 0 dropped 0 overruns 0 carrier 0 collisions 0&amp;lt;/pre&amp;gt; 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;怎么将网卡名改回原来的eth0/wlan0呢？如下操作即可:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#cd /usr/lib/udev/rules.d/
#mv 80-net-name-slot.rules 80-net-name-slot.rules.bak
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;如果&lt;code&gt;/usr/lib/udev/rules.d/&lt;/code&gt;目录没有如上文件，那就在&lt;code&gt;/etc/udev/rules.d/&lt;/code&gt;找，完成后重启电脑即可！&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Archlinux安装笔记</title>
      <link>https://unixetc.com/post/archlinux-installation-notes/</link>
      <pubDate>Thu, 03 Jan 2013 01:03:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/archlinux-installation-notes/</guid>
      <description>&lt;p&gt;&lt;strong&gt;下载ArchLinux镜像&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;下载archlinux-2012.12.01-dual.iso，可以将其刻录到CD引导启动，或者使用dd命令将其写入到USB设备。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;http://mirrors.163.com/archlinux/iso/2012.12.01/archlinux-2012.12.01-dual.iso.torrent&#34;&gt;http://mirrors.163.com/archlinux/iso/2012.12.01/archlinux-2012.12.01-dual.iso.torrent&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;完成后重启电脑进入到Archlinux CD开始进行安装。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;设置网络连接&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;整个安装过程，本机需要连接互联网以下载所需文件，在此推荐使用网线连接自动获取IP，如果是这样那么当你进入到archlinux时网络已经连接成功了，可以使用ping来查看是否成功&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#ping -c 5 aotee.com
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;如果不是自动获取IP，可以参考以下相关命令设置网络连接：&lt;/p&gt;
&lt;p&gt;开启|关闭网络设备&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# ip link set eth0 up
# ip link set eth0 down
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;自动获取IP(DHCP)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# dhcpcd eth0
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;查看状态&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# ip addr show dev eth0
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;如果是无线网卡，请&lt;a href=&#34;https://wiki.archlinux.org/index.php/Wireless_Setup_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)&#34;&gt;参考这里&lt;/a&gt;进行设置。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;设置键盘布局&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#loadkeys us
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;准备硬盘分区&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;设置硬盘分区时可以使用自己熟悉的工具进行操作，以下是我的分区方案&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;/dev/sda9 /boot
/dev/sda10 swap
/dev/sda11 /
/dev/sda12 /home
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;我使用LinuxMint LiveCD的磁盘工具进行分区，分区完成后可以使用&lt;strong&gt;lsblk /dev/sda&lt;/strong&gt;来查看结果。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;格式化分区&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;参考以下命令对已有的分区进行格式化&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#mkfs -t ext2 /dev/sda9
#mkfs -t ext4 /dev/sda11
#mkfs -t ext4 /dev/sda12
#mkswap /dev/sda10
#swapon /dev/sda10
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;挂载分区&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;系统根分区(/)需要挂载至/mnt目录，如果还有其他分区还需要在/mnt下新建相应目录进行挂载&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#mount /dev/sda11 /mnt
#mkdir /mnt/{boot,home}
#mount /dev/sda9 /mnt/boot
#mount /dev/sda12 /mnt/home
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;安装基本系统&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;编辑/etc/pacman.d/mirrorlist取消掉想要使用的镜像地址前的注视符(#)刷新软件包列表：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# pacman -Syy
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;安装基本系统&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# pacstrap /mnt base base-devel
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;安装引导程序&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# pacstrap /mnt grub-bios
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h3 id=&#34;配置系统&#34;&gt;配置系统&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;生成fstab&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#genfstab -p /mnt &amp;gt;&amp;gt;/mnt/etc/fstab
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;chroot 到新系统&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#arch-chroot /mnt
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;设置hostname&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#echo edge40 &amp;gt;&amp;gt;/etc/hostname
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;设置时区&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#ln -s /usr/share/zoneinfo/Asia/Shanghai /etc/localtime
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;本地化设置&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;编辑/etc/locale.conf，写入LANG=&amp;quot;zh_CN.UTF-8&amp;rdquo;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#vi /etc/locale.conf
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;编辑/etc/locale.gen 去掉所有zh开头行的注释，然后执行以下命令使之生效&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#locale-gen
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;创建初始 ramdisk 环境&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#mkinitcpio -p linux
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;设置GRUB&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;需要搜索其它操作系统，请先用&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# pacman -S os-prober //安装 os-prober
#grub-mkconfig -o /boot/grub/grub.cfg
#grub-install --target=i386-pc --recheck /dev/sda
#cp /usr/share/locale/en@quot/LC_MESSAGES/grub.mo /boot/grub/locale/en.mo
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;退出archlinux cd完成安装&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#exit
#umount /mnt/{boot,home}
#umount /mnt
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后重启系统并以 root 账号登陆。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Cinnarch安装全过程</title>
      <link>https://unixetc.com/post/installation-cinnarch/</link>
      <pubDate>Fri, 23 Nov 2012 11:23:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/installation-cinnarch/</guid>
      <description>&lt;p&gt;Cinnarch是一个新的linux发行版，基于Archlinux以Cinnamon为默认桌面系统，对于想体验Archlinux但对于全新的安装方法无法把握的朋友，Cinnarch不失为一个良好的选择。&lt;/p&gt;
&lt;p&gt;以下为安装Cinnarch的一次全过程，以供需要的朋友参考。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;下载Cinnarch&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;首先从官网下载Cinnarch镜像，地址为 &lt;a href=&#34;http://www.cinnarch.com/try-it/&#34;&gt;http://www.cinnarch.com/try-it/&lt;/a&gt; ，按照需要下载32Bit或者64Bit的，下载方式有直接下载(iso)与通过BT种子(torrent)下载两种方式。&lt;/p&gt;
&lt;p&gt;将下载后的镜像刻入CD，放入光驱后重启以进入LiveCD即可。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;安装Cinnarch&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;进入到LiveCD后会弹出一个Welcome弹窗，可以点击其中的CLI Installer开始安装，或者先使用系统(Try it)，需要安装时在系统菜单中找到Cinnarch Installer CLI点击打开，也可以开始安装。&lt;/p&gt;
&lt;p&gt;打开安装程序前，请确认电脑已经可以联网使用，因为一切软件包都是实时从mirror下载的，并且安装好的系统和archlinux一样，可以滚动升级(Rolling upgrade)。&lt;/p&gt;
&lt;p&gt;打开安装程序，首先提示更新软件list，更新完成后会出现一个welcome的对话框，确认后进入到安装主菜单，如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;0 Set Language and Keyboard
1 Set Time and Date
2 Prepare Hard Drive
3 Select Source
4 Install System
5 Configure System
6 Exit Install 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;设置语言与键盘 (Set Language and Keyboard)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;选择进入设置菜单，在此主要设置语言选项，键盘布局可以不设置，采用默认即可。 语言设置为zh_CN.UTF-8 设置键盘布局(Set Keymap)时可以直接选择返回主菜单(Return to Main Menu)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;设置时间与日期(Set Time And Date)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;此项用于设置时间与日期，此项下面有三个子菜单：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1 Select Region and Timezone
2 Set Time and Date
3 Return to Main Menu
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;第一项菜单用于设置区域与时区，此次区域(Region)设置为Asia，时区(Timezone)设置为Chongqing(或者Beijing/Shanghai)&lt;/p&gt;
&lt;p&gt;接下来是设置时间与日期(Set Time and Date)，进入该子菜单后，会有一个提示对话框：Do you want to use UTC for your clock?&lt;/p&gt;
&lt;p&gt;以上提示为，当需要设置UTC时间请选择Yes，使用本地时间(Localtime)则选择No，在此推荐使用本地时间(Localtime)，完成后返回主菜单。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;准备硬盘(Prepare Hard Drive)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在此以本机硬盘作为示例，以下是为linux所准备的分区详情&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;dev/sda9  /boot
/dev/sda10 swap
/dev/sda11 /
/dev/sda12 /home
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;选择主菜单第二项后，进入到磁盘操作的子菜单，如下&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1 Auto-Prepare(erases the ENTIRE hard drive)
2 Partition Hard Drives
3 Create Software Raid,Lvm2 and Luks encryption
4 Set Filesystem Mountpoints
5 Return to Main Menu
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;第一项为自动分区，对于本地硬盘只用来安装linux的新手用户，可以悬在该项，程序会将全部的硬盘用于linux安装。&lt;/p&gt;
&lt;p&gt;第二项为手动操作，对于想要自定义分区的用户可以选择该项。&lt;/p&gt;
&lt;p&gt;第三项为设置分区挂载点，对于已经设置好的分区磁盘，选择该项开始设置各个分区的挂载点，由于我的本地分区信息已经建立完成(参考1)，所以选择该项开始挂载分区。&lt;/p&gt;
&lt;p&gt;首先会提示挂载交换分区(Swap)，在此选择/dev/sda10 接着是擦除提示，选择是(Yes)，然后按照提示设置标签(LABEL)和扩展选项，其中标签必须设置，扩展选项按照自定义设置，如果不知道怎样设置可以选择默认(置空)。&lt;/p&gt;
&lt;p&gt;交换分区(Swap)设置完成后，接下来提示设置跟分区(/)，在此选择/dev/sda11 接下来是选择文件系统类型(filesystem)、设置标签(LABEL)和磁盘扩展选项，按照自定义设置即可。&lt;/p&gt;
&lt;p&gt;至此已经设置了交换分区(Swap)与跟分区(/)，这两个分区设置完成已经可以进行安装了，Cinnarchon同样也是这样预置的，如果没有其他挂载分区设置，就可以选择完成(DONE)来使此次设置生效。&lt;/p&gt;
&lt;p&gt;但是我已经为用户分区(/home)预留了/dev/sda12，所以还需要将其挂载至系统，选择/dev/sda12开始设置用户分区(/home) 接下来是选择文件系统类型(filesystem)、设置标签(LABEL)和磁盘扩展选项，按照自定义设置即可。&lt;/p&gt;
&lt;p&gt;同样，参考用户分区(/home)设置，将/dev/sda9挂载至引导分区(/boot)，完成后返回磁盘操作子菜单，选择完成(DONE)使设置生效。&lt;/p&gt;
&lt;p&gt;下面是提示磁盘分区名方式，建议选择第三项&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;FSUUID  /dev/disk/by-uuid/&amp;lt;uuid&amp;gt;
FSLABEL /dev/disk/by-label/&amp;lt;label&amp;gt;
KERNEL  /dev/&amp;lt;kernelname&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;选择软件源(Select Source)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;进入到选择镜像(Choose Mirror)子菜单选择需要使用的镜像地址，国内推荐ustc与163的源 &lt;code&gt;http://mirrors.163.com&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;安装系统(install system)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;点击开始安装系统&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;配置系统(coonfigure system)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;第二个提示对话框，选择是否从usb启动，在此是本机安装所以选择否(NO)，然后选择自己熟悉的编辑器，从nano与vi中选择一个。&lt;/p&gt;
&lt;p&gt;进入到配置子菜单，按照提示设置：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Desktop-User          Create your user
Hostname              Your computer`s name
Root-Password         Set the root password
/etc/mkinitcpio.conf  (Optional)Initramfs Config
Return                Return to Main Menu
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;配完成后开始设置生效，接下来设置引导系统类型(boot system type)，有以下三个选项：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;GRUB2        BIOS(Comon)
UEFI_x86_64 x86_64 UEFI
UEFI_i386   i386 UEFI
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;在此选择grub2，UEFI貌似用于window8公用系统。&lt;/p&gt;
&lt;p&gt;然后选择grub安装位置，由于本地只有一个磁盘，所以选择/dev/sda，grub安装完成后所有的安装均完成，选择主菜单的退出安装(exit install)。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Linux Live USB制作工具</title>
      <link>https://unixetc.com/post/linux-liveusb-tools/</link>
      <pubDate>Mon, 13 Aug 2012 18:12:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/linux-liveusb-tools/</guid>
      <description>&lt;p&gt;现在大多数的Linux发行版都支持Live方式，即可直接运行体验无需安装。&lt;/p&gt;
&lt;p&gt;Linux Live又分为LiveCD和LiveUSB，前者是通过光盘(CD/DVD)方式直接运行，后者则是通过USB设备(U盘/移动硬盘)来运行。&lt;/p&gt;
&lt;p&gt;以下介绍几款Linux Live USB制作工具，个人推荐Linux Live USB Creator!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注:需要主板BIOS开启USB Boot功能。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Universal USB Installer&lt;/strong&gt; &lt;a href=&#34;http://www.pendrivelinux.com&#34;&gt;http://www.pendrivelinux.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;1，选择Linux版本，勾选后面的Download the iso(Optional).则从互联网下载所选镜像。
2，选择本地镜像文件(iso)。
3，选择将要写入的USB设备，勾选Show all Drives可以看到所有本地磁盘，需要写入移动硬盘就需要勾选此项。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;UNetbootin&lt;/strong&gt; &lt;a href=&#34;http://unetbootin.sourceforge.net&#34;&gt;http://unetbootin.sourceforge.net&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;1，选择镜像源，从网络下载或者本地iso文件
2，在类型中选择usb设备或者硬盘，然后在驱动器栏选择具体的盘符。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;LinuxLive USB Creator&lt;/strong&gt; &lt;a href=&#34;http://www.linuxliveusb.com/&#34;&gt;http://www.linuxliveusb.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;1，选择需要写入的USB设备
2，选择安装源（ISO文件、光驱、网路下载）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Image Writer for Microsoft Windows (Win32DiskImager)&lt;/strong&gt; &lt;a href=&#34;https://launchpad.net/win32-image-writer&#34;&gt;https://launchpad.net/win32-image-writer&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这个操作相对很简单，并且只单一的适用于img镜像文件，如Meego就是采用这种发行方式&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;万能的dd&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;最喜欢这个方法了！ 使用lsblk查看u盘设备名，如/dev/sdb，例如镜像文件名为linux.iso，使用以下命令将镜像文件写入U盘&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#dd if=linux.iso of=/dev/sdb&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Nokia N900系统优化脚本</title>
      <link>https://unixetc.com/post/system-optimization-script-for-nokia-n900/</link>
      <pubDate>Wed, 28 Mar 2012 13:28:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/system-optimization-script-for-nokia-n900/</guid>
      <description>&lt;p&gt;Nokia N900系统优化脚本，更加省电，操作更加流畅！&lt;/p&gt;
&lt;p&gt;脚本下载地址&lt;a href=&#34;http://cdn.lyq.wiki/res/speedpatch-ALTERNATIVE.tar.gz.rar&#34;&gt;http://cdn.lyq.wiki/res/speedpatch-ALTERNATIVE.tar.gz.rar&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;使用方法： 通过USB连接手机，将脚本传到磁盘根目录(/home/user/MyDocs)，以下操作可以使用XT或者SSH连接电脑进行(Root权限下)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#cd /home/user/MyDocs
#tar xzvf speedpatch-ALTERNATIVE.tar.gz
#mkdir /wp-content/local/sbin
#cp /root/.profile /root/.profile.bak
#cp ./.profile_root /root/.profile
#cp ./.profile /home/user/
#cp ./speedpatch /etc/event.d/
#cp ./cgroup_clean /wp-content/local/sbin
#chmod +rwx /wp-content/local/sbin/cgroup_clean
#rm ./.profile_root
#rm ./.profile
#rm ./speedpatch
#rm ./cgroup_clean
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;应用transition.ini文件:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1.使用theme-customizer&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#cp /home/user/MyDocs/transitions.ini /opt/theme-customizer
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;2.使用系统默认主题&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#cp /home/user/MyDocs/transitions.ini /wp-content/share/hildon-desktop/
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;3.删除优化脚本&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#cp /root/.profile.bak /root/.profile
#rm /etc/event.d/speedpatch
#rm /home/user/.profile
#rm /wp-content/local/sbin/cgroup_clean&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>LNMP使用实例</title>
      <link>https://unixetc.com/post/lnmp-usages/</link>
      <pubDate>Fri, 23 Mar 2012 12:32:00 +0000</pubDate>
      
      <guid>https://unixetc.com/post/lnmp-usages/</guid>
      <description>&lt;h3 id=&#34;安装lnmp&#34;&gt;安装LNMP&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;更新系统&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#yum check-update
#yum update
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;安装Screen&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#yum install screen
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;开始安装Lnmp&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#screen -S lnmp
#wget -c http://soft.vpser.net/lnmp/lnmp0.8.tar.gz //最新版请查阅lnmp官网
#tar zxvf lnmp0.8.tar.gz
#./lnmp0.8/centos.sh | tee lnmp.log //输出log文件，以备出错时查阅
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;接下来按照提示设定域名和MysQL密码，程序会自动下载相关程序，而后编译安装&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;安装PureFTP&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#./lnmp0.8/pureftp.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;按提示输入MySQL和Ftp管理员密码，安装完成后可以通过&lt;code&gt;http://vpsip/ftp/&lt;/code&gt;来登录管理ftp帐号&lt;/p&gt;
&lt;h3 id=&#34;使用lnmp&#34;&gt;使用Lnmp&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;添加虚拟主机&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#/root/vhost.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;按照提示填入域名、目录、rewrite规则文件，如下所示：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;root@buyvm256:~#/root/vhost.sh
=========================================================================
Add Virtual Host for LNMP V0.9  ,  Written by Licess 
=========================================================================
LNMP is a tool to auto-compile &amp;amp; install Nginx+MySQL+PHP on Linux 
This script is a tool to add virtual host for nginx 
For more information please visit http://www.lnmp.org/

=========================================================================
Please input domain:  //添加域名
(Default domain: www.lnmp.org):xxx.com
===========================
domain=xxx.com
===========================
Do you want to add more domain name? (y/n)  //添加更多域名
y
Type domainname,example(bbs.vpser.net forums.vpser.net luntan.vpser.net):
www.xxx.com
===========================
domain list=www.xxx.com
===========================
Please input the directory for the domain:xxx.com :  //网站目录
(Default directory: /home/wwwroot/xxx.com):
===========================
Virtual Host Directory=/home/wwwroot/xxx.com
===========================
===========================
Allow Rewrite rule? (y/n)  //重写规则
===========================
y
Please input the rewrite of programme :
wordpress,discuz,typecho,sablog,dabr rewrite was exist.
(Default rewrite: other):wordpress  //选择重写规则
===========================
You choose rewrite=wordpress
===========================
===========================
Allow access_log? (y/n)  //是否记录log
===========================
n

Press any key to start create virtul host...
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然后，登录&lt;code&gt;http://vpsip/ftp/&lt;/code&gt;添加ftp帐号，&lt;code&gt;http://vpsip/phpmyadmin/&lt;/code&gt;编辑数据库&lt;/p&gt;
&lt;p&gt;**注意：**开通ftp时，记着添加到www用户组&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;修改虚拟主机配置&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;创建好的虚拟主机，配置文件目录为/wp-content/local/nginx/conf/vhost/，文件名为domain.conf，如下所示：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;aquan@buyvm256:~$ cat /usr/local/nginx/conf/vhost/xxx.com.conf 

server
        {
                listen       80;   //端口
                server_name xxx.com www.xxx.com;   //域名
                index index.html index.htm index.php default.html default.htm default.php;  //索引文件
                root  /home/wwwroot/xxx.com;   //目录

                include wordpress.conf;
                location ~ .*\.(php|php5)?$
                        {
                                try_files $uri =404;
                                fastcgi_pass  unix:/tmp/php-cgi.sock;
                                fastcgi_index index.php;
                                include fcgi.conf;
                        }

                location ~ .*\.(gif|jpg|jpeg|png|bmp|swf)$
                        {
                                expires      30d;
                        }

                location ~ .*\.(js|css)?$
                        {
                                expires      12h;
                        }

                access_log off;
        }
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;主机配置文件修改后，使用如下命令重新加载配置使之生效&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#/etc/init.d/nginx reload
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;删除虚拟主机&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;删除/wp-content/local/nginx/conf/vhost/下对应配置文件(.conf)，再删除/home/wwwroot/下的本地目录&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;一些其他问题&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;设置虚拟主机目录权限&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#chown -R www /home/wwwroot/vps.aotee.com
#chmod -R 777 /home/wwwroot/vps.aotee.com&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>